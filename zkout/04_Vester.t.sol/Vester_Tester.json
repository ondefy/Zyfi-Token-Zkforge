{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"04_Vester.t.sol:Vester_Tester\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[18]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_27\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_326\n\tadd\t0, r0, stack-[18]\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.gt\t@.BB0_110\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.le\t@.BB0_124\n\tsub.s!\t@CPI0_42[0], r1, r2\n\tjump.le\t@.BB0_195\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.eq\t@.BB0_309\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.eq\t@.BB0_286\n\tsub.s!\t@CPI0_45[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t30, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_422\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t@CPI0_55[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[16], r0, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_17\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tr5, r0, stack-[17]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_463\n.BB0_17:\n\tadd\tr5, r0, r2\n\tsub.s!\t@CPI0_6[0], r5, r1\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_488\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r7\n\tst.1\t64, r7\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tsload\tr2, r2\n\tadd\t32, r0, r4\n\tadd\tr4, r0, stack-[10]\n\tsload\tr4, r4\n\tadd\t@CPI0_58[0], r0, r5\n\tadd\tstack-[16], r0, r6\n\tst.1\tr6, r5\n\tadd\t36, r0, r5\n\tadd\tr5, r0, stack-[9]\n\tst.1\tr7, r5\n\tand\t@CPI0_7[0], r4, r5\n\tadd\t36, r7, r4\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr4, r5\n\tand\t@CPI0_7[0], r2, stack-[13]\n\tsub.s!\t@CPI0_59[0], r7, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tld.1\tr4, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_25\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r3\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr1, r3, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB0_25:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_568\n\tadd\t96, r0, r2\n\tjump\t@.BB0_575\n.BB0_27:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t30, r0, r4\n\tsload\tr4, r2\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tadd\tr4, r0, stack-[17]\n\tsstore\tr4, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_1[0], r0, r2\n\tst.1\t160, r2\n\tst.1\t224, r2\n\tst.1\t236, r0\n\tst.1\t192, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[16]\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_32\n\tadd\tr0, r0, r7\n.BB0_31:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_31\n.BB0_32:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_34\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_34:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_117\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tld.1\tr5, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r6\n\tadd\t36, r6, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr1, r2\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1.inc\tr6, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t4, r6, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r6, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t100, r6, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_44\n\tadd\tr0, r0, r3\n.BB0_43:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_43\n.BB0_44:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, stack-[12]\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr6, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tadd\tr6, r0, stack-[15]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_350\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[15], r0, r3\n\tst.1\t64, r3\n\tadd\tstack-[16], r0, r1\n\tshl.s\t8, r1, r1\n\tand\t@CPI0_11[0], r1, r1\n\tadd\tstack-[17], r0, r4\n\tsload\tr4, r2\n\tand\t@CPI0_12[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr4, r1\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[15], r0, r3\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd\t16, r0, r2\n\tst.1\tr3, r2\n\tadd\t@CPI0_14[0], r0, r3\n\tadd\tstack-[14], r0, r1\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t48, r1, r2\n\tst.1\tr2, r0\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_16[0], r2, r2\n\tld.1\tr1, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[17]\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_52\n\tadd\tr0, r0, r7\n.BB0_51:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_51\n.BB0_52:\n\tadd\tr10, r0, r9\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_54\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_54:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_448\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t4, r3, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[16]\n\tadd\t100, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[14], r0, r6\n\tjump.eq\t@.BB0_64\n\tadd\tr0, r0, r3\n.BB0_63:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_63\n.BB0_64:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[16], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_744\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[16], r0, r3\n\tst.1\t64, r3\n\tadd\t31, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_18[0], r2, r2\n\tor\tstack-[17], r2, r2\n\tsstore\tr1, r2\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[16], r0, r3\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd\t5, r0, r2\n\tst.1\tr3, r2\n\tadd\t@CPI0_19[0], r0, r3\n\tadd\tstack-[11], r0, r1\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t37, r1, r2\n\tst.1\tr2, r0\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_16[0], r2, r2\n\tld.1\tr1, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[17]\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r7\n.BB0_71:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_71\n.BB0_72:\n\tadd\tr10, r0, r9\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_74\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_74:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_844\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t4, r3, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[16]\n\tadd\t100, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[11], r0, r6\n\tjump.eq\t@.BB0_84\n\tadd\tr0, r0, r3\n.BB0_83:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_83\n.BB0_84:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[16], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_856\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[16], r0, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tor\tstack-[17], r1, r1\n\tadd\tr2, r0, stack-[14]\n\tsstore\tr2, r1\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[16], r0, r3\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd\t7, r0, r2\n\tst.1\tr3, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tadd\tstack-[15], r0, r1\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t39, r1, r2\n\tst.1\tr2, r0\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_16[0], r2, r2\n\tld.1\tr1, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\tr3, r0, stack-[17]\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_92\n\tadd\tr0, r0, r7\n.BB0_91:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_91\n.BB0_92:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_94\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_94:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_979\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t36, r2, r3\n\tadd\tstack-[13], r0, r1\n\tadd\tr3, r0, stack-[9]\n\tst.1\tr3, r1\n\tadd\t4, r2, r3\n\tadd\tstack-[11], r0, r1\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr3, r1\n\tadd\t100, r2, stack-[17]\n\tadd\tr2, r0, stack-[13]\n\tadd\t68, r2, r2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_104\n\tadd\tr0, r0, r2\n.BB0_103:\n\tadd\tstack-[17], r2, r3\n\tadd\tstack-[15], r2, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_103\n.BB0_104:\n\tadd\tstack-[17], r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, stack-[15]\n\tor\tstack-[15], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1077\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[13], r0, r4\n\tst.1\t64, r4\n\tadd\t33, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_18[0], r2, r2\n\tor\tstack-[11], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_21[0], r0, r1\n\tadd\t34, r0, r2\n\tsstore\tr2, r1\n\tsub.s!\t@CPI0_22[0], r4, r1\n\tjump.gt\t@.BB0_289\n\tadd\t@CPI0_23[0], r0, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_24[0], r0, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r2\n\tadd\tstack-[10], r0, r2\n\tst.1\tr2, r0\n\tadd\t96, r0, r3\n\tadd\tstack-[16], r0, r2\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr2, r3\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1127\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1132\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_1128\n.BB0_110:\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.le\t@.BB0_146\n\tsub.s!\t@CPI0_30[0], r1, r2\n\tjump.le\t@.BB0_200\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.eq\t@.BB0_311\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.eq\t@.BB0_290\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t30, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_53[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_117:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_120\n\tadd\tr0, r0, r6\n.BB0_119:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_119\n.BB0_120:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n.BB0_121:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_122:\n.BB0_123:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_124:\n\tsub.s!\t@CPI0_48[0], r1, r2\n\tjump.gt\t@.BB0_165\n\tsub.s!\t@CPI0_51[0], r1, r2\n\tjump.eq\t@.BB0_218\n\tsub.s!\t@CPI0_52[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t30, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_365\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t@CPI0_55[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[16], r0, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_136\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tr5, r0, stack-[17]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_453\n.BB0_136:\n\tadd\tr5, r0, r2\n\tsub.s!\t@CPI0_6[0], r5, r1\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_478\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r7\n\tst.1\t64, r7\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r2\n\tadd\t32, r0, r4\n\tadd\tr4, r0, stack-[11]\n\tsload\tr4, r4\n\tadd\t@CPI0_58[0], r0, r5\n\tadd\tstack-[16], r0, r6\n\tst.1\tr6, r5\n\tadd\t36, r0, r5\n\tadd\tr5, r0, stack-[10]\n\tst.1\tr7, r5\n\tand\t@CPI0_7[0], r4, r5\n\tadd\t36, r7, r4\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr4, r5\n\tand\t@CPI0_7[0], r2, stack-[13]\n\tsub.s!\t@CPI0_59[0], r7, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tld.1\tr4, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_144\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r3\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr3, r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB0_144:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_626\n\tadd\t96, r0, r2\n\tjump\t@.BB0_633\n.BB0_146:\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.gt\t@.BB0_174\n\tsub.s!\t@CPI0_39[0], r1, r2\n\tjump.eq\t@.BB0_233\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t26, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_6[0], r5, r2\n\tjump.gt\t@.BB0_289\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_113[0], r2, r2\n\tsub.s!\t@CPI0_114[0], r2, r3\n\tjump.gt\t@.BB0_289\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_194\n\tadd\t160, r0, r6\n\tadd\t@CPI0_119[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[11]\n.BB0_154:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_738\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_160\n\tadd\tr3, r0, stack-[12]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr8, r0, stack-[16]\n\tadd\tr6, r0, stack-[17]\n\tadd\tr7, r0, stack-[14]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[15], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_161\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[12], r0, r11\n.BB0_159:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_159\n\tjump\t@.BB0_162\n.BB0_160:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_162\n.BB0_161:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n.BB0_162:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tst.1.inc\tr6, r9, r6\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_154\n\tjump\t@.BB0_193\n.BB0_165:\n\tsub.s!\t@CPI0_49[0], r1, r2\n\tjump.eq\t@.BB0_252\n\tsub.s!\t@CPI0_50[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t29, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[4], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_113[0], r2, r2\n\tsub.s!\t@CPI0_114[0], r2, r3\n\tjump.gt\t@.BB0_289\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[4], r0, r2\n\tst.1\t128, r2\n\tst.1\t0, r1\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_370\n.BB0_171:\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[17]\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r3\n\tadd\tr2, r3, r5\n\tadd\tr1, r0, stack-[16]\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_435\n\tadd\tr5, r0, r11\n.BB0_173:\n\tadd\tstack-[17], r0, r4\n\tsub\tr11, r4, r1\n\tjump\t@.BB0_341\n.BB0_174:\n\tsub.s!\t@CPI0_37[0], r1, r2\n\tjump.eq\t@.BB0_255\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t25, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_6[0], r5, r2\n\tjump.gt\t@.BB0_289\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_113[0], r2, r2\n\tsub.s!\t@CPI0_114[0], r2, r3\n\tjump.gt\t@.BB0_289\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_194\n\tadd\t160, r0, r6\n\tadd\t@CPI0_115[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[11]\n.BB0_181:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_738\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_187\n\tadd\tr3, r0, stack-[12]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr8, r0, stack-[16]\n\tadd\tr6, r0, stack-[17]\n\tadd\tr7, r0, stack-[14]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[15], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_188\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[12], r0, r11\n.BB0_186:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_186\n\tjump\t@.BB0_189\n.BB0_187:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_189\n.BB0_188:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n.BB0_189:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tst.1.inc\tr6, r9, r6\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_181\n.BB0_193:\n\tld.1\t64, r1\n.BB0_194:\n\tadd\tr1, r0, stack-[17]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_344\n.BB0_195:\n\tsub.s!\t@CPI0_46[0], r1, r2\n\tjump.eq\t@.BB0_314\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t23, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_335\n\tjump\t@.BB0_254\n.BB0_200:\n\tsub.s!\t@CPI0_34[0], r1, r2\n\tjump.eq\t@.BB0_317\n\tsub.s!\t@CPI0_35[0], r1, r1\n\tjump.ne\t@.BB0_326\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t30, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_429\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t@CPI0_55[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[16], r0, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_211\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tr5, r0, stack-[17]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_473\n.BB0_211:\n\tadd\tr5, r0, r2\n\tsub.s!\t@CPI0_6[0], r5, r1\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_493\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_108[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_508\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_514\n.BB0_218:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t31, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_355\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t30, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_443\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[14]\n\tshl.s\t192, r2, r1\n\tor\tstack-[14], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_503\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\t37, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_133[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_522\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_528\n.BB0_233:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t30, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_360\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t@CPI0_55[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[16], r0, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_242\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tr5, r0, stack-[17]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_458\n.BB0_242:\n\tadd\tr5, r0, r2\n\tsub.s!\t@CPI0_6[0], r5, r1\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_483\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r7\n\tst.1\t64, r7\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r2\n\tadd\t32, r0, r4\n\tadd\tr4, r0, stack-[11]\n\tsload\tr4, r4\n\tadd\t@CPI0_58[0], r0, r5\n\tadd\tstack-[16], r0, r6\n\tst.1\tr6, r5\n\tadd\t36, r0, r5\n\tadd\tr5, r0, stack-[10]\n\tst.1\tr7, r5\n\tand\t@CPI0_7[0], r4, r5\n\tadd\t36, r7, r4\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr4, r5\n\tand\t@CPI0_7[0], r2, stack-[13]\n\tsub.s!\t@CPI0_59[0], r7, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tld.1\tr4, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_250\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r3\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr1, r3, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB0_250:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_684\n\tadd\t96, r0, r2\n\tjump\t@.BB0_691\n.BB0_252:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t22, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_254\n\tadd\t160, r0, r4\n\tadd\t@CPI0_131[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_328:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_7[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_328\n\tjump\t@.BB0_338\n.BB0_255:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t28, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[9], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_113[0], r2, r2\n\tsub.s!\t@CPI0_114[0], r2, r3\n\tjump.gt\t@.BB0_289\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t128, r2\n\tst.1\t0, r4\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_343\n\tadd\t128, r0, r5\n\tadd\t@CPI0_117[0], r0, r6\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r7\n.BB0_260:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\tr7, r0, stack-[14]\n\tadd\tr5, r0, stack-[16]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr6, r2\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tr1, r0, stack-[17]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr6, r0, stack-[15]\n\tadd\t1, r6, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r2\n\tadd\tstack-[11], r0, r10\n\tsub.s!\t8, r10, r1\n\tjump.lt\t@.BB0_279\n\tadd\tr0, r0, r3\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r8\n\tadd\tstack-[12], r0, r9\n.BB0_264:\n\tadd\t224, r9, r1\n\tsload\tr2, r4\n\tand\t@CPI0_118[0], r4, r5\n\tst.1\tr1, r5\n\tshl.s\t32, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t192, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t64, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t160, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t96, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t128, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t128, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t96, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t160, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t64, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t192, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t32, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t224, r4, r1\n\tst.1\tr9, r1\n\tadd\t8, r3, r1\n\tadd\t1, r2, r2\n\tadd\t256, r9, r9\n\tadd\t15, r3, r3\n\tsub!\tr3, r10, r3\n\tadd\tr1, r0, r3\n\tjump.lt\t@.BB0_264\n\tsload\tr2, r2\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_267\n.BB0_266:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n.BB0_267:\n\tadd\tstack-[17], r0, r4\n\tadd\tstack-[16], r0, r5\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_269\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_281\n.BB0_270:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_271\n.BB0_282:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_283\n.BB0_272:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_273\n.BB0_284:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_285\n.BB0_274:\n\tsub!\tr1, r10, r1\n\tjump.ge\t@.BB0_276\n.BB0_275:\n\tand\t@CPI0_118[0], r2, r1\n\tst.1.inc\tr9, r1, r9\n.BB0_276:\n\tsub\tr9, r8, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\t32, r5, r5\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\tr1, r8\n\tst.1\tr5, r4\n\tadd\t2, r6, r6\n\tld.1\t64, r1\n\tadd\t1, r7, r7\n\tsub.s!\tstack-[9], r7, r2\n\tjump.lt\t@.BB0_260\n\tjump\t@.BB0_343\n.BB0_269:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_270\n.BB0_281:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_282\n.BB0_271:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_272\n.BB0_283:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_284\n.BB0_273:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_274\n.BB0_285:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r1\n\tjump.lt\t@.BB0_275\n\tjump\t@.BB0_276\n.BB0_279:\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r8\n\tadd\tstack-[12], r0, r9\n\tsload\tr2, r2\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_266\n\tjump\t@.BB0_267\n.BB0_286:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t27, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[9], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_113[0], r2, r2\n\tsub.s!\t@CPI0_114[0], r2, r3\n\tjump.le\t@.BB0_342\n.BB0_289:\n\tadd\t@CPI0_106[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_290:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t30, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t@CPI0_55[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[16], r0, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_299\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tr5, r0, stack-[17]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_468\n.BB0_299:\n\tadd\tr5, r0, r2\n\tsub.s!\t@CPI0_6[0], r5, r1\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_498\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r7\n\tst.1\t64, r7\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tsload\tr2, r2\n\tadd\t32, r0, r4\n\tadd\tr4, r0, stack-[11]\n\tsload\tr4, r4\n\tadd\t@CPI0_58[0], r0, r5\n\tadd\tstack-[16], r0, r6\n\tst.1\tr6, r5\n\tadd\t36, r0, r5\n\tadd\tr5, r0, stack-[9]\n\tst.1\tr7, r5\n\tand\t@CPI0_7[0], r4, r5\n\tadd\t36, r7, r4\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr4, r5\n\tand\t@CPI0_7[0], r2, stack-[13]\n\tsub.s!\t@CPI0_59[0], r7, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tld.1\tr4, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_307\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r3\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr1, r3, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB0_307:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_728\n\tadd\t96, r0, r2\n\tjump\t@.BB0_735\n.BB0_309:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tnear_call\tr0, @fun_deployRewardDistributor, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_112[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_311:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t21, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_329\n\tjump\t@.BB0_254\n.BB0_314:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t24, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_332\n.BB0_254:\n\tadd\t32, r0, r2\n\tjump\t@.BB0_339\n.BB0_317:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_428\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t132, r1\n\tadd\t@CPI0_110[0], r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_322\n\tadd\tr0, r0, r7\n.BB0_321:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_321\n.BB0_322:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_324\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_324:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_345\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.ge\t@.BB0_427\n.BB0_326:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_329:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_107[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_330:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_7[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_330\n\tjump\t@.BB0_338\n.BB0_332:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_129[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_333:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_7[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_333\n\tjump\t@.BB0_338\n.BB0_335:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_128[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_336:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_7[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_336\n.BB0_338:\n\tsub.s\t96, r5, r2\n.BB0_339:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tnear_call\tr0, @finalize_allocation.2, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @abi_encode_array_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n.BB0_340:\n\tsub\tr1, r4, r1\n.BB0_341:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_342:\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t128, r2\n\tst.1\t0, r4\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_395\n.BB0_343:\n\tadd\tr1, r0, stack-[17]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_struct_FuzzSelector_dyn, @DEFAULT_UNWIND\n.BB0_344:\n\tadd\tstack-[17], r0, r4\n\tjump\t@.BB0_340\n.BB0_345:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_348\n\tadd\tr0, r0, r6\n.BB0_347:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_347\n.BB0_348:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_350:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_353\n\tadd\tr0, r0, r6\n.BB0_352:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_352\n.BB0_353:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_355:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_358\n\tadd\tr0, r0, r6\n.BB0_357:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_357\n.BB0_358:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_360:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_363\n\tadd\tr0, r0, r6\n.BB0_362:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_362\n.BB0_363:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_365:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_368\n\tadd\tr0, r0, r6\n.BB0_367:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_367\n.BB0_368:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_370:\n\tadd\t160, r0, stack-[7]\n\tadd\t@CPI0_130[0], r0, stack-[8]\n\tadd\tr0, r0, stack-[6]\n\tjump\t@.BB0_372\n.BB0_371:\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tstack-[7], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[8], r0, r1\n\tadd\t2, r1, stack-[8]\n\tld.1\t64, r3\n\tadd\tstack-[6], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.ge\t@.BB0_171\n.BB0_372:\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[8], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t1, r3, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_6[0], r5, r2\n\tjump.gt\t@.BB0_289\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_113[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[9]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[10]\n\tadd\tstack-[9], r0, r2\n\tst.1\tr2, r5\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[10], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_371\n\tld\tr1, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_379:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_738\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_385\n\tadd\tr3, r0, stack-[11]\n\tadd\tr4, r0, stack-[12]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr8, r0, stack-[14]\n\tadd\tr7, r0, stack-[15]\n\tadd\tr6, r0, stack-[16]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[12], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[15], r0, r7\n\tadd\tstack-[14], r0, r8\n\tjump.eq\t@.BB0_386\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[11], r0, r11\n.BB0_384:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_384\n\tjump\t@.BB0_387\n.BB0_385:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_387\n.BB0_386:\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[13], r0, r9\n.BB0_387:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_379\n\tjump\t@.BB0_371\n.BB0_390:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_393\n\tadd\tr0, r0, r6\n.BB0_392:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_392\n.BB0_393:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_395:\n\tadd\t128, r0, r5\n\tadd\t@CPI0_127[0], r0, r6\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r7\n.BB0_396:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\tr7, r0, stack-[14]\n\tadd\tr5, r0, stack-[16]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr6, r2\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tr1, r0, stack-[17]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr6, r0, stack-[15]\n\tadd\t1, r6, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r2\n\tadd\tstack-[11], r0, r10\n\tsub.s!\t8, r10, r1\n\tjump.lt\t@.BB0_415\n\tadd\tr0, r0, r3\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r8\n\tadd\tstack-[12], r0, r9\n.BB0_400:\n\tadd\t224, r9, r1\n\tsload\tr2, r4\n\tand\t@CPI0_118[0], r4, r5\n\tst.1\tr1, r5\n\tshl.s\t32, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t192, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t64, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t160, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t96, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t128, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t128, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t96, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t160, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t64, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t192, r4, r1\n\tand\t@CPI0_118[0], r1, r1\n\tadd\t32, r9, r5\n\tst.1\tr5, r1\n\tshl.s\t224, r4, r1\n\tst.1\tr9, r1\n\tadd\t8, r3, r1\n\tadd\t1, r2, r2\n\tadd\t256, r9, r9\n\tadd\t15, r3, r3\n\tsub!\tr3, r10, r3\n\tadd\tr1, r0, r3\n\tjump.lt\t@.BB0_400\n\tsload\tr2, r2\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_403\n.BB0_402:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n.BB0_403:\n\tadd\tstack-[17], r0, r4\n\tadd\tstack-[16], r0, r5\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_405\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_417\n.BB0_406:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_407\n.BB0_418:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_419\n.BB0_408:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_409\n.BB0_420:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_421\n.BB0_410:\n\tsub!\tr1, r10, r1\n\tjump.ge\t@.BB0_412\n.BB0_411:\n\tand\t@CPI0_118[0], r2, r1\n\tst.1.inc\tr9, r1, r9\n.BB0_412:\n\tsub\tr9, r8, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\t32, r5, r5\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\tr1, r8\n\tst.1\tr5, r4\n\tadd\t2, r6, r6\n\tld.1\t64, r1\n\tadd\t1, r7, r7\n\tsub.s!\tstack-[9], r7, r2\n\tjump.lt\t@.BB0_396\n\tjump\t@.BB0_343\n.BB0_405:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_406\n.BB0_417:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_418\n.BB0_407:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_408\n.BB0_419:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_420\n.BB0_409:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_410\n.BB0_421:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_118[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r1\n\tjump.lt\t@.BB0_411\n\tjump\t@.BB0_412\n.BB0_415:\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r8\n\tadd\tstack-[12], r0, r9\n\tsload\tr2, r2\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_402\n\tjump\t@.BB0_403\n.BB0_422:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_425\n\tadd\tr0, r0, r6\n.BB0_424:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_424\n.BB0_425:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_427:\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_428:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_112[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_429:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_432\n\tadd\tr0, r0, r6\n.BB0_431:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_431\n.BB0_432:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n.BB0_434:\n\tjump\t@.BB0_121\n.BB0_435:\n\tadd\t160, r0, r3\n\tadd\t64, r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_437\n.BB0_436:\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[16], r6, r1\n\tadd\tr11, r0, r5\n\tjump.ge\t@.BB0_173\n.BB0_437:\n\tsub.s\tstack-[17], r5, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tld.1.inc\tr3, r7, r3\n\tld.1.inc\tr7, r7, r8\n\tand\t@CPI0_7[0], r7, r7\n\tst.1.inc\tr5, r7, r9\n\tld.1\tr8, r7\n\tst.1\tr9, r4\n\tadd\t64, r5, r9\n\tld.1\tr7, r8\n\tst.1\tr9, r8\n\tadd\t96, r5, r9\n\tshl.s\t5, r8, r10\n\tadd\tr10, r9, r11\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB0_436\n\tadd\tr0, r0, r10\n\tjump\t@.BB0_440\n.BB0_439:\n\tadd\t31, r12, r1\n\tsub.s\t32, r0, r13\n\tand\tr1, r13, r1\n\tadd\tr12, r11, r12\n\tst.1\tr12, r0\n\tadd\tr1, r11, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r1\n\tjump.ge\t@.BB0_436\n.BB0_440:\n\tsub\tr11, r5, r12\n\tsub.s\t96, r12, r12\n\tst.1.inc\tr9, r12, r9\n\tadd\t32, r7, r7\n\tld.1\tr7, r12\n\tld.1.inc\tr12, r12, r13\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr12, r0, r14\n\tjump.eq\t@.BB0_439\n\tadd\tr0, r0, r14\n.BB0_442:\n\tadd\tr14, r11, r15\n\tadd\tr13, r14, r1\n\tld.1\tr1, r1\n\tst.1\tr15, r1\n\tadd\t32, r14, r14\n\tsub!\tr14, r12, r1\n\tjump.lt\t@.BB0_442\n\tjump\t@.BB0_439\n.BB0_443:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_446\n\tadd\tr0, r0, r6\n.BB0_445:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_445\n.BB0_446:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_448:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_451\n\tadd\tr0, r0, r6\n.BB0_450:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_450\n.BB0_451:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_453:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_456\n\tadd\tr0, r0, r6\n.BB0_455:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_455\n.BB0_456:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_458:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_461\n\tadd\tr0, r0, r6\n.BB0_460:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_460\n.BB0_461:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_463:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_466\n\tadd\tr0, r0, r6\n.BB0_465:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_465\n.BB0_466:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_468:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_471\n\tadd\tr0, r0, r6\n.BB0_470:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_470\n.BB0_471:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_473:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_476\n\tadd\tr0, r0, r6\n.BB0_475:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_475\n.BB0_476:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_478:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_481\n\tadd\tr0, r0, r6\n.BB0_480:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_480\n.BB0_481:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_483:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_486\n\tadd\tr0, r0, r6\n.BB0_485:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_485\n.BB0_486:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_488:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_491\n\tadd\tr0, r0, r6\n.BB0_490:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_490\n.BB0_491:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_493:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_496\n\tadd\tr0, r0, r6\n.BB0_495:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_495\n.BB0_496:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_498:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_501\n\tadd\tr0, r0, r6\n.BB0_500:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_500\n.BB0_501:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_503:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_506\n\tadd\tr0, r0, r6\n.BB0_505:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_505\n.BB0_506:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_508:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[17], r0, r10\n\tjump.eq\t@.BB0_511\n\tadd\tr0, r0, r7\n.BB0_510:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_510\n.BB0_511:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_513\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_513:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_739\n.BB0_514:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_326\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_109[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_779\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n.BB0_521:\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_522:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[14], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[17], r0, r10\n\tjump.eq\t@.BB0_525\n\tadd\tr0, r0, r7\n.BB0_524:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_524\n.BB0_525:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_527\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_527:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_749\n.BB0_528:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[14], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_326\n\tadd\t35, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_18[0], r3, r3\n\tadd\tstack-[17], r0, r5\n\tor\tr3, r5, r3\n\tsstore\tr2, r3\n\tadd\t39, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI0_134[0], r0, r3\n\tadd\tstack-[14], r0, r6\n\tst.1\tr6, r3\n\tadd\t4, r6, r3\n\tst.1\tr3, r5\n\tcontext.gas_left\tr3\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB0_539\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_535\n\tadd\tr0, r0, r7\n.BB0_534:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_534\n.BB0_535:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_537\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_537:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_774\n\tadd\t31, r4, r1\n.BB0_539:\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\tstack-[14], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_326\n\tadd\t36, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_18[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tr3, r0, stack-[13]\n\tsstore\tr3, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_123[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_851\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t@CPI0_55[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[14]\n\tadd\t4, r2, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_550\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_861\n.BB0_550:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tnear_call\tr0, @fun_deployRewardDistributor, @DEFAULT_UNWIND\n\tadd\t41, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_18[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tr3, r0, stack-[12]\n\tsstore\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_123[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_972\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t@CPI0_135[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[14]\n\tadd\t4, r2, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_559\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1048\n.BB0_559:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_123[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[16]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[14]\n\tshl.s\t192, r2, r1\n\tor\tstack-[14], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1082\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tadd\tstack-[16], r0, r5\n\tadd\t356, r5, r3\n\tadd\t@CPI0_136[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t324, r5, r3\n\tadd\t10, r0, r4\n\tst.1\tr3, r4\n\tadd\t132, r5, r3\n\tadd\t192, r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r5, r3\n\tadd\t@CPI0_137[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t420, r5, r3\n\tadd\t@CPI0_138[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t388, r5, r3\n\tadd\t5, r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r5, r3\n\tadd\t256, r0, r4\n\tst.1\tr3, r4\n\tadd\t260, r5, r3\n\tadd\tstack-[17], r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r5, r3\n\tst.1\tr3, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t292, r5, r2\n\tst.1\tr2, r1\n\tadd\t228, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr5, r2\n\tadd\tstack-[12], r0, r2\n\tst.1\tr2, r0\n\tadd\t100, r5, r2\n\tadd\t320, r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r5, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[14], r1, r1\n\tor\t@CPI0_139[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1136\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1142\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_1137\n.BB0_568:\n\tadd\t31, r3, r2\n\tand\t@CPI0_60[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_61[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tjump.gt\t@.BB0_289\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_573\n\tadd\tr0, r0, r6\n.BB0_572:\n\tshl.s\t5, r6, r7\n\tadd\tr5, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_572\n.BB0_573:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_575\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr5, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_575:\n\tld.1\tr2, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_62[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_62[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t17, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tor\tstack-[13], r1, r1\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\t15, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\tr2, r0, stack-[8]\n\tsstore\tr2, r1\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t1, r1, r2\n\tadd\tstack-[16], r0, r3\n\tsstore\tr3, r2\n\tst.1\t0, r3\n\tadd\t@CPI0_65[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, stack-[12]\n\tnear_call\tr0, @fun_getCallParams_107628, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tadd\t13, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[17], r0, r2\n\tshl.s\t224, r2, r2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[6], r0, r4\n\tadd\t32, r4, r7\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_582\n\tadd\tr0, r0, r4\n.BB0_581:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_581\n.BB0_582:\n\tadd\tr7, r0, stack-[1]\n\tadd\tr3, r1, r4\n\tst.1\tr4, r0\n\tadd\t32, r1, r4\n\tadd\tr4, r2, r5\n\tadd\tstack-[7], r0, r6\n\tst.1\tr5, r6\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, stack-[2]\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_588\n\tnear_call\tr0, @fun_find, @DEFAULT_UNWIND\n.BB0_588:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB0_593\n\tadd\tr0, r0, r4\n.BB0_592:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_592\n.BB0_593:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tadd\t32, r1, r4\n\tadd\tr4, r2, r5\n\tadd\tstack-[7], r0, r6\n\tst.1\tr5, r6\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r2\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[6]\n\tadd\t2, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[7]\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_978\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB0_866\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n.BB0_600:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r3\n\tadd\t@CPI0_73[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_603\n\tadd\tr0, r0, r7\n.BB0_602:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_602\n.BB0_603:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_605\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_605:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_942\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[7], r0, r2\n\tsub\t256, r2, r1\n\tsub.s\t1, r0, stack-[3]\n\tshl\tstack-[3], r1, r1\n\txor\tstack-[3], r1, r1\n\tsub!\tr2, r0, r2\n\tadd.eq\tstack-[3], r0, r1\n\tadd\tstack-[5], r0, r4\n\tshl\tr1, r4, r1\n\txor\tstack-[3], r1, r1\n\tsub.s!\t255, r4, r2\n\tadd.gt\tstack-[3], r0, r1\n\tshl\t@CPI0_124[0], r4, r2\n\tadd.gt\tr0, r0, r2\n\tand\tstack-[17], r1, r1\n\tor\tr1, r2, r1\n\tadd\t68, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr5, r0, stack-[7]\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1033\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[7], r0, r1\n\tst.1\t64, r1\n\tnear_call\tr0, @fun_callTarget_107633, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_1053\n\tsub.s!\t@CPI0_124[0], r2, r1\n\tjump.ne\t@.BB0_1053\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r1\n\tsstore\tr2, r0\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_619\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tadd\t@CPI0_65[0], r1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.lt\t@.BB0_619\n\tadd\t@CPI0_65[0], r0, r2\n.BB0_618:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_618\n.BB0_619:\n\tadd\tstack-[4], r0, r1\n\tsstore\tr1, r0\n\tadd\t19, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t20, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_738\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_1095\n\tsub.s!\t31, r2, r3\n\tjump.le\t@.BB0_1093\n\tadd\t20, r0, r1\n\tst.1\t0, r1\n\tadd\t31, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_66[0], r3, r3\n\tsub.s!\t32, r2, r2\n\tjump.eq\t@.BB0_625\n\tadd\t@CPI0_82[0], r0, r2\n.BB0_624:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_624\n.BB0_625:\n\tsstore\tr1, r0\n\tadd\t@CPI0_66[0], r0, r1\n\tjump\t@.BB0_1094\n.BB0_626:\n\tadd\t31, r3, r2\n\tand\t@CPI0_60[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_61[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tjump.gt\t@.BB0_289\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_631\n\tadd\tr0, r0, r6\n.BB0_630:\n\tshl.s\t5, r6, r7\n\tadd\tr5, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_630\n.BB0_631:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_633\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr5, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_633:\n\tld.1\tr2, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_62[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_62[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t17, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tor\tstack-[13], r1, r1\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\t15, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\tr2, r0, stack-[8]\n\tsstore\tr2, r1\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t1, r1, r2\n\tadd\tstack-[16], r0, r3\n\tsstore\tr3, r2\n\tst.1\t0, r3\n\tadd\t@CPI0_65[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, stack-[12]\n\tnear_call\tr0, @fun_getCallParams_107628, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tadd\t13, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[17], r0, r2\n\tshl.s\t224, r2, r2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[6], r0, r4\n\tadd\t32, r4, r7\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_640\n\tadd\tr0, r0, r4\n.BB0_639:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_639\n.BB0_640:\n\tadd\tr7, r0, stack-[1]\n\tadd\tr1, r3, r4\n\tadd\tstack-[7], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, stack-[2]\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_646\n\tnear_call\tr0, @fun_find, @DEFAULT_UNWIND\n.BB0_646:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB0_651\n\tadd\tr0, r0, r4\n.BB0_650:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_650\n.BB0_651:\n\tadd\tr1, r3, r4\n\tadd\tstack-[7], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r2\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[6]\n\tadd\t2, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[7]\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.eq\t@.BB0_978\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB0_891\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n.BB0_658:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r3\n\tadd\t@CPI0_73[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_661\n\tadd\tr0, r0, r7\n.BB0_660:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_660\n.BB0_661:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_663\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_663:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_947\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tsub\t256, r3, r1\n\tsub.s\t1, r0, r2\n\tshl\tr2, r1, r1\n\txor\tr1, r2, r1\n\tsub!\tr3, r0, r3\n\tadd.eq\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tshl\tr1, r4, r1\n\txor\tr1, r2, r1\n\tsub.s!\t255, r4, r3\n\tadd.le\tr1, r0, r2\n\tshl\t@CPI0_124[0], r4, r1\n\tadd.gt\tr0, r0, r1\n\tand\tstack-[17], r2, r2\n\tor\tr2, r1, r1\n\tadd\t68, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr5, r0, stack-[7]\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1038\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[7], r0, r1\n\tst.1\t64, r1\n\tnear_call\tr0, @fun_callTarget_107633, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_1058\n\tsub.s!\t@CPI0_124[0], r2, r1\n\tjump.ne\t@.BB0_1058\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r1\n\tsstore\tr2, r0\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_677\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tadd\t@CPI0_65[0], r1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.lt\t@.BB0_677\n\tadd\t@CPI0_65[0], r0, r2\n.BB0_676:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_676\n.BB0_677:\n\tadd\tstack-[4], r0, r1\n\tsstore\tr1, r0\n\tadd\t19, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t20, r0, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB0_738\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_1103\n\tsub.s!\t31, r2, r3\n\tjump.le\t@.BB0_1101\n\tadd\t20, r0, r1\n\tst.1\t0, r1\n\tadd\t31, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_66[0], r3, r3\n\tsub.s!\t32, r2, r2\n\tjump.eq\t@.BB0_683\n\tadd\t@CPI0_82[0], r0, r2\n.BB0_682:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_682\n.BB0_683:\n\tsstore\tr1, r0\n\tadd\t@CPI0_66[0], r0, r1\n\tjump\t@.BB0_1102\n.BB0_684:\n\tadd\t31, r3, r2\n\tand\t@CPI0_60[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_61[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tjump.gt\t@.BB0_289\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_689\n\tadd\tr0, r0, r6\n.BB0_688:\n\tshl.s\t5, r6, r7\n\tadd\tr5, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_688\n.BB0_689:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_691\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr5, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_691:\n\tld.1\tr2, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_62[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_62[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t17, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tor\tstack-[13], r1, r1\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\t15, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\tr2, r0, stack-[8]\n\tsstore\tr2, r1\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t1, r1, r2\n\tadd\tstack-[16], r0, r3\n\tsstore\tr3, r2\n\tst.1\t0, r3\n\tadd\t@CPI0_65[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, stack-[12]\n\tnear_call\tr0, @fun_getCallParams_107628, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tadd\t13, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[17], r0, r2\n\tshl.s\t224, r2, r2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[6], r0, r4\n\tadd\t32, r4, r7\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_698\n\tadd\tr0, r0, r4\n.BB0_697:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_697\n.BB0_698:\n\tadd\tr7, r0, stack-[1]\n\tadd\tr3, r1, r4\n\tst.1\tr4, r0\n\tadd\t32, r1, r4\n\tadd\tr4, r2, r5\n\tadd\tstack-[7], r0, r6\n\tst.1\tr5, r6\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, stack-[2]\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_704\n\tnear_call\tr0, @fun_find, @DEFAULT_UNWIND\n.BB0_704:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB0_709\n\tadd\tr0, r0, r4\n.BB0_708:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_708\n.BB0_709:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tadd\t32, r1, r4\n\tadd\tr4, r2, r5\n\tadd\tstack-[7], r0, r6\n\tst.1\tr5, r6\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r2\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[6]\n\tadd\t2, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[7]\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_978\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB0_915\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n.BB0_716:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r3\n\tadd\t@CPI0_73[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_719\n\tadd\tr0, r0, r7\n.BB0_718:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_718\n.BB0_719:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_721\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_721:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_952\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1018\n.BB0_727:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tmul\t@CPI0_103[0], r2, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_728:\n\tadd\t31, r3, r2\n\tand\t@CPI0_60[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_61[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tjump.gt\t@.BB0_289\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_733\n\tadd\tr0, r0, r6\n.BB0_732:\n\tshl.s\t5, r6, r7\n\tadd\tr5, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_732\n.BB0_733:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_735\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr5, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_735:\n\tld.1\tr2, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_62[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_62[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_326\n\tadd\t17, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tor\tstack-[13], r1, r1\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\t15, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\tr2, r0, stack-[8]\n\tsstore\tr2, r1\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t1, r1, r2\n\tadd\tstack-[16], r0, r3\n\tsstore\tr3, r2\n\tadd\t@CPI0_65[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\t20, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tadd\t16, r0, r5\n\tadd\tr5, r0, stack-[3]\n\tsload\tr5, r5\n\tadd\tr5, r0, stack-[5]\n\tadd\tstack-[8], r0, r5\n\tsload\tr5, r5\n\tadd\tr5, r0, stack-[6]\n\tadd\tstack-[13], r0, r5\n\tsload\tr5, r5\n\tand\t@CPI0_7[0], r5, stack-[7]\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_754\n.BB0_738:\n\tadd\t@CPI0_106[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_739:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_742\n\tadd\tr0, r0, r6\n.BB0_741:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_741\n.BB0_742:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_744:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_747\n\tadd\tr0, r0, r6\n.BB0_746:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_746\n.BB0_747:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_749:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_752\n\tadd\tr0, r0, r6\n.BB0_751:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_751\n.BB0_752:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_754:\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[17]\n\tadd\t32, r4, stack-[12]\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_771\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r1\n\tadd\tstack-[17], r0, r3\n\tst.1\tr3, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tadd\tstack-[12], r0, r2\n\tjump.eq\t@.BB0_758\n\tadd\t@CPI0_65[0], r0, r3\n\tadd\tr0, r0, r4\n\tadd\tstack-[12], r0, r2\n.BB0_757:\n\tsload\tr3, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tadd\t1, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_757\n.BB0_758:\n\tsub.s\tstack-[17], r2, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r3\n\tadd\tstack-[17], r3, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r4\n\tshl.s\t5, r4, r3\n\tsub!\tr4, r0, r5\n\tjump.ne\t@.BB0_849\n.BB0_761:\n\tadd\t63, r3, r4\n\tand\tr4, r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_765\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tadd\tr0, r0, r6\n.BB0_764:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_764\n.BB0_765:\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB0_767\n.BB0_767:\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_770\n\tadd\tr0, r0, r3\n\tadd\tstack-[12], r0, r6\n\tadd\tstack-[17], r0, r7\n.BB0_769:\n\tshl.s\t5, r3, r4\n\tadd\tr4, r2, r5\n\tadd\tr4, r6, r4\n\tld.1\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tld.1\tr7, r4\n\tsub!\tr3, r4, r4\n\tjump.lt\t@.BB0_769\n.BB0_770:\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, stack-[17]\n\tjump\t@.BB0_788\n.BB0_771:\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_784\n\tadd\t@CPI0_66[0], r0, r2\n\tadd\tr0, r0, r6\n\tadd\tstack-[12], r0, r5\n.BB0_773:\n\tadd\tr6, r5, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r6, r6\n\tsub!\tr6, r1, r3\n\tjump.lt\t@.BB0_773\n\tjump\t@.BB0_785\n.BB0_774:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_777\n\tadd\tr0, r0, r6\n.BB0_776:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_776\n.BB0_777:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_779:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_782\n\tadd\tr0, r0, r6\n.BB0_781:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_781\n.BB0_782:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_784:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[11], r0, r6\n.BB0_785:\n\tadd\t63, r6, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n.BB0_788:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tadd\tstack-[6], r0, r2\n\tshl.s\t224, r2, r2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[12], r0, r7\n\tjump.eq\t@.BB0_793\n\tadd\tr0, r0, r4\n.BB0_792:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_792\n.BB0_793:\n\tadd\tr3, r1, r4\n\tst.1\tr4, r0\n\tadd\t32, r1, r4\n\tadd\tr4, r2, r5\n\tadd\tstack-[5], r0, r6\n\tst.1\tr5, r6\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, stack-[1]\n\tand\tstack-[1], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_799\n\tnear_call\tr0, @fun_find, @DEFAULT_UNWIND\n.BB0_799:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[12], r0, r7\n\tjump.eq\t@.BB0_804\n\tadd\tr0, r0, r4\n.BB0_803:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_803\n.BB0_804:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tadd\t32, r1, r4\n\tadd\tr4, r2, r5\n\tadd\tstack-[5], r0, r6\n\tst.1\tr5, r6\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[1], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_6[0], r1, r5\n\tjump.gt\t@.BB0_289\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_326\n\tld\tr1, r2\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[11]\n\tadd\t2, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[12]\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_978\n\tsub!\tstack-[12], r0, r1\n\tjump.ne\t@.BB0_977\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n.BB0_811:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r3\n\tadd\t@CPI0_73[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_814\n\tadd\tr0, r0, r7\n.BB0_813:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_813\n.BB0_814:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_816\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_816:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_984\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[12], r0, r3\n\tsub\t256, r3, r1\n\tsub.s\t1, r0, r2\n\tshl\tr2, r1, r1\n\txor\tr1, r2, r1\n\tsub!\tr3, r0, r3\n\tadd.eq\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tshl\tr1, r4, r1\n\txor\tr1, r2, r1\n\tsub.s!\t255, r4, r3\n\tadd.le\tr1, r0, r2\n\tshl\t@CPI0_76[0], r4, r1\n\tadd.gt\tr0, r0, r1\n\tand\tstack-[17], r2, r2\n\tor\tr2, r1, r1\n\tadd\t68, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr5, r0, stack-[12]\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1072\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[12], r0, r1\n\tst.1\t64, r1\n\tnear_call\tr0, @fun_callTarget_107633, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_1087\n\tsub.s!\t@CPI0_76[0], r2, r1\n\tjump.ne\t@.BB0_1087\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r1\n\tsstore\tr2, r0\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_830\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tadd\t@CPI0_65[0], r1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.lt\t@.BB0_830\n\tadd\t@CPI0_65[0], r0, r2\n.BB0_829:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_829\n.BB0_830:\n\tadd\tstack-[3], r0, r1\n\tsstore\tr1, r0\n\tadd\t19, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r1\n\tshr.s\t1, r2, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr2, r3, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_738\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_838\n\tsub.s!\t31, r1, r2\n\tjump.le\t@.BB0_837\n\tadd\t20, r0, r2\n\tst.1\t0, r2\n\tadd\t31, r1, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_66[0], r3, r3\n\tsub.s!\t32, r1, r1\n\tjump.eq\t@.BB0_836\n\tadd\t@CPI0_82[0], r0, r1\n.BB0_835:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r4\n\tjump.lt\t@.BB0_835\n.BB0_836:\n\tsstore\tr2, r0\n\tadd\t@CPI0_66[0], r0, stack-[4]\n.BB0_837:\n\tadd\tstack-[4], r0, r1\n\tsstore\tr1, r0\n.BB0_838:\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[12]\n\tshl.s\t192, r2, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1155\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[11], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_76[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1160\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1166\n.BB0_844:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_847\n\tadd\tr0, r0, r6\n.BB0_846:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_846\n.BB0_847:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_849:\n\tdiv\tr3, r4, r4, r5\n\tsub.s!\t32, r4, r4\n\tjump.ne\t@.BB0_978\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.le\t@.BB0_761\n\tjump\t@.BB0_289\n.BB0_851:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_854\n\tadd\tr0, r0, r6\n.BB0_853:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_853\n.BB0_854:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_856:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_859\n\tadd\tr0, r0, r6\n.BB0_858:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_858\n.BB0_859:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_861:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_864\n\tadd\tr0, r0, r6\n.BB0_863:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_863\n.BB0_864:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_866:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t256, r1, r1\n\tjump.gt\t@.BB0_978\n\tld.1\t64, r4\n\tadd\t@CPI0_68[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[7], r0, r1\n\tsub\t256, r1, r1\n\tshl\t1, r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_957\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_871\n\tadd\tr0, r0, r2\n.BB0_870:\n\tshl.s\t5, r2, r6\n\tadd\tstack-[17], r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_870\n.BB0_871:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_873\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tstack-[17], r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_873:\n\tadd\t31, r3, r1\n\tand\t@CPI0_60[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_326\n\tadd\tstack-[17], r3, r5\n\tadd\tstack-[17], r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_62[0], r3, r3\n\tand\t@CPI0_62[0], r5, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_62[0], r3, r3\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_326\n\tld.1.inc\tr1, r1, r4\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tadd\t31, r1, r3\n\tand\tstack-[2], r3, r3\n\tadd\t63, r3, r3\n\tand\tstack-[2], r3, r3\n\tadd\tr3, r2, r3\n\tsub.s!\t@CPI0_6[0], r3, r6\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r3\n\tadd\tr1, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_326\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_884\n\tadd\tr0, r0, r5\n.BB0_883:\n\tadd\tr5, r3, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_883\n.BB0_884:\n\tadd\tr1, r3, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\t96, r1, r4\n\tadd\t@CPI0_69[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r1, r4\n\tadd\t@CPI0_70[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tadd\t@CPI0_71[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t106, r1, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_887\n\tadd\tr0, r0, r5\n.BB0_886:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_886\n.BB0_887:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t74, r2, r3\n\tst.1\tr1, r3\n\tadd\t137, r2, r2\n\tand\tstack-[2], r2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_6[0], r3, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[7], r0, r2\n\tsub.s\t192, r2, r2\n\tsub.s\t191, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_600\n\tadd\t@CPI0_72[0], r0, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[10], r0, r3\n\tjump\t@.BB0_941\n.BB0_891:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t256, r1, r1\n\tjump.gt\t@.BB0_978\n\tld.1\t64, r4\n\tadd\t@CPI0_68[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[7], r0, r1\n\tsub\t256, r1, r1\n\tshl\t1, r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_962\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_896\n\tadd\tr0, r0, r2\n.BB0_895:\n\tshl.s\t5, r2, r6\n\tadd\tstack-[17], r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_895\n.BB0_896:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_898\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tstack-[17], r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_898:\n\tadd\t31, r3, r1\n\tand\t@CPI0_60[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_326\n\tadd\tstack-[17], r3, r5\n\tadd\tstack-[17], r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_62[0], r3, r3\n\tand\t@CPI0_62[0], r5, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_62[0], r3, r3\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_326\n\tld.1.inc\tr1, r1, r4\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tadd\t31, r1, r3\n\tand\tstack-[2], r3, r3\n\tadd\t63, r3, r3\n\tand\tstack-[2], r3, r3\n\tadd\tr3, r2, r3\n\tsub.s!\t@CPI0_6[0], r3, r6\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r3\n\tadd\tr1, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_326\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_909\n\tadd\tr0, r0, r5\n.BB0_908:\n\tadd\tr5, r3, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_908\n.BB0_909:\n\tadd\tr1, r3, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\t96, r1, r4\n\tadd\t@CPI0_69[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r1, r4\n\tadd\t@CPI0_70[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tadd\t@CPI0_71[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t106, r1, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_912\n\tadd\tr0, r0, r5\n.BB0_911:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_911\n.BB0_912:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t74, r2, r3\n\tst.1\tr1, r3\n\tadd\t137, r2, r2\n\tand\tstack-[2], r2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_6[0], r3, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[7], r0, r2\n\tsub.s\t192, r2, r2\n\tsub.s\t191, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_658\n\tjump\t@.BB0_940\n.BB0_915:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t256, r1, r1\n\tjump.gt\t@.BB0_978\n\tadd\tstack-[7], r0, r1\n\tsub\t256, r1, r1\n\tsub.s!\t255, r1, r2\n\tjump.gt\t@.BB0_978\n\tld.1\t64, r4\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\tr4, r2\n\tshl\t1, r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_967\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_921\n\tadd\tr0, r0, r2\n.BB0_920:\n\tshl.s\t5, r2, r6\n\tadd\tstack-[17], r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_920\n.BB0_921:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_923\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tstack-[17], r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_923:\n\tadd\t31, r3, r1\n\tand\t@CPI0_60[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_326\n\tadd\tstack-[17], r3, r5\n\tadd\tstack-[17], r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_62[0], r3, r3\n\tand\t@CPI0_62[0], r5, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_62[0], r3, r3\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_326\n\tld.1.inc\tr1, r1, r4\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tadd\t31, r1, r3\n\tand\tstack-[2], r3, r3\n\tadd\t63, r3, r3\n\tand\tstack-[2], r3, r3\n\tadd\tr3, r2, r3\n\tsub.s!\t@CPI0_6[0], r3, r6\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r3\n\tadd\tr1, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_326\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_934\n\tadd\tr0, r0, r5\n.BB0_933:\n\tadd\tr5, r3, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_933\n.BB0_934:\n\tadd\tr1, r3, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\t96, r1, r4\n\tadd\t@CPI0_69[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r1, r4\n\tadd\t@CPI0_70[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tadd\t@CPI0_71[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t106, r1, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_937\n\tadd\tr0, r0, r5\n.BB0_936:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_936\n.BB0_937:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t74, r2, r3\n\tst.1\tr1, r3\n\tadd\t137, r2, r2\n\tand\tstack-[2], r2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_6[0], r3, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[7], r0, r2\n\tsub.s\t196, r2, r2\n\tsub.s\t195, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_716\n.BB0_940:\n\tadd\t@CPI0_72[0], r0, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[11], r0, r3\n.BB0_941:\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_942:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_945\n\tadd\tr0, r0, r6\n.BB0_944:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_944\n.BB0_945:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_947:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_950\n\tadd\tr0, r0, r6\n.BB0_949:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_949\n.BB0_950:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_952:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_955\n\tadd\tr0, r0, r6\n.BB0_954:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_954\n.BB0_955:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_957:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_960\n\tadd\tr0, r0, r6\n.BB0_959:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_959\n.BB0_960:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_962:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_965\n\tadd\tr0, r0, r6\n.BB0_964:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_964\n.BB0_965:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_967:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_970\n\tadd\tr0, r0, r6\n.BB0_969:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_969\n.BB0_970:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_972:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_975\n\tadd\tr0, r0, r6\n.BB0_974:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_974\n.BB0_975:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_977:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t256, r1, r1\n\tjump.le\t@.BB0_989\n.BB0_978:\n\tadd\t@CPI0_106[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_979:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_982\n\tadd\tr0, r0, r6\n.BB0_981:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_981\n.BB0_982:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_984:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_987\n\tadd\tr0, r0, r6\n.BB0_986:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_986\n.BB0_987:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_989:\n\tld.1\t64, r4\n\tadd\t@CPI0_68[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[12], r0, r1\n\tsub\t256, r1, r1\n\tshl\t1, r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1013\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_993\n\tadd\tr0, r0, r2\n.BB0_992:\n\tshl.s\t5, r2, r6\n\tadd\tstack-[17], r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_992\n.BB0_993:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_995\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tstack-[17], r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_995:\n\tadd\t31, r3, r1\n\tand\t@CPI0_60[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_289\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_289\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_326\n\tadd\tstack-[17], r3, r5\n\tadd\tstack-[17], r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_62[0], r3, r3\n\tand\t@CPI0_62[0], r5, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_62[0], r3, r3\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_326\n\tld.1.inc\tr1, r1, r4\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tadd\t31, r1, r3\n\tand\tstack-[1], r3, r3\n\tadd\t63, r3, r3\n\tand\tstack-[1], r3, r3\n\tadd\tr3, r2, r3\n\tsub.s!\t@CPI0_6[0], r3, r6\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r3\n\tadd\tr1, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_326\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_1006\n\tadd\tr0, r0, r5\n.BB0_1005:\n\tadd\tr5, r3, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_1005\n.BB0_1006:\n\tadd\tr1, r3, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\t96, r1, r4\n\tadd\t@CPI0_69[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r1, r4\n\tadd\t@CPI0_70[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tadd\t@CPI0_71[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t106, r1, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1009\n\tadd\tr0, r0, r5\n.BB0_1008:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_1008\n.BB0_1009:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t74, r2, r3\n\tst.1\tr1, r3\n\tadd\t137, r2, r2\n\tand\tstack-[1], r2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_6[0], r3, r3\n\tjump.gt\t@.BB0_289\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[12], r0, r2\n\tsub.s\t191, r2, r2\n\tsub.s\t190, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_811\n\tadd\t@CPI0_72[0], r0, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tjump\t@.BB0_941\n.BB0_1013:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1016\n\tadd\tr0, r0, r6\n.BB0_1015:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1015\n.BB0_1016:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1018:\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tsub\t256, r3, r1\n\tsub.s\t1, r0, r2\n\tshl\tr2, r1, r1\n\txor\tr1, r2, r1\n\tsub!\tr3, r0, r3\n\tadd.eq\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tshl\tr1, r4, r1\n\txor\tr1, r2, r1\n\tsub.s!\t255, r4, r3\n\tadd.le\tr1, r0, r2\n\tshl\t@CPI0_120[0], r4, r1\n\tadd.gt\tr0, r0, r1\n\tand\tstack-[17], r2, r2\n\tor\tr2, r1, r1\n\tadd\t68, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr5, r0, stack-[7]\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1043\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[7], r0, r1\n\tst.1\t64, r1\n\tnear_call\tr0, @fun_callTarget_107633, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_1066\n\tsub.s!\t@CPI0_120[0], r2, r1\n\tjump.ne\t@.BB0_1066\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_18[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_63[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r1\n\tsstore\tr2, r0\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1026\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tadd\t@CPI0_65[0], r1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.lt\t@.BB0_1026\n\tadd\t@CPI0_65[0], r0, r2\n.BB0_1025:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_1025\n.BB0_1026:\n\tadd\tstack-[4], r0, r1\n\tsstore\tr1, r0\n\tadd\t19, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t20, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_738\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_1111\n\tsub.s!\t31, r2, r3\n\tjump.le\t@.BB0_1109\n\tadd\t20, r0, r1\n\tst.1\t0, r1\n\tadd\t31, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_66[0], r3, r3\n\tsub.s!\t32, r2, r2\n\tjump.eq\t@.BB0_1032\n\tadd\t@CPI0_82[0], r0, r2\n.BB0_1031:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_1031\n.BB0_1032:\n\tsstore\tr1, r0\n\tadd\t@CPI0_66[0], r0, r1\n\tjump\t@.BB0_1110\n.BB0_1033:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1036\n\tadd\tr0, r0, r6\n.BB0_1035:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1035\n.BB0_1036:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1038:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1041\n\tadd\tr0, r0, r6\n.BB0_1040:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1040\n.BB0_1041:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1043:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1046\n\tadd\tr0, r0, r6\n.BB0_1045:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1045\n.BB0_1046:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1048:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1051\n\tadd\tr0, r0, r6\n.BB0_1050:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1050\n.BB0_1051:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1053:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t68, r4, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1117\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tjump\t@.BB0_1092\n.BB0_1058:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t68, r4, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1070\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1064\n\tadd\tr0, r0, r6\n.BB0_1063:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1063\n.BB0_1064:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1066:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t68, r4, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1122\n.BB0_1070:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tjump\t@.BB0_1092\n.BB0_1072:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1075\n\tadd\tr0, r0, r6\n.BB0_1074:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1074\n.BB0_1075:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1077:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1080\n\tadd\tr0, r0, r6\n.BB0_1079:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1079\n.BB0_1080:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1082:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1085\n\tadd\tr0, r0, r6\n.BB0_1084:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1084\n.BB0_1085:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1087:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_75[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t68, r4, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[7], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1208\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t32, r0, r1\n.BB0_1092:\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r1\n\tadd\t51, r0, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_78[0], r0, r1\n\tadd\tstack-[15], r0, r3\n\tst.1\tr3, r1\n\tadd\t100, r2, r1\n\tadd\t@CPI0_79[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tor\t@CPI0_80[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1093:\n.BB0_1094:\n\tsstore\tr1, r0\n.BB0_1095:\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1213\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[13], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_124[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1218\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1224\n.BB0_1101:\n.BB0_1102:\n\tsstore\tr1, r0\n.BB0_1103:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1275\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[13], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_124[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1280\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1286\n.BB0_1109:\n.BB0_1110:\n\tsstore\tr1, r0\n.BB0_1111:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1332\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[13], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_120[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1337\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1343\n.BB0_1117:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1120\n\tadd\tr0, r0, r6\n.BB0_1119:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1119\n.BB0_1120:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1122:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1125\n\tadd\tr0, r0, r6\n.BB0_1124:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1124\n.BB0_1125:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1127:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_1128:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_1131\n\tadd\tr0, r0, r6\n.BB0_1130:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1130\n.BB0_1131:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_1363\n\tjump\t@.BB0_1364\n.BB0_1132:\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t37, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_18[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tadd\t36, r1, r2\n\tadd\t@CPI0_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\tstack-[13], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1357\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1365\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_1358\n.BB0_1136:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_1137:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_1140\n\tadd\tr0, r0, r6\n.BB0_1139:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1139\n.BB0_1140:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1364\n\tjump\t@.BB0_1363\n.BB0_1142:\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t40, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_18[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tr3, r0, stack-[16]\n\tsstore\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_123[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1366\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_2070\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_2070\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1153\n\tadd\tr0, r0, r6\n.BB0_1152:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1152\n.BB0_1153:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1155:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1158\n\tadd\tr0, r0, r6\n.BB0_1157:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1157\n.BB0_1158:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1160:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1163\n\tadd\tr0, r0, r7\n.BB0_1162:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1162\n.BB0_1163:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1165\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1165:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1371\n.BB0_1166:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_84[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_76[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1173\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1376\n.BB0_1173:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1381\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1182\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1386\n.BB0_1182:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t33, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1187\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1391\n.BB0_1187:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1395\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_76[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_87[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1196\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1400\n.BB0_1196:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tst.1\tr1, r3\n\tadd\tr2, r0, stack-[17]\n\tadd\t36, r2, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1201\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1405\n.BB0_1201:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1410\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_76[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1415\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1421\n.BB0_1208:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1211\n\tadd\tr0, r0, r6\n.BB0_1210:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1210\n.BB0_1211:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1213:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1216\n\tadd\tr0, r0, r6\n.BB0_1215:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1215\n.BB0_1216:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1218:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1221\n\tadd\tr0, r0, r7\n.BB0_1220:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1220\n.BB0_1221:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1223\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1223:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1435\n.BB0_1224:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_84[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_124[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1231\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1440\n.BB0_1231:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1445\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1240\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1450\n.BB0_1240:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t33, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1245\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1455\n.BB0_1245:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1460\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_87[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1254\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1465\n.BB0_1254:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_125[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1259\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1470\n.BB0_1259:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1475\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_124[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1268\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1480\n.BB0_1268:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1485\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1490\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1496\n.BB0_1275:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1278\n\tadd\tr0, r0, r6\n.BB0_1277:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1277\n.BB0_1278:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1280:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1283\n\tadd\tr0, r0, r7\n.BB0_1282:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1282\n.BB0_1283:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1285\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1285:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1504\n.BB0_1286:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_84[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_124[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1293\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1509\n.BB0_1293:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1514\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1519\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1306\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1524\n.BB0_1306:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t33, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1311\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1529\n.BB0_1311:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1534\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_87[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1320\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1539\n.BB0_1320:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_125[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1325\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1544\n.BB0_1325:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1549\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[15], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_124[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1554\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1560\n.BB0_1332:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1335\n\tadd\tr0, r0, r6\n.BB0_1334:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1334\n.BB0_1335:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1337:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1340\n\tadd\tr0, r0, r7\n.BB0_1339:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1339\n.BB0_1340:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1342\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1342:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1574\n.BB0_1343:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_84[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1350\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1579\n.BB0_1350:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1584\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_108[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1589\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1595\n.BB0_1357:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_1358:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_1361\n\tadd\tr0, r0, r6\n.BB0_1360:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1360\n.BB0_1361:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1364\n.BB0_1363:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1364:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1365:\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t39, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_18[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_27[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1366:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1369\n\tadd\tr0, r0, r6\n.BB0_1368:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1368\n.BB0_1369:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1371:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1374\n\tadd\tr0, r0, r6\n.BB0_1373:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1373\n.BB0_1374:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1376:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1379\n\tadd\tr0, r0, r6\n.BB0_1378:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1378\n.BB0_1379:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1381:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1384\n\tadd\tr0, r0, r6\n.BB0_1383:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1383\n.BB0_1384:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1386:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1389\n\tadd\tr0, r0, r6\n.BB0_1388:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1388\n.BB0_1389:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1391:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1394\n\tadd\tr0, r0, r6\n.BB0_1393:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1393\n.BB0_1394:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1395:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1398\n\tadd\tr0, r0, r6\n.BB0_1397:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1397\n.BB0_1398:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1400:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1403\n\tadd\tr0, r0, r6\n.BB0_1402:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1402\n.BB0_1403:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1405:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1408\n\tadd\tr0, r0, r6\n.BB0_1407:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1407\n.BB0_1408:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1410:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1413\n\tadd\tr0, r0, r6\n.BB0_1412:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1412\n.BB0_1413:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1415:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1418\n\tadd\tr0, r0, r7\n.BB0_1417:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1417\n.BB0_1418:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1420\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1420:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1614\n.BB0_1421:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_76[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1428\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1619\n.BB0_1428:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[11]\n\tshl.s\t192, r2, r1\n\tor\tstack-[11], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1624\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1629\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1635\n.BB0_1435:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1438\n\tadd\tr0, r0, r6\n.BB0_1437:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1437\n.BB0_1438:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1440:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1443\n\tadd\tr0, r0, r6\n.BB0_1442:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1442\n.BB0_1443:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1445:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1448\n\tadd\tr0, r0, r6\n.BB0_1447:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1447\n.BB0_1448:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1450:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1453\n\tadd\tr0, r0, r6\n.BB0_1452:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1452\n.BB0_1453:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1455:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1458\n\tadd\tr0, r0, r6\n.BB0_1457:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1457\n.BB0_1458:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1460:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1463\n\tadd\tr0, r0, r6\n.BB0_1462:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1462\n.BB0_1463:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1465:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1468\n\tadd\tr0, r0, r6\n.BB0_1467:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1467\n.BB0_1468:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1470:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1473\n\tadd\tr0, r0, r6\n.BB0_1472:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1472\n.BB0_1473:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1475:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1478\n\tadd\tr0, r0, r6\n.BB0_1477:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1477\n.BB0_1478:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1480:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1483\n\tadd\tr0, r0, r6\n.BB0_1482:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1482\n.BB0_1483:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1485:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1488\n\tadd\tr0, r0, r6\n.BB0_1487:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1487\n.BB0_1488:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1490:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1493\n\tadd\tr0, r0, r7\n.BB0_1492:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1492\n.BB0_1493:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1495\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1495:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1643\n.BB0_1496:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_124[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[12]\n\tshl.s\t192, r2, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1648\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[16], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1653\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1659\n.BB0_1504:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1507\n\tadd\tr0, r0, r6\n.BB0_1506:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1506\n.BB0_1507:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1509:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1512\n\tadd\tr0, r0, r6\n.BB0_1511:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1511\n.BB0_1512:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1514:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1517\n\tadd\tr0, r0, r6\n.BB0_1516:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1516\n.BB0_1517:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1519:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1522\n\tadd\tr0, r0, r6\n.BB0_1521:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1521\n.BB0_1522:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1524:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1527\n\tadd\tr0, r0, r6\n.BB0_1526:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1526\n.BB0_1527:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1529:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1532\n\tadd\tr0, r0, r6\n.BB0_1531:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1531\n.BB0_1532:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1534:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1537\n\tadd\tr0, r0, r6\n.BB0_1536:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1536\n.BB0_1537:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1539:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1542\n\tadd\tr0, r0, r6\n.BB0_1541:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1541\n.BB0_1542:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1544:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1547\n\tadd\tr0, r0, r6\n.BB0_1546:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1546\n.BB0_1547:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1549:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1552\n\tadd\tr0, r0, r6\n.BB0_1551:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1551\n.BB0_1552:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1554:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1557\n\tadd\tr0, r0, r7\n.BB0_1556:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1556\n.BB0_1557:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1559\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1559:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1667\n.BB0_1560:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_124[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1567\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1672\n.BB0_1567:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1677\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1682\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1688\n.BB0_1574:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1577\n\tadd\tr0, r0, r6\n.BB0_1576:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1576\n.BB0_1577:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1579:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1582\n\tadd\tr0, r0, r6\n.BB0_1581:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1581\n.BB0_1582:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1584:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1587\n\tadd\tr0, r0, r6\n.BB0_1586:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1586\n.BB0_1587:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1589:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1592\n\tadd\tr0, r0, r7\n.BB0_1591:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1591\n.BB0_1592:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1594\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1594:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1691\n.BB0_1595:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r3\n\tsub.s!\t@CPI0_7[0], r3, r2\n\tjump.gt\t@.BB0_326\n\tadd\t32, r1, r2\n\tadd\t@CPI0_121[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t36, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_59[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_122[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_123[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1696\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1607\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1701\n.BB0_1607:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_7[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1706\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_83[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[15], r0, r4\n\tst.1\tr4, r1\n\tadd\t36, r5, r1\n\tadd\t@CPI0_120[0], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1711\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1717\n.BB0_1614:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1617\n\tadd\tr0, r0, r6\n.BB0_1616:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1616\n.BB0_1617:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1619:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1622\n\tadd\tr0, r0, r6\n.BB0_1621:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1621\n.BB0_1622:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1624:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1627\n\tadd\tr0, r0, r6\n.BB0_1626:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1626\n.BB0_1627:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1629:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[11], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1632\n\tadd\tr0, r0, r7\n.BB0_1631:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1631\n.BB0_1632:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1634\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1634:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1731\n.BB0_1635:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_76[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[11]\n\tshl.s\t192, r2, r1\n\tor\tstack-[11], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1736\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[8], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1741\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1747\n.BB0_1643:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1646\n\tadd\tr0, r0, r6\n.BB0_1645:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1645\n.BB0_1646:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1648:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1651\n\tadd\tr0, r0, r6\n.BB0_1650:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1650\n.BB0_1651:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1653:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1656\n\tadd\tr0, r0, r7\n.BB0_1655:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1655\n.BB0_1656:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1658\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1658:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1755\n.BB0_1659:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[12]\n\tshl.s\t192, r2, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1760\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_91[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1765\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1771\n.BB0_1667:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1670\n\tadd\tr0, r0, r6\n.BB0_1669:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1669\n.BB0_1670:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1672:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1675\n\tadd\tr0, r0, r6\n.BB0_1674:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1674\n.BB0_1675:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1677:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1680\n\tadd\tr0, r0, r6\n.BB0_1679:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1679\n.BB0_1680:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1682:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1685\n\tadd\tr0, r0, r7\n.BB0_1684:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1684\n.BB0_1685:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1687\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1687:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1779\n.BB0_1688:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_assertEq, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1691:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1694\n\tadd\tr0, r0, r6\n.BB0_1693:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1693\n.BB0_1694:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1696:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1699\n\tadd\tr0, r0, r6\n.BB0_1698:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1698\n.BB0_1699:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1701:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1704\n\tadd\tr0, r0, r6\n.BB0_1703:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1703\n.BB0_1704:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1706:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1709\n\tadd\tr0, r0, r6\n.BB0_1708:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1708\n.BB0_1709:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1711:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1714\n\tadd\tr0, r0, r7\n.BB0_1713:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1713\n.BB0_1714:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1716\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1716:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1784\n.BB0_1717:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_326\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\t4, r2, r1\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1724\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1789\n.BB0_1724:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1794\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1799\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1805\n.BB0_1731:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1734\n\tadd\tr0, r0, r6\n.BB0_1733:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1733\n.BB0_1734:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1736:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1739\n\tadd\tr0, r0, r6\n.BB0_1738:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1738\n.BB0_1739:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1741:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[11], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1744\n\tadd\tr0, r0, r7\n.BB0_1743:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1743\n.BB0_1744:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1746\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1746:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1811\n.BB0_1747:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_76[0], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1816\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_91[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[11], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1821\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1827\n.BB0_1755:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1758\n\tadd\tr0, r0, r6\n.BB0_1757:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1757\n.BB0_1758:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1760:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1763\n\tadd\tr0, r0, r6\n.BB0_1762:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1762\n.BB0_1763:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1765:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1768\n\tadd\tr0, r0, r7\n.BB0_1767:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1767\n.BB0_1768:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1770\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1770:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1836\n.BB0_1771:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1841\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_91[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1846\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1852\n.BB0_1779:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1782\n\tadd\tr0, r0, r6\n.BB0_1781:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1781\n.BB0_1782:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1784:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1787\n\tadd\tr0, r0, r6\n.BB0_1786:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1786\n.BB0_1787:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1789:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1792\n\tadd\tr0, r0, r6\n.BB0_1791:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1791\n.BB0_1792:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1794:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1797\n\tadd\tr0, r0, r6\n.BB0_1796:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1796\n.BB0_1797:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1799:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1802\n\tadd\tr0, r0, r7\n.BB0_1801:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1801\n.BB0_1802:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1804\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1804:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1867\n.BB0_1805:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1872\n\tjump\t@.BB0_2070\n.BB0_1811:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1814\n\tadd\tr0, r0, r6\n.BB0_1813:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1813\n.BB0_1814:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1816:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1819\n\tadd\tr0, r0, r6\n.BB0_1818:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1818\n.BB0_1819:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1821:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1824\n\tadd\tr0, r0, r7\n.BB0_1823:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1823\n.BB0_1824:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1826\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1826:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1877\n.BB0_1827:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1882\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub.s!\t@CPI0_95[0], r1, stack-[17]\n\tjump.lt\t@.BB0_1887\n\tadd\tstack-[18], r0, r1\n\tadd\t@CPI0_106[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tst.1\t4, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1836:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1839\n\tadd\tr0, r0, r6\n.BB0_1838:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1838\n.BB0_1839:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1841:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1844\n\tadd\tr0, r0, r6\n.BB0_1843:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1843\n.BB0_1844:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1846:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1849\n\tadd\tr0, r0, r7\n.BB0_1848:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1848\n.BB0_1849:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1851\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1851:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1893\n.BB0_1852:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1898\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub.s!\tstack-[3], r1, r2\n\tjump.eq\t@.BB0_978\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r2, stack-[17]\n\tsub!\tstack-[17], r1, r1\n\tjump.le\t@.BB0_978\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_96[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1903\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[13], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1908\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1914\n.BB0_1867:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1870\n\tadd\tr0, r0, r6\n.BB0_1869:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1869\n.BB0_1870:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1872:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1875\n\tadd\tr0, r0, r6\n.BB0_1874:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1874\n.BB0_1875:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_1877:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1880\n\tadd\tr0, r0, r6\n.BB0_1879:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1879\n.BB0_1880:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1882:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1885\n\tadd\tr0, r0, r6\n.BB0_1884:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1884\n.BB0_1885:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1887:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_96[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1923\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1928\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1934\n.BB0_1893:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1896\n\tadd\tr0, r0, r6\n.BB0_1895:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1895\n.BB0_1896:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1898:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1901\n\tadd\tr0, r0, r6\n.BB0_1900:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1900\n.BB0_1901:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1903:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1906\n\tadd\tr0, r0, r6\n.BB0_1905:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1905\n.BB0_1906:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1908:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1911\n\tadd\tr0, r0, r7\n.BB0_1910:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1910\n.BB0_1911:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1913\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1913:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1946\n.BB0_1914:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t@CPI0_126[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t36, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_59[0], r1, r3\n\tjump.gt\t@.BB0_289\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_122[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[16]\n\tshl.s\t192, r2, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1951\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1956\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1962\n.BB0_1923:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1927\n\tadd\tr0, r0, r6\n.BB0_1926:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1926\n.BB0_1927:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_2279\n\tjump\t@.BB0_2280\n.BB0_1928:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1931\n\tadd\tr0, r0, r7\n.BB0_1930:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1930\n.BB0_1931:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1933\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1933:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1970\n.BB0_1934:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1975\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1980\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1986\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1992\n.BB0_1946:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1949\n\tadd\tr0, r0, r6\n.BB0_1948:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1948\n.BB0_1949:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1951:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1954\n\tadd\tr0, r0, r6\n.BB0_1953:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1953\n.BB0_1954:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_1956:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[16], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1959\n\tadd\tr0, r0, r7\n.BB0_1958:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1958\n.BB0_1959:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1961\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1961:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2000\n.BB0_1962:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2005\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2010\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2016\n.BB0_1970:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1973\n\tadd\tr0, r0, r6\n.BB0_1972:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1972\n.BB0_1973:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1975:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1978\n\tadd\tr0, r0, r6\n.BB0_1977:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1977\n.BB0_1978:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_1980:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1984\n\tadd\tr0, r0, r6\n.BB0_1983:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1983\n.BB0_1984:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n\tjump\t@.BB0_2279\n.BB0_1986:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1989\n\tadd\tr0, r0, r7\n.BB0_1988:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1988\n.BB0_1989:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1991\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1991:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2024\n.BB0_1992:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2029\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2035\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2041\n.BB0_2000:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2003\n\tadd\tr0, r0, r6\n.BB0_2002:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2002\n.BB0_2003:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_2005:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2008\n\tadd\tr0, r0, r6\n.BB0_2007:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2007\n.BB0_2008:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_2010:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2013\n\tadd\tr0, r0, r7\n.BB0_2012:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2012\n.BB0_2013:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2015\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2015:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2049\n.BB0_2016:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2054\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[14], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2058\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2064\n.BB0_2024:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2027\n\tadd\tr0, r0, r6\n.BB0_2026:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2026\n.BB0_2027:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2029:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2033\n\tadd\tr0, r0, r6\n.BB0_2032:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2032\n.BB0_2033:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n\tjump\t@.BB0_2279\n.BB0_2035:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2038\n\tadd\tr0, r0, r7\n.BB0_2037:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2037\n.BB0_2038:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2040\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2040:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2071\n.BB0_2041:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_100[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2076\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2081\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2087\n.BB0_2049:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2052\n\tadd\tr0, r0, r6\n.BB0_2051:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2051\n.BB0_2052:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_121\n.BB0_2054:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2057\n\tadd\tr0, r0, r6\n.BB0_2056:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2056\n.BB0_2057:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_2058:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2061\n\tadd\tr0, r0, r7\n.BB0_2060:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2060\n.BB0_2061:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2063\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2063:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2100\n.BB0_2064:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_124[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2105\n.BB0_2070:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tjump\t@.BB0_521\n.BB0_2071:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2074\n\tadd\tr0, r0, r6\n.BB0_2073:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2073\n.BB0_2074:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2076:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2079\n\tadd\tr0, r0, r6\n.BB0_2078:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2078\n.BB0_2079:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2081:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2084\n\tadd\tr0, r0, r7\n.BB0_2083:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2083\n.BB0_2084:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2086\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2086:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2110\n.BB0_2087:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2115\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2120\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2126\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2132\n.BB0_2100:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2103\n\tadd\tr0, r0, r6\n.BB0_2102:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2102\n.BB0_2103:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_2105:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2108\n\tadd\tr0, r0, r6\n.BB0_2107:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2107\n.BB0_2108:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_122\n\tjump\t@.BB0_434\n.BB0_2110:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2113\n\tadd\tr0, r0, r6\n.BB0_2112:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2112\n.BB0_2113:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2115:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2118\n\tadd\tr0, r0, r6\n.BB0_2117:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2117\n.BB0_2118:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2120:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2124\n\tadd\tr0, r0, r6\n.BB0_2123:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2123\n.BB0_2124:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n\tjump\t@.BB0_2279\n.BB0_2126:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2129\n\tadd\tr0, r0, r7\n.BB0_2128:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2128\n.BB0_2129:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2131\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2131:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2144\n.BB0_2132:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2149\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2154\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2160\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2166\n.BB0_2144:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2147\n\tadd\tr0, r0, r6\n.BB0_2146:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2146\n.BB0_2147:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2149:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2152\n\tadd\tr0, r0, r6\n.BB0_2151:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2151\n.BB0_2152:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2154:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2158\n\tadd\tr0, r0, r6\n.BB0_2157:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2157\n.BB0_2158:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n\tjump\t@.BB0_2279\n.BB0_2160:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2163\n\tadd\tr0, r0, r7\n.BB0_2162:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2162\n.BB0_2163:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2165\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2165:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2174\n.BB0_2166:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2179\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2185\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2191\n.BB0_2174:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2177\n\tadd\tr0, r0, r6\n.BB0_2176:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2176\n.BB0_2177:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2179:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2183\n\tadd\tr0, r0, r6\n.BB0_2182:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2182\n.BB0_2183:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n\tjump\t@.BB0_2279\n.BB0_2185:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2188\n\tadd\tr0, r0, r7\n.BB0_2187:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2187\n.BB0_2188:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2190\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2190:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2199\n.BB0_2191:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_101[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2204\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2209\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2215\n.BB0_2199:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2202\n\tadd\tr0, r0, r6\n.BB0_2201:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2201\n.BB0_2202:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2204:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2207\n\tadd\tr0, r0, r6\n.BB0_2206:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2206\n.BB0_2207:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2209:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2212\n\tadd\tr0, r0, r7\n.BB0_2211:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2211\n.BB0_2212:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2214\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2214:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2228\n.BB0_2215:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_102[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2233\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2238\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2244\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2250\n.BB0_2228:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2231\n\tadd\tr0, r0, r6\n.BB0_2230:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2230\n.BB0_2231:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2233:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2236\n\tadd\tr0, r0, r6\n.BB0_2235:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2235\n.BB0_2236:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2238:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2242\n\tadd\tr0, r0, r6\n.BB0_2241:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2241\n.BB0_2242:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n\tjump\t@.BB0_2279\n.BB0_2244:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2247\n\tadd\tr0, r0, r7\n.BB0_2246:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2246\n.BB0_2247:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2249\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2249:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2263\n.BB0_2250:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2268\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2273\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd!\tstack-[18], r0, r1\n\tjump.ne\t@.BB0_2281\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2282\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2288\n.BB0_2263:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2266\n\tadd\tr0, r0, r6\n.BB0_2265:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2265\n.BB0_2266:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2268:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2271\n\tadd\tr0, r0, r6\n.BB0_2270:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2270\n.BB0_2271:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2273:\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_326\n\tptr.add\tr1, r2, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2277\n\tadd\tr0, r0, r6\n.BB0_2276:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2276\n.BB0_2277:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_2280\n.BB0_2279:\n\tshl.s\t5, r5, r5\n\tptr.add\tr2, r5, r2\n\tadd\tr1, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr2, r2\n\tsub\t256, r4, r4\n\tshr\tr2, r4, r2\n\tshl\tr2, r4, r2\n\tor\tr2, r6, r2\n\tst.1\tr5, r2\n.BB0_2280:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_2281:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tmul\t@CPI0_103[0], r1, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_2282:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2285\n\tadd\tr0, r0, r7\n.BB0_2284:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2284\n.BB0_2285:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2287\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2287:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2296\n.BB0_2288:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2301\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2306\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2312\n.BB0_2296:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2299\n\tadd\tr0, r0, r6\n.BB0_2298:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2298\n.BB0_2299:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2301:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2304\n\tadd\tr0, r0, r6\n.BB0_2303:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2303\n.BB0_2304:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2306:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2309\n\tadd\tr0, r0, r7\n.BB0_2308:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2308\n.BB0_2309:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2311\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2311:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2320\n.BB0_2312:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_104[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2325\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2330\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2336\n.BB0_2320:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2323\n\tadd\tr0, r0, r6\n.BB0_2322:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2322\n.BB0_2323:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2325:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2328\n\tadd\tr0, r0, r6\n.BB0_2327:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2327\n.BB0_2328:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2330:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2333\n\tadd\tr0, r0, r7\n.BB0_2332:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2332\n.BB0_2333:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2335\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2335:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2349\n.BB0_2336:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_105[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2354\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2359\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2364\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2370\n.BB0_2349:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2352\n\tadd\tr0, r0, r6\n.BB0_2351:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2351\n.BB0_2352:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2354:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2357\n\tadd\tr0, r0, r6\n.BB0_2356:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2356\n.BB0_2357:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2359:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2362\n\tadd\tr0, r0, r6\n.BB0_2361:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2361\n.BB0_2362:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2364:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2367\n\tadd\tr0, r0, r7\n.BB0_2366:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2366\n.BB0_2367:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2369\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2369:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2382\n.BB0_2370:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2387\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2392\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2397\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2403\n.BB0_2382:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2385\n\tadd\tr0, r0, r6\n.BB0_2384:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2384\n.BB0_2385:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2387:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2390\n\tadd\tr0, r0, r6\n.BB0_2389:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2389\n.BB0_2390:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2392:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2395\n\tadd\tr0, r0, r6\n.BB0_2394:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2394\n.BB0_2395:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2397:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2400\n\tadd\tr0, r0, r7\n.BB0_2399:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2399\n.BB0_2400:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2402\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2402:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2411\n.BB0_2403:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2416\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2421\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2427\n.BB0_2411:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2414\n\tadd\tr0, r0, r6\n.BB0_2413:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2413\n.BB0_2414:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2416:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2419\n\tadd\tr0, r0, r6\n.BB0_2418:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2418\n.BB0_2419:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2421:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2424\n\tadd\tr0, r0, r7\n.BB0_2423:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2423\n.BB0_2424:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2426\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2426:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2435\n.BB0_2427:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_105[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2440\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2445\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2451\n.BB0_2435:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2438\n\tadd\tr0, r0, r6\n.BB0_2437:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2437\n.BB0_2438:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2440:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2443\n\tadd\tr0, r0, r6\n.BB0_2442:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2442\n.BB0_2443:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2445:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2448\n\tadd\tr0, r0, r7\n.BB0_2447:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2447\n.BB0_2448:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2450\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2450:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2464\n.BB0_2451:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_104[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2469\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2474\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2479\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2485\n.BB0_2464:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2467\n\tadd\tr0, r0, r6\n.BB0_2466:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2466\n.BB0_2467:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2469:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2472\n\tadd\tr0, r0, r6\n.BB0_2471:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2471\n.BB0_2472:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2474:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2477\n\tadd\tr0, r0, r6\n.BB0_2476:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2476\n.BB0_2477:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2479:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2482\n\tadd\tr0, r0, r7\n.BB0_2481:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2481\n.BB0_2482:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2484\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2484:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2497\n.BB0_2485:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2502\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2507\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2512\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2518\n.BB0_2497:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2500\n\tadd\tr0, r0, r6\n.BB0_2499:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2499\n.BB0_2500:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2502:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2505\n\tadd\tr0, r0, r6\n.BB0_2504:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2504\n.BB0_2505:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2507:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2510\n\tadd\tr0, r0, r6\n.BB0_2509:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2509\n.BB0_2510:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2512:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2515\n\tadd\tr0, r0, r7\n.BB0_2514:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2514\n.BB0_2515:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2517\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2517:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2526\n.BB0_2518:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2531\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2536\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2542\n.BB0_2526:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2529\n\tadd\tr0, r0, r6\n.BB0_2528:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2528\n.BB0_2529:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2531:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2534\n\tadd\tr0, r0, r6\n.BB0_2533:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2533\n.BB0_2534:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2536:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2539\n\tadd\tr0, r0, r7\n.BB0_2538:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2538\n.BB0_2539:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2541\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2541:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2550\n.BB0_2542:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_102[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2555\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2560\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2566\n.BB0_2550:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2553\n\tadd\tr0, r0, r6\n.BB0_2552:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2552\n.BB0_2553:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2555:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2558\n\tadd\tr0, r0, r6\n.BB0_2557:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2557\n.BB0_2558:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2560:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2563\n\tadd\tr0, r0, r7\n.BB0_2562:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2562\n.BB0_2563:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2565\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2565:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2579\n.BB0_2566:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_101[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2584\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2589\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2594\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2600\n.BB0_2579:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2582\n\tadd\tr0, r0, r6\n.BB0_2581:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2581\n.BB0_2582:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2584:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2587\n\tadd\tr0, r0, r6\n.BB0_2586:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2586\n.BB0_2587:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2589:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2592\n\tadd\tr0, r0, r6\n.BB0_2591:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2591\n.BB0_2592:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2594:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2597\n\tadd\tr0, r0, r7\n.BB0_2596:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2596\n.BB0_2597:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2599\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2599:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2612\n.BB0_2600:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2617\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2622\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2627\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2633\n.BB0_2612:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2615\n\tadd\tr0, r0, r6\n.BB0_2614:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2614\n.BB0_2615:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2617:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2620\n\tadd\tr0, r0, r6\n.BB0_2619:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2619\n.BB0_2620:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2622:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2625\n\tadd\tr0, r0, r6\n.BB0_2624:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2624\n.BB0_2625:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2627:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2630\n\tadd\tr0, r0, r7\n.BB0_2629:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2629\n.BB0_2630:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2632\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2632:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2641\n.BB0_2633:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2646\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2651\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2657\n.BB0_2641:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2644\n\tadd\tr0, r0, r6\n.BB0_2643:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2643\n.BB0_2644:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2646:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2649\n\tadd\tr0, r0, r6\n.BB0_2648:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2648\n.BB0_2649:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2651:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2654\n\tadd\tr0, r0, r7\n.BB0_2653:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2653\n.BB0_2654:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2656\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2656:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2665\n.BB0_2657:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI0_98[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2670\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2675\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2681\n.BB0_2665:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2668\n\tadd\tr0, r0, r6\n.BB0_2667:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2667\n.BB0_2668:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2670:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2673\n\tadd\tr0, r0, r6\n.BB0_2672:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2672\n.BB0_2673:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2675:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2678\n\tadd\tr0, r0, r7\n.BB0_2677:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2677\n.BB0_2678:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2680\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2680:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2694\n.BB0_2681:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_100[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2699\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_727\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2704\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2709\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2715\n.BB0_2694:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2697\n\tadd\tr0, r0, r6\n.BB0_2696:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2696\n.BB0_2697:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2699:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2702\n\tadd\tr0, r0, r6\n.BB0_2701:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2701\n.BB0_2702:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2704:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2707\n\tadd\tr0, r0, r6\n.BB0_2706:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2706\n.BB0_2707:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2709:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2712\n\tadd\tr0, r0, r7\n.BB0_2711:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2711\n.BB0_2712:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2714\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2714:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2727\n.BB0_2715:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2732\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2737\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2742\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2748\n.BB0_2727:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2730\n\tadd\tr0, r0, r6\n.BB0_2729:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2729\n.BB0_2730:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2732:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2735\n\tadd\tr0, r0, r6\n.BB0_2734:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2734\n.BB0_2735:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2737:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2740\n\tadd\tr0, r0, r6\n.BB0_2739:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2739\n.BB0_2740:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2742:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2745\n\tadd\tr0, r0, r7\n.BB0_2744:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2744\n.BB0_2745:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2747\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2747:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2756\n.BB0_2748:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2761\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2766\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2772\n.BB0_2756:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2759\n\tadd\tr0, r0, r6\n.BB0_2758:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2758\n.BB0_2759:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2761:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2764\n\tadd\tr0, r0, r6\n.BB0_2763:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2763\n.BB0_2764:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2766:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2769\n\tadd\tr0, r0, r7\n.BB0_2768:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2768\n.BB0_2769:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2771\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2771:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2780\n.BB0_2772:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2785\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2790\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2796\n.BB0_2780:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2783\n\tadd\tr0, r0, r6\n.BB0_2782:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2782\n.BB0_2783:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2785:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2788\n\tadd\tr0, r0, r6\n.BB0_2787:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2787\n.BB0_2788:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2790:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2793\n\tadd\tr0, r0, r7\n.BB0_2792:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2792\n.BB0_2793:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2795\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2795:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2809\n.BB0_2796:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_76[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2815\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tadd\t@CPI0_94[0], r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r4\n\tshl.s\t64, r4, stack-[13]\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2819\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_97[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2824\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2830\n.BB0_2809:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2812\n\tadd\tr0, r0, r6\n.BB0_2811:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2811\n.BB0_2812:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2814\n.BB0_2815:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2818\n\tadd\tr0, r0, r6\n.BB0_2817:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2817\n.BB0_2818:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2819:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2822\n\tadd\tr0, r0, r6\n.BB0_2821:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2821\n.BB0_2822:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2824:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[13], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2827\n\tadd\tr0, r0, r7\n.BB0_2826:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2826\n.BB0_2827:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2829\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2829:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2842\n.BB0_2830:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2847\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2852\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2857\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2863\n.BB0_2842:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2845\n\tadd\tr0, r0, r6\n.BB0_2844:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2844\n.BB0_2845:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2847:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2850\n\tadd\tr0, r0, r6\n.BB0_2849:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2849\n.BB0_2850:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2852:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2855\n\tadd\tr0, r0, r6\n.BB0_2854:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2854\n.BB0_2855:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2857:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2860\n\tadd\tr0, r0, r7\n.BB0_2859:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2859\n.BB0_2860:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2862\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2862:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2871\n.BB0_2863:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2876\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_58[0], r0, r4\n\tst.1\tr5, r4\n\tadd\t4, r5, r4\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2881\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2887\n.BB0_2871:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2874\n\tadd\tr0, r0, r6\n.BB0_2873:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2873\n.BB0_2874:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2876:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2879\n\tadd\tr0, r0, r6\n.BB0_2878:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2878\n.BB0_2879:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2881:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2884\n\tadd\tr0, r0, r7\n.BB0_2883:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2883\n.BB0_2884:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2886\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2886:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2896\n.BB0_2887:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2895\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_326\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[15]\n\tshl.s\t192, r2, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2901\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[14], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_2906\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_2912\n.BB0_2895:\n\trevert\n.BB0_2896:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2899\n\tadd\tr0, r0, r6\n.BB0_2898:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2898\n.BB0_2899:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2901:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2904\n\tadd\tr0, r0, r6\n.BB0_2903:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2903\n.BB0_2904:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n\tjump\t@.BB0_2920\n.BB0_2906:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[15], r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_2909\n\tadd\tr0, r0, r7\n.BB0_2908:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_2908\n.BB0_2909:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_2911\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_2911:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2915\n.BB0_2912:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_326\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_assertEq_107787, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2915:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_2918\n\tadd\tr0, r0, r6\n.BB0_2917:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_2917\n.BB0_2918:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_123\n.BB0_2920:\n.BB0_2814:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_123\n.func_end0:\n\nabi_encode_array_address_dyn:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tand\t@CPI1_0[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tret\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r2\n.BB2_2:\n\tadd\tr2, r1, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_encode_array_struct_FuzzSelector_dyn:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_4\n\tadd\t64, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB3_2\n.BB3_6:\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB3_4\n.BB3_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tand\t@CPI3_0[0], r8, r8\n\tst.1.inc\tr3, r8, r10\n\tld.1\tr9, r8\n\tst.1\tr10, r6\n\tadd\t64, r3, r10\n\tld.1\tr8, r9\n\tst.1\tr10, r9\n\tadd\t96, r3, r3\n\tsub!\tr9, r0, r10\n\tjump.eq\t@.BB3_6\n\tadd\tr0, r0, r10\n.BB3_5:\n\tadd\t32, r8, r8\n\tld.1\tr8, r11\n\tand\t@CPI3_1[0], r11, r11\n\tst.1.inc\tr3, r11, r3\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB3_5\n\tjump\t@.BB3_6\n.BB3_4:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\nabi_encode_array_string_dyn:\n.func_begin4:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_6\n\tadd\tr0, r0, r6\n\tjump\t@.BB4_2\n.BB4_5:\n\tadd\t31, r7, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tadd\tr7, r3, r7\n\tst.1\tr7, r0\n\tadd\tr8, r3, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.ge\t@.BB4_6\n.BB4_2:\n\tsub\tr3, r1, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr3, r7, r3\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB4_5\n\tadd\tr0, r0, r9\n.BB4_4:\n\tadd\tr9, r3, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB4_4\n\tjump\t@.BB4_5\n.BB4_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end4:\n\nfinalize_allocation.2:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_deployRewardDistributor:\n.func_begin6:\n\tnop\tstack+=[4]\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI6_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_3\n\tld.1\t64, r4\n\tadd\t@CPI6_4[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI6_5[0], r1, r1\n\tadd\t4, r4, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI6_2[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[3]\n\tshl.s\t192, r2, r1\n\tor\tstack-[3], r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tadd\t@CPI6_1[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_2[0], r3, stack[@returndatasize]\n\tand\t@CPI6_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_5\n\tadd\tstack-[4], r0, r5\n\tsub.s!\t@CPI6_7[0], r5, r1\n\tjump.ge\t@.BB6_11\n\tst.1\t64, r5\n\tsub.s!\t@CPI6_8[0], r5, r1\n\tjump.gt\t@.BB6_11\n\tadd\t35, r0, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsload\tr2, r2\n\tadd\t36, r5, r3\n\tadd\t@CPI6_9[0], r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI6_5[0], r2, r2\n\tadd\t164, r5, r3\n\tst.1\tr3, r2\n\tand\t@CPI6_5[0], r1, r1\n\tadd\t132, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI6_10[0], r0, r2\n\tst.1\tr5, r2\n\tadd\tstack-[2], r0, r2\n\tst.1\tr2, r0\n\tadd\t100, r5, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r5, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_2[0], r0, r2\n\tsub.s!\t@CPI6_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[3], r1, r1\n\tor\t@CPI6_11[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_14\n\tld\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB6_16\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI6_12[0], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[1], r0, r4\n\tst.1\tr1, r4\n\tand\t@CPI6_5[0], r3, r4\n\tadd\t36, r1, r3\n\tst.1\tr3, r4\n\tsub.s!\t@CPI6_13[0], r1, r3\n\tjump.gt\t@.BB6_11\n\tadd\tr4, r0, stack-[4]\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI6_2[0], r0, r4\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI6_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI6_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI6_2[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI6_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_2[0], r1, r2\n\tadd.ge\t@CPI6_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_3\n\tld.1\t64, r4\n\tadd\t@CPI6_15[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI6_2[0], r4, r3\n\tadd\tr4, r0, stack-[3]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_16[0], r1, r1\n\tadd\t@CPI6_1[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_2[0], r3, stack[@returndatasize]\n\tand\t@CPI6_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_26\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t@CPI6_17[0], r2, r1\n\tadd\tstack-[4], r0, r1\n\tjump.gt\t@.BB6_11\n\tst.1\t64, r2\n\tret\n.BB6_11:\n\tadd\t@CPI6_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_1:\n\trevert\n.BB6_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_5:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_34\n\tadd\tr0, r0, r6\n.BB6_7:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_7\n.BB6_34:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB6_8\n\tjump\t@.BB6_9\n.BB6_14:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI6_2[0], r2, stack[@returndatasize]\n\tand\t@CPI6_2[0], r2, r2\n\tjump\t@.BB6_17\n.BB6_16:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB6_17:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB6_33\n\tadd\tr0, r0, r6\n.BB6_19:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_19\n.BB6_33:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_21\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_21:\n\tadd\t@CPI6_2[0], r0, r1\n\tsub.s!\t@CPI6_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI6_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_26:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_32\n\tadd\tr0, r0, r6\n.BB6_28:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_28\n.BB6_32:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_9\n.BB6_8:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_9:\n\tadd\t@CPI6_2[0], r0, r1\n\tsub.s!\t@CPI6_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_assertEq:\n.func_begin7:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI7_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI7_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_3\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI7_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI7_5[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI7_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI7_2[0], r4, r3\n\tadd\tr4, r0, stack-[1]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t@CPI7_1[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI7_2[0], r3, stack[@returndatasize]\n\tand\t@CPI7_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_5\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t@CPI7_7[0], r2, r1\n\tjump.ge\t@.BB7_11\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\trevert\n.BB7_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_5:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB7_13\n\tadd\tr0, r0, r6\n.BB7_7:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB7_7\n.BB7_13:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB7_9\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB7_9:\n\tadd\t@CPI7_2[0], r0, r1\n\tsub.s!\t@CPI7_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_11:\n\tadd\t@CPI7_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_assertEq_107787:\n.func_begin8:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI8_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_3\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_4[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI8_2[0], r4, r3\n\tadd\tr4, r0, stack-[1]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t@CPI8_1[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_2[0], r3, stack[@returndatasize]\n\tand\t@CPI8_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_5\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t@CPI8_7[0], r2, r1\n\tjump.ge\t@.BB8_11\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\trevert\n.BB8_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_13\n\tadd\tr0, r0, r6\n.BB8_7:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_7\n.BB8_13:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB8_9\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB8_9:\n\tadd\t@CPI8_2[0], r0, r1\n\tsub.s!\t@CPI8_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_11:\n\tadd\t@CPI8_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_getCallParams_107628:\n.func_begin9:\n\tadd\t20, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_30\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB9_6\n\tst.1\tr1, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB9_24\n\tst.1\t0, r5\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_4:\n\tadd\tr6, r0, r5\n\tadd\tr5, r2, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB9_4\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tjump\t@.BB9_25\n.BB9_6:\n\tadd\t14, r0, r4\n\tsload\tr4, r3\n\tst.1\tr1, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r4\n\tadd\tr2, r0, r4\n\tjump.eq\t@.BB9_9\n\tadd\t@CPI9_2[0], r0, r5\n\tadd\tr0, r0, r6\n\tadd\tr2, r0, r4\n.BB9_8:\n\tsload\tr5, r7\n\tst.1.inc\tr4, r7, r4\n\tadd\t1, r5, r5\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB9_8\n.BB9_9:\n\tsub\tr4, r1, r3\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r5\n\tadd\tr5, r1, r3\n\tsub!\tr3, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI9_1[0], r3, r6\n\tjump.gt\t@.BB9_29\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB9_29\n\tst.1\t64, r3\n\tld.1\tr1, r6\n\tshl.s\t5, r6, r5\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB9_14\n\tdiv\tr5, r6, r6, r7\n\tsub.s!\t32, r6, r6\n\tjump.ne\t@.BB9_31\n\tsub.s!\t@CPI9_1[0], r5, r6\n\tjump.gt\t@.BB9_29\n.BB9_14:\n\tadd\t63, r5, r6\n\tand\tr6, r4, r4\n\tadd\tr4, r3, r4\n\tsub.s!\t@CPI9_1[0], r4, r6\n\tjump.gt\t@.BB9_29\n\tst.1\t64, r4\n\tand\t31, r5, r6\n\tst.1.inc\tr3, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB9_18\n\tadd\tstack[@calldatasize], r0, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tadd\tr0, r0, r8\n.BB9_17:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr7, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB9_17\n.BB9_18:\n\tsub!\tr6, r0, r5\n\tjump.eq\t@.BB9_20\n.BB9_20:\n\tld.1\tr1, r5\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB9_28\n\tadd\tr0, r0, r5\n.BB9_22:\n\tshl.s\t5, r5, r6\n\tadd\tr4, r6, r7\n\tadd\tr6, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tld.1\tr1, r6\n\tsub!\tr5, r6, r6\n\tjump.lt\t@.BB9_22\n.BB9_28:\n\tadd\tr3, r0, r1\n\tret\n.BB9_24:\n\tsub.s\t256, r0, r3\n\tand\tr4, r3, r3\n\tst.1\tr2, r3\n\tadd\t64, r0, r3\n.BB9_25:\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_29\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_29\n\tst.1\t64, r2\n\tret\n.BB9_29:\n\tadd\t@CPI9_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_30:\n\tadd\t@CPI9_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_31:\n\tadd\t@CPI9_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_callTarget_107633:\n.func_begin10:\n\tnop\tstack+=[1]\n\tadd\t20, r0, r6\n\tsload\tr6, r5\n\tand!\t1, r5, r7\n\tshr.s\t1, r5, r1\n\tand\t127, r1, r4\n\tadd.ne\tr1, r0, r4\n\tsub.s!\t31, r4, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr7, r1, r1\n\tjump.ne\t@.BB10_1\n\tadd\t15, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r1\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB10_13\n\tst.1\tr3, r4\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB10_5\n\tst.1\t0, r6\n\tadd\t@CPI10_0[0], r0, r5\n\tadd\tr0, r0, r7\n.BB10_7:\n\tadd\tr7, r0, r6\n\tadd\tr6, r1, r7\n\tsload\tr5, r8\n\tst.1\tr7, r8\n\tadd\t1, r5, r5\n\tadd\t32, r6, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB10_7\n\tadd\t95, r6, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r5\n\tjump\t@.BB10_9\n.BB10_13:\n\tadd\t14, r0, r5\n\tsload\tr5, r4\n\tst.1\tr3, r4\n\tst.1\t0, r5\n\tsub!\tr4, r0, r5\n\tadd\tr1, r0, r5\n\tjump.eq\t@.BB10_16\n\tadd\t@CPI10_2[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tr1, r0, r5\n.BB10_15:\n\tsload\tr6, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB10_15\n.BB10_16:\n\tsub\tr5, r3, r4\n\tadd\t31, r4, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r6\n\tadd\tr6, r3, r4\n\tsub!\tr4, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI10_1[0], r4, r7\n\tjump.gt\t@.BB10_11\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB10_11\n\tst.1\t64, r4\n\tld.1\tr3, r7\n\tshl.s\t5, r7, r6\n\tsub!\tr7, r0, r8\n\tjump.eq\t@.BB10_22\n\tdiv\tr6, r7, r7, r8\n\tsub.s!\t32, r7, r7\n\tjump.ne\t@.BB10_20\n\tsub.s!\t@CPI10_1[0], r6, r7\n\tjump.gt\t@.BB10_11\n.BB10_22:\n\tadd\t63, r6, r7\n\tand\tr7, r5, r5\n\tadd\tr5, r4, r5\n\tsub.s!\t@CPI10_1[0], r5, r7\n\tjump.gt\t@.BB10_11\n\tst.1\t64, r5\n\tand\t31, r6, r7\n\tst.1.inc\tr4, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB10_59\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tadd\tr0, r0, r9\n.BB10_25:\n\tshl.s\t5, r9, r10\n\tadd\tr5, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB10_25\n.BB10_59:\n\tsub!\tr7, r0, r6\n\tjump.eq\t@.BB10_27\n.BB10_27:\n\tld.1\tr3, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB10_30\n\tadd\tr0, r0, r6\n.BB10_29:\n\tshl.s\t5, r6, r7\n\tadd\tr7, r5, r8\n\tadd\tr7, r1, r7\n\tld.1\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tld.1\tr3, r7\n\tsub!\tr6, r7, r7\n\tjump.lt\t@.BB10_29\n.BB10_30:\n\tadd\tr5, r0, r1\n\tadd\tr4, r0, r3\n\tjump\t@.BB10_31\n.BB10_5:\n\tsub.s\t256, r0, r4\n\tand\tr5, r4, r4\n\tst.1\tr1, r4\n\tadd\t64, r0, r5\n.BB10_9:\n\tadd\tr5, r3, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI10_1[0], r4, r6\n\tjump.gt\t@.BB10_11\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB10_11\n\tst.1\t64, r4\n.BB10_31:\n\tshl.s\t224, r2, r5\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r5\n\tadd\t36, r2, r5\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB10_34\n\tadd\tr0, r0, r6\n.BB10_33:\n\tadd\tr6, r5, r7\n\tadd\tr1, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB10_33\n.BB10_34:\n\tadd\tr3, r5, r1\n\tst.1\tr1, r0\n\tadd\t4, r3, r1\n\tst.1\tr2, r1\n\tadd\t67, r3, r1\n\tsub.s\t32, r0, r6\n\tand\tr1, r6, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI10_1[0], r1, r5\n\tjump.gt\t@.BB10_11\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB10_11\n\tst.1\t64, r1\n\tld.1\tr2, r3\n\tadd\t17, r0, r1\n\tsload\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI10_3[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB10_37\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r4\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB10_40\n.BB10_41:\n\tsub.s!\t@CPI10_1[0], r4, r2\n\tjump.gt\t@.BB10_11\n\tadd\t31, r4, r2\n\tand\tr2, r6, r2\n\tadd\t63, r2, r2\n\tand\tr2, r6, r3\n\tld.1\t64, r2\n\tadd\tr2, r3, r3\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI10_1[0], r3, r6\n\tjump.gt\t@.BB10_11\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB10_11\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr2, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB10_58\n\tadd\tr0, r0, r7\n.BB10_46:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB10_46\n.BB10_58:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB10_48\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n\tjump\t@.BB10_48\n.BB10_37:\n\tadd\t@CPI10_4[0], r0, r5\n\tadd\tr6, r0, stack-[1]\n\tsub.s!\t@CPI10_4[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI10_4[0], r3, r6\n\tadd.ge\tr5, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r4, r3\n\tsub.s!\t@CPI10_4[0], r1, r4\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r6\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand\t1, r2, r1\n\tadd\tstack[@ptr_return_data], r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI10_4[0], r2, stack[@returndatasize]\n\tand\t@CPI10_4[0], r2, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB10_41\n.BB10_40:\n\tadd\t96, r0, r2\n\tadd\t128, r0, r3\n.BB10_48:\n\tadd\t16, r0, r4\n\tsload\tr4, r6\n\tsub.s!\t@CPI10_5[0], r6, r4\n\tjump.gt\t@.BB10_20\n\tld.1\tr2, r4\n\tsub.s!\t32, r4, r2\n\tadd\tr4, r0, r5\n\tadd.ge\t32, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB10_50\n\tshl.s\t5, r6, r6\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r2\n\tjump\t@.BB10_53\n.BB10_52:\n\tshr\tr9, r8, r8\n\tor\tr2, r8, r2\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.ge\t@.BB10_54\n.BB10_53:\n\tadd\tr7, r6, r8\n\tsub!\tr8, r4, r9\n\tjump.ge\t@.BB10_55\n\tadd\tr3, r8, r9\n\tshl.s\t3, r7, r8\n\tld.1\tr9, r9\n\tand\t@CPI10_8[0], r9, r9\n\tsub!\tr7, r0, r10\n\tjump.eq\t@.BB10_52\n\tdiv\tr8, r7, r10, r11\n\tsub.s!\t8, r10, r10\n\tjump.eq\t@.BB10_52\n.BB10_20:\n\tadd\t@CPI10_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_54:\n\tret\n.BB10_50:\n\tadd\tr0, r0, r2\n\tret\n.BB10_55:\n\tadd\t@CPI10_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_11:\n\tadd\t@CPI10_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_1:\n\tadd\t@CPI10_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_find:\n.func_begin11:\n\tnop\tstack+=[29]\n\tadd\t20, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tadd\t16, r0, r4\n\tadd\tr4, r0, stack-[12]\n\tsload\tr4, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t15, r0, r4\n\tadd\tr4, r0, stack-[13]\n\tsload\tr4, r7\n\tadd\t17, r0, r4\n\tadd\tr4, r0, stack-[17]\n\tsload\tr4, r4\n\tand\t@CPI11_0[0], r4, stack-[8]\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB11_1\n\tld.1\t64, r6\n\tadd\t32, r6, r9\n\tsub!\tr1, r0, r4\n\tadd\tr7, r0, stack-[19]\n\tjump.eq\t@.BB11_12\n\tst.1\tr6, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB11_5\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tadd\t@CPI11_1[0], r0, r3\n\tadd\tr0, r0, r2\n.BB11_7:\n\tadd\tr2, r9, r4\n\tsload\tr3, r5\n\tst.1\tr4, r5\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB11_7\n\tjump\t@.BB11_8\n.BB11_12:\n\tadd\t14, r0, r2\n\tsload\tr2, r1\n\tst.1\tr6, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tadd\tr9, r0, r2\n\tjump.eq\t@.BB11_15\n\tadd\t@CPI11_3[0], r0, r3\n\tadd\tr0, r0, r4\n\tadd\tr9, r0, r2\n.BB11_14:\n\tsload\tr3, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tadd\t1, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB11_14\n.BB11_15:\n\tsub\tr2, r6, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r3\n\tadd\tr6, r0, r10\n\tadd\tr3, r6, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI11_2[0], r1, r4\n\tjump.gt\t@.BB11_10\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tld.1\tr10, r4\n\tshl.s\t5, r4, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB11_21\n\tdiv\tr3, r4, r4, r5\n\tsub.s!\t32, r4, r4\n\tjump.ne\t@.BB11_19\n\tsub.s!\t@CPI11_2[0], r3, r4\n\tjump.gt\t@.BB11_10\n.BB11_21:\n\tadd\t63, r3, r4\n\tand\tr4, r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI11_2[0], r2, r4\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB11_504\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tadd\tr0, r0, r6\n.BB11_24:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB11_24\n.BB11_504:\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB11_26\n.BB11_26:\n\tld.1\tr10, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB11_29\n\tadd\tr0, r0, r3\n.BB11_28:\n\tshl.s\t5, r3, r4\n\tadd\tr4, r2, r5\n\tadd\tr4, r9, r4\n\tld.1\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tld.1\tr10, r4\n\tsub!\tr3, r4, r4\n\tjump.lt\t@.BB11_28\n.BB11_29:\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[3]\n\tjump\t@.BB11_30\n.BB11_5:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr9, r1\n\tadd\t32, r0, r2\n.BB11_8:\n\tadd\tr9, r0, stack-[4]\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr6, r0, stack-[3]\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI11_2[0], r1, r3\n\tjump.gt\t@.BB11_10\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n.BB11_30:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI11_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tadd\tstack-[19], r0, r2\n\tshl.s\t224, r2, r2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB11_36\n\tadd\tr0, r0, r4\n.BB11_35:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB11_35\n.BB11_36:\n\tadd\tr1, r3, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, stack-[19]\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r1, r5\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tadd\t@CPI11_4[0], r0, r4\n\tsub.s!\t@CPI11_4[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB11_52\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB11_47\n\tadd\tr0, r0, r4\n.BB11_46:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB11_46\n.BB11_47:\n\tadd\tr1, r3, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r1, r5\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tadd\t@CPI11_4[0], r0, r4\n\tsub.s!\t@CPI11_4[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB11_51\n.BB11_52:\n\tadd\t@CPI11_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_8[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI11_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r4\n\tadd\t@CPI11_10[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI11_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI11_4[0], r4, r3\n\tadd\tr4, r0, stack-[15]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_11[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_56\n\tadd\tstack-[15], r0, r13\n\tsub.s!\t@CPI11_2[0], r13, r2\n\tadd\tstack-[18], r0, r12\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r13\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r5\n\tand!\t1, r5, r6\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r4\n\tadd.ne\tr2, r0, r4\n\tsub.s!\t31, r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr5, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_1\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r0, r7\n\tadd\t14, r0, r7\n\tadd\tr7, r0, stack-[9]\n\tjump.eq\t@.BB11_72\n\tst.1\tr13, r4\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_65\n\tadd\tstack-[16], r0, r5\n\tst.1\t0, r5\n\tadd\t@CPI11_1[0], r0, r5\n\tadd\tr0, r0, r7\n.BB11_67:\n\tadd\tr7, r0, r6\n\tadd\tr6, r12, r7\n\tsload\tr5, r8\n\tst.1\tr7, r8\n\tadd\t1, r5, r5\n\tadd\t32, r6, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_67\n\tadd\t95, r6, r4\n\tand\tstack-[19], r4, r5\n\tjump\t@.BB11_69\n.BB11_72:\n\tsload\tr7, r4\n\tst.1\tr13, r4\n\tst.1\t0, r7\n\tsub!\tr4, r0, r5\n\tadd\tr12, r0, r5\n\tjump.eq\t@.BB11_75\n\tadd\t@CPI11_3[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tr12, r0, r5\n.BB11_74:\n\tsload\tr6, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_74\n.BB11_75:\n\tsub\tr5, r13, r4\n\tadd\t31, r4, r4\n\tand\tstack-[19], r4, r5\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tld.1\tr13, r5\n\tshl.s\t5, r5, r6\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_80\n\tdiv\tr6, r5, r5, r7\n\tsub.s!\t32, r5, r5\n\tjump.ne\t@.BB11_19\n\tsub.s!\t@CPI11_2[0], r6, r5\n\tjump.gt\t@.BB11_10\n.BB11_80:\n\tadd\t63, r6, r5\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r4, r5\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r5\n\tand\t31, r6, r7\n\tst.1.inc\tr4, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB11_502\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tadd\tr0, r0, r9\n.BB11_83:\n\tshl.s\t5, r9, r10\n\tadd\tr5, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB11_83\n.BB11_502:\n\tsub!\tr7, r0, r6\n\tjump.eq\t@.BB11_85\n.BB11_85:\n\tld.1\tr13, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_88\n\tadd\tr0, r0, r6\n.BB11_87:\n\tshl.s\t5, r6, r7\n\tadd\tr7, r5, r8\n\tadd\tr7, r12, r7\n\tld.1\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tld.1\tr13, r7\n\tsub!\tr6, r7, r7\n\tjump.lt\t@.BB11_87\n.BB11_88:\n\tadd\tr5, r0, r12\n\tadd\tr4, r0, r13\n\tjump\t@.BB11_89\n.BB11_65:\n\tsub.s\t256, r0, r4\n\tand\tr5, r4, r4\n\tst.1\tr12, r4\n\tadd\t64, r0, r5\n.BB11_69:\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n.BB11_89:\n\tshl.s\t224, r2, r5\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r5\n\tadd\t36, r2, r6\n\tld.1\tr13, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_92\n\tadd\tr0, r0, r7\n.BB11_91:\n\tadd\tr7, r6, r8\n\tadd\tr7, r12, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB11_91\n.BB11_92:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\t4, r5, r6\n\tst.1\tr2, r6\n\tadd\t67, r5, r5\n\tand\tstack-[19], r5, r6\n\tadd\tr6, r2, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r5\n\tld.1\tr2, r6\n\tadd\tstack-[17], r0, r2\n\tsload\tr2, r2\n\tcontext.gas_left\tr5\n\tand\t@CPI11_0[0], r2, r2\n\tsub.s!\t4, r2, r7\n\tjump.eq\t@.BB11_96\n\tadd\t@CPI11_4[0], r0, r1\n\tsub.s!\t@CPI11_4[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r3\n\tsub.s!\t@CPI11_4[0], r6, r4\n\tadd.ge\tr1, r0, r6\n\tshl.s\t96, r6, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI11_4[0], r5, r4\n\tadd.ge\tr1, r0, r5\n\tshl.s\t192, r5, r1\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI11_4[0], r2, stack[@returndatasize]\n\tand\t@CPI11_4[0], r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB11_96:\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB11_97\n\tadd\t31, r3, r2\n\tand\t@CPI11_12[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI11_13[0], r2, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r2\n\tsub!\tr2, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r2, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r2\n\tand\t31, r3, r5\n\tst.1.inc\tr4, r3, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB11_503\n\tadd\tr0, r0, r6\n.BB11_102:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB11_102\n.BB11_503:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB11_104\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr3, r1\n\tjump\t@.BB11_104\n.BB11_97:\n\tadd\t96, r0, r4\n\tadd\t128, r0, r2\n.BB11_104:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI11_14[0], r5, r1\n\tjump.gt\t@.BB11_19\n\tld.1\tr4, r1\n\tsub.s!\t32, r1, r3\n\tadd\tr1, r0, r3\n\tadd.ge\t32, r0, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB11_106\n\tshl.s\t5, r5, r5\n\tadd\tr0, r0, r6\n\tadd\tr0, r0, r4\n\tjump\t@.BB11_109\n.BB11_108:\n\tshr\tr8, r7, r7\n\tor\tr7, r4, r4\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.ge\t@.BB11_113\n.BB11_109:\n\tadd\tr6, r5, r7\n\tsub!\tr7, r1, r8\n\tjump.ge\t@.BB11_110\n\tadd\tr2, r7, r8\n\tshl.s\t3, r6, r7\n\tld.1\tr8, r8\n\tand\t@CPI11_15[0], r8, r8\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB11_108\n\tdiv\tr7, r6, r9, r10\n\tsub.s!\t8, r9, r9\n\tjump.eq\t@.BB11_108\n.BB11_19:\n\tadd\t@CPI11_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_106:\n\tadd\tr0, r0, r4\n.BB11_113:\n\tadd\tr4, r0, stack-[29]\n\tadd\t@CPI11_16[0], r0, r1\n\tld.1\t64, r4\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t4, r4, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI11_4[0], r4, r3\n\tadd\tr4, r0, stack-[18]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_17[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_114\n\tsub!\tr5, r0, r2\n\tadd\tstack-[18], r0, r8\n\tjump.eq\t@.BB11_511\n\tadd\tr0, r0, r2\n.BB11_120:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB11_120\n.BB11_511:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB11_122\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB11_122:\n\tadd\t31, r3, r1\n\tand\t@CPI11_12[0], r1, r1\n\tadd\tr1, r8, r9\n\tsub!\tr9, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI11_2[0], r9, r2\n\tjump.gt\t@.BB11_10\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r9\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB11_31\n\tld.1\tr8, r2\n\tsub.s!\t@CPI11_2[0], r2, r1\n\tjump.gt\t@.BB11_31\n\tadd\tr3, r8, r1\n\tadd\tr2, r8, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI11_18[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI11_18[0], r3, r3\n\tand\t@CPI11_18[0], r1, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI11_18[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB11_31\n\tld.1.inc\tr2, r3, r2\n\tsub.s!\t@CPI11_2[0], r3, r4\n\tjump.gt\t@.BB11_10\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tand\t@CPI11_19[0], r5, r5\n\tadd\tr5, r9, r5\n\tsub.s!\t@CPI11_2[0], r5, r6\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r5\n\tst.1\tr9, r3\n\tadd\tr4, r2, r3\n\tsub!\tr3, r1, r4\n\tjump.gt\t@.BB11_31\n\tsub!\tr2, r3, r4\n\tjump.ge\t@.BB11_134\n\tadd\tr9, r0, r4\n.BB11_133:\n\tadd\t32, r4, r4\n\tld.1.inc\tr2, r5, r2\n\tst.1\tr4, r5\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB11_133\n.BB11_134:\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI11_2[0], r2, r3\n\tjump.gt\t@.BB11_31\n\tadd\tr2, r8, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI11_18[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI11_18[0], r3, r3\n\tand\t@CPI11_18[0], r1, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI11_18[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB11_31\n\tld.1.inc\tr2, r4, r2\n\tsub.s!\t@CPI11_2[0], r4, r3\n\tjump.gt\t@.BB11_10\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r3\n\tand\t@CPI11_19[0], r3, r6\n\tld.1\t64, r3\n\tadd\tr3, r6, r6\n\tsub!\tr6, r3, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI11_2[0], r6, r8\n\tjump.gt\t@.BB11_10\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r6\n\tst.1\tr3, r4\n\tadd\tr5, r2, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB11_31\n\tsub!\tr2, r4, r1\n\tjump.ge\t@.BB11_125\n.BB11_142:\n\tadd\t32, r3, r3\n\tld.1.inc\tr2, r1, r2\n\tst.1\tr3, r1\n\tsub!\tr2, r4, r1\n\tjump.lt\t@.BB11_142\n.BB11_125:\n\tadd\tr9, r0, stack-[28]\n\tld.1\t64, r7\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_478\n\tadd\t0, r0, stack-[27]\n\tadd\tr0, r0, r2\n.BB11_156:\n\tadd\tr7, r0, stack-[18]\n\tadd\tr2, r0, stack-[14]\n\tshl.s\t5, r2, r1\n\tadd\tr9, r0, stack-[15]\n\tadd\tr1, r9, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tld.1\tr1, r1\n\tadd\t36, r7, r2\n\tst.1\tr2, r1\n\tadd\t@CPI11_20[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI11_4[0], r7, r1\n\tadd\t@CPI11_4[0], r0, r4\n\tadd\tr4, r0, r1\n\tadd.lt\tr7, r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_21[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB11_501\n\tadd\tr0, r0, r6\n.BB11_158:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_158\n.BB11_501:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB11_160\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB11_160:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[15], r0, r5\n\tjump.eq\t@.BB11_161\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI11_2[0], r1, r4\n\tjump.gt\t@.BB11_10\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB11_31\n\tld.1\tr9, r2\n\tadd\tr2, r0, stack-[26]\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB11_171\n\tld.1\tr5, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.le\t@.BB11_110\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd\t@CPI11_4[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI11_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI11_22[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tadd\tstack-[15], r0, r5\n\tjump.eq\t@.BB11_31\n.BB11_171:\n\tld.1\tr5, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.le\t@.BB11_110\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r3\n\tadd\tr3, r0, stack-[25]\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[18]\n\tadd\t@CPI11_20[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t36, r4, r2\n\tadd\tr3, r0, stack-[15]\n\tst.1\tr2, r3\n\tand\t@CPI11_0[0], r1, r2\n\tadd\t4, r4, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI11_4[0], r4, r2\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI11_21[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB11_500\n\tadd\tr0, r0, r6\n.BB11_174:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_174\n.BB11_500:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB11_176\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB11_176:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_177\n\tadd\t31, r4, r2\n\tand\t96, r2, r4\n\tadd\tr4, r9, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r2, r5\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB11_31\n\tld.1\tr9, r4\n\tadd\tr4, r0, stack-[24]\n\tadd\tstack-[16], r0, r4\n\tsload\tr4, r7\n\tand!\t1, r7, r8\n\tshr.s\t1, r7, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr7, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_1\n\tadd\tstack-[13], r0, r4\n\tsload\tr4, r5\n\tadd\t32, r2, r4\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB11_194\n\tst.1\tr2, r6\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB11_187\n\tadd\tstack-[16], r0, r7\n\tst.1\t0, r7\n\tadd\t@CPI11_1[0], r0, r7\n\tadd\tr0, r0, r9\n.BB11_189:\n\tadd\tr9, r0, r8\n\tadd\tr8, r4, r9\n\tsload\tr7, r10\n\tst.1\tr9, r10\n\tadd\t1, r7, r7\n\tadd\t32, r8, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB11_189\n\tadd\t95, r8, r6\n\tand\tstack-[19], r6, r7\n\tjump\t@.BB11_191\n.BB11_194:\n\tadd\tstack-[9], r0, r7\n\tsload\tr7, r6\n\tst.1\tr2, r6\n\tst.1\t0, r7\n\tsub!\tr6, r0, r7\n\tadd\tr4, r0, r7\n\tjump.eq\t@.BB11_197\n\tadd\t@CPI11_3[0], r0, r8\n\tadd\tr0, r0, r9\n\tadd\tr4, r0, r7\n.BB11_196:\n\tsload\tr8, r10\n\tst.1.inc\tr7, r10, r7\n\tadd\t1, r8, r8\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB11_196\n.BB11_197:\n\tsub\tr7, r2, r6\n\tadd\t31, r6, r6\n\tand\tstack-[19], r6, r7\n\tadd\tr7, r2, r6\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI11_2[0], r6, r8\n\tjump.gt\t@.BB11_10\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r6\n\tld.1\tr2, r7\n\tshl.s\t5, r7, r8\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB11_202\n\tdiv\tr8, r7, r7, r9\n\tsub.s!\t32, r7, r7\n\tjump.ne\t@.BB11_19\n\tsub.s!\t@CPI11_2[0], r8, r7\n\tjump.gt\t@.BB11_10\n.BB11_202:\n\tadd\t63, r8, r7\n\tand\tstack-[19], r7, r7\n\tadd\tr7, r6, r7\n\tsub.s!\t@CPI11_2[0], r7, r9\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r7\n\tst.1.inc\tr6, r8, r7\n\tshr.s!\t5, r8, r9\n\tjump.eq\t@.BB11_498\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tadd\tr0, r0, r11\n.BB11_205:\n\tshl.s\t5, r11, r12\n\tadd\tr7, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB11_205\n.BB11_498:\n\tand!\t31, r8, r8\n\tjump.eq\t@.BB11_207\n.BB11_207:\n\tld.1\tr2, r8\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB11_210\n\tadd\tr0, r0, r8\n.BB11_209:\n\tshl.s\t5, r8, r9\n\tadd\tr9, r7, r10\n\tadd\tr9, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tld.1\tr2, r9\n\tsub!\tr8, r9, r9\n\tjump.lt\t@.BB11_209\n.BB11_210:\n\tadd\tr7, r0, r4\n\tadd\tr6, r0, r2\n\tjump\t@.BB11_211\n.BB11_187:\n\tsub.s\t256, r0, r6\n\tand\tr7, r6, r6\n\tst.1\tr4, r6\n\tadd\t64, r0, r7\n.BB11_191:\n\tadd\tr7, r2, r6\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI11_2[0], r6, r8\n\tjump.gt\t@.BB11_10\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r6\n.BB11_211:\n\tshl.s\t224, r5, r7\n\tld.1\t64, r6\n\tadd\t32, r6, r5\n\tst.1\tr5, r7\n\tadd\t36, r6, r7\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r8\n\tjump.eq\t@.BB11_214\n\tadd\tr0, r0, r8\n.BB11_213:\n\tadd\tr8, r7, r9\n\tadd\tr8, r4, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r2, r9\n\tjump.lt\t@.BB11_213\n.BB11_214:\n\tadd\tr2, r7, r4\n\tst.1\tr4, r0\n\tadd\t4, r2, r4\n\tst.1\tr6, r4\n\tadd\t67, r2, r2\n\tand\tstack-[19], r2, r4\n\tadd\tr4, r6, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r2, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r2\n\tld.1\tr6, r6\n\tadd\tstack-[17], r0, r2\n\tsload\tr2, r2\n\tcontext.gas_left\tr4\n\tand\t@CPI11_0[0], r2, r2\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB11_218\n\tadd\t1, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB11_220\n.BB11_221:\n\tadd\t31, r3, r4\n\tand\t@CPI11_12[0], r4, r4\n\tadd\t63, r4, r4\n\tand\t@CPI11_13[0], r4, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tsub!\tr4, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r4, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tst.1.inc\tr5, r3, r4\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB11_499\n\tadd\tr0, r0, r7\n.BB11_225:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB11_225\n.BB11_499:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB11_227\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r1\n\tadd\tr4, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n\tjump\t@.BB11_227\n.BB11_218:\n\tsub.s!\t@CPI11_4[0], r5, r1\n\tadd\t@CPI11_4[0], r0, r7\n\tadd.ge\tr7, r0, r5\n\tshl.s\t64, r5, r1\n\tsub.s!\t@CPI11_4[0], r6, r3\n\tadd.ge\tr7, r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI11_4[0], r4, r3\n\tadd.ge\tr7, r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB11_221\n.BB11_220:\n\tadd\t96, r0, r5\n\tadd\t128, r0, r4\n.BB11_227:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r6\n\tsub.s!\t@CPI11_14[0], r6, r1\n\tjump.gt\t@.BB11_19\n\tld.1\tr5, r1\n\tsub.s!\t32, r1, r3\n\tadd\tr1, r0, r3\n\tadd.ge\t32, r0, r3\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB11_229\n\tshl.s\t5, r6, r6\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r5\n\tjump\t@.BB11_232\n.BB11_231:\n\tshr\tr9, r8, r8\n\tor\tr8, r5, r5\n\tadd\t1, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.ge\t@.BB11_235\n.BB11_232:\n\tadd\tr7, r6, r8\n\tsub!\tr8, r1, r9\n\tjump.ge\t@.BB11_110\n\tadd\tr4, r8, r9\n\tshl.s\t3, r7, r8\n\tld.1\tr9, r9\n\tand\t@CPI11_15[0], r9, r9\n\tsub!\tr7, r0, r10\n\tjump.eq\t@.BB11_231\n\tdiv\tr8, r7, r10, r11\n\tsub.s!\t8, r10, r10\n\tjump.eq\t@.BB11_231\n\tjump\t@.BB11_19\n.BB11_235:\n\tadd\tr2, r0, stack-[23]\n\tcontext.sp\tr1\n\tsub.s\t20, r1, r1\n\tshl.s\t5, r1, r1\n\tadd\tr5, r0, stack-[22]\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB11_237\n\tadd\tr0, r0, r2\n\tjump\t@.BB11_238\n.BB11_229:\n\tadd\tr2, r0, stack-[23]\n\tcontext.sp\tr1\n\tsub.s\t21, r1, r1\n\tshl.s\t5, r1, r1\n\tadd\t0, r0, stack-[22]\n.BB11_237:\n\tsub.s\t1, r0, r2\n.BB11_238:\n\tshr.s\t5, r1, r1\n\tadd\tr2, r0, stack-[18]\n\tadd\tr2, r0, stack[r1]\n\tadd\t@CPI11_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_8[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_23[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t4, r4, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI11_4[0], r4, r2\n\tadd\tr4, r0, stack-[15]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI11_24[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_241\n\tadd\tstack-[15], r0, r13\n\tsub.s!\t@CPI11_2[0], r13, r2\n\tadd\tstack-[18], r0, r12\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r13\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r5\n\tand!\t1, r5, r6\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r4\n\tadd.ne\tr2, r0, r4\n\tsub.s!\t31, r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr5, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_1\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB11_256\n\tst.1\tr13, r4\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_249\n\tadd\tstack-[16], r0, r5\n\tst.1\t0, r5\n\tadd\t@CPI11_1[0], r0, r5\n\tadd\tr0, r0, r7\n.BB11_251:\n\tadd\tr7, r0, r6\n\tadd\tr6, r12, r7\n\tsload\tr5, r8\n\tst.1\tr7, r8\n\tadd\t1, r5, r5\n\tadd\t32, r6, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_251\n\tadd\t95, r6, r4\n\tand\tstack-[19], r4, r5\n\tjump\t@.BB11_253\n.BB11_256:\n\tadd\tstack-[9], r0, r5\n\tsload\tr5, r4\n\tst.1\tr13, r4\n\tst.1\t0, r5\n\tsub!\tr4, r0, r5\n\tadd\tr12, r0, r5\n\tjump.eq\t@.BB11_259\n\tadd\t@CPI11_3[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tr12, r0, r5\n.BB11_258:\n\tsload\tr6, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_258\n.BB11_259:\n\tsub\tr5, r13, r4\n\tadd\t31, r4, r4\n\tand\tstack-[19], r4, r5\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tld.1\tr13, r5\n\tshl.s\t5, r5, r6\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_264\n\tdiv\tr6, r5, r5, r7\n\tsub.s!\t32, r5, r5\n\tjump.ne\t@.BB11_19\n\tsub.s!\t@CPI11_2[0], r6, r5\n\tjump.gt\t@.BB11_10\n.BB11_264:\n\tadd\t63, r6, r5\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r4, r5\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r5\n\tst.1.inc\tr4, r6, r5\n\tshr.s!\t5, r6, r7\n\tjump.eq\t@.BB11_496\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tadd\tr0, r0, r9\n.BB11_267:\n\tshl.s\t5, r9, r10\n\tadd\tr5, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB11_267\n.BB11_496:\n\tand!\t31, r6, r6\n\tjump.eq\t@.BB11_269\n.BB11_269:\n\tld.1\tr13, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_272\n\tadd\tr0, r0, r6\n.BB11_271:\n\tshl.s\t5, r6, r7\n\tadd\tr7, r5, r8\n\tadd\tr7, r12, r7\n\tld.1\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tld.1\tr13, r7\n\tsub!\tr6, r7, r7\n\tjump.lt\t@.BB11_271\n.BB11_272:\n\tadd\tr5, r0, r12\n\tadd\tr4, r0, r13\n\tjump\t@.BB11_273\n.BB11_249:\n\tsub.s\t256, r0, r4\n\tand\tr5, r4, r4\n\tst.1\tr12, r4\n\tadd\t64, r0, r5\n.BB11_253:\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n.BB11_273:\n\tshl.s\t224, r2, r5\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r5\n\tadd\t36, r2, r6\n\tld.1\tr13, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_276\n\tadd\tr0, r0, r7\n.BB11_275:\n\tadd\tr7, r6, r8\n\tadd\tr7, r12, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB11_275\n.BB11_276:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\t4, r5, r6\n\tst.1\tr2, r6\n\tadd\t67, r5, r5\n\tand\tstack-[19], r5, r6\n\tadd\tr6, r2, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r5\n\tld.1\tr2, r6\n\tadd\tstack-[17], r0, r2\n\tsload\tr2, r2\n\tcontext.gas_left\tr5\n\tand\t@CPI11_0[0], r2, r2\n\tsub.s!\t4, r2, r7\n\tjump.eq\t@.BB11_280\n\tsub.s!\t@CPI11_4[0], r4, r1\n\tadd\t@CPI11_4[0], r0, r7\n\tadd.ge\tr7, r0, r4\n\tshl.s\t64, r4, r1\n\tsub.s!\t@CPI11_4[0], r6, r3\n\tadd.ge\tr7, r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI11_4[0], r5, r3\n\tadd.ge\tr7, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI11_4[0], r2, stack[@returndatasize]\n\tand\t@CPI11_4[0], r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB11_280:\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB11_281\n\tadd\t31, r3, r2\n\tand\t@CPI11_12[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI11_13[0], r2, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r2\n\tsub!\tr2, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r2, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r2\n\tst.1.inc\tr4, r3, r2\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_497\n\tadd\tr0, r0, r6\n.BB11_286:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_286\n.BB11_497:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB11_288\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB11_288\n.BB11_281:\n\tadd\t96, r0, r4\n\tadd\t128, r0, r2\n.BB11_288:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI11_14[0], r5, r1\n\tjump.gt\t@.BB11_19\n\tld.1\tr4, r1\n\tsub.s!\t32, r1, r3\n\tadd\tr1, r0, r3\n\tadd.ge\t32, r0, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB11_290\n\tshl.s\t5, r5, r4\n\tadd\tr0, r0, r5\n\tadd\tr0, r0, r10\n\tjump\t@.BB11_293\n.BB11_292:\n\tshr\tr7, r6, r6\n\tor\tr6, r10, r10\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.ge\t@.BB11_296\n.BB11_293:\n\tadd\tr5, r4, r6\n\tsub!\tr6, r1, r7\n\tjump.ge\t@.BB11_110\n\tadd\tr2, r6, r7\n\tshl.s\t3, r5, r6\n\tld.1\tr7, r7\n\tand\t@CPI11_15[0], r7, r7\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB11_292\n\tdiv\tr6, r5, r8, r9\n\tsub.s!\t8, r8, r8\n\tjump.eq\t@.BB11_292\n\tjump\t@.BB11_19\n.BB11_290:\n\tadd\tr0, r0, r10\n.BB11_296:\n\tadd\tr10, r0, stack-[15]\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI11_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_8[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tand\t@CPI11_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r5\n\tadd\t@CPI11_23[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t68, r5, r1\n\tadd\tstack-[25], r0, r2\n\tadd\tstack-[24], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r5, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\tr1, r2\n\tadd\t4, r5, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI11_4[0], r5, r2\n\tadd\tr5, r0, stack-[18]\n\tadd\tr3, r0, r2\n\tadd.lt\tr5, r0, r2\n\tshl.s\t64, r2, stack-[10]\n\tshl.s\t192, r1, r1\n\tor\tstack-[10], r1, r1\n\tor\t@CPI11_24[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_299\n\tadd\tstack-[18], r0, r7\n\tsub.s!\t@CPI11_2[0], r7, r1\n\tadd\tstack-[15], r0, r2\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r7\n\tadd!\tstack-[23], r0, r1\n\tjump.eq\t@.BB11_145\n\tsub!\tstack-[22], r2, r1\n\tjump.eq\t@.BB11_145\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB11_307\n\tadd\tstack-[28], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[27], r0, r2\n\tsub!\tr3, r2, r3\n\tjump.le\t@.BB11_110\n\tshl.s\t5, r2, r2\n\tadd\tr1, r2, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI11_20[0], r0, r2\n\tst.1\tr7, r2\n\tand\t@CPI11_0[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[11]\n\tadd\tstack-[14], r0, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[10], r1, r1\n\tor\t@CPI11_21[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB11_495\n\tadd\tr0, r0, r6\n.BB11_311:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_311\n.BB11_495:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB11_313\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB11_313:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_315\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r1\n\tsub.s!\t@CPI11_2[0], r1, r2\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB11_31\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r12\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr0, r0, r2\n\tjump\t@.BB11_322\n.BB11_383:\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t255, r2, r1\n\tadd\t1, r2, r2\n\tjump.ge\t@.BB11_384\n.BB11_322:\n\tadd\tr12, r0, stack-[18]\n\tadd\tr2, r0, stack-[15]\n\tadd\t@CPI11_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_8[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tand\t@CPI11_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_31\n\tadd\t@CPI11_18[0], r0, r1\n\tshr.s\tstack-[15], r1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tadd\t36, r4, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_23[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI11_4[0], r4, r2\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI11_24[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_325\n\tadd\tstack-[14], r0, r13\n\tsub.s!\t@CPI11_2[0], r13, r2\n\tadd\tstack-[18], r0, r12\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r13\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r5\n\tand!\t1, r5, r6\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r4\n\tadd.ne\tr2, r0, r4\n\tsub.s!\t31, r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr5, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_1\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB11_340\n\tst.1\tr13, r4\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_333\n\tadd\tstack-[16], r0, r5\n\tst.1\t0, r5\n\tadd\t@CPI11_1[0], r0, r5\n\tadd\tr0, r0, r7\n.BB11_335:\n\tadd\tr7, r0, r6\n\tadd\tr6, r12, r7\n\tsload\tr5, r8\n\tst.1\tr7, r8\n\tadd\t1, r5, r5\n\tadd\t32, r6, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_335\n\tadd\t95, r6, r4\n\tand\tstack-[19], r4, r5\n\tjump\t@.BB11_337\n.BB11_340:\n\tadd\tstack-[9], r0, r5\n\tsload\tr5, r4\n\tst.1\tr13, r4\n\tst.1\t0, r5\n\tsub!\tr4, r0, r5\n\tadd\tr12, r0, r5\n\tjump.eq\t@.BB11_343\n\tadd\t@CPI11_3[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tr12, r0, r5\n.BB11_342:\n\tsload\tr6, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_342\n.BB11_343:\n\tsub\tr5, r13, r4\n\tadd\t31, r4, r4\n\tand\tstack-[19], r4, r5\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tld.1\tr13, r5\n\tshl.s\t5, r5, r6\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_348\n\tdiv\tr6, r5, r5, r7\n\tsub.s!\t32, r5, r5\n\tjump.ne\t@.BB11_19\n\tsub.s!\t@CPI11_2[0], r6, r5\n\tjump.gt\t@.BB11_10\n.BB11_348:\n\tadd\t63, r6, r5\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r4, r5\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r5\n\tst.1.inc\tr4, r6, r5\n\tshr.s!\t5, r6, r7\n\tjump.eq\t@.BB11_492\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tadd\tr0, r0, r9\n.BB11_351:\n\tshl.s\t5, r9, r10\n\tadd\tr5, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB11_351\n.BB11_492:\n\tand!\t31, r6, r6\n\tjump.eq\t@.BB11_353\n.BB11_353:\n\tld.1\tr13, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_356\n\tadd\tr0, r0, r6\n.BB11_355:\n\tshl.s\t5, r6, r7\n\tadd\tr7, r5, r8\n\tadd\tr7, r12, r7\n\tld.1\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tld.1\tr13, r7\n\tsub!\tr6, r7, r7\n\tjump.lt\t@.BB11_355\n.BB11_356:\n\tadd\tr5, r0, r12\n\tadd\tr4, r0, r13\n\tjump\t@.BB11_357\n.BB11_333:\n\tsub.s\t256, r0, r4\n\tand\tr5, r4, r4\n\tst.1\tr12, r4\n\tadd\t64, r0, r5\n.BB11_337:\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n.BB11_357:\n\tshl.s\t224, r2, r5\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r5\n\tadd\t36, r2, r6\n\tld.1\tr13, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_360\n\tadd\tr0, r0, r7\n.BB11_359:\n\tadd\tr7, r6, r8\n\tadd\tr7, r12, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB11_359\n.BB11_360:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\t4, r5, r6\n\tst.1\tr2, r6\n\tadd\t67, r5, r5\n\tand\tstack-[19], r5, r6\n\tadd\tr6, r2, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r5\n\tld.1\tr2, r6\n\tadd\tstack-[17], r0, r2\n\tsload\tr2, r12\n\tcontext.gas_left\tr5\n\tand\t@CPI11_0[0], r12, r2\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB11_364\n\tadd\t1, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB11_366\n.BB11_367:\n\tadd\t31, r3, r4\n\tand\t@CPI11_12[0], r4, r4\n\tadd\t63, r4, r4\n\tand\t@CPI11_13[0], r4, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tsub!\tr4, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r4, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tst.1.inc\tr5, r3, r4\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB11_493\n\tadd\tr0, r0, r7\n.BB11_371:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB11_371\n.BB11_493:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB11_373\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r1\n\tadd\tr4, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n\tjump\t@.BB11_373\n.BB11_364:\n\tsub.s!\t@CPI11_4[0], r4, r1\n\tadd\t@CPI11_4[0], r0, r7\n\tadd.ge\tr7, r0, r4\n\tshl.s\t64, r4, r1\n\tsub.s!\t@CPI11_4[0], r6, r3\n\tadd.ge\tr7, r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI11_4[0], r5, r3\n\tadd.ge\tr7, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tadd\tstack-[17], r0, r4\n\tsload\tr4, r12\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB11_367\n.BB11_366:\n\tadd\t96, r0, r5\n\tadd\t128, r0, r4\n.BB11_373:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r6\n\tsub.s!\t@CPI11_14[0], r6, r1\n\tjump.gt\t@.BB11_19\n\tld.1\tr5, r1\n\tsub.s!\t32, r1, r3\n\tadd\tr1, r0, r3\n\tadd.ge\t32, r0, r3\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB11_383\n\tshl.s\t5, r6, r6\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r5\n\tjump\t@.BB11_377\n.BB11_376:\n\tshr\tr9, r8, r8\n\tor\tr8, r5, r5\n\tadd\t1, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.ge\t@.BB11_380\n.BB11_377:\n\tadd\tr7, r6, r8\n\tsub!\tr8, r1, r9\n\tjump.ge\t@.BB11_110\n\tadd\tr4, r8, r9\n\tshl.s\t3, r7, r8\n\tld.1\tr9, r9\n\tand\t@CPI11_15[0], r9, r9\n\tsub!\tr7, r0, r10\n\tjump.eq\t@.BB11_376\n\tdiv\tr8, r7, r10, r11\n\tsub.s!\t8, r10, r10\n\tjump.eq\t@.BB11_376\n\tjump\t@.BB11_19\n.BB11_380:\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB11_383\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB11_383\n\tadd\tr0, r0, stack-[6]\n\tjump\t@.BB11_385\n.BB11_384:\n\tadd\t1, r0, stack-[6]\n\tadd\tr0, r0, stack-[15]\n.BB11_385:\n\tadd\tr0, r0, r2\n\tjump\t@.BB11_386\n.BB11_447:\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t255, r2, r1\n\tadd\t1, r2, r2\n\tjump.ge\t@.BB11_448\n.BB11_386:\n\tadd\tr12, r0, stack-[18]\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI11_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_8[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tand\t@CPI11_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[14], r0, r1\n\tjump.eq\t@.BB11_31\n\tshl\t1, r1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tadd\t36, r4, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_23[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI11_4[0], r4, r2\n\tadd\tr4, r0, stack-[10]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI11_24[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_389\n\tadd\tstack-[10], r0, r13\n\tsub.s!\t@CPI11_2[0], r13, r2\n\tadd\tstack-[18], r0, r12\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r13\n\tadd\tstack-[16], r0, r2\n\tsload\tr2, r5\n\tand!\t1, r5, r6\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r4\n\tadd.ne\tr2, r0, r4\n\tsub.s!\t31, r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr5, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_1\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r2\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB11_404\n\tst.1\tr13, r4\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_397\n\tadd\tstack-[16], r0, r5\n\tst.1\t0, r5\n\tadd\t@CPI11_1[0], r0, r5\n\tadd\tr0, r0, r7\n.BB11_399:\n\tadd\tr7, r0, r6\n\tadd\tr6, r12, r7\n\tsload\tr5, r8\n\tst.1\tr7, r8\n\tadd\t1, r5, r5\n\tadd\t32, r6, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_399\n\tadd\t95, r6, r4\n\tand\tstack-[19], r4, r5\n\tjump\t@.BB11_401\n.BB11_404:\n\tadd\tstack-[9], r0, r5\n\tsload\tr5, r4\n\tst.1\tr13, r4\n\tst.1\t0, r5\n\tsub!\tr4, r0, r5\n\tadd\tr12, r0, r5\n\tjump.eq\t@.BB11_407\n\tadd\t@CPI11_3[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tr12, r0, r5\n.BB11_406:\n\tsload\tr6, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB11_406\n.BB11_407:\n\tsub\tr5, r13, r4\n\tadd\t31, r4, r4\n\tand\tstack-[19], r4, r5\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tld.1\tr13, r5\n\tshl.s\t5, r5, r6\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_412\n\tdiv\tr6, r5, r5, r7\n\tsub.s!\t32, r5, r5\n\tjump.ne\t@.BB11_19\n\tsub.s!\t@CPI11_2[0], r6, r5\n\tjump.gt\t@.BB11_10\n.BB11_412:\n\tadd\t63, r6, r5\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r4, r5\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r5\n\tst.1.inc\tr4, r6, r5\n\tshr.s!\t5, r6, r7\n\tjump.eq\t@.BB11_489\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tadd\tr0, r0, r9\n.BB11_415:\n\tshl.s\t5, r9, r10\n\tadd\tr5, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB11_415\n.BB11_489:\n\tand!\t31, r6, r6\n\tjump.eq\t@.BB11_417\n.BB11_417:\n\tld.1\tr13, r6\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB11_420\n\tadd\tr0, r0, r6\n.BB11_419:\n\tshl.s\t5, r6, r7\n\tadd\tr7, r5, r8\n\tadd\tr7, r12, r7\n\tld.1\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tld.1\tr13, r7\n\tsub!\tr6, r7, r7\n\tjump.lt\t@.BB11_419\n.BB11_420:\n\tadd\tr5, r0, r12\n\tadd\tr4, r0, r13\n\tjump\t@.BB11_421\n.BB11_397:\n\tsub.s\t256, r0, r4\n\tand\tr5, r4, r4\n\tst.1\tr12, r4\n\tadd\t64, r0, r5\n.BB11_401:\n\tadd\tr5, r13, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI11_2[0], r4, r6\n\tjump.gt\t@.BB11_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n.BB11_421:\n\tshl.s\t224, r2, r5\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r5\n\tadd\t36, r2, r6\n\tld.1\tr13, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB11_424\n\tadd\tr0, r0, r7\n.BB11_423:\n\tadd\tr7, r6, r8\n\tadd\tr7, r12, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB11_423\n.BB11_424:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\t4, r5, r6\n\tst.1\tr2, r6\n\tadd\t67, r5, r5\n\tand\tstack-[19], r5, r6\n\tadd\tr6, r2, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r5, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r5\n\tld.1\tr2, r6\n\tadd\tstack-[17], r0, r2\n\tsload\tr2, r12\n\tcontext.gas_left\tr5\n\tand\t@CPI11_0[0], r12, r2\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB11_428\n\tadd\t1, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB11_430\n.BB11_431:\n\tadd\t31, r3, r4\n\tand\t@CPI11_12[0], r4, r4\n\tadd\t63, r4, r4\n\tand\t@CPI11_13[0], r4, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tsub!\tr4, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI11_2[0], r4, r7\n\tjump.gt\t@.BB11_10\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r4\n\tst.1.inc\tr5, r3, r4\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB11_490\n\tadd\tr0, r0, r7\n.BB11_435:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB11_435\n.BB11_490:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB11_437\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r1\n\tadd\tr4, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n\tjump\t@.BB11_437\n.BB11_428:\n\tsub.s!\t@CPI11_4[0], r4, r1\n\tadd\t@CPI11_4[0], r0, r7\n\tadd.ge\tr7, r0, r4\n\tshl.s\t64, r4, r1\n\tsub.s!\t@CPI11_4[0], r6, r3\n\tadd.ge\tr7, r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI11_4[0], r5, r3\n\tadd.ge\tr7, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tadd\tstack-[17], r0, r4\n\tsload\tr4, r12\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB11_431\n.BB11_430:\n\tadd\t96, r0, r5\n\tadd\t128, r0, r4\n.BB11_437:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r6\n\tsub.s!\t@CPI11_14[0], r6, r1\n\tjump.gt\t@.BB11_19\n\tld.1\tr5, r1\n\tsub.s!\t32, r1, r3\n\tadd\tr1, r0, r3\n\tadd.ge\t32, r0, r3\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB11_447\n\tshl.s\t5, r6, r6\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r5\n\tjump\t@.BB11_441\n.BB11_440:\n\tshr\tr9, r8, r8\n\tor\tr8, r5, r5\n\tadd\t1, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.ge\t@.BB11_444\n.BB11_441:\n\tadd\tr7, r6, r8\n\tsub!\tr8, r1, r9\n\tjump.ge\t@.BB11_110\n\tadd\tr4, r8, r9\n\tshl.s\t3, r7, r8\n\tld.1\tr9, r9\n\tand\t@CPI11_15[0], r9, r9\n\tsub!\tr7, r0, r10\n\tjump.eq\t@.BB11_440\n\tdiv\tr8, r7, r10, r11\n\tsub.s!\t8, r10, r10\n\tjump.eq\t@.BB11_440\n\tjump\t@.BB11_19\n.BB11_444:\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB11_447\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB11_447\n\tadd\tr12, r0, stack-[18]\n\tadd\tr0, r0, stack-[10]\n\tjump\t@.BB11_449\n.BB11_448:\n\tadd\tr12, r0, stack-[18]\n\tadd\t1, r0, stack-[10]\n\tadd\tr0, r0, stack-[14]\n.BB11_449:\n\tadd\t@CPI11_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_8[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tand\t@CPI11_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_23[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI11_4[0], r4, r2\n\tadd\tr4, r0, stack-[18]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI11_24[0], r1, r1\n\tadd\t@CPI11_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI11_4[0], r3, stack[@returndatasize]\n\tand\t@CPI11_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_452\n\tadd\tstack-[18], r0, r7\n\tsub.s!\t@CPI11_2[0], r7, r1\n\tjump.gt\t@.BB11_10\n\tst.1\t64, r7\n\tadd\tstack-[10], r0, r2\n\tor!\tstack-[6], r2, r1\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[14], r0, r5\n\tjump.eq\t@.BB11_314\n\tjump\t@.BB11_145\n.BB11_307:\n\tadd\tr0, r0, r5\n\tadd\tr0, r0, r4\n.BB11_314:\n\tadd\tr4, r5, r1\n\tsub\t256, r1, r1\n\tsub.s\t1, r0, r2\n\tshl\tr2, r1, r3\n\txor\tr3, r2, r3\n\tsub.s!\t255, r1, r1\n\tadd.le\tr3, r0, r2\n\tshl\tr2, r5, r1\n\tsub.s!\t255, r5, r2\n\tadd.gt\tr0, r0, r1\n\tand\tstack-[26], r1, r1\n\tshr\tr1, r5, r1\n\tadd.gt\tr0, r0, r1\n\tsub!\tstack-[29], r1, r1\n\tjump.eq\t@.BB11_458\n.BB11_145:\n\tadd\tstack-[27], r0, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB11_19\n\tadd\t1, r1, stack-[27]\n\tadd\t1, r1, r2\n\tadd\tstack-[28], r0, r9\n\tld.1\tr9, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB11_156\n\tjump\t@.BB11_146\n.BB11_458:\n\tadd\tr5, r0, stack-[14]\n\tadd\tr4, r0, stack-[15]\n\tadd\t32, r7, r1\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB11_461\n\tadd\tr0, r0, r3\n.BB11_460:\n\tadd\tr3, r1, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB11_460\n.BB11_461:\n\tadd\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r3\n\tst.1\tr7, r3\n\tadd\t95, r2, r2\n\tand\tstack-[19], r2, r3\n\tadd\tr3, r7, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI11_2[0], r2, r4\n\tjump.gt\t@.BB11_10\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r2\n\tadd\t@CPI11_4[0], r0, r2\n\tsub.s!\t@CPI11_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr7, r3\n\tsub.s!\t@CPI11_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI11_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tadd\tstack-[28], r0, r3\n\tld.1\tr3, r2\n\tadd\tstack-[27], r0, r4\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB11_110\n\tadd\tr4, r0, stack-[17]\n\tshl.s\t5, r4, r2\n\tadd\tr3, r0, stack-[18]\n\tadd\tr3, r2, r2\n\tadd\t32, r2, r2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tld.1\tr2, r2\n\tld.1\t64, r3\n\tadd\t96, r3, r4\n\tst.1\tr4, r2\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t32, r3, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\tr3, r1\n\tadd\t@CPI11_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI11_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_25[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI11_26[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_31\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\tstack-[17], r1, r1\n\tjump.le\t@.BB11_110\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI11_28[0], r1, r1\n\tjump.gt\t@.BB11_10\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[18], r0, r3\n\tadd\t128, r3, r2\n\tst.1\t64, r2\n\tadd\t96, r3, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\tstack-[13], r0, r4\n\tst.1\tr2, r4\n\tadd\t64, r3, r4\n\tadd\tstack-[14], r0, r2\n\tadd\tr4, r0, stack-[16]\n\tst.1\tr4, r2\n\tst.1.inc\tr3, r1, r2\n\tadd\tstack-[15], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB11_473\n\tadd\tr0, r0, r4\n.BB11_472:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB11_472\n.BB11_473:\n\tadd\tr1, r3, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r1, r5\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tadd\t@CPI11_4[0], r0, r4\n\tsub.s!\t@CPI11_4[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tadd\t2, r1, r3\n\tsstore\tr3, r2\n\tadd\t3, r1, r1\n\tsub.s\t256, r0, r2\n\tsload\tr1, r3\n\tand\tr3, r2, r2\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tor.ne\t1, r2, r2\n\tsstore\tr1, r2\n.BB11_146:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB11_151\n\tadd\tr0, r0, r4\n.BB11_150:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB11_150\n.BB11_151:\n\tadd\tr1, r3, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r1, r5\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tadd\t@CPI11_4[0], r0, r4\n\tsub.s!\t@CPI11_4[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB11_479\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB11_485\n\tadd\tr0, r0, r4\n.BB11_484:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB11_484\n.BB11_485:\n\tadd\tr1, r3, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t95, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI11_2[0], r1, r5\n\tjump.gt\t@.BB11_10\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB11_10\n\tst.1\t64, r1\n\tadd\t@CPI11_4[0], r0, r4\n\tsub.s!\t@CPI11_4[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_31\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n.BB11_51:\n\tsub.s!\t@CPI11_4[0], r1, r2\n\tadd.ge\t@CPI11_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_31\n\tret\n.BB11_110:\n\tadd\t@CPI11_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_10:\n\tadd\t@CPI11_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_31:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_53:\n\trevert\n.BB11_1:\n\tadd\t@CPI11_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_325:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_494\n\tadd\tr0, r0, r6\n.BB11_327:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_327\n.BB11_494:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_389:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_491\n\tadd\tr0, r0, r6\n.BB11_391:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_391\n.BB11_491:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n.BB11_59:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB11_60:\n\tadd\t@CPI11_4[0], r0, r1\n\tsub.s!\t@CPI11_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_161:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_510\n\tadd\tr0, r0, r6\n.BB11_163:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_163\n.BB11_510:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_177:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_509\n\tadd\tr0, r0, r6\n.BB11_179:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_179\n.BB11_509:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_241:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_508\n\tadd\tr0, r0, r6\n.BB11_243:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_243\n.BB11_508:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_299:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_507\n\tadd\tr0, r0, r6\n.BB11_301:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_301\n.BB11_507:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_315:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_506\n\tadd\tr0, r0, r6\n.BB11_317:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_317\n.BB11_506:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_452:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_505\n\tadd\tr0, r0, r6\n.BB11_454:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_454\n.BB11_505:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_56:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB11_513\n\tadd\tr0, r0, r6\n.BB11_58:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_58\n.BB11_513:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB11_59\n\tjump\t@.BB11_60\n.BB11_114:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB11_512\n\tadd\tr0, r0, r6\n.BB11_116:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB11_116\n.BB11_512:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB11_60\n\tjump\t@.BB11_59\n.BB11_478:\n\tadd\t100, r7, r1\n\tadd\t@CPI11_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r7, r1\n\tadd\t@CPI11_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r7, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_31[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI11_4[0], r0, r1\n\tsub.s!\t@CPI11_4[0], r7, r2\n\tadd.ge\tr1, r0, r7\n\tshl.s\t64, r7, r1\n\tor\t@CPI11_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_479:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t47, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_4[0], r0, r2\n\tsub.s!\t@CPI11_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\n__cxa_throw:\n.func_begin12:\n\trevert\n.func_end12:\n\n__farcall:\n.func_begin13:\n.tmp0:\n\tfar_call\tr1, r2, @.BB13_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end13:\n\n__staticcall:\n.func_begin14:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB14_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI6_2:\nCPI7_2:\nCPI8_2:\nCPI10_4:\nCPI11_4:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 38116642427924036757562528596065906755891459166597288748235269706410704764928\nCPI0_2:\n\t.cell 904625697166532776746648320380374280103671756151054860861505098695288291328\nCPI0_3:\n\t.cell -166923669067369873766191994592930785159943346089370123761369690313261580288\nCPI0_4:\nCPI5_2:\nCPI6_6:\nCPI7_9:\nCPI8_9:\nCPI9_4:\nCPI10_7:\nCPI11_17:\n\t.cell 2852213850513516153367582212096\nCPI0_5:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI11_8:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_6:\nCPI5_0:\nCPI6_17:\nCPI9_1:\nCPI10_1:\nCPI11_2:\n\t.cell 18446744073709551615\nCPI0_7:\nCPI1_0:\nCPI3_0:\nCPI6_5:\nCPI10_3:\nCPI11_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_8:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI11_7:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_9:\nCPI6_3:\nCPI7_3:\nCPI8_3:\nCPI11_9:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_10:\n\t.cell -26079055428631999755169999820041264995593315863804083392934812248473178472448\nCPI0_11:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_12:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_13:\n\t.cell 18446744073709551551\nCPI0_14:\n\t.cell 30879740348151907790678364878179638944126621834197393376857661914815177687040\nCPI0_15:\n\t.cell 4294967263\nCPI0_16:\n\t.cell 590295810358705651712\nCPI0_17:\nCPI11_6:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_18:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_19:\n\t.cell 38593718872328106458101065617775286748085516307844926981876400370963414253568\nCPI0_20:\n\t.cell 32681910334729448863864946050027585075830785762114360156054983194227433799680\nCPI0_21:\n\t.cell 604800\nCPI0_22:\nCPI6_8:\n\t.cell 18446744073709551483\nCPI0_23:\n\t.cell 452345881730649903994850848560918457481797816221989729399156651273603032157\nCPI0_24:\nCPI6_10:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_25:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_26:\n\t.cell 452378670560086040362718520020020129682257350339770395822122402231633883111\nCPI0_27:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_28:\n\t.cell 2090029442\nCPI0_29:\n\t.cell 3124842405\nCPI0_30:\n\t.cell 3792478064\nCPI0_31:\n\t.cell 3792478065\nCPI0_32:\n\t.cell 3797458734\nCPI0_33:\n\t.cell 4202047188\nCPI0_34:\n\t.cell 3124842406\nCPI0_35:\n\t.cell 3633695047\nCPI0_36:\n\t.cell 2439649221\nCPI0_37:\n\t.cell 2439649222\nCPI0_38:\n\t.cell 3041954473\nCPI0_39:\n\t.cell 2090029443\nCPI0_40:\n\t.cell 2233625729\nCPI0_41:\n\t.cell 1046363170\nCPI0_42:\n\t.cell 1589340788\nCPI0_43:\n\t.cell 1589340789\nCPI0_44:\n\t.cell 1725540768\nCPI0_45:\n\t.cell 1840533119\nCPI0_46:\n\t.cell 1046363171\nCPI0_47:\n\t.cell 1064470260\nCPI0_48:\n\t.cell 517440283\nCPI0_49:\n\t.cell 517440284\nCPI0_50:\n\t.cell 719206528\nCPI0_51:\n\t.cell 177362148\nCPI0_52:\n\t.cell 226053523\nCPI0_53:\n\t.cell 2535301202817642044428229017600\nCPI0_54:\nCPI6_4:\n\t.cell 2834887728753290660080060877037723411257078492004434445635685037311818465280\nCPI0_55:\n\t.cell -21857060218929861683821819821874182760907270912550306855719349237798668337152\nCPI0_56:\nCPI6_15:\n\t.cell -50310961677181293632432861013544852327003941767832756732232405034170119618560\nCPI0_57:\nCPI6_16:\nCPI11_11:\n\t.cell 316912650057057350374175801344\nCPI0_58:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_59:\nCPI6_13:\n\t.cell 18446744073709551519\nCPI0_60:\nCPI11_12:\n\t.cell 8589934560\nCPI0_61:\nCPI11_13:\n\t.cell 17179869152\nCPI0_62:\nCPI11_18:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_63:\n\t.cell -4294967296\nCPI0_64:\n\t.cell 1889567281\nCPI0_65:\nCPI9_2:\nCPI10_2:\nCPI11_3:\n\t.cell -30991751765622274519320752134368064134869217946116313751679903837235273743363\nCPI0_66:\nCPI9_0:\nCPI10_0:\nCPI11_1:\n\t.cell -22422204959817597763980038832690459514467865798154586405489039026799495293716\nCPI0_67:\nCPI11_5:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_68:\n\t.cell 47493978776928217725307712957235826002007253891642230889376877894222282227712\nCPI0_69:\n\t.cell 44080000725323958855251446910974398649400864608635886991382161003535237382144\nCPI0_70:\n\t.cell 48576617401460614042762292586550142304689117656546421497112919111525644857957\nCPI0_71:\n\t.cell 52221624271162252062415236998679103683204448832126951466209102204639258894691\nCPI0_72:\nCPI11_31:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_73:\nCPI11_20:\n\t.cell 46361386726410499263322427381369506175992020241588171917386103515624534704128\nCPI0_74:\nCPI7_6:\nCPI8_6:\nCPI11_21:\n\t.cell 5387515050969974956360988622848\nCPI0_75:\nCPI11_23:\n\t.cell 51016057617862644538578372595276646931080945226276183538075194022885800804352\nCPI0_76:\nCPI8_5:\n\t.cell 70000000000000000000\nCPI0_77:\nCPI11_24:\n\t.cell 7922816251426433759354395033600\nCPI0_78:\n\t.cell 52221624271162252062415236998679103683204448832126951466209102204639258239337\nCPI0_79:\n\t.cell 49028930250150299923622331593454005129828831088184703082410112377049353027584\nCPI0_80:\nCPI11_32:\n\t.cell 10458117451882892562347801444352\nCPI0_81:\n\t.cell -30991751765622274519320752134368064134869217946116313751679903837235273743362\nCPI0_82:\n\t.cell -22422204959817597763980038832690459514467865798154586405489039026799495293715\nCPI0_83:\n\t.cell 4238056678808933066457772256406219440718756300954938350892797929791311314944\nCPI0_84:\n\t.cell -40444922203150476156009304737842721806770164616861305744554704299876860035072\nCPI0_85:\n\t.cell 47886162883419684708897631068344448346787307519673941526391976180917976694784\nCPI0_86:\n\t.cell -44906417635787206963559877460555202890664413537909953542218682655106064711680\nCPI0_87:\n\t.cell -21399660217130130639773720558606180625684734421257625954197041166739002359808\nCPI0_88:\n\t.cell 29828182286254289101435970971033122320898932991241313107545216548396704202752\nCPI0_89:\n\t.cell -33150694813015853387837932301952905575326762577150538690511774914218584702976\nCPI0_90:\nCPI7_5:\nCPI8_4:\n\t.cell -46967347869762817211770011756586609677844163125355452868590611683642280247296\nCPI0_91:\n\t.cell 7579339178759260969845657272568842241355293518642591863610432807830070231040\nCPI0_92:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_93:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_94:\n\t.cell 86400\nCPI0_95:\n\t.cell -86400\nCPI0_96:\n\t.cell -11833023352413487907564247032272343133111807632184922392585337331924001095680\nCPI0_97:\n\t.cell 29020607679098831876588159838238378482784987069461868317318742977100266864640\nCPI0_98:\n\t.cell 10000000000000000000\nCPI0_99:\n\t.cell 35481554799969589296482861214456339746738266337477764286248206045576123383808\nCPI0_100:\n\t.cell 60000000000000000000\nCPI0_101:\n\t.cell 50000000000000000000\nCPI0_102:\n\t.cell 20000000000000000000\nCPI0_103:\n\t.cell 79228162532711081667253501952\nCPI0_104:\n\t.cell 40000000000000000000\nCPI0_105:\n\t.cell 30000000000000000000\nCPI0_106:\nCPI5_1:\nCPI6_18:\nCPI7_8:\nCPI8_8:\nCPI9_3:\nCPI10_6:\nCPI11_27:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_107:\n\t.cell 38878206584692966203415385907871375197469080758325516314230789535345649042549\nCPI0_108:\n\t.cell 8516605337275606360492988537449101362354799111869567486352712286027837865984\nCPI0_109:\n\t.cell 36784665143163702161339441327371172859310420721361339561610400621048880955392\nCPI0_110:\n\t.cell 46308022326495007027972728677917914892729792999299745830475596687180801507328\nCPI0_111:\n\t.cell 5387515053331158197795811229696\nCPI0_112:\n\t.cell 2535301200456458802993406410752\nCPI0_113:\nCPI11_19:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_114:\nCPI11_28:\n\t.cell 18446744073709551487\nCPI0_115:\n\t.cell -48719757687822547800745197551118351534541568878739321821808546113428889233771\nCPI0_116:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_117:\n\t.cell 6454973039698199198119942482240540643982028891330163610098731264865829167633\nCPI0_118:\nCPI3_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_119:\n\t.cell 2481041784956016742021570618494952475758789857281704946240779902470294861374\nCPI0_120:\n\t.cell 2000000000000000000\nCPI0_121:\nCPI6_12:\n\t.cell 19984446587381578679260064154243377531984041134390618977697125463137349271552\nCPI0_122:\nCPI6_14:\n\t.cell 120209876281281145568259943\nCPI0_123:\n\t.cell -24243573542908756656742960469620706294859471809197549687606805108482832859136\nCPI0_124:\nCPI7_4:\n\t.cell 25000000000000000000\nCPI0_125:\n\t.cell 15000000000000000000\nCPI0_126:\n\t.cell -3540202880760992168077742896269190571951089294069160928873317879482436026368\nCPI0_127:\n\t.cell 26616959624788145501257665028759500958019551560565664426117466910078421933505\nCPI0_128:\n\t.cell -26169279673760072341673943167871893214131042372482409454972450661548556448747\nCPI0_129:\n\t.cell -35624623585156310935986566609950774337791491079595188565361216048441042957010\nCPI0_130:\n\t.cell 49422300655976383518971161772042036479724517635858811238160587340303074464591\nCPI0_131:\n\t.cell -18002263324862296164297574372220909754226456243825434961346737007256845270391\nCPI0_132:\n\t.cell -25085042922932715679007901429792258562186342537147911894151979128382061281280\nCPI0_133:\n\t.cell -24352191393638173183386102620024196204095261554875746498453024199671489232896\nCPI0_134:\n\t.cell -23678062456497111516627939411831804958398917929630382470379205250796365021184\nCPI0_135:\n\t.cell -26759907098073982105467361195115755456394437647382652138162519193600047185920\nCPI0_136:\n\t.cell 52221604211377590376107045629355632089266742954246498428686638226834232180736\nCPI0_137:\n\t.cell 452345410778259664782959595580791703288917738669161318065267121479568793046\nCPI0_138:\n\t.cell 52221554898645202388254270315624376698369923369742740803112316311402230841344\nCPI0_139:\n\t.cell 904625697166532776746648320380374280103671791011446363005742967343686877184\nCPI6_7:\nCPI7_7:\nCPI8_7:\n\t.cell 18446744073709551616\nCPI6_9:\n\t.cell 452322379322920325034581741406471317301443348684201276200304769841811783367\nCPI6_11:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI10_5:\nCPI11_14:\n\t.cell 3618502788666131106986593281521497120414687020801267626233049500247285301247\nCPI10_8:\nCPI11_15:\n\t.cell -452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI11_10:\n\t.cell 17380371292669284796009844145473291067989848389665180938109065094184635990016\nCPI11_16:\n\t.cell 46016789891380686545540473965261133051510310273548131870263126022415833890816\nCPI11_22:\n\t.cell 3646362803908097757934682472140642654297631421670604076107003768819991017381\nCPI11_25:\n\t.cell 904625697166532776746648320380374280103671765341521708384097587035446968320\nCPI11_26:\n\t.cell -44967433201412075759874838692396910325463796184171209947493453722427004456723\nCPI11_29:\n\t.cell 52539759127853154500282047331284193879599656105267497338695617419230496948224\nCPI11_30:\n\t.cell 52221624271162252062415236998679103683204448832126951466209102204639259094127\nCPI11_33:\n\t.cell 52221701024126167591607960937701751979848047968404965369274382663020351681582\nCPI11_34:\n\t.cell 52221624271162252062415236998679103683204448832126951466209102204639258767136\n","methodIdentifiers":{"IS_TEST()":"fa7626d4","deployRewardDistributor()":"5ebb6a75","excludeArtifacts()":"b5508aa9","excludeContracts()":"e20c9f71","excludeSenders()":"1ed7831c","failed()":"ba414fa6","setUp()":"0a9254e4","targetArtifactSelectors()":"66d9a9a0","targetArtifacts()":"85226c81","targetContracts()":"3f7286f4","targetInterfaces()":"2ade3880","targetSelectors()":"916a17c6","targetSenders()":"3e5e3c23","test_deposit()":"7c935183","test_deposit_MaxVestableAmount()":"0d794d93","test_deposit_MultipleClaims()":"e2589f2e","test_deposit_OneClaim()":"6db44e7f","test_setGov()":"d895c947"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.ec5dde33\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployRewardDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardDistributorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_deposit_MaxVestableAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_deposit_MultipleClaims\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_deposit_OneClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/04_Vester.t.sol\":\"Vester_Tester\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c\",\"dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9cc29c28f49d0b7f7b2f1aa32d8273f8a087bf62eb3fb22d893df824052c25ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42dcb36cb10b878a0d5b20ce3a4a3ba4f51f44d7731a66ac1133c699bc80b31b\",\"dweb:/ipfs/QmY6q7SaHQMLBb3rS6xZdArPaXoskWeqF6oJwUeZ3gKLZj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://744ea187c195e31cb9201e63ca291fca9e623747f54f0ba390b366a6213b8964\",\"dweb:/ipfs/Qmc547qfV4sz65DC9B4okx1HvgxwUzJR7zTfKKbTzL3UQT\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223\",\"urls\":[\"bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669\",\"dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar\"]},\"lib/openzeppelin-foundry-upgrades/src/Defender.sol\":{\"keccak256\":\"0x4ab3fd0138ce11d5c16dffc7b017c965ba30de55898e91e0f64665f8e275d20e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6c5d6fba174dec5c09f86ab4ce1acdb51a0d0f780e56057a177d196e12511d\",\"dweb:/ipfs/QmaajQoYS8nD9GgEiJS6aebwf7pkFBL12Wi1DNHXLzEV9g\"]},\"lib/openzeppelin-foundry-upgrades/src/Options.sol\":{\"keccak256\":\"0x1b7a53fbaba7bd09f3265f97045d1d03670e3fc07fd989eb0243804cad8bdd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f451aa6d928f65e2e243862d72a75df605a3ba943ad6e59e8456effc8bd463c1\",\"dweb:/ipfs/Qmee7sbopLbd7N6docCLrGKwSrWGf7YXzXrTftp72oYEGy\"]},\"lib/openzeppelin-foundry-upgrades/src/Upgrades.sol\":{\"keccak256\":\"0xe4238478559e271b46ffcef23b4b22cc58943b8bbc549fd8eb221205704314b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c4d5f02c2263a8db048e11dca37d2dce3e4ea22c85c133c572aa6c3a6a879b\",\"dweb:/ipfs/QmVcEjehjoaKB5VtFnS3gd6swWr274j4KmFh3etJW6sJvx\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/DefenderDeploy.sol\":{\"keccak256\":\"0x2734b2a84b2e8c3f7d1040cdf6a1cb3d9a565201516892e297b8072f6ac44781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d0ce30498d61aa9150f2723f4cec7e0129a4b01cf04bbfe60aa4591d21918e8\",\"dweb:/ipfs/QmQtiYoNRuiGgiXJDCYr6jB4ybzeRRHrJ2nob4JfnjKwMf\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Utils.sol\":{\"keccak256\":\"0xc82c059c342414970ae59474124c23cc3d08485513ce269c0c1a781a1a0eb33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b93d1847db067a41fd9fb0cee1af8ea72a148d8e38b860b48d2dad8eb00c472b\",\"dweb:/ipfs/QmbGEVvqWv5U56YvwyfjE7z6i5mCvrTK4udS3mSz9udVRw\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Versions.sol\":{\"keccak256\":\"0x38354f4642f80aefbc2805e934eee0c779d6439be14c86465b8ca18d2a3dc543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09b1c891cda7ce69d2c1adad58a3167cf3591efcac68f1225a4e24ecd64b9369\",\"dweb:/ipfs/QmQLnanBWRJKxsBo7xp9qL7qbmsjeubkZkKJ1roSaB4P7v\"]},\"src/ZFI/ZFIToken.sol\":{\"keccak256\":\"0x8029f3aa6ccae93b9bedf6d11a3607cf695d5d29f23675b7fa7c0f0d4f04406c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c5f658cb2b399109827bc8d9ab3c67f1cb165ad2eba773fb20326c8560b134\",\"dweb:/ipfs/QmYzmBv1K3mWgWnbzVwqZ7TC4xJXVKvqzNar4XhECuWDeS\"]},\"src/access/Governable.sol\":{\"keccak256\":\"0x991689725362212185778cd0c943d46b18da3ac6640c9b1b124b39198ee1b56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85617294b9f8080e9dbbe8a1f5e314bbc27923de97045a33db258d58aa8c61a1\",\"dweb:/ipfs/QmR4ZHPVFpw19gDhqwP4mhrR9GbTU6oK1juDes82M4ASJW\"]},\"src/staking/RewardDistributor.sol\":{\"keccak256\":\"0x764341579d633f44f7961e4e6c52cf4250db09f007e5ac01d8995b7654d055ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5299e887d660fae8017252087358d1622ae4141c6f94669f19ee2ecbb8081cc1\",\"dweb:/ipfs/QmSWPsUCUmQEHPNz8TiYjQG4CmXs77BYaGdbqNobAkZ6TD\"]},\"src/staking/RewardTracker.sol\":{\"keccak256\":\"0xd219a01df543a0ddd6fe146294e3bbc6aac4d28ce99bbf199929e40cf49f4850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9386baca055458160ad121aa1b3116f9eebb5ceac0fd0eb5a5e700d180569738\",\"dweb:/ipfs/QmZouoCdN39XDjLXzYL9u3uAuMy29VNdJ3z6eBgLXH6rrG\"]},\"src/staking/Vester.sol\":{\"keccak256\":\"0xd812fee776075e01a09d25d7f0180ae47a9ea216615273bd17e2c3b14a507a76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de0f168f0b272a217166cbeb780e52b847d0a7d294c391a4de47bc283fc63df6\",\"dweb:/ipfs/QmSbZyjbgkE5qp8U9VW7V9xZYiLYtCXPZ4i67hLePUJCka\"]},\"src/staking/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x93662d443c287968a361c4e318fdb382fc108aa5fe723a29310a774a7de28b54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77055fe8aeee23b6fd0208b53c6744cc7d4a95e45e76e0282bfda6d9730d6226\",\"dweb:/ipfs/Qma3Gkamjj6zCWHf3yECV3NcKovcLmWen5oGfWvdtLhtLi\"]},\"src/staking/interfaces/IRewardTracker.sol\":{\"keccak256\":\"0x1d89bd49a0edfa478ccea61db0f03f1176c0ac05610a7d076224f9f5897f8a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8794522f5994f886705352db4528c5f2bc340ee507ca4b729751eeeaeb232787\",\"dweb:/ipfs/QmU6yMWB3hFHy82ohASW2NMx6pVBovmnCaHKyWHMJNrKF3\"]},\"src/staking/interfaces/IVester.sol\":{\"keccak256\":\"0x5cb4141ced39055e319c16da6d37739bbf05670a9df4f1bee7ce900c094572f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4df83a0d55f4b648ef70d356db26e558859431b569742440e456d6d7d794e10\",\"dweb:/ipfs/QmQ6hbBYmmy6HRDGeLSnu6a4EBRKNGD1fgBWkQxV1PwwYH\"]},\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\":{\"keccak256\":\"0x39aa813c4e998d1bf443b0bee432d17a7a2dbd0e0349cef31c0b426a0c6ba72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd8d3e1e03dd8313d984a3d18cfe39c15d7a92758d9789b2c828169ee8f8c4fe\",\"dweb:/ipfs/QmXPyofzX8pwiiUHAtHT6W15UoFtc4ajkYSPbGM87xeYj2\"]},\"src/tokens/interfaces/IERC20Burnable.sol\":{\"keccak256\":\"0x63557caaac086a5bb8281bf9536122cc49f36ea1efb32a4f2e3aedcf4f57b405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b026929f2ced31b04d749c1df00532701a3a7634bafab93c9ff382039372d67d\",\"dweb:/ipfs/QmVqhXe5nDR2CyXvipvX8VpnTPHkYddEBoGbifNYmp6mFP\"]},\"test/00_ZFI.t.sol\":{\"keccak256\":\"0x030ba234d81f8f7456f7f25b870887d8e34551c425dd7cf9441229cd162eafa3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23a7c18e0a08a68f53a9245e7a1a9696d8e3103f4b621b3b67476d421f38c7c1\",\"dweb:/ipfs/QmRi7235JhXBJWHdgfeteRQipDdV88JB6Mio7w5jcMUnQp\"]},\"test/02_RewardTracker.t.sol\":{\"keccak256\":\"0x7fc2bbb5ea987a3615c095ca317e9555cf3b355981ac991b0dffd3fa865bd550\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://15c6ea30eebb510545438a18ddec7ce9a167204044971f0eb45d25110de2d94c\",\"dweb:/ipfs/QmPqa2Quj2oa6c5tgsiFog1yZSjioDKm7XB2aMDygsz4ex\"]},\"test/04_Vester.t.sol\":{\"keccak256\":\"0xd724e33fde366791db0460585f133b0ef69a6b1c524fd1819a4cf03dfb03ace0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a98df66bac7c3268d163f27fc2974f9613e9a824bb368c17124fcd64faab9667\",\"dweb:/ipfs/QmRtBbYGEyReQ1HQ8FcN7hhEXJ46nGjf8tQUUUEYQQ4A3s\"]}},\"version\":1}","solc_version":"0.8.21","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 13:\"lib/forge-std/src/Test.sol\", 86:\"test/04_Vester.t.sol\"\nobject \"Vester_Tester_64632\" {\n    code {\n        {\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := 0\n            let _3 := not(255)\n            /// @src 3:3166:3170  \"true\"\n            let _4 := 0x0c\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            sstore(/** @src 3:3166:3170  \"true\" */ _4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ _4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 13:1038:1042  \"true\" */ 0x1e), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            finalize_allocation_4849(_1)\n            mstore(_1, /** @src 3:3166:3170  \"true\" */ _4)\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            let _5 := add(_1, 32)\n            mstore(_5, \"TEAM_ADDRESS\")\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            let expr_mpos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            let i := _2\n            for { }\n            lt(i, /** @src 3:3166:3170  \"true\" */ _4)\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            { i := add(i, 32) }\n            {\n                mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ i), 32), mload(add(add(_1, i), 32)))\n            }\n            mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 44), _2)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            mstore(expr_mpos, /** @src 3:3166:3170  \"true\" */ _4)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            finalize_allocation_4849(expr_mpos)\n            /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n            let _6 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _7 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            mstore(_7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n            mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _8 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            if iszero(_8)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos := mload(64)\n                returndatacopy(pos, _2, returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            if _8\n            {\n                let _9 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _9 := returndatasize() }\n                finalize_allocation(_7, _9)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, _9), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(_2, _2)\n                }\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let value := mload(_7)\n                if iszero(eq(value, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                {\n                    revert(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, _2)\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                expr := value\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                revert(_2, _2)\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _10 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            mstore(_10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n            mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_10, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64)\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            let length := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length)\n            copy_memory_to_memory_with_cleanup(_5, add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _11 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(_11)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_1 := mload(64)\n                returndatacopy(pos_1, _2, returndatasize())\n                revert(pos_1, returndatasize())\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if _11\n            {\n                finalize_allocation_3528(_10)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                _2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2\n            }\n            let _12 := sload(/** @src 13:1038:1042  \"true\" */ 0x1e)\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(_12, not(sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 256))), and(shl(8, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 256))))\n            let memPtr := mload(64)\n            finalize_allocation_4849(memPtr)\n            mstore(memPtr, 16)\n            mstore(add(memPtr, 32), \"DEPLOYER_ADDRESS\")\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            let i_1 := 0\n            for { } lt(i_1, 16) { i_1 := add(i_1, 32) }\n            {\n                mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ i_1), 32), mload(add(add(memPtr, i_1), 32)))\n            }\n            mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 48), 0)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            mstore(expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 16)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            finalize_allocation_4849(expr_mpos_1)\n            /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n            let _13 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_1))\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _14 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            mstore(_14, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n            mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_14, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _13)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _15 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _14, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            if iszero(_15)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_2 := mload(64)\n                returndatacopy(pos_2, /** @src -1:-1:-1 */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_2, returndatasize())\n            }\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let expr_1 := _2\n            if _15\n            {\n                let _16 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _16 := returndatasize() }\n                finalize_allocation(_14, _16)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_14, _16), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let value_1 := mload(_14)\n                if iszero(eq(value_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                expr_1 := value_1\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                revert(/** @src -1:-1:-1 */ _2, _2)\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _17 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            mstore(_17, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n            mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_17, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64)\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            let length_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr)\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_1)\n            copy_memory_to_memory_with_cleanup(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(memPtr, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_1)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _18 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _17, /** @src -1:-1:-1 */ _2)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(_18)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_3 := mload(64)\n                returndatacopy(pos_3, /** @src -1:-1:-1 */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_3, returndatasize())\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if _18\n            {\n                finalize_allocation_3528(_17)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if _2\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            sstore(31, or(and(sload(31), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            let memPtr_1 := mload(64)\n            finalize_allocation_4849(memPtr_1)\n            mstore(memPtr_1, 5)\n            mstore(add(memPtr_1, 32), \"USER1\")\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            let expr_mpos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            let i_2 := 0\n            for { } lt(i_2, 5) { i_2 := add(i_2, 32) }\n            {\n                mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ i_2), 32), mload(add(add(memPtr_1, i_2), 32)))\n            }\n            mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 37), 0)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            mstore(expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 5)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            finalize_allocation_4849(expr_mpos_2)\n            /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n            let _19 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_2))\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _20 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            mstore(_20, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n            mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_20, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _19)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _21 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _20, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _20, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            if iszero(_21)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_4 := mload(64)\n                returndatacopy(pos_4, /** @src -1:-1:-1 */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_4, returndatasize())\n            }\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let expr_2 := _2\n            if _21\n            {\n                let _22 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _22 := returndatasize() }\n                finalize_allocation(_20, _22)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_20, _22), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let value_2 := mload(_20)\n                if iszero(eq(value_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                expr_2 := value_2\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                revert(/** @src -1:-1:-1 */ _2, _2)\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _23 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            mstore(_23, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            let _24 := and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n            mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_23, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _24)\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64)\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            let length_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1)\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_2)\n            copy_memory_to_memory_with_cleanup(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(memPtr_1, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_2)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _25 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _23, /** @src -1:-1:-1 */ _2)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(_25)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_5 := mload(64)\n                returndatacopy(pos_5, /** @src -1:-1:-1 */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_5, returndatasize())\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if _25\n            {\n                finalize_allocation_3528(_23)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if _2\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            sstore(32, or(and(sload(32), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _24))\n            let memPtr_2 := mload(64)\n            finalize_allocation_4849(memPtr_2)\n            mstore(memPtr_2, 7)\n            mstore(add(memPtr_2, 32), \"HANDLER\")\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            let expr_mpos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            let i_3 := 0\n            for { } lt(i_3, 7) { i_3 := add(i_3, 32) }\n            {\n                mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ i_3), 32), mload(add(add(memPtr_2, i_3), 32)))\n            }\n            mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 39), 0)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            mstore(expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 7)\n            /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n            finalize_allocation_4849(expr_mpos_3)\n            /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n            let _26 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_3))\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _27 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            mstore(_27, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n            mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_27, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _26)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let _28 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _27, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _27, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            if iszero(_28)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_6 := mload(64)\n                returndatacopy(pos_6, /** @src -1:-1:-1 */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_6, returndatasize())\n            }\n            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n            let expr_3 := _2\n            if _28\n            {\n                let _29 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _29 := returndatasize() }\n                finalize_allocation(_27, _29)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_27, _29), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _27), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let value_3 := mload(_27)\n                if iszero(eq(value_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                expr_3 := value_3\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                revert(/** @src -1:-1:-1 */ _2, _2)\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _30 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            mstore(_30, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            let _31 := and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n            mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_30, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _31)\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64)\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            let length_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_2)\n            mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_3)\n            copy_memory_to_memory_with_cleanup(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(memPtr_2, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_3)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            let _32 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _30, /** @src -1:-1:-1 */ _2)\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if iszero(_32)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_7 := mload(64)\n                returndatacopy(pos_7, /** @src -1:-1:-1 */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_7, returndatasize())\n            }\n            /// @src 4:20373:20393  \"vm.label(addr, name)\"\n            if _32\n            {\n                finalize_allocation_3528(_30)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if _2\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            sstore(/** @src 86:520:539  \"makeAddr(\\\"HANDLER\\\")\" */ 0x21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 86:520:539  \"makeAddr(\\\"HANDLER\\\")\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _31))\n            sstore(/** @src 86:571:578  \"1 weeks\" */ 0x22, 0x093a80)\n            /// @src 86:663:677  \"new ZFI_test()\"\n            let _33 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 86:663:677  \"new ZFI_test()\"\n            let _34 := datasize(\"ZFI_test_62240\")\n            let _35 := add(_33, _34)\n            let _36 := sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)\n            /// @src 86:663:677  \"new ZFI_test()\"\n            if or(gt(_35, _36), lt(_35, _33))\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(_2, shl(224, 0x4e487b71))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x41)\n                revert(_2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n            }\n            /// @src 86:663:677  \"new ZFI_test()\"\n            datacopy(_33, dataoffset(\"ZFI_test_62240\"), _34)\n            let expr_address := create(_2, _33, sub(_35, _33))\n            if iszero(expr_address)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_8 := mload(64)\n                returndatacopy(pos_8, /** @src 86:663:677  \"new ZFI_test()\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_8, returndatasize())\n            }\n            sstore(37, or(and(sload(37), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(expr_address, sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n            /// @src 86:757:783  \"new RewardTracker_Tester()\"\n            let _37 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n            /// @src 86:757:783  \"new RewardTracker_Tester()\"\n            let _38 := datasize(\"RewardTracker_Tester_62554\")\n            let _39 := add(_37, _38)\n            if or(gt(_39, /** @src 86:663:677  \"new ZFI_test()\" */ _36), /** @src 86:757:783  \"new RewardTracker_Tester()\" */ lt(_39, _37))\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(/** @src 86:663:677  \"new ZFI_test()\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x41)\n                revert(/** @src 86:663:677  \"new ZFI_test()\" */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n            }\n            /// @src 86:757:783  \"new RewardTracker_Tester()\"\n            datacopy(_37, dataoffset(\"RewardTracker_Tester_62554\"), _38)\n            let expr_address_1 := create(/** @src 86:663:677  \"new ZFI_test()\" */ _2, /** @src 86:757:783  \"new RewardTracker_Tester()\" */ _37, sub(_39, _37))\n            if iszero(expr_address_1)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let pos_9 := mload(64)\n                returndatacopy(pos_9, /** @src 86:663:677  \"new ZFI_test()\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                revert(pos_9, returndatasize())\n            }\n            sstore(39, or(and(sload(39), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(expr_address_1, sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            let _40 := mload(64)\n            let _41 := datasize(\"Vester_Tester_64632_deployed\")\n            codecopy(_40, dataoffset(\"Vester_Tester_64632_deployed\"), _41)\n            return(_40, _41)\n        }\n        function finalize_allocation_3528(memPtr)\n        {\n            if gt(memPtr, /** @src 86:663:677  \"new ZFI_test()\" */ sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, memPtr)\n        }\n        function finalize_allocation_4849(memPtr)\n        {\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, /** @src 86:663:677  \"new ZFI_test()\" */ sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31)))\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            if or(gt(newFreePtr, /** @src 86:663:677  \"new ZFI_test()\" */ sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 9:\"lib/forge-std/src/StdStorage.sol\", 13:\"lib/forge-std/src/Test.sol\", 16:\"lib/forge-std/src/console2.sol\", 86:\"test/04_Vester.t.sol\"\n    object \"Vester_Tester_64632_deployed\" {\n        code {\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x0a9254e4 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _2 := sub(shl(160, 1), 1)\n                        /// @src 86:868:899  \"deal(DEPLOYER_ADDRESS, 2 ether)\"\n                        fun_deal(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 86:873:889  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2))\n                        /// @src 86:909:936  \"deal(TEAM_ADDRESS, 2 ether)\"\n                        fun_deal(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(shr(8, sload(/** @src 86:914:926  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2))\n                        /// @src 86:951:956  \"USER1\"\n                        let _3 := 0x20\n                        /// @src 86:946:966  \"deal(USER1, 2 ether)\"\n                        fun_deal(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 86:951:956  \"USER1\" */ _3), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2))\n                        let value := and(sload(/** @src 86:1027:1038  \"zfiDeployer\" */ 0x25), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                        let _4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                        mstore(_4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xca2925eb))\n                        /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                        let _5 := call(gas(), value, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\" */ _4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\" */ _4, /** @src 86:951:956  \"USER1\" */ _3)\n                        /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                        if iszero(_5)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                        let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1\n                        /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                        if _5\n                        {\n                            let _6 := /** @src 86:951:956  \"USER1\" */ _3\n                            /// @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\"\n                            if gt(/** @src 86:951:956  \"USER1\" */ _3, /** @src 86:1027:1051  \"zfiDeployer.deploy_ZFI()\" */ returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_4, _6)\n                            expr := abi_decode_address_fromMemory(_4, add(_4, _6))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _7 := and(/** @src 86:1072:1097  \"ZFIToken(zfiTokenAddress)\" */ expr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        let _8 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 86:1061:1097  \"zfiToken = ZFIToken(zfiTokenAddress)\" */ 0x23, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 86:1061:1097  \"zfiToken = ZFIToken(zfiTokenAddress)\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _8), _7))\n                        let value_1 := and(sload(/** @src 86:1170:1191  \"rewardTrackerDeployer\" */ 0x27), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                        let _9 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                        mstore(_9, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xcba6b10b))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\" */ add(_9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), _7)\n                        let _10 := 36\n                        /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                        let _11 := call(gas(), value_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\" */ _9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\" */ _9, /** @src 86:951:956  \"USER1\" */ _3)\n                        /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                        if iszero(_11)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                        let expr_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1\n                        /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                        if _11\n                        {\n                            let _12 := /** @src 86:951:956  \"USER1\" */ _3\n                            /// @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\"\n                            if gt(/** @src 86:951:956  \"USER1\" */ _3, /** @src 86:1170:1228  \"rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress)\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_9, _12)\n                            expr_1 := abi_decode_address_fromMemory(_9, add(_9, _12))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(_10, or(and(sload(_10), _8), and(/** @src 86:1156:1229  \"RewardTracker(rewardTrackerDeployer.deployRewardTracker(zfiTokenAddress))\" */ expr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)))\n                        let value_2 := and(sload(/** @src 86:873:889  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        let _13 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13))\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        let _14 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _15 := shl(224, 0xca669fa7)\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        mstore(_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\" */ add(_14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_2)\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        let _16 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13, _1, /** @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\" */ _14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\" */ _14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        if iszero(_16)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 86:1239:1265  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        if _16\n                        {\n                            finalize_allocation_107616(_14)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            _1 := _1\n                        }\n                        let value_3 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10), _2)\n                        let value_4 := and(shr(8, sload(/** @src 86:914:926  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(value_3))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\"\n                        let _17 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\"\n                        mstore(_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\" */ add(_17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_4)\n                        /// @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\"\n                        let _18 := call(gas(), value_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\" */ _17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\" */ _17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\"\n                        if iszero(_18)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 86:1275:1309  \"rewardTracker.setGov(TEAM_ADDRESS)\"\n                        if _18\n                        {\n                            finalize_allocation_107616(_17)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        sstore(/** @src 86:1355:1394  \"DISTRIBUTOR = deployRewardDistributor()\" */ 0x29, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 86:1355:1394  \"DISTRIBUTOR = deployRewardDistributor()\" */ 0x29), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _8), and(/** @src 86:1369:1394  \"deployRewardDistributor()\" */ fun_deployRewardDistributor(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)))\n                        let value_5 := and(shr(8, sload(/** @src 86:914:926  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13))\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        let _19 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        mstore(_19, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\" */ add(_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_5)\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        let _20 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13, _1, /** @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\" */ _19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\" */ _19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        if iszero(_20)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 86:1405:1427  \"vm.prank(TEAM_ADDRESS)\"\n                        if _20\n                        {\n                            finalize_allocation_107616(_19)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_6 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10), _2)\n                        let value_7 := and(sload(/** @src 86:1355:1394  \"DISTRIBUTOR = deployRewardDistributor()\" */ 0x29), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                        if iszero(extcodesize(value_6))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                        let _21 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                        mstore(_21, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x189acdbd))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\" */ add(_21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_7)\n                        /// @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                        let _22 := call(gas(), value_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\" */ _21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\" */ _21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                        if iszero(_22)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 86:1437:1474  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                        if _22\n                        {\n                            finalize_allocation_107616(_21)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_8 := and(sload(/** @src 86:873:889  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13))\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        let _23 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        mstore(_23, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\" */ add(_23, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_8)\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        let _24 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13, _1, /** @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\" */ _23, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\" */ _23, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        if iszero(_24)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_6 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 86:1485:1511  \"vm.prank(DEPLOYER_ADDRESS)\"\n                        if _24\n                        {\n                            finalize_allocation_107616(_23)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _25 := sload(/** @src 86:1564:1579  \"vestingDuration\" */ 0x22)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_9 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10), _2)\n                        /// @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\"\n                        let _26 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\"\n                        let _27 := datasize(\"Vester_61451\")\n                        let _28 := add(_26, _27)\n                        if or(gt(_28, 0xffffffffffffffff), lt(_28, _26))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                            revert(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, _10)\n                        }\n                        /// @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\"\n                        datacopy(_26, dataoffset(\"Vester_61451\"), _27)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(_28, 192)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_28, 192), 10)\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ \"staked ZFI\")\n                        let _29 := 256\n                        mstore(add(_28, /** @src 86:951:956  \"USER1\" */ _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _29)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_28, _29), 5)\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 288), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ \"stZFI\")\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _25)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_28, 96), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ value_9)\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_28, 128), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _7)\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_28, 160), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ value_9)\n                        /// @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\"\n                        let expr_address := create(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\" */ _26, add(sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _28, /** @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\" */ _26), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 320))\n                        /// @src 86:1530:1645  \"new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\"\n                        if iszero(expr_address)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_7 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 86:1521:1645  \"vester = new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\" */ 0x28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 86:1521:1645  \"vester = new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _8), and(expr_address, _2)))\n                        let value_10 := and(shr(8, sload(/** @src 86:914:926  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13))\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        let _30 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        mstore(_30, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\" */ add(_30, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_10)\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        let _31 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _13, _1, /** @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\" */ _30, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10, /** @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\" */ _30, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        if iszero(_31)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_8 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_8, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 86:1655:1677  \"vm.prank(TEAM_ADDRESS)\"\n                        if _31\n                        {\n                            finalize_allocation_107616(_30)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_11 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10), _2)\n                        let value_12 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:1521:1645  \"vester = new Vester(\\\"staked ZFI\\\", \\\"stZFI\\\", vestingDuration, address(rewardTracker), zfiTokenAddress, address(rewardTracker))\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                        /// @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\"\n                        if iszero(extcodesize(value_11))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\"\n                        let _32 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\"\n                        mstore(_32, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x9cb7de4b))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\" */ add(_32, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_12)\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\" */ _32, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _10), /** @src 86:1773:1777  \"true\" */ 0x01)\n                        /// @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\"\n                        let _33 := call(gas(), value_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\" */ _32, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68, /** @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\" */ _32, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\"\n                        if iszero(_33)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_9 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 86:1731:1778  \"rewardTracker.setHandler(address(vester), true)\"\n                        if _33\n                        {\n                            finalize_allocation_107616(_32)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        return(_1, _1)\n                    }\n                    case 0x0d794d93 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _34 := sload(/** @src 86:3114:3126  \"TEAM_ADDRESS\" */ 0x1e)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_13 := and(sload(/** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _35 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_35, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_35, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_13)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _36 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _35, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _35, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_36)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_10 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_10, returndatasize())\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _36\n                        {\n                            finalize_allocation_107616(_35)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_14 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(extcodesize(value_14))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _37 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        mstore(_37, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ add(_37, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), and(shr(8, _34), sub(shl(160, 1), 1)))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _38 := call(gas(), value_14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _37, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _37, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(_38)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_11 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_11, returndatasize())\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if _38\n                        {\n                            finalize_allocation_107616(_37)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _39 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        mstore(_39, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _40 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _39, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _39, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(_40)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_12 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_12, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_12, returndatasize())\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if _40\n                        {\n                            finalize_allocation_107616(_39)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_15 := and(sload(/** @src 86:3359:3367  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_16 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let expr_mpos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let _41 := add(expr_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(_41, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\" */ add(expr_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), value_16)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(expr_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        finalize_allocation_250227(expr_mpos)\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        pop(staticcall(gas(), value_15, _41, mload(expr_mpos), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, _1))\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        let expr_component_mpos := extract_returndata()\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ add(expr_component_mpos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ expr_component_mpos)), expr_component_mpos), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 9:6854:6876  \"self._target = _target\"\n                        update_storage_value_offsett_contract_ZFIToken_to_contract_ZFIToken(value_15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7009:7018  \"self._sig\" */ 15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 9:7009:7018  \"self._sig\" */ 15), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(0xffffffff)), /** @src 4:27524:27534  \"0x70a08231\" */ 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let oldLen := sload(/** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                            revert(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, 36)\n                        }\n                        let _42 := add(oldLen, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7505:7515  \"self._keys\" */ 14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _42)\n                        if iszero(lt(oldLen, _42))\n                        {\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            mstore(4, 0x32)\n                            revert(_1, 36)\n                        }\n                        mstore(_1, /** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(add(84800337471693920904250232874319843718400766719524250287777680170677855896573, oldLen), value_16)\n                        let value_17 := and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_18 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, sload(/** @src 9:7009:7018  \"self._sig\" */ 15))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _43 := sload(/** @src 9:15610:15621  \"self._depth\" */ 16)\n                        /// @src 9:15653:15687  \"stdStorageSafe.getCallParams(self)\"\n                        let expr_mpos_1 := fun_getCallParams_107628()\n                        /// @src 9:15703:15718  \"self.finds[who]\"\n                        let _44 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_17)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _45 := and(value_18, shl(224, 0xffffffff))\n                        mstore(_1, _45)\n                        mstore(32, _44)\n                        let dataSlot := keccak256(_1, 64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _46 := add(expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length := mload(expr_mpos_1)\n                        let _47 := add(expr_mpos_1, 32)\n                        copy_memory_to_memory_with_cleanup(_47, _46, length)\n                        let _48 := add(/** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_48, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _43)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _49 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _48, /** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2)\n                        mstore(expr_mpos_2, add(_49, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_2, add(_49, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _46, mload(/** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_2)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot)\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        if /** @src 9:15702:15780  \"!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:15703:15780  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(_1, 64), /** @src 9:15610:15621  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff))\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        {\n                            /// @src 9:13208:13241  \"stdStorageSafe.find(self, _clear)\"\n                            pop(fun_find())\n                        }\n                        /// @src 9:15857:15872  \"self.finds[who]\"\n                        let _50 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_17)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(_1, _45)\n                        mstore(32, _50)\n                        let dataSlot_1 := keccak256(_1, 64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _51 := add(expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_1 := mload(expr_mpos_1)\n                        copy_memory_to_memory_with_cleanup(_47, _51, length_1)\n                        let _52 := add(/** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_1)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_52, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _43)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _53 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _52, /** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3)\n                        mstore(expr_mpos_3, add(_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_3, add(_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _51, mload(/** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_3)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_1)\n                        let dataSlot_2 := keccak256(_1, 64)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _54 := sload(/** @src 9:15943:15958  \"data.offsetLeft\" */ add(dataSlot_2, /** @src 9:7505:7515  \"self._keys\" */ 1))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _55 := sload(/** @src 9:15961:15977  \"data.offsetRight\" */ add(dataSlot_2, /** @src 9:7009:7018  \"self._sig\" */ 2))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        if /** @src 9:15942:15982  \"(data.offsetLeft + data.offsetRight) > 0\" */ iszero(iszero(/** @src 9:15943:15977  \"data.offsetLeft + data.offsetRight\" */ checked_add_uint256(_54, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _55)))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        {\n                            /// @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\"\n                            let _56 := checked_add_uint256(_54, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _55)\n                            /// @src 9:16021:16024  \"256\"\n                            let _57 := 0x0100\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if gt(sub(/** @src 9:16021:16024  \"256\" */ _57, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _56), /** @src 9:16021:16024  \"256\" */ _57)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            if gt(sub(/** @src 9:16021:16024  \"256\" */ _57, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _56), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _58 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            mstore(_58, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x348051d7))\n                            mstore(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_58, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), shl(sub(/** @src 9:16021:16024  \"256\" */ _57, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _56), /** @src 9:7505:7515  \"self._keys\" */ 1))\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _59 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _58, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _58, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            if iszero(_59)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_13 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_13, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_13, returndatasize())\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let expr_mpos_4 := _1\n                            if _59\n                            {\n                                let _60 := returndatasize()\n                                returndatacopy(_58, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _60)\n                                finalize_allocation(_58, _60)\n                                let _61 := add(_58, _60)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(_61, _58), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let offset := mload(_58)\n                                if gt(offset, 0xffffffffffffffff)\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if iszero(slt(add(add(_58, offset), /** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _61))\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _62 := mload(add(_58, offset))\n                                let _63 := array_allocation_size_bytes(_62)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, _63)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr, _62)\n                                if gt(add(add(add(_58, offset), _62), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _61)\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                copy_memory_to_memory_with_cleanup(add(add(_58, offset), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _62)\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                expr_mpos_4 := memPtr\n                            }\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let expr_mpos_5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ add(expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Pac\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"ked slot. We can't fit value gre\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96), \"ater than \")\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let length_2 := mload(expr_mpos_4)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos_4, 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_2)\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let _64 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_2), /** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5)\n                            mstore(expr_mpos_5, add(_64, 74))\n                            finalize_allocation(expr_mpos_5, add(_64, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106))\n                            if iszero(/** @src 9:16103:16124  \"uint256(set) < maxVal\" */ lt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x015af1d78b58c40000, shl(sub(/** @src 9:16021:16024  \"256\" */ _57, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _56), /** @src 9:7505:7515  \"self._keys\" */ 1)))\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                let memPtr_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_1, shl(229, 4594637))\n                                mstore(add(memPtr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                revert(memPtr_1, sub(abi_encode_string(expr_mpos_5, add(memPtr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1))\n                            }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _65 := sload(/** @src 9:16445:16454  \"data.slot\" */ dataSlot_2)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _66 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        mstore(_66, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _67 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ _66, sub(abi_encode_address_bytes32(add(_66, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ value_17, _65), _66), _66, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        if iszero(_67)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_14 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_14, returndatasize())\n                        }\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let expr_2 := _1\n                        if _67\n                        {\n                            let _68 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ returndatasize()) { _68 := returndatasize() }\n                            finalize_allocation(_66, _68)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ add(_66, _68), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _66), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            expr_2 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_66)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _69 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        mstore(_69, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _70 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _69, sub(abi_encode_address_bytes32_bytes32(add(_69, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ value_17, _65, /** @src 9:12656:12748  \"(uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)) | (varValue << offsetRight)\" */ or(/** @src 9:12657:12719  \"uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr_2, /** @src 9:12677:12719  \"~getMaskByOffsets(offsetLeft, offsetRight)\" */ not(/** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _55, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _55, _54)), /** @src 9:7505:7515  \"self._keys\" */ 1), /** @src 9:12275:12388  \"assembly {...\" */ not(0))))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(_55, 0x015af1d78b58c40000))), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _69), _69, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(_70)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_15 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_15, returndatasize())\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if _70\n                        {\n                            finalize_allocation_107616(_69)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 9:16678:16709  \"stdStorageSafe.callTarget(self)\"\n                        let expr_component, expr_component_1 := fun_callTarget_107633()\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        let expr_3 := /** @src 9:16724:16732  \"!success\" */ iszero(expr_component)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ iszero(/** @src 9:16724:16732  \"!success\" */ expr_3)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        {\n                            expr_3 := /** @src 9:16736:16753  \"callResult != set\" */ iszero(eq(expr_component_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x015af1d78b58c40000))\n                        }\n                        /// @src 9:16720:16896  \"if (!success || callResult != set) {...\"\n                        if expr_3\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let _71 := sload(/** @src 9:16791:16800  \"data.slot\" */ dataSlot_2)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _72 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            mstore(_72, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _73 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ _72, sub(abi_encode_address_bytes32_bytes32(add(_72, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ value_17, _71, expr_2), _72), _72, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(_73)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_16 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_16, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_16, returndatasize())\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if _73\n                            {\n                                finalize_allocation_107616(_72)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            let _74 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            mstore(_74, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                            mstore(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ add(_74, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                            mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _74, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 51)\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _74, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Fai\")\n                            mstore(add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _74, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"led to write value.\")\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            revert(_74, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                        }\n                        /// @src 9:14785:14789  \"self\"\n                        fun_clear()\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_19 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        let _75 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        mstore(_75, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3430:3450  \"vm.startPrank(USER1)\" */ add(_75, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_19)\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        let _76 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:3430:3450  \"vm.startPrank(USER1)\" */ _75, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3430:3450  \"vm.startPrank(USER1)\" */ _75, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        if iszero(_76)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_17 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_17, returndatasize())\n                        }\n                        /// @src 86:3430:3450  \"vm.startPrank(USER1)\"\n                        if _76\n                        {\n                            finalize_allocation_107616(_75)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_20 := and(sload(/** @src 86:3359:3367  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_21 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        let _77 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _78 := shl(224, 0x095ea7b3)\n                        /// @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        mstore(_77, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _78)\n                        /// @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        let _79 := call(gas(), value_20, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\" */ _77, sub(abi_encode_address_uint256(add(_77, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\" */ value_21), _77), _77, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        if iszero(_79)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_18 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_18, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_18, returndatasize())\n                        }\n                        /// @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        if _79\n                        {\n                            let _80 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:3460:3508  \"zfiToken.approve(address(rewardTracker), amount)\" */ returndatasize()) { _80 := returndatasize() }\n                            finalize_allocation(_77, _80)\n                            pop(abi_decode_bool_fromMemory(_77, add(_77, _80)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_22 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:3518:3545  \"rewardTracker.stake(amount)\"\n                        if iszero(extcodesize(value_22))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3518:3545  \"rewardTracker.stake(amount)\"\n                        let _81 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3518:3545  \"rewardTracker.stake(amount)\"\n                        mstore(_81, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x534a7e1d))\n                        mstore(/** @src 86:3518:3545  \"rewardTracker.stake(amount)\" */ add(_81, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x015af1d78b58c40000)\n                        /// @src 86:3518:3545  \"rewardTracker.stake(amount)\"\n                        let _82 := call(gas(), value_22, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3518:3545  \"rewardTracker.stake(amount)\" */ _81, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3518:3545  \"rewardTracker.stake(amount)\" */ _81, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3518:3545  \"rewardTracker.stake(amount)\"\n                        if iszero(_82)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_19 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_19, returndatasize())\n                        }\n                        /// @src 86:3518:3545  \"rewardTracker.stake(amount)\"\n                        if _82\n                        {\n                            finalize_allocation_107616(_81)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        let _83 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        mstore(_83, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        let _84 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:3555:3569  \"vm.stopPrank()\" */ _83, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:3555:3569  \"vm.stopPrank()\" */ _83, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        if iszero(_84)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_20 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_20, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_20, returndatasize())\n                        }\n                        /// @src 86:3555:3569  \"vm.stopPrank()\"\n                        if _84\n                        {\n                            finalize_allocation_107616(_83)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_23 := and(shr(8, sload(/** @src 86:3114:3126  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _85 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        mstore(_85, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_85, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_23)\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _86 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\" */ _85, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\" */ _85, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(_86)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_21 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_21, returndatasize())\n                        }\n                        /// @src 86:3579:3606  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if _86\n                        {\n                            finalize_allocation_107616(_85)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_24 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\"\n                        if iszero(extcodesize(value_24))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\"\n                        let _87 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\"\n                        mstore(_87, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x69de9b93))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\" */ add(_87, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\"\n                        let _88 := call(gas(), value_24, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\" */ _87, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\" */ _87, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\"\n                        if iszero(_88)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_22 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_22, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_22, returndatasize())\n                        }\n                        /// @src 86:3616:3652  \"vester.setHasMaxVestableAmount(true)\"\n                        if _88\n                        {\n                            finalize_allocation_107616(_87)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_25 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_26 := and(sload(/** @src 86:3680:3687  \"HANDLER\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\"\n                        if iszero(extcodesize(value_25))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\"\n                        let _89 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\"\n                        mstore(_89, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x9cb7de4b))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\" */ add(_89, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_26)\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\" */ _89, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\"\n                        let _90 := call(gas(), value_25, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\" */ _89, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\" */ _89, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\"\n                        if iszero(_90)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_23 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_23, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_23, returndatasize())\n                        }\n                        /// @src 86:3662:3694  \"vester.setHandler(HANDLER, true)\"\n                        if _90\n                        {\n                            finalize_allocation_107616(_89)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_27 := and(sload(/** @src 86:3680:3687  \"HANDLER\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        let _91 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        mstore(_91, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3704:3726  \"vm.startPrank(HANDLER)\" */ add(_91, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_27)\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        let _92 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:3704:3726  \"vm.startPrank(HANDLER)\" */ _91, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3704:3726  \"vm.startPrank(HANDLER)\" */ _91, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        if iszero(_92)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_24 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_24, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_24, returndatasize())\n                        }\n                        /// @src 86:3704:3726  \"vm.startPrank(HANDLER)\"\n                        if _92\n                        {\n                            finalize_allocation_107616(_91)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_28 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_29 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if iszero(extcodesize(value_28))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        let _93 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        mstore(_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xd0b038b7))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ add(_93, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_29)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _93, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:3176:3184  \"10 ether\" */ 0x8ac7230489e80000)\n                        /// @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        let _94 := call(gas(), value_28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _93, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _93, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if iszero(_94)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_25 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_25, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_25, returndatasize())\n                        }\n                        /// @src 86:3736:3811  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if _94\n                        {\n                            finalize_allocation_107616(_93)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_30 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_31 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if iszero(extcodesize(value_30))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        let _95 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        mstore(_95, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x107c89c9))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\" */ add(_95, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_31)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _95, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:3217:3225  \"15 ether\" */ 0xd02ab486cedc0000)\n                        /// @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        let _96 := call(gas(), value_30, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _95, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _95, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if iszero(_96)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_26 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_26, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_26, returndatasize())\n                        }\n                        /// @src 86:3904:3947  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if _96\n                        {\n                            finalize_allocation_107616(_95)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_32 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        let _97 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        mstore(_97, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3957:3977  \"vm.startPrank(USER1)\" */ add(_97, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_32)\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        let _98 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:3957:3977  \"vm.startPrank(USER1)\" */ _97, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3957:3977  \"vm.startPrank(USER1)\" */ _97, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        if iszero(_98)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_27 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_27, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_27, returndatasize())\n                        }\n                        /// @src 86:3957:3977  \"vm.startPrank(USER1)\"\n                        if _98\n                        {\n                            finalize_allocation_107616(_97)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_33 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        let value_34 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        let _99 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        mstore(_99, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _78)\n                        /// @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        let _100 := call(gas(), value_33, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\" */ _99, sub(abi_encode_address_uint256(add(_99, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\" */ value_34), _99), _99, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        if iszero(_100)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_28 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_28, returndatasize())\n                        }\n                        /// @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        if _100\n                        {\n                            let _101 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:3991:4041  \"rewardTracker.approve(address(vester), sumRewards)\" */ returndatasize()) { _101 := returndatasize() }\n                            finalize_allocation(_99, _101)\n                            pop(abi_decode_bool_fromMemory(_99, add(_99, _101)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_35 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:4055:4081  \"vester.deposit(sumRewards)\"\n                        if iszero(extcodesize(value_35))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4055:4081  \"vester.deposit(sumRewards)\"\n                        let _102 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4055:4081  \"vester.deposit(sumRewards)\"\n                        mstore(_102, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xb6b55f25))\n                        mstore(/** @src 86:4055:4081  \"vester.deposit(sumRewards)\" */ add(_102, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x015af1d78b58c40000)\n                        /// @src 86:4055:4081  \"vester.deposit(sumRewards)\"\n                        let _103 := call(gas(), value_35, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4055:4081  \"vester.deposit(sumRewards)\" */ _102, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4055:4081  \"vester.deposit(sumRewards)\" */ _102, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4055:4081  \"vester.deposit(sumRewards)\"\n                        if iszero(_103)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_29 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_29, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_29, returndatasize())\n                        }\n                        /// @src 86:4055:4081  \"vester.deposit(sumRewards)\"\n                        if _103\n                        {\n                            finalize_allocation_107616(_102)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        let _104 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        mstore(_104, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        let _105 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:4091:4105  \"vm.stopPrank()\" */ _104, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:4091:4105  \"vm.stopPrank()\" */ _104, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        if iszero(_105)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_30 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_30, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_30, returndatasize())\n                        }\n                        /// @src 86:4091:4105  \"vm.stopPrank()\"\n                        if _105\n                        {\n                            finalize_allocation_107616(_104)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_36 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_37 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                        let _106 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                        mstore(_106, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4124:4147  \"vester.balanceOf(USER1)\" */ add(_106, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_37)\n                        /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                        let _107 := staticcall(gas(), value_36, _106, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4124:4147  \"vester.balanceOf(USER1)\" */ _106, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                        if iszero(_107)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_31 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_31, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_31, returndatasize())\n                        }\n                        /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                        let expr_4 := _1\n                        if _107\n                        {\n                            let _108 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:4124:4147  \"vester.balanceOf(USER1)\" */ returndatasize()) { _108 := returndatasize() }\n                            finalize_allocation(_106, _108)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:4124:4147  \"vester.balanceOf(USER1)\" */ add(_106, _108), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _106), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:4124:4147  \"vester.balanceOf(USER1)\"\n                            expr_4 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_106)\n                        }\n                        /// @src 86:4149:4159  \"sumRewards\"\n                        fun_assertEq(expr_4)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        return(_1, _1)\n                    }\n                    case 0x1ed7831c {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let pos_32 := mload(64)\n                        let pos_33 := pos_32\n                        let length_3 := sload(/** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(pos_32, length_3)\n                        let _109 := 0x20\n                        pos_32 := add(pos_32, _109)\n                        mstore(_1, /** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                        let i := _1\n                        for { } lt(i, length_3) { i := add(i, 1) }\n                        {\n                            mstore(pos_32, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                            pos_32 := add(pos_32, _109)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(pos_33, sub(pos_32, pos_33))\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_33), memPos))\n                    }\n                    case 0x2ade3880 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let length_4 := sload(/** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _110 := array_allocation_size_array_string_dyn(length_4)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, _110)\n                        mstore(memPtr_2, length_4)\n                        let mpos := memPtr_2\n                        let _111 := 0x20\n                        mpos := add(memPtr_2, _111)\n                        let mpos_1 := mpos\n                        mstore(_1, /** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                        let i_1 := _1\n                        for { } lt(i_1, length_4) { i_1 := add(i_1, 1) }\n                        {\n                            let memPtr_3 := mload(64)\n                            finalize_allocation_107662(memPtr_3)\n                            mstore(memPtr_3, and(sload(spos), sub(shl(160, 1), 1)))\n                            let _112 := 1\n                            let _113 := add(spos, _112)\n                            let length_5 := sload(_113)\n                            let _114 := array_allocation_size_array_string_dyn(length_5)\n                            let memPtr_4 := mload(64)\n                            finalize_allocation(memPtr_4, _114)\n                            mstore(memPtr_4, length_5)\n                            let mpos_2 := memPtr_4\n                            mpos_2 := add(memPtr_4, _111)\n                            mstore(0, _113)\n                            let spos_1 := keccak256(0, _111)\n                            let i_2 := 0\n                            for { } lt(i_2, length_5) { i_2 := add(i_2, _112) }\n                            {\n                                let memPtr_5 := mload(64)\n                                finalize_allocation(memPtr_5, sub(abi_encode_string_storage(spos_1, memPtr_5), memPtr_5))\n                                mstore(mpos_2, memPtr_5)\n                                mpos_2 := add(mpos_2, _111)\n                                spos_1 := add(spos_1, _112)\n                            }\n                            mstore(add(memPtr_3, _111), memPtr_4)\n                            mstore(mpos, memPtr_3)\n                            mpos := add(mpos, _111)\n                            spos := add(spos, 2)\n                        }\n                        let memPos_1 := mload(64)\n                        let tail := add(memPos_1, _111)\n                        mstore(memPos_1, _111)\n                        let pos_34 := tail\n                        let length_6 := mload(memPtr_2)\n                        mstore(tail, length_6)\n                        pos_34 := add(memPos_1, 64)\n                        let _115 := 5\n                        let tail_1 := add(add(memPos_1, shl(_115, length_6)), 64)\n                        let srcPtr_1 := mpos_1\n                        let i_3 := _1\n                        for { } lt(i_3, length_6) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(pos_34, add(sub(tail_1, memPos_1), not(63)))\n                            let _116 := mload(srcPtr_1)\n                            let tail_2 := add(tail_1, 64)\n                            mstore(tail_1, and(mload(_116), sub(shl(160, 1), 1)))\n                            let memberValue0 := mload(add(_116, _111))\n                            mstore(add(tail_1, _111), 64)\n                            let pos_35 := tail_2\n                            let length_7 := mload(memberValue0)\n                            mstore(tail_2, length_7)\n                            let _117 := 96\n                            pos_35 := add(tail_1, _117)\n                            let tail_3 := add(add(tail_1, shl(_115, length_7)), _117)\n                            let srcPtr_2 := add(memberValue0, _111)\n                            let i_4 := _1\n                            for { } lt(i_4, length_7) { i_4 := add(i_4, 1) }\n                            {\n                                mstore(pos_35, add(sub(tail_3, tail_1), not(95)))\n                                tail_3 := abi_encode_string(mload(srcPtr_2), tail_3)\n                                srcPtr_2 := add(srcPtr_2, _111)\n                                pos_35 := add(pos_35, _111)\n                            }\n                            tail_1 := tail_3\n                            srcPtr_1 := add(srcPtr_1, _111)\n                            pos_34 := add(pos_34, _111)\n                        }\n                        return(memPos_1, sub(tail_1, memPos_1))\n                    }\n                    case 0x3e5e3c23 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let pos_36 := mload(64)\n                        let pos_37 := pos_36\n                        let length_8 := sload(/** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(pos_36, length_8)\n                        let _118 := 0x20\n                        pos_36 := add(pos_36, _118)\n                        mstore(_1, /** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let srcPtr_3 := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                        let i_5 := _1\n                        for { } lt(i_5, length_8) { i_5 := add(i_5, 1) }\n                        {\n                            mstore(pos_36, and(sload(srcPtr_3), sub(shl(160, 1), 1)))\n                            pos_36 := add(pos_36, _118)\n                            srcPtr_3 := add(srcPtr_3, 1)\n                        }\n                        finalize_allocation(pos_37, sub(pos_36, pos_37))\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, pos_37), memPos_2))\n                    }\n                    case 0x3f7286f4 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let pos_38 := mload(64)\n                        let pos_39 := pos_38\n                        let length_9 := sload(/** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(pos_38, length_9)\n                        let _119 := 0x20\n                        pos_38 := add(pos_38, _119)\n                        mstore(_1, /** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let srcPtr_4 := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                        let i_6 := _1\n                        for { } lt(i_6, length_9) { i_6 := add(i_6, 1) }\n                        {\n                            mstore(pos_38, and(sload(srcPtr_4), sub(shl(160, 1), 1)))\n                            pos_38 := add(pos_38, _119)\n                            srcPtr_4 := add(srcPtr_4, 1)\n                        }\n                        finalize_allocation(pos_39, sub(pos_38, pos_39))\n                        let memPos_3 := mload(64)\n                        return(memPos_3, sub(abi_encode_array_address_dyn(memPos_3, pos_39), memPos_3))\n                    }\n                    case 0x5ebb6a75 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret := fun_deployRewardDistributor()\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, and(ret, sub(shl(160, 1), 1)))\n                        return(memPos_4, 32)\n                    }\n                    case 0x66d9a9a0 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let length_10 := sload(/** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _120 := array_allocation_size_array_string_dyn(length_10)\n                        let memPtr_6 := mload(64)\n                        finalize_allocation(memPtr_6, _120)\n                        mstore(memPtr_6, length_10)\n                        let mpos_3 := memPtr_6\n                        mpos_3 := add(memPtr_6, 0x20)\n                        mstore(_1, /** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let spos_2 := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                        let i_7 := _1\n                        for { } lt(i_7, length_10) { i_7 := add(i_7, 1) }\n                        {\n                            let memPtr_7 := mload(64)\n                            finalize_allocation_107662(memPtr_7)\n                            mstore(memPtr_7, and(sload(spos_2), sub(shl(160, 1), 1)))\n                            let _121 := add(spos_2, 1)\n                            let pos_40 := mload(64)\n                            let pos_41 := pos_40\n                            let length_11 := sload(_121)\n                            mstore(pos_40, length_11)\n                            pos_40 := add(pos_40, 0x20)\n                            mstore(_1, _121)\n                            let srcPtr_5 := keccak256(_1, 0x20)\n                            let itemCounter := _1\n                            for { }\n                            lt(add(itemCounter, 7), length_11)\n                            {\n                                itemCounter := add(itemCounter, 8)\n                            }\n                            {\n                                let data := sload(srcPtr_5)\n                                let _122 := shl(224, 0xffffffff)\n                                mstore(pos_40, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, data), _122))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _123 := 192\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(add(pos_40, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_123, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data), _122))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _124 := 160\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(add(pos_40, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_124, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data), _122))\n                                let _125 := 96\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _126 := 128\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(add(pos_40, _125), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_126, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data), _122))\n                                mstore(add(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _126), and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _125, data), _122))\n                                mstore(add(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _124), and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64, data), _122))\n                                mstore(add(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _123), and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, data), _122))\n                                mstore(add(pos_40, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data, _122))\n                                pos_40 := add(pos_40, 256)\n                                srcPtr_5 := add(srcPtr_5, 1)\n                            }\n                            let data_1 := sload(srcPtr_5)\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 96, data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64, data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_11)\n                            {\n                                mstore(pos_40, and(data_1, shl(224, 0xffffffff)))\n                                pos_40 := add(pos_40, 0x20)\n                            }\n                            finalize_allocation(pos_41, sub(pos_40, pos_41))\n                            mstore(add(memPtr_7, 0x20), pos_41)\n                            mstore(mpos_3, memPtr_7)\n                            mpos_3 := add(mpos_3, 0x20)\n                            spos_2 := add(spos_2, 2)\n                        }\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_5, memPtr_6), memPos_5))\n                    }\n                    case 0x6db44e7f {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _127 := sload(/** @src 86:4221:4233  \"TEAM_ADDRESS\" */ 0x1e)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_38 := and(sload(/** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _128 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_128, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_128, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_38)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _129 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _128, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _128, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_129)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_42 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_42, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_42, returndatasize())\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _129\n                        {\n                            finalize_allocation_107616(_128)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_39 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(extcodesize(value_39))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _130 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        mstore(_130, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ add(_130, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), and(shr(8, _127), sub(shl(160, 1), 1)))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _131 := call(gas(), value_39, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _130, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _130, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(_131)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_43 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_43, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_43, returndatasize())\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if _131\n                        {\n                            finalize_allocation_107616(_130)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _132 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        mstore(_132, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _133 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _132, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _132, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(_133)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_44 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_44, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_44, returndatasize())\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if _133\n                        {\n                            finalize_allocation_107616(_132)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_40 := and(sload(/** @src 86:4429:4437  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_41 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let expr_mpos_6 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let _134 := add(expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(_134, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\" */ add(expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), value_41)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        finalize_allocation_250227(expr_mpos_6)\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        pop(staticcall(gas(), value_40, _134, mload(expr_mpos_6), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, _1))\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        let expr_component_mpos_1 := extract_returndata()\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ add(expr_component_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ expr_component_mpos_1)), expr_component_mpos_1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 9:6854:6876  \"self._target = _target\"\n                        update_storage_value_offsett_contract_ZFIToken_to_contract_ZFIToken(value_40)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7009:7018  \"self._sig\" */ 15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 9:7009:7018  \"self._sig\" */ 15), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(0xffffffff)), /** @src 4:27524:27534  \"0x70a08231\" */ 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let oldLen_1 := sload(/** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        if iszero(lt(oldLen_1, 18446744073709551616))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                            revert(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, 36)\n                        }\n                        let _135 := add(oldLen_1, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7505:7515  \"self._keys\" */ 14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _135)\n                        if iszero(lt(oldLen_1, _135))\n                        {\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            mstore(4, 0x32)\n                            revert(_1, 36)\n                        }\n                        mstore(_1, /** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(add(84800337471693920904250232874319843718400766719524250287777680170677855896573, oldLen_1), value_41)\n                        let value_42 := and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_43 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, sload(/** @src 9:7009:7018  \"self._sig\" */ 15))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _136 := sload(/** @src 9:15610:15621  \"self._depth\" */ 16)\n                        /// @src 9:15653:15687  \"stdStorageSafe.getCallParams(self)\"\n                        let expr_mpos_7 := fun_getCallParams_107628()\n                        /// @src 9:15703:15718  \"self.finds[who]\"\n                        let _137 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_42)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _138 := and(value_43, shl(224, 0xffffffff))\n                        mstore(_1, _138)\n                        mstore(32, _137)\n                        let dataSlot_3 := keccak256(_1, 64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_8 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _139 := add(expr_mpos_8, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_12 := mload(expr_mpos_7)\n                        let _140 := add(expr_mpos_7, 32)\n                        copy_memory_to_memory_with_cleanup(_140, _139, length_12)\n                        let _141 := add(/** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_8, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_12)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_141, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _136)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _142 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _141, /** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_8)\n                        mstore(expr_mpos_8, add(_142, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_8, add(_142, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _139, mload(/** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_8)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_3)\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        if /** @src 9:15702:15780  \"!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:15703:15780  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(_1, 64), /** @src 9:15610:15621  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff))\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        {\n                            /// @src 9:13208:13241  \"stdStorageSafe.find(self, _clear)\"\n                            pop(fun_find())\n                        }\n                        /// @src 9:15857:15872  \"self.finds[who]\"\n                        let _143 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_42)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(_1, _138)\n                        mstore(32, _143)\n                        let dataSlot_4 := keccak256(_1, 64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_9 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _144 := add(expr_mpos_9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_13 := mload(expr_mpos_7)\n                        copy_memory_to_memory_with_cleanup(_140, _144, length_13)\n                        let _145 := add(/** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_13)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_145, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _136)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _146 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _145, /** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_9)\n                        mstore(expr_mpos_9, add(_146, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_9, add(_146, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _144, mload(/** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_9)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_4)\n                        let dataSlot_5 := keccak256(_1, 64)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _147 := sload(/** @src 9:15943:15958  \"data.offsetLeft\" */ add(dataSlot_5, /** @src 9:7505:7515  \"self._keys\" */ 1))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _148 := sload(/** @src 9:15961:15977  \"data.offsetRight\" */ add(dataSlot_5, /** @src 9:7009:7018  \"self._sig\" */ 2))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        if /** @src 9:15942:15982  \"(data.offsetLeft + data.offsetRight) > 0\" */ iszero(iszero(/** @src 9:15943:15977  \"data.offsetLeft + data.offsetRight\" */ checked_add_uint256(_147, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _148)))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        {\n                            /// @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\"\n                            let _149 := checked_add_uint256(_147, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _148)\n                            /// @src 9:16021:16024  \"256\"\n                            let _150 := 0x0100\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if gt(sub(/** @src 9:16021:16024  \"256\" */ _150, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _149), /** @src 9:16021:16024  \"256\" */ _150)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            if gt(sub(/** @src 9:16021:16024  \"256\" */ _150, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _149), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _151 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            mstore(_151, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x348051d7))\n                            mstore(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_151, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), shl(sub(/** @src 9:16021:16024  \"256\" */ _150, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _149), /** @src 9:7505:7515  \"self._keys\" */ 1))\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _152 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _151, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _151, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            if iszero(_152)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_45 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_45, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_45, returndatasize())\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let expr_mpos_10 := _1\n                            if _152\n                            {\n                                let _153 := returndatasize()\n                                returndatacopy(_151, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _153)\n                                finalize_allocation(_151, _153)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_151, _153), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _151), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let offset_1 := mload(_151)\n                                if gt(offset_1, 0xffffffffffffffff)\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if iszero(slt(add(add(_151, offset_1), /** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_151, _153)))\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _154 := mload(add(_151, offset_1))\n                                let _155 := array_allocation_size_bytes(_154)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                let memPtr_8 := mload(64)\n                                finalize_allocation(memPtr_8, _155)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_8, _154)\n                                if gt(add(add(add(_151, offset_1), _154), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_151, _153))\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                copy_memory_to_memory_with_cleanup(add(add(_151, offset_1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_8, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _154)\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                expr_mpos_10 := memPtr_8\n                            }\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let expr_mpos_11 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ add(expr_mpos_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Pac\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"ked slot. We can't fit value gre\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_11, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96), \"ater than \")\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let length_14 := mload(expr_mpos_10)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos_10, 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_11, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_14)\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let _156 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_14), /** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_11)\n                            mstore(expr_mpos_11, add(_156, 74))\n                            finalize_allocation(expr_mpos_11, add(_156, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106))\n                            if iszero(/** @src 9:16103:16124  \"uint256(set) < maxVal\" */ lt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x015af1d78b58c40000, shl(sub(/** @src 9:16021:16024  \"256\" */ _150, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _149), /** @src 9:7505:7515  \"self._keys\" */ 1)))\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                let memPtr_9 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_9, shl(229, 4594637))\n                                mstore(add(memPtr_9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                revert(memPtr_9, sub(abi_encode_string(expr_mpos_11, add(memPtr_9, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_9))\n                            }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _157 := sload(/** @src 9:16445:16454  \"data.slot\" */ dataSlot_5)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _158 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        mstore(_158, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _159 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ _158, sub(abi_encode_address_bytes32(add(_158, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ value_42, _157), _158), _158, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        if iszero(_159)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_46 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_46, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_46, returndatasize())\n                        }\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let expr_5 := _1\n                        if _159\n                        {\n                            let _160 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ returndatasize()) { _160 := returndatasize() }\n                            finalize_allocation(_158, _160)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ add(_158, _160), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _158), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            expr_5 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_158)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _161 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        mstore(_161, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _162 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _161, sub(abi_encode_address_bytes32_bytes32(add(_161, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ value_42, _157, /** @src 9:12656:12748  \"(uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)) | (varValue << offsetRight)\" */ or(/** @src 9:12657:12719  \"uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr_5, /** @src 9:12677:12719  \"~getMaskByOffsets(offsetLeft, offsetRight)\" */ not(/** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _148, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _148, _147)), /** @src 9:7505:7515  \"self._keys\" */ 1), /** @src 9:12275:12388  \"assembly {...\" */ not(0))))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(_148, 0x015af1d78b58c40000))), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _161), _161, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(_162)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_47 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_47, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_47, returndatasize())\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if _162\n                        {\n                            finalize_allocation_107616(_161)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 9:16678:16709  \"stdStorageSafe.callTarget(self)\"\n                        let expr_component_2, expr_component_3 := fun_callTarget_107674()\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        let expr_6 := /** @src 9:16724:16732  \"!success\" */ iszero(expr_component_2)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ iszero(/** @src 9:16724:16732  \"!success\" */ expr_6)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        {\n                            expr_6 := /** @src 9:16736:16753  \"callResult != set\" */ iszero(eq(expr_component_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x015af1d78b58c40000))\n                        }\n                        /// @src 9:16720:16896  \"if (!success || callResult != set) {...\"\n                        if expr_6\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let _163 := sload(/** @src 9:16791:16800  \"data.slot\" */ dataSlot_5)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _164 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            mstore(_164, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _165 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ _164, sub(abi_encode_address_bytes32_bytes32(add(_164, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ value_42, _163, expr_5), _164), _164, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(_165)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_48 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_48, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_48, returndatasize())\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if _165\n                            {\n                                finalize_allocation_107616(_164)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            let _166 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            mstore(_166, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                            mstore(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ add(_166, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                            mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _166, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 51)\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _166, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Fai\")\n                            mstore(add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _166, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"led to write value.\")\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            revert(_166, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                        }\n                        /// @src 9:14785:14789  \"self\"\n                        fun_clear()\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_44 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        let _167 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        mstore(_167, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4504:4524  \"vm.startPrank(USER1)\" */ add(_167, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_44)\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        let _168 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:4504:4524  \"vm.startPrank(USER1)\" */ _167, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4504:4524  \"vm.startPrank(USER1)\" */ _167, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        if iszero(_168)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_49 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_49, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_49, returndatasize())\n                        }\n                        /// @src 86:4504:4524  \"vm.startPrank(USER1)\"\n                        if _168\n                        {\n                            finalize_allocation_107616(_167)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_45 := and(sload(/** @src 86:4429:4437  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_46 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        let _169 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        mstore(_169, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x095ea7b3))\n                        /// @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        let _170 := call(gas(), value_45, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\" */ _169, sub(abi_encode_address_uint256(add(_169, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\" */ value_46), _169), _169, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        if iszero(_170)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_50 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_50, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_50, returndatasize())\n                        }\n                        /// @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        if _170\n                        {\n                            let _171 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:4534:4586  \"zfiToken.approve(address(rewardTracker), sumRewards)\" */ returndatasize()) { _171 := returndatasize() }\n                            finalize_allocation(_169, _171)\n                            pop(abi_decode_bool_fromMemory(_169, add(_169, _171)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_47 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\"\n                        if iszero(extcodesize(value_47))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\"\n                        let _172 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\"\n                        mstore(_172, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x534a7e1d))\n                        mstore(/** @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\" */ add(_172, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x015af1d78b58c40000)\n                        /// @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\"\n                        let _173 := call(gas(), value_47, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\" */ _172, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\" */ _172, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\"\n                        if iszero(_173)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_51 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_51, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_51, returndatasize())\n                        }\n                        /// @src 86:4596:4627  \"rewardTracker.stake(sumRewards)\"\n                        if _173\n                        {\n                            finalize_allocation_107616(_172)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_48 := and(shr(8, sload(/** @src 86:4221:4233  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _174 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        mstore(_174, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_174, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_48)\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _175 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\" */ _174, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\" */ _174, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(_175)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_52 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_52, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_52, returndatasize())\n                        }\n                        /// @src 86:4637:4664  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if _175\n                        {\n                            finalize_allocation_107616(_174)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_49 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\"\n                        if iszero(extcodesize(value_49))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\"\n                        let _176 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\"\n                        mstore(_176, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x69de9b93))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\" */ add(_176, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\"\n                        let _177 := call(gas(), value_49, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\" */ _176, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\" */ _176, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\"\n                        if iszero(_177)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_53 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_53, returndatasize())\n                        }\n                        /// @src 86:4674:4710  \"vester.setHasMaxVestableAmount(true)\"\n                        if _177\n                        {\n                            finalize_allocation_107616(_176)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_50 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_51 := and(sload(/** @src 86:4738:4745  \"HANDLER\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\"\n                        if iszero(extcodesize(value_50))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\"\n                        let _178 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\"\n                        mstore(_178, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x9cb7de4b))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\" */ add(_178, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_51)\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\" */ _178, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\"\n                        let _179 := call(gas(), value_50, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\" */ _178, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\" */ _178, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\"\n                        if iszero(_179)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_54 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_54, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_54, returndatasize())\n                        }\n                        /// @src 86:4720:4752  \"vester.setHandler(HANDLER, true)\"\n                        if _179\n                        {\n                            finalize_allocation_107616(_178)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_52 := and(sload(/** @src 86:4738:4745  \"HANDLER\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        let _180 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        mstore(_180, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4762:4784  \"vm.startPrank(HANDLER)\" */ add(_180, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_52)\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        let _181 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:4762:4784  \"vm.startPrank(HANDLER)\" */ _180, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4762:4784  \"vm.startPrank(HANDLER)\" */ _180, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        if iszero(_181)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_55 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_55, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_55, returndatasize())\n                        }\n                        /// @src 86:4762:4784  \"vm.startPrank(HANDLER)\"\n                        if _181\n                        {\n                            finalize_allocation_107616(_180)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_53 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_54 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if iszero(extcodesize(value_53))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        let _182 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        mstore(_182, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xd0b038b7))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ add(_182, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_54)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _182, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:4283:4291  \"10 ether\" */ 0x8ac7230489e80000)\n                        /// @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        let _183 := call(gas(), value_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _182, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _182, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if iszero(_183)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_56 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_56, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_56, returndatasize())\n                        }\n                        /// @src 86:4794:4869  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if _183\n                        {\n                            finalize_allocation_107616(_182)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_55 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_56 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if iszero(extcodesize(value_55))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        let _184 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        mstore(_184, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x107c89c9))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\" */ add(_184, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_56)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _184, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:4324:4332  \"15 ether\" */ 0xd02ab486cedc0000)\n                        /// @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        let _185 := call(gas(), value_55, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _184, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _184, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if iszero(_185)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_57 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_57, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_57, returndatasize())\n                        }\n                        /// @src 86:4879:4922  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if _185\n                        {\n                            finalize_allocation_107616(_184)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_57 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        let _186 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        mstore(_186, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:4932:4952  \"vm.startPrank(USER1)\" */ add(_186, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_57)\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        let _187 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:4932:4952  \"vm.startPrank(USER1)\" */ _186, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:4932:4952  \"vm.startPrank(USER1)\" */ _186, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        if iszero(_187)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_58 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_58, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_58, returndatasize())\n                        }\n                        /// @src 86:4932:4952  \"vm.startPrank(USER1)\"\n                        if _187\n                        {\n                            finalize_allocation_107616(_186)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_58 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:5000:5026  \"vester.deposit(sumRewards)\"\n                        if iszero(extcodesize(value_58))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:5000:5026  \"vester.deposit(sumRewards)\"\n                        let _188 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5000:5026  \"vester.deposit(sumRewards)\"\n                        mstore(_188, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xb6b55f25))\n                        mstore(/** @src 86:5000:5026  \"vester.deposit(sumRewards)\" */ add(_188, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x015af1d78b58c40000)\n                        /// @src 86:5000:5026  \"vester.deposit(sumRewards)\"\n                        let _189 := call(gas(), value_58, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:5000:5026  \"vester.deposit(sumRewards)\" */ _188, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5000:5026  \"vester.deposit(sumRewards)\" */ _188, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:5000:5026  \"vester.deposit(sumRewards)\"\n                        if iszero(_189)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_59 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_59, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_59, returndatasize())\n                        }\n                        /// @src 86:5000:5026  \"vester.deposit(sumRewards)\"\n                        if _189\n                        {\n                            finalize_allocation_107616(_188)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        let _190 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        mstore(_190, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        let _191 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:5036:5050  \"vm.stopPrank()\" */ _190, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:5036:5050  \"vm.stopPrank()\" */ _190, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        if iszero(_191)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_60 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_60, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_60, returndatasize())\n                        }\n                        /// @src 86:5036:5050  \"vm.stopPrank()\"\n                        if _191\n                        {\n                            finalize_allocation_107616(_190)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_59 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_60 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                        let _192 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                        mstore(_192, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5069:5092  \"vester.balanceOf(USER1)\" */ add(_192, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_60)\n                        /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                        let _193 := staticcall(gas(), value_59, _192, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5069:5092  \"vester.balanceOf(USER1)\" */ _192, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                        if iszero(_193)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_61 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_61, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_61, returndatasize())\n                        }\n                        /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                        let expr_7 := _1\n                        if _193\n                        {\n                            let _194 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5069:5092  \"vester.balanceOf(USER1)\" */ returndatasize()) { _194 := returndatasize() }\n                            finalize_allocation(_192, _194)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5069:5092  \"vester.balanceOf(USER1)\" */ add(_192, _194), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _192), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5069:5092  \"vester.balanceOf(USER1)\"\n                            expr_7 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_192)\n                        }\n                        /// @src 86:5094:5104  \"sumRewards\"\n                        fun_assertEq(expr_7)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_61 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                        let _195 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                        mstore(_195, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\" */ add(_195, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_59)\n                        /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                        let _196 := staticcall(gas(), value_61, _195, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\" */ _195, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                        if iszero(_196)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_62 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_62, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_62, returndatasize())\n                        }\n                        /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                        let expr_8 := _1\n                        if _196\n                        {\n                            let _197 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\" */ returndatasize()) { _197 := returndatasize() }\n                            finalize_allocation(_195, _197)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\" */ add(_195, _197), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _195), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5145:5185  \"rewardTracker.balanceOf(address(vester))\"\n                            expr_8 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_195)\n                        }\n                        /// @src 86:5195:5227  \"assertEq(0, vesterStakedBalance)\"\n                        fun_assertEq_107701(expr_8)\n                        /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                        let _198 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                        mstore(_198, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x10c1c103))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\" */ add(_198, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_59)\n                        /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                        let _199 := staticcall(gas(), value_61, _198, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\" */ _198, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                        if iszero(_199)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_63 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_63, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_63, returndatasize())\n                        }\n                        /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                        let expr_9 := _1\n                        if _199\n                        {\n                            let _200 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\" */ returndatasize()) { _200 := returndatasize() }\n                            finalize_allocation(_198, _200)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\" */ add(_198, _200), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _198), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5266:5310  \"rewardTracker.stakedAmounts(address(vester))\"\n                            expr_9 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_198)\n                        }\n                        /// @src 86:5320:5351  \"assertEq(0, vesterStakedAmount)\"\n                        fun_assertEq_107701(expr_9)\n                        /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                        let _201 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                        mstore(_201, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x10c1c103))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\" */ add(_201, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_60)\n                        /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                        let _202 := staticcall(gas(), value_61, _201, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\" */ _201, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                        if iszero(_202)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_64 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_64, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_64, returndatasize())\n                        }\n                        /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                        let expr_10 := _1\n                        if _202\n                        {\n                            let _203 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\" */ returndatasize()) { _203 := returndatasize() }\n                            finalize_allocation(_201, _203)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\" */ add(_201, _203), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _201), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5388:5422  \"rewardTracker.stakedAmounts(USER1)\"\n                            expr_10 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_201)\n                        }\n                        /// @src 86:5432:5461  \"assertEq(0, userStakedAmount)\"\n                        fun_assertEq_107701(expr_10)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let sum := add(/** @src 86:5479:5494  \"block.timestamp\" */ timestamp(), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        if gt(/** @src 86:5479:5494  \"block.timestamp\" */ timestamp(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sum)\n                        {\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, 36)\n                        }\n                        /// @src 86:5479:5516  \"block.timestamp + 1 + vestingDuration\"\n                        let expr_11 := checked_add_uint256(sum, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:5501:5516  \"vestingDuration\" */ 0x22))\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        let _204 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        mstore(_204, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\" */ add(_204, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_11)\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        let _205 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\" */ _204, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\" */ _204, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        if iszero(_205)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_65 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_65, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_65, returndatasize())\n                        }\n                        /// @src 86:5471:5517  \"vm.warp(block.timestamp + 1 + vestingDuration)\"\n                        if _205\n                        {\n                            finalize_allocation_107616(_204)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_62 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_63 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                        let _206 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                        mstore(_206, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5553:5576  \"vester.claimable(USER1)\" */ add(_206, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_63)\n                        /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                        let _207 := staticcall(gas(), value_62, _206, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5553:5576  \"vester.claimable(USER1)\" */ _206, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                        if iszero(_207)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_66 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_66, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_66, returndatasize())\n                        }\n                        /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                        let expr_12 := _1\n                        if _207\n                        {\n                            let _208 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5553:5576  \"vester.claimable(USER1)\" */ returndatasize()) { _208 := returndatasize() }\n                            finalize_allocation(_206, _208)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5553:5576  \"vester.claimable(USER1)\" */ add(_206, _208), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _206), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5553:5576  \"vester.claimable(USER1)\"\n                            expr_12 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_206)\n                        }\n                        /// @src 16:6421:6464  \"abi.encodeWithSignature(\\\"log(uint256)\\\", p0)\"\n                        let expr_mpos_12 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 16:6421:6464  \"abi.encodeWithSignature(\\\"log(uint256)\\\", p0)\"\n                        let _209 := add(expr_mpos_12, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 16:6421:6464  \"abi.encodeWithSignature(\\\"log(uint256)\\\", p0)\"\n                        mstore(_209, shl(224, 0xf82c50f1))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 16:6421:6464  \"abi.encodeWithSignature(\\\"log(uint256)\\\", p0)\" */ add(expr_mpos_12, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_12)\n                        /// @src 16:6421:6464  \"abi.encodeWithSignature(\\\"log(uint256)\\\", p0)\"\n                        mstore(expr_mpos_12, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)\n                        /// @src 16:6421:6464  \"abi.encodeWithSignature(\\\"log(uint256)\\\", p0)\"\n                        finalize_allocation_250227(expr_mpos_12)\n                        /// @src 16:1222:1381  \"assembly {...\"\n                        pop(staticcall(gas(), /** @src 16:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 16:1222:1381  \"assembly {...\" */ _209, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 16:1105:1119  \"payload.length\" */ expr_mpos_12), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, 0))\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        let _210 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        mstore(_210, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5625:5645  \"vm.startPrank(USER1)\" */ add(_210, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_63)\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        let _211 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:5625:5645  \"vm.startPrank(USER1)\" */ _210, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5625:5645  \"vm.startPrank(USER1)\" */ _210, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        if iszero(_211)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_67 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_67, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_67, returndatasize())\n                        }\n                        /// @src 86:5625:5645  \"vm.startPrank(USER1)\"\n                        if _211\n                        {\n                            finalize_allocation_107616(_210)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_64 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:5659:5673  \"vester.claim()\"\n                        let _212 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5659:5673  \"vester.claim()\"\n                        mstore(_212, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:5659:5673  \"vester.claim()\"\n                        let _213 := call(gas(), value_64, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:5659:5673  \"vester.claim()\" */ _212, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:5659:5673  \"vester.claim()\" */ _212, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5659:5673  \"vester.claim()\"\n                        if iszero(_213)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_68 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_68, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_68, returndatasize())\n                        }\n                        /// @src 86:5659:5673  \"vester.claim()\"\n                        if _213\n                        {\n                            let _214 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5659:5673  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5659:5673  \"vester.claim()\" */ returndatasize()) { _214 := returndatasize() }\n                            finalize_allocation(_212, _214)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5659:5673  \"vester.claim()\" */ add(_212, _214), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _212), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        let _215 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        mstore(_215, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        let _216 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:5683:5697  \"vm.stopPrank()\" */ _215, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:5683:5697  \"vm.stopPrank()\" */ _215, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        if iszero(_216)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_69 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_69, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_69, returndatasize())\n                        }\n                        /// @src 86:5683:5697  \"vm.stopPrank()\"\n                        if _216\n                        {\n                            finalize_allocation_107616(_215)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_65 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_66 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                        let _217 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                        mstore(_217, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5731:5754  \"vester.balanceOf(USER1)\" */ add(_217, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_66)\n                        /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                        let _218 := staticcall(gas(), value_65, _217, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5731:5754  \"vester.balanceOf(USER1)\" */ _217, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                        if iszero(_218)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_70 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_70, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_70, returndatasize())\n                        }\n                        /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                        let expr_13 := _1\n                        if _218\n                        {\n                            let _219 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5731:5754  \"vester.balanceOf(USER1)\" */ returndatasize()) { _219 := returndatasize() }\n                            finalize_allocation(_217, _219)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5731:5754  \"vester.balanceOf(USER1)\" */ add(_217, _219), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _217), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5731:5754  \"vester.balanceOf(USER1)\"\n                            expr_13 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_217)\n                        }\n                        /// @src 86:5764:5790  \"assertEq(0, vesterBalance)\"\n                        fun_assertEq_107701(expr_13)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_67 := and(sload(/** @src 86:4429:4437  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                        let _220 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_220, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\" */ add(_220, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_66)\n                        /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                        let _221 := staticcall(gas(), value_67, _220, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\" */ _220, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_221)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_71 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_71, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_71, returndatasize())\n                        }\n                        /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                        let expr_14 := _1\n                        if _221\n                        {\n                            let _222 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _222 := returndatasize() }\n                            finalize_allocation(_220, _222)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\" */ add(_220, _222), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _220), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:5825:5850  \"zfiToken.balanceOf(USER1)\"\n                            expr_14 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_220)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _223 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_223, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_223, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x015af1d78b58c40000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _223, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_14)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _224 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _223, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _223, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_224)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_72 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_72, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_72, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _224\n                        {\n                            finalize_allocation_107616(_223)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        return(_1, _1)\n                    }\n                    case 0x7c935183 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _225 := sload(/** @src 86:2447:2459  \"TEAM_ADDRESS\" */ 0x1e)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_68 := and(sload(/** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _226 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_226, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_226, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_68)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _227 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _226, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _226, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_227)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_73 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_73, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_73, returndatasize())\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _227\n                        {\n                            finalize_allocation_107616(_226)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_69 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(extcodesize(value_69))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _228 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        mstore(_228, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ add(_228, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), and(shr(8, _225), sub(shl(160, 1), 1)))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _229 := call(gas(), value_69, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _228, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _228, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(_229)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_74 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_74, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_74, returndatasize())\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if _229\n                        {\n                            finalize_allocation_107616(_228)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _230 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        mstore(_230, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _231 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _230, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _230, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(_231)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_75 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_75, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_75, returndatasize())\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if _231\n                        {\n                            finalize_allocation_107616(_230)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_70 := and(sload(/** @src 86:2517:2525  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_71 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let expr_mpos_13 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let _232 := add(expr_mpos_13, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(_232, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\" */ add(expr_mpos_13, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), value_71)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(expr_mpos_13, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        finalize_allocation_250227(expr_mpos_13)\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        pop(staticcall(gas(), value_70, _232, mload(expr_mpos_13), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, _1))\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        let expr_component_mpos_2 := extract_returndata()\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ add(expr_component_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ expr_component_mpos_2)), expr_component_mpos_2), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 9:6854:6876  \"self._target = _target\"\n                        update_storage_value_offsett_contract_ZFIToken_to_contract_ZFIToken(value_70)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7009:7018  \"self._sig\" */ 15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 9:7009:7018  \"self._sig\" */ 15), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(0xffffffff)), /** @src 4:27524:27534  \"0x70a08231\" */ 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let oldLen_2 := sload(/** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        if iszero(lt(oldLen_2, 18446744073709551616))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                            revert(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, 36)\n                        }\n                        let _233 := add(oldLen_2, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7505:7515  \"self._keys\" */ 14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _233)\n                        if iszero(lt(oldLen_2, _233))\n                        {\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            mstore(4, 0x32)\n                            revert(_1, 36)\n                        }\n                        mstore(_1, /** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(add(84800337471693920904250232874319843718400766719524250287777680170677855896573, oldLen_2), value_71)\n                        let value_72 := and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_73 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, sload(/** @src 9:7009:7018  \"self._sig\" */ 15))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _234 := sload(/** @src 9:15610:15621  \"self._depth\" */ 16)\n                        /// @src 9:15653:15687  \"stdStorageSafe.getCallParams(self)\"\n                        let expr_mpos_14 := fun_getCallParams_107628()\n                        /// @src 9:15703:15718  \"self.finds[who]\"\n                        let _235 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_72)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _236 := and(value_73, shl(224, 0xffffffff))\n                        mstore(_1, _236)\n                        mstore(32, _235)\n                        let dataSlot_6 := keccak256(_1, 64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_15 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _237 := add(expr_mpos_15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_15 := mload(expr_mpos_14)\n                        let _238 := add(expr_mpos_14, 32)\n                        copy_memory_to_memory_with_cleanup(_238, _237, length_15)\n                        let _239 := add(/** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_15)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_239, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _234)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _240 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _239, /** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_15)\n                        mstore(expr_mpos_15, add(_240, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_15, add(_240, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _237, mload(/** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_15)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_6)\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        if /** @src 9:15702:15780  \"!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:15703:15780  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(_1, 64), /** @src 9:15610:15621  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff))\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        {\n                            /// @src 9:13208:13241  \"stdStorageSafe.find(self, _clear)\"\n                            pop(fun_find_107716())\n                        }\n                        /// @src 9:15857:15872  \"self.finds[who]\"\n                        let _241 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_72)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(_1, _236)\n                        mstore(32, _241)\n                        let dataSlot_7 := keccak256(_1, 64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_16 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _242 := add(expr_mpos_16, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_16 := mload(expr_mpos_14)\n                        copy_memory_to_memory_with_cleanup(_238, _242, length_16)\n                        let _243 := add(/** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_16, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_16)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_243, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _234)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _244 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _243, /** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_16)\n                        mstore(expr_mpos_16, add(_244, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_16, add(_244, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _242, mload(/** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_16)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_7)\n                        let dataSlot_8 := keccak256(_1, 64)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _245 := sload(/** @src 9:15943:15958  \"data.offsetLeft\" */ add(dataSlot_8, /** @src 9:7505:7515  \"self._keys\" */ 1))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _246 := sload(/** @src 9:15961:15977  \"data.offsetRight\" */ add(dataSlot_8, /** @src 9:7009:7018  \"self._sig\" */ 2))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        if /** @src 9:15942:15982  \"(data.offsetLeft + data.offsetRight) > 0\" */ iszero(iszero(/** @src 9:15943:15977  \"data.offsetLeft + data.offsetRight\" */ checked_add_uint256(_245, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _246)))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        {\n                            /// @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\"\n                            let _247 := checked_add_uint256(_245, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _246)\n                            /// @src 9:16021:16024  \"256\"\n                            let _248 := 0x0100\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let diff := sub(/** @src 9:16021:16024  \"256\" */ _248, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _247)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if gt(diff, /** @src 9:16021:16024  \"256\" */ _248)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            if gt(diff, 0xff)\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _249 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            mstore(_249, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x348051d7))\n                            mstore(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_249, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), shl(diff, /** @src 9:7505:7515  \"self._keys\" */ 1))\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _250 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _249, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _249, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            if iszero(_250)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_76 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_76, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_76, returndatasize())\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let expr_mpos_17 := _1\n                            if _250\n                            {\n                                let _251 := returndatasize()\n                                returndatacopy(_249, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _251)\n                                finalize_allocation(_249, _251)\n                                let _252 := add(_249, _251)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(_252, _249), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let offset_2 := mload(_249)\n                                if gt(offset_2, 0xffffffffffffffff)\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if iszero(slt(add(add(_249, offset_2), /** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _252))\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _253 := mload(add(_249, offset_2))\n                                let _254 := array_allocation_size_bytes(_253)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                let memPtr_10 := mload(64)\n                                finalize_allocation(memPtr_10, _254)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_10, _253)\n                                if gt(add(add(add(_249, offset_2), _253), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _252)\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                copy_memory_to_memory_with_cleanup(add(add(_249, offset_2), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _253)\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                expr_mpos_17 := memPtr_10\n                            }\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let expr_mpos_18 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ add(expr_mpos_18, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Pac\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_18, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"ked slot. We can't fit value gre\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_18, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96), \"ater than \")\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let length_17 := mload(expr_mpos_17)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos_17, 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_18, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_17)\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let _255 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_18, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_17), /** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_18)\n                            mstore(expr_mpos_18, add(_255, 74))\n                            finalize_allocation(expr_mpos_18, add(_255, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106))\n                            if iszero(/** @src 9:16103:16124  \"uint256(set) < maxVal\" */ lt(/** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(diff, /** @src 9:7505:7515  \"self._keys\" */ 1)))\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                let memPtr_11 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_11, shl(229, 4594637))\n                                mstore(add(memPtr_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                revert(memPtr_11, sub(abi_encode_string(expr_mpos_18, add(memPtr_11, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_11))\n                            }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _256 := sload(/** @src 9:16445:16454  \"data.slot\" */ dataSlot_8)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _257 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        mstore(_257, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _258 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ _257, sub(abi_encode_address_bytes32(add(_257, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ value_72, _256), _257), _257, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        if iszero(_258)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_77 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_77, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_77, returndatasize())\n                        }\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let expr_15 := _1\n                        if _258\n                        {\n                            let _259 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ returndatasize()) { _259 := returndatasize() }\n                            finalize_allocation(_257, _259)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ add(_257, _259), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _257), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            expr_15 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_257)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _260 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        mstore(_260, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _261 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _260, sub(abi_encode_address_bytes32_bytes32(add(_260, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ value_72, _256, /** @src 9:12656:12748  \"(uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)) | (varValue << offsetRight)\" */ or(/** @src 9:12657:12719  \"uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr_15, /** @src 9:12677:12719  \"~getMaskByOffsets(offsetLeft, offsetRight)\" */ not(/** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _246, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _246, _245)), /** @src 9:7505:7515  \"self._keys\" */ 1), /** @src 9:12275:12388  \"assembly {...\" */ not(0))))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(_246, /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000))), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _260), _260, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(_261)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_78 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_78, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_78, returndatasize())\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if _261\n                        {\n                            finalize_allocation_107616(_260)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 9:16678:16709  \"stdStorageSafe.callTarget(self)\"\n                        let expr_component_4, expr_component_5 := fun_callTarget_107674()\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        let expr_16 := /** @src 9:16724:16732  \"!success\" */ iszero(expr_component_4)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ iszero(/** @src 9:16724:16732  \"!success\" */ expr_16)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        {\n                            expr_16 := /** @src 9:16736:16753  \"callResult != set\" */ iszero(eq(expr_component_5, /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000))\n                        }\n                        /// @src 9:16720:16896  \"if (!success || callResult != set) {...\"\n                        if expr_16\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let _262 := sload(/** @src 9:16791:16800  \"data.slot\" */ dataSlot_8)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _263 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            mstore(_263, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _264 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ _263, sub(abi_encode_address_bytes32_bytes32(add(_263, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ value_72, _262, expr_15), _263), _263, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(_264)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_79 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_79, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_79, returndatasize())\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if _264\n                            {\n                                finalize_allocation_107616(_263)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            let _265 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            mstore(_265, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                            mstore(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ add(_265, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                            mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _265, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 51)\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _265, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Fai\")\n                            mstore(add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _265, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"led to write value.\")\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            revert(_265, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                        }\n                        /// @src 9:14785:14789  \"self\"\n                        fun_clear()\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_74 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        let _266 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        mstore(_266, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2588:2608  \"vm.startPrank(USER1)\" */ add(_266, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_74)\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        let _267 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2588:2608  \"vm.startPrank(USER1)\" */ _266, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2588:2608  \"vm.startPrank(USER1)\" */ _266, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        if iszero(_267)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_80 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_80, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_80, returndatasize())\n                        }\n                        /// @src 86:2588:2608  \"vm.startPrank(USER1)\"\n                        if _267\n                        {\n                            finalize_allocation_107616(_266)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_75 := and(sload(/** @src 86:2517:2525  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_76 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        let _268 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _269 := shl(224, 0x095ea7b3)\n                        /// @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        mstore(_268, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _269)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\" */ add(_268, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_76)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\" */ _268, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        let _270 := call(gas(), value_75, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\" */ _268, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\" */ _268, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        if iszero(_270)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_81 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_81, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_81, returndatasize())\n                        }\n                        /// @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\"\n                        if _270\n                        {\n                            let _271 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:2618:2666  \"zfiToken.approve(address(rewardTracker), amount)\" */ returndatasize()) { _271 := returndatasize() }\n                            finalize_allocation(_268, _271)\n                            pop(abi_decode_bool_fromMemory(_268, add(_268, _271)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_77 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:2676:2703  \"rewardTracker.stake(amount)\"\n                        if iszero(extcodesize(value_77))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2676:2703  \"rewardTracker.stake(amount)\"\n                        let _272 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2676:2703  \"rewardTracker.stake(amount)\"\n                        mstore(_272, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x534a7e1d))\n                        mstore(/** @src 86:2676:2703  \"rewardTracker.stake(amount)\" */ add(_272, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 86:2676:2703  \"rewardTracker.stake(amount)\"\n                        let _273 := call(gas(), value_77, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2676:2703  \"rewardTracker.stake(amount)\" */ _272, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2676:2703  \"rewardTracker.stake(amount)\" */ _272, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2676:2703  \"rewardTracker.stake(amount)\"\n                        if iszero(_273)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_82 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_82, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_82, returndatasize())\n                        }\n                        /// @src 86:2676:2703  \"rewardTracker.stake(amount)\"\n                        if _273\n                        {\n                            finalize_allocation_107616(_272)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        let _274 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        mstore(_274, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        let _275 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2713:2727  \"vm.stopPrank()\" */ _274, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2713:2727  \"vm.stopPrank()\" */ _274, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        if iszero(_275)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_83 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_83, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_83, returndatasize())\n                        }\n                        /// @src 86:2713:2727  \"vm.stopPrank()\"\n                        if _275\n                        {\n                            finalize_allocation_107616(_274)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_78 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2750:2762  \"vester.gov()\"\n                        let _276 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2750:2762  \"vester.gov()\"\n                        mstore(_276, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x12d43a51))\n                        /// @src 86:2750:2762  \"vester.gov()\"\n                        let _277 := staticcall(gas(), value_78, _276, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2750:2762  \"vester.gov()\" */ _276, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:2750:2762  \"vester.gov()\"\n                        if iszero(_277)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_84 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_84, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_84, returndatasize())\n                        }\n                        /// @src 86:2750:2762  \"vester.gov()\"\n                        let expr_17 := _1\n                        if _277\n                        {\n                            let _278 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:2750:2762  \"vester.gov()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:2750:2762  \"vester.gov()\" */ returndatasize()) { _278 := returndatasize() }\n                            finalize_allocation(_276, _278)\n                            expr_17 := abi_decode_address_fromMemory(_276, add(_276, _278))\n                        }\n                        fun_log(expr_17)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_79 := and(shr(8, sload(/** @src 86:2447:2459  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        let _279 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        mstore(_279, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xca669fa7))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\" */ add(_279, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_79)\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        let _280 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\" */ _279, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\" */ _279, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        if iszero(_280)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_85 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_85, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_85, returndatasize())\n                        }\n                        /// @src 86:2773:2795  \"vm.prank(TEAM_ADDRESS)\"\n                        if _280\n                        {\n                            finalize_allocation_107616(_279)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_80 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\"\n                        if iszero(extcodesize(value_80))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\"\n                        let _281 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\"\n                        mstore(_281, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x69de9b93))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\" */ add(_281, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), _1)\n                        /// @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\"\n                        let _282 := call(gas(), value_80, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\" */ _281, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\" */ _281, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\"\n                        if iszero(_282)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_86 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_86, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_86, returndatasize())\n                        }\n                        /// @src 86:2805:2842  \"vester.setHasMaxVestableAmount(false)\"\n                        if _282\n                        {\n                            finalize_allocation_107616(_281)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_81 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        let _283 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        mstore(_283, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2853:2873  \"vm.startPrank(USER1)\" */ add(_283, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_81)\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        let _284 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2853:2873  \"vm.startPrank(USER1)\" */ _283, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2853:2873  \"vm.startPrank(USER1)\" */ _283, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        if iszero(_284)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_87 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_87, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_87, returndatasize())\n                        }\n                        /// @src 86:2853:2873  \"vm.startPrank(USER1)\"\n                        if _284\n                        {\n                            finalize_allocation_107616(_283)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_82 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        let value_83 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\"\n                        let _285 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\"\n                        mstore(_285, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _269)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\" */ add(_285, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_83)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\" */ _285, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\"\n                        let _286 := call(gas(), value_82, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\" */ _285, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\" */ _285, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\"\n                        if iszero(_286)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_88 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_88, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_88, returndatasize())\n                        }\n                        /// @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\"\n                        if _286\n                        {\n                            let _287 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:2887:2933  \"rewardTracker.approve(address(vester), amount)\" */ returndatasize()) { _287 := returndatasize() }\n                            finalize_allocation(_285, _287)\n                            pop(abi_decode_bool_fromMemory(_285, add(_285, _287)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_84 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2947:2969  \"vester.deposit(amount)\"\n                        if iszero(extcodesize(value_84))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2947:2969  \"vester.deposit(amount)\"\n                        let _288 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2947:2969  \"vester.deposit(amount)\"\n                        mstore(_288, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xb6b55f25))\n                        mstore(/** @src 86:2947:2969  \"vester.deposit(amount)\" */ add(_288, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 86:2947:2969  \"vester.deposit(amount)\"\n                        let _289 := call(gas(), value_84, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2947:2969  \"vester.deposit(amount)\" */ _288, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2947:2969  \"vester.deposit(amount)\" */ _288, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2947:2969  \"vester.deposit(amount)\"\n                        if iszero(_289)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_89 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_89, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_89, returndatasize())\n                        }\n                        /// @src 86:2947:2969  \"vester.deposit(amount)\"\n                        if _289\n                        {\n                            finalize_allocation_107616(_288)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        let _290 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        mstore(_290, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        let _291 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2979:2993  \"vm.stopPrank()\" */ _290, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2979:2993  \"vm.stopPrank()\" */ _290, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        if iszero(_291)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_90 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_90, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_90, returndatasize())\n                        }\n                        /// @src 86:2979:2993  \"vm.stopPrank()\"\n                        if _291\n                        {\n                            finalize_allocation_107616(_290)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_85 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_86 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                        let _292 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                        mstore(_292, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:3012:3035  \"vester.balanceOf(USER1)\" */ add(_292, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_86)\n                        /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                        let _293 := staticcall(gas(), value_85, _292, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:3012:3035  \"vester.balanceOf(USER1)\" */ _292, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                        if iszero(_293)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_91 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_91, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_91, returndatasize())\n                        }\n                        /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                        let expr_18 := _1\n                        if _293\n                        {\n                            let _294 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:3012:3035  \"vester.balanceOf(USER1)\" */ returndatasize()) { _294 := returndatasize() }\n                            finalize_allocation(_292, _294)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:3012:3035  \"vester.balanceOf(USER1)\" */ add(_292, _294), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _292), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:3012:3035  \"vester.balanceOf(USER1)\"\n                            expr_18 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_292)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _295 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_295, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_295, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_18)\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _295, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:2487:2494  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _296 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _295, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _295, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_296)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_92 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_92, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_92, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _296\n                        {\n                            finalize_allocation_107616(_295)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        return(_1, _1)\n                    }\n                    case 0x85226c81 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let length_18 := sload(/** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _297 := array_allocation_size_array_string_dyn(length_18)\n                        let memPtr_12 := mload(64)\n                        finalize_allocation(memPtr_12, _297)\n                        mstore(memPtr_12, length_18)\n                        let mpos_4 := memPtr_12\n                        let _298 := 0x20\n                        mpos_4 := add(memPtr_12, _298)\n                        mstore(0, /** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let spos_3 := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                        let i_8 := 0\n                        for { } lt(i_8, length_18) { i_8 := add(i_8, 1) }\n                        {\n                            let memPtr_13 := mload(64)\n                            finalize_allocation(memPtr_13, sub(abi_encode_string_storage(spos_3, memPtr_13), memPtr_13))\n                            mstore(mpos_4, memPtr_13)\n                            mpos_4 := add(mpos_4, _298)\n                            spos_3 := add(spos_3, 1)\n                        }\n                        let memPos_6 := mload(64)\n                        return(memPos_6, sub(abi_encode_array_string_dyn(memPos_6, memPtr_12), memPos_6))\n                    }\n                    case 0x916a17c6 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let length_19 := sload(/** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _299 := array_allocation_size_array_string_dyn(length_19)\n                        let memPtr_14 := mload(64)\n                        finalize_allocation(memPtr_14, _299)\n                        mstore(memPtr_14, length_19)\n                        let mpos_5 := memPtr_14\n                        mpos_5 := add(memPtr_14, 0x20)\n                        mstore(_1, /** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let spos_4 := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                        let i_9 := _1\n                        for { } lt(i_9, length_19) { i_9 := add(i_9, 1) }\n                        {\n                            let memPtr_15 := mload(64)\n                            finalize_allocation_107662(memPtr_15)\n                            mstore(memPtr_15, and(sload(spos_4), sub(shl(160, 1), 1)))\n                            let _300 := add(spos_4, 1)\n                            let pos_93 := mload(64)\n                            let pos_94 := pos_93\n                            let length_20 := sload(_300)\n                            mstore(pos_93, length_20)\n                            pos_93 := add(pos_93, 0x20)\n                            mstore(_1, _300)\n                            let srcPtr_6 := keccak256(_1, 0x20)\n                            let itemCounter_1 := _1\n                            for { }\n                            lt(add(itemCounter_1, 7), length_20)\n                            {\n                                itemCounter_1 := add(itemCounter_1, 8)\n                            }\n                            {\n                                let data_2 := sload(srcPtr_6)\n                                let _301 := shl(224, 0xffffffff)\n                                mstore(pos_93, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, data_2), _301))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _302 := 192\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(add(pos_93, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_302, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_2), _301))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _303 := 160\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(add(pos_93, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_303, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_2), _301))\n                                let _304 := 96\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _305 := 128\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(add(pos_93, _304), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_305, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_2), _301))\n                                mstore(add(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _305), and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _304, data_2), _301))\n                                mstore(add(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _303), and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64, data_2), _301))\n                                mstore(add(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _302), and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, data_2), _301))\n                                mstore(add(pos_93, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_2, _301))\n                                pos_93 := add(pos_93, 256)\n                                srcPtr_6 := add(srcPtr_6, 1)\n                            }\n                            let data_3 := sload(srcPtr_6)\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 96, data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64, data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, data_3), shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_20)\n                            {\n                                mstore(pos_93, and(data_3, shl(224, 0xffffffff)))\n                                pos_93 := add(pos_93, 0x20)\n                            }\n                            finalize_allocation(pos_94, sub(pos_93, pos_94))\n                            mstore(add(memPtr_15, 0x20), pos_94)\n                            mstore(mpos_5, memPtr_15)\n                            mpos_5 := add(mpos_5, 0x20)\n                            spos_4 := add(spos_4, 2)\n                        }\n                        let memPos_7 := mload(64)\n                        return(memPos_7, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_7, memPtr_14), memPos_7))\n                    }\n                    case 0xb5508aa9 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let length_21 := sload(/** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _306 := array_allocation_size_array_string_dyn(length_21)\n                        let memPtr_16 := mload(64)\n                        finalize_allocation(memPtr_16, _306)\n                        mstore(memPtr_16, length_21)\n                        let mpos_6 := memPtr_16\n                        let _307 := 0x20\n                        mpos_6 := add(memPtr_16, _307)\n                        mstore(0, /** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let spos_5 := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                        let i_10 := 0\n                        for { } lt(i_10, length_21) { i_10 := add(i_10, 1) }\n                        {\n                            let memPtr_17 := mload(64)\n                            finalize_allocation(memPtr_17, sub(abi_encode_string_storage(spos_5, memPtr_17), memPtr_17))\n                            mstore(mpos_6, memPtr_17)\n                            mpos_6 := add(mpos_6, _307)\n                            spos_5 := add(spos_5, 1)\n                        }\n                        let memPos_8 := mload(64)\n                        return(memPos_8, sub(abi_encode_array_string_dyn(memPos_8, memPtr_16), memPos_8))\n                    }\n                    case 0xba414fa6 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret_1 := fun_failed()\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, iszero(iszero(ret_1)))\n                        return(memPos_9, 32)\n                    }\n                    case 0xd895c947 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _308 := sub(shl(160, 1), 1)\n                        let _309 := sload(/** @src 86:2147:2159  \"TEAM_ADDRESS\" */ 0x1e)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_87 := and(sload(/** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _308)\n                        let _310 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _310))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _311 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_311, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_311, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_87)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _312 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _310, _1, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _311, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _311, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_312)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_95 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_95, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_95, returndatasize())\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _312\n                        {\n                            finalize_allocation_107616(_311)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_88 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _308)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(extcodesize(value_88))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _313 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        mstore(_313, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ add(_313, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), and(shr(8, _309), _308))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _314 := call(gas(), value_88, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _313, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _313, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(_314)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_96 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_96, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_96, returndatasize())\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if _314\n                        {\n                            finalize_allocation_107616(_313)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _310))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _315 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        mstore(_315, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _316 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _310, _1, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _315, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _315, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(_316)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_97 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_97, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_97, returndatasize())\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if _316\n                        {\n                            finalize_allocation_107616(_315)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_89 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _308)\n                        /// @src 86:2187:2199  \"vester.gov()\"\n                        let _317 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2187:2199  \"vester.gov()\"\n                        mstore(_317, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x12d43a51))\n                        /// @src 86:2187:2199  \"vester.gov()\"\n                        let _318 := staticcall(gas(), value_89, _317, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2187:2199  \"vester.gov()\" */ _317, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:2187:2199  \"vester.gov()\"\n                        if iszero(_318)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_98 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_98, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_98, returndatasize())\n                        }\n                        /// @src 86:2187:2199  \"vester.gov()\"\n                        let expr_19 := _1\n                        if _318\n                        {\n                            let _319 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:2187:2199  \"vester.gov()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _319, /** @src 86:2187:2199  \"vester.gov()\" */ returndatasize()) { _319 := returndatasize() }\n                            finalize_allocation(_317, _319)\n                            expr_19 := abi_decode_address_fromMemory(_317, add(_317, _319))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_90 := and(shr(8, sload(/** @src 86:2147:2159  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _308)\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _310))\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        let _320 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        mstore(_320, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x28a9b0fb))\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        let _321 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _310, /** @src 2:3533:3557  \"vm.assertEq(left, right)\" */ _320, sub(abi_encode_address_address(add(_320, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 2:3533:3557  \"vm.assertEq(left, right)\" */ expr_19, value_90), _320), _320, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        if iszero(_321)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_99 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_99, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_99, returndatasize())\n                        }\n                        /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                        if _321\n                        {\n                            finalize_allocation_107616(_320)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        return(_1, _1)\n                    }\n                    case 0xe20c9f71 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let pos_100 := mload(64)\n                        let pos_101 := pos_100\n                        let length_22 := sload(/** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(pos_100, length_22)\n                        let _322 := 0x20\n                        pos_100 := add(pos_100, _322)\n                        mstore(_1, /** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let srcPtr_7 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                        let i_11 := _1\n                        for { } lt(i_11, length_22) { i_11 := add(i_11, 1) }\n                        {\n                            mstore(pos_100, and(sload(srcPtr_7), sub(shl(160, 1), 1)))\n                            pos_100 := add(pos_100, _322)\n                            srcPtr_7 := add(srcPtr_7, 1)\n                        }\n                        finalize_allocation(pos_101, sub(pos_100, pos_101))\n                        let memPos_10 := mload(64)\n                        return(memPos_10, sub(abi_encode_array_address_dyn(memPos_10, pos_101), memPos_10))\n                    }\n                    case 0xe2589f2e {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _323 := sload(/** @src 86:6026:6038  \"TEAM_ADDRESS\" */ 0x1e)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_91 := and(sload(/** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _324 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_324, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_324, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_91)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _325 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _324, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _324, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_325)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_102 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_102, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_102, returndatasize())\n                        }\n                        /// @src 86:2294:2325  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _325\n                        {\n                            finalize_allocation_107616(_324)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_92 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(extcodesize(value_92))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _326 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        mstore(_326, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ add(_326, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), and(shr(8, _323), sub(shl(160, 1), 1)))\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        let _327 := call(gas(), value_92, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _326, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:2339:2361  \"vester.setGov(_newGov)\" */ _326, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if iszero(_327)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_103 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_103, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_103, returndatasize())\n                        }\n                        /// @src 86:2339:2361  \"vester.setGov(_newGov)\"\n                        if _327\n                        {\n                            finalize_allocation_107616(_326)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _328 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        mstore(_328, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        let _329 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _328, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:2371:2385  \"vm.stopPrank()\" */ _328, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if iszero(_329)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_104 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_104, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_104, returndatasize())\n                        }\n                        /// @src 86:2371:2385  \"vm.stopPrank()\"\n                        if _329\n                        {\n                            finalize_allocation_107616(_328)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_93 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_94 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let expr_mpos_19 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        let _330 := add(expr_mpos_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(_330, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\" */ add(expr_mpos_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), value_94)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        mstore(expr_mpos_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)\n                        /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                        finalize_allocation_250227(expr_mpos_19)\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        pop(staticcall(gas(), value_93, _330, mload(expr_mpos_19), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, _1))\n                        /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                        let expr_component_mpos_3 := extract_returndata()\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ add(expr_component_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ expr_component_mpos_3)), expr_component_mpos_3), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 9:6854:6876  \"self._target = _target\"\n                        update_storage_value_offsett_contract_ZFIToken_to_contract_ZFIToken(value_93)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7009:7018  \"self._sig\" */ 15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 9:7009:7018  \"self._sig\" */ 15), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(0xffffffff)), /** @src 4:27524:27534  \"0x70a08231\" */ 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let oldLen_3 := sload(/** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        if iszero(lt(oldLen_3, 18446744073709551616))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                            revert(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, 36)\n                        }\n                        let _331 := add(oldLen_3, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:7505:7515  \"self._keys\" */ 14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _331)\n                        if iszero(lt(oldLen_3, _331))\n                        {\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            mstore(4, 0x32)\n                            revert(_1, 36)\n                        }\n                        mstore(_1, /** @src 9:7505:7515  \"self._keys\" */ 14)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(add(84800337471693920904250232874319843718400766719524250287777680170677855896573, oldLen_3), value_94)\n                        let value_95 := and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_96 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 224, sload(/** @src 9:7009:7018  \"self._sig\" */ 15))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _332 := sload(/** @src 9:15610:15621  \"self._depth\" */ 16)\n                        /// @src 9:15653:15687  \"stdStorageSafe.getCallParams(self)\"\n                        let expr_mpos_20 := fun_getCallParams_107754()\n                        /// @src 9:15703:15718  \"self.finds[who]\"\n                        let _333 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_95)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _334 := and(value_96, shl(224, 0xffffffff))\n                        mstore(_1, _334)\n                        mstore(32, _333)\n                        let dataSlot_9 := keccak256(_1, 64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_21 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _335 := add(expr_mpos_21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_23 := mload(expr_mpos_20)\n                        let _336 := add(expr_mpos_20, 32)\n                        copy_memory_to_memory_with_cleanup(_336, _335, length_23)\n                        let _337 := add(/** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_21, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_23)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_337, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _332)\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        let _338 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _337, /** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_21)\n                        mstore(expr_mpos_21, add(_338, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_21, add(_338, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _335, mload(/** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_21)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_9)\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        if /** @src 9:15702:15780  \"!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:15703:15780  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(_1, 64), /** @src 9:15610:15621  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff))\n                        /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                        {\n                            /// @src 9:13208:13241  \"stdStorageSafe.find(self, _clear)\"\n                            pop(fun_find_107716())\n                        }\n                        /// @src 9:15857:15872  \"self.finds[who]\"\n                        let _339 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_95)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(_1, _334)\n                        mstore(32, _339)\n                        let dataSlot_10 := keccak256(_1, 64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_22 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _340 := add(expr_mpos_22, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        let length_24 := mload(expr_mpos_20)\n                        copy_memory_to_memory_with_cleanup(_336, _340, length_24)\n                        let _341 := add(/** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_22, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_24)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_341, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _332)\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        let _342 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _341, /** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_22)\n                        mstore(expr_mpos_22, add(_342, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32))\n                        /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_22, add(_342, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64))\n                        mstore(_1, /** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _340, mload(/** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_22)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(32, dataSlot_10)\n                        let dataSlot_11 := keccak256(_1, 64)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _343 := sload(/** @src 9:15943:15958  \"data.offsetLeft\" */ add(dataSlot_11, /** @src 9:7505:7515  \"self._keys\" */ 1))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _344 := sload(/** @src 9:15961:15977  \"data.offsetRight\" */ add(dataSlot_11, /** @src 9:7009:7018  \"self._sig\" */ 2))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        if /** @src 9:15942:15982  \"(data.offsetLeft + data.offsetRight) > 0\" */ iszero(iszero(/** @src 9:15943:15977  \"data.offsetLeft + data.offsetRight\" */ checked_add_uint256(_343, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _344)))\n                        /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                        {\n                            /// @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\"\n                            let _345 := checked_add_uint256(_343, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _344)\n                            /// @src 9:16021:16024  \"256\"\n                            let _346 := 0x0100\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if gt(sub(/** @src 9:16021:16024  \"256\" */ _346, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _345), /** @src 9:16021:16024  \"256\" */ _346)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            if gt(sub(/** @src 9:16021:16024  \"256\" */ _346, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _345), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, 36)\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _347 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            mstore(_347, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x348051d7))\n                            mstore(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_347, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), shl(sub(/** @src 9:16021:16024  \"256\" */ _346, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _345), /** @src 9:7505:7515  \"self._keys\" */ 1))\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let _348 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _347, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _347, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            if iszero(_348)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_105 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_105, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_105, returndatasize())\n                            }\n                            /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                            let expr_mpos_23 := _1\n                            if _348\n                            {\n                                let _349 := returndatasize()\n                                returndatacopy(_347, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _349)\n                                finalize_allocation(_347, _349)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_347, _349), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _347), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let offset_3 := mload(_347)\n                                if gt(offset_3, 0xffffffffffffffff)\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if iszero(slt(add(add(_347, offset_3), /** @src 86:2308:2324  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_347, _349)))\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _350 := mload(add(_347, offset_3))\n                                let _351 := array_allocation_size_bytes(_350)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                let memPtr_18 := mload(64)\n                                finalize_allocation(memPtr_18, _351)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_18, _350)\n                                if gt(add(add(add(_347, offset_3), _350), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_347, _349))\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                copy_memory_to_memory_with_cleanup(add(add(_347, offset_3), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_18, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _350)\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                expr_mpos_23 := memPtr_18\n                            }\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let expr_mpos_24 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ add(expr_mpos_24, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Pac\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_24, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"ked slot. We can't fit value gre\")\n                            mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_24, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96), \"ater than \")\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let length_25 := mload(expr_mpos_23)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos_23, 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_24, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_25)\n                            /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                            let _352 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_24, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_25), /** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_24)\n                            mstore(expr_mpos_24, add(_352, 74))\n                            finalize_allocation(expr_mpos_24, add(_352, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106))\n                            if iszero(/** @src 9:16103:16124  \"uint256(set) < maxVal\" */ lt(/** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(sub(/** @src 9:16021:16024  \"256\" */ _346, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _345), /** @src 9:7505:7515  \"self._keys\" */ 1)))\n                            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                let memPtr_19 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_19, shl(229, 4594637))\n                                mstore(add(memPtr_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                revert(memPtr_19, sub(abi_encode_string(expr_mpos_24, add(memPtr_19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_19))\n                            }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _353 := sload(/** @src 9:16445:16454  \"data.slot\" */ dataSlot_11)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _354 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        mstore(_354, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let _355 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ _354, sub(abi_encode_address_bytes32(add(_354, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ value_95, _353), _354), _354, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        if iszero(_355)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_106 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_106, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_106, returndatasize())\n                        }\n                        /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                        let expr_20 := _1\n                        if _355\n                        {\n                            let _356 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ returndatasize()) { _356 := returndatasize() }\n                            finalize_allocation(_354, _356)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ add(_354, _356), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _354), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            expr_20 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_354)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _357 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        mstore(_357, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        let _358 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _357, sub(abi_encode_address_bytes32_bytes32(add(_357, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ value_95, _353, /** @src 9:12656:12748  \"(uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)) | (varValue << offsetRight)\" */ or(/** @src 9:12657:12719  \"uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr_20, /** @src 9:12677:12719  \"~getMaskByOffsets(offsetLeft, offsetRight)\" */ not(/** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _344, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _344, _343)), /** @src 9:7505:7515  \"self._keys\" */ 1), /** @src 9:12275:12388  \"assembly {...\" */ not(0))))), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(_344, /** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000))), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _357), _357, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if iszero(_358)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_107 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_107, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_107, returndatasize())\n                        }\n                        /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                        if _358\n                        {\n                            finalize_allocation_107616(_357)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 9:16678:16709  \"stdStorageSafe.callTarget(self)\"\n                        let expr_component_6, expr_component_7 := fun_callTarget_107633()\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        let expr_21 := /** @src 9:16724:16732  \"!success\" */ iszero(expr_component_6)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ iszero(/** @src 9:16724:16732  \"!success\" */ expr_21)\n                        /// @src 9:16724:16753  \"!success || callResult != set\"\n                        {\n                            expr_21 := /** @src 9:16736:16753  \"callResult != set\" */ iszero(eq(expr_component_7, /** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000))\n                        }\n                        /// @src 9:16720:16896  \"if (!success || callResult != set) {...\"\n                        if expr_21\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let _359 := sload(/** @src 9:16791:16800  \"data.slot\" */ dataSlot_11)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _360 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            mstore(_360, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            let _361 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ _360, sub(abi_encode_address_bytes32_bytes32(add(_360, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ value_95, _359, expr_20), _360), _360, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if iszero(_361)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_108 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_108, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_108, returndatasize())\n                            }\n                            /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                            if _361\n                            {\n                                finalize_allocation_107616(_360)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            let _362 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            mstore(_362, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                            mstore(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ add(_362, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 32)\n                            mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _362, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 51)\n                            mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _362, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Fai\")\n                            mstore(add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _362, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"led to write value.\")\n                            /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                            revert(_362, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                        }\n                        /// @src 9:14785:14789  \"self\"\n                        fun_clear()\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_97 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        let _363 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        mstore(_363, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6308:6328  \"vm.startPrank(USER1)\" */ add(_363, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_97)\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        let _364 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:6308:6328  \"vm.startPrank(USER1)\" */ _363, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6308:6328  \"vm.startPrank(USER1)\" */ _363, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        if iszero(_364)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_109 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_109, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_109, returndatasize())\n                        }\n                        /// @src 86:6308:6328  \"vm.startPrank(USER1)\"\n                        if _364\n                        {\n                            finalize_allocation_107616(_363)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_98 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_99 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        let _365 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        mstore(_365, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x095ea7b3))\n                        /// @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        let _366 := call(gas(), value_98, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\" */ _365, sub(abi_encode_address_uint256_107774(add(_365, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\" */ value_99), _365), _365, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        if iszero(_366)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_110 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_110, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_110, returndatasize())\n                        }\n                        /// @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                        if _366\n                        {\n                            let _367 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:6338:6390  \"zfiToken.approve(address(rewardTracker), sumRewards)\" */ returndatasize()) { _367 := returndatasize() }\n                            finalize_allocation(_365, _367)\n                            pop(abi_decode_bool_fromMemory(_365, add(_365, _367)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_100 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\"\n                        if iszero(extcodesize(value_100))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\"\n                        let _368 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\"\n                        mstore(_368, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x534a7e1d))\n                        mstore(/** @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\" */ add(_368, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000)\n                        /// @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\"\n                        let _369 := call(gas(), value_100, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\" */ _368, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\" */ _368, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\"\n                        if iszero(_369)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_111 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_111, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_111, returndatasize())\n                        }\n                        /// @src 86:6400:6431  \"rewardTracker.stake(sumRewards)\"\n                        if _369\n                        {\n                            finalize_allocation_107616(_368)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_101 := and(shr(8, sload(/** @src 86:6026:6038  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _370 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        mstore(_370, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_370, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_101)\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _371 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\" */ _370, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\" */ _370, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(_371)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_112 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_112, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_112, returndatasize())\n                        }\n                        /// @src 86:6441:6468  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if _371\n                        {\n                            finalize_allocation_107616(_370)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_102 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\"\n                        if iszero(extcodesize(value_102))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\"\n                        let _372 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\"\n                        mstore(_372, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x69de9b93))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\" */ add(_372, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\"\n                        let _373 := call(gas(), value_102, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\" */ _372, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\" */ _372, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\"\n                        if iszero(_373)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_113 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_113, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_113, returndatasize())\n                        }\n                        /// @src 86:6478:6514  \"vester.setHasMaxVestableAmount(true)\"\n                        if _373\n                        {\n                            finalize_allocation_107616(_372)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_103 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_104 := and(sload(/** @src 86:6542:6549  \"HANDLER\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\"\n                        if iszero(extcodesize(value_103))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\"\n                        let _374 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\"\n                        mstore(_374, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x9cb7de4b))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\" */ add(_374, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_104)\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\" */ _374, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:7505:7515  \"self._keys\" */ 1)\n                        /// @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\"\n                        let _375 := call(gas(), value_103, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\" */ _374, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\" */ _374, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\"\n                        if iszero(_375)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_114 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_114, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_114, returndatasize())\n                        }\n                        /// @src 86:6524:6556  \"vester.setHandler(HANDLER, true)\"\n                        if _375\n                        {\n                            finalize_allocation_107616(_374)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_105 := and(sload(/** @src 86:6542:6549  \"HANDLER\" */ 0x21), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        let _376 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        mstore(_376, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6566:6588  \"vm.startPrank(HANDLER)\" */ add(_376, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_105)\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        let _377 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:6566:6588  \"vm.startPrank(HANDLER)\" */ _376, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6566:6588  \"vm.startPrank(HANDLER)\" */ _376, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        if iszero(_377)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_115 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_115, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_115, returndatasize())\n                        }\n                        /// @src 86:6566:6588  \"vm.startPrank(HANDLER)\"\n                        if _377\n                        {\n                            finalize_allocation_107616(_376)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_106 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_107 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if iszero(extcodesize(value_106))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        let _378 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        mstore(_378, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xd0b038b7))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ add(_378, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_107)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _378, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000)\n                        /// @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        let _379 := call(gas(), value_106, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _378, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\" */ _378, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if iszero(_379)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_116 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_116, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_116, returndatasize())\n                        }\n                        /// @src 86:6598:6673  \"vester.setTransferredCumulativeRewards(USER1, transferredCumulativeRewards)\"\n                        if _379\n                        {\n                            finalize_allocation_107616(_378)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_108 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_109 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if iszero(extcodesize(value_108))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        let _380 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        mstore(_380, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x107c89c9))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\" */ add(_380, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_109)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _380, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), _1)\n                        /// @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        let _381 := call(gas(), value_108, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _380, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\" */ _380, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if iszero(_381)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_117 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_117, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_117, returndatasize())\n                        }\n                        /// @src 86:6683:6726  \"vester.setBonusRewards(USER1, bonusRewards)\"\n                        if _381\n                        {\n                            finalize_allocation_107616(_380)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_110 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        let _382 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        mstore(_382, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6736:6756  \"vm.startPrank(USER1)\" */ add(_382, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_110)\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        let _383 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:6736:6756  \"vm.startPrank(USER1)\" */ _382, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6736:6756  \"vm.startPrank(USER1)\" */ _382, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        if iszero(_383)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_118 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_118, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_118, returndatasize())\n                        }\n                        /// @src 86:6736:6756  \"vm.startPrank(USER1)\"\n                        if _383\n                        {\n                            finalize_allocation_107616(_382)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_111 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        let value_112 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        let _384 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        mstore(_384, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x095ea7b3))\n                        /// @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        let _385 := call(gas(), value_111, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\" */ _384, sub(abi_encode_address_uint256_107774(add(_384, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\" */ value_112), _384), _384, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        if iszero(_385)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_119 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_119, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_119, returndatasize())\n                        }\n                        /// @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\"\n                        if _385\n                        {\n                            let _386 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:6770:6820  \"rewardTracker.approve(address(vester), sumRewards)\" */ returndatasize()) { _386 := returndatasize() }\n                            finalize_allocation(_384, _386)\n                            pop(abi_decode_bool_fromMemory(_384, add(_384, _386)))\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_113 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6834:6860  \"vester.deposit(sumRewards)\"\n                        if iszero(extcodesize(value_113))\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6834:6860  \"vester.deposit(sumRewards)\"\n                        let _387 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6834:6860  \"vester.deposit(sumRewards)\"\n                        mstore(_387, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xb6b55f25))\n                        mstore(/** @src 86:6834:6860  \"vester.deposit(sumRewards)\" */ add(_387, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000)\n                        /// @src 86:6834:6860  \"vester.deposit(sumRewards)\"\n                        let _388 := call(gas(), value_113, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:6834:6860  \"vester.deposit(sumRewards)\" */ _387, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6834:6860  \"vester.deposit(sumRewards)\" */ _387, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6834:6860  \"vester.deposit(sumRewards)\"\n                        if iszero(_388)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_120 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_120, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_120, returndatasize())\n                        }\n                        /// @src 86:6834:6860  \"vester.deposit(sumRewards)\"\n                        if _388\n                        {\n                            finalize_allocation_107616(_387)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        let _389 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        mstore(_389, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        let _390 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:6870:6884  \"vm.stopPrank()\" */ _389, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:6870:6884  \"vm.stopPrank()\" */ _389, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        if iszero(_390)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_121 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_121, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_121, returndatasize())\n                        }\n                        /// @src 86:6870:6884  \"vm.stopPrank()\"\n                        if _390\n                        {\n                            finalize_allocation_107616(_389)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_114 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_115 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                        let _391 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                        mstore(_391, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6903:6926  \"vester.balanceOf(USER1)\" */ add(_391, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_115)\n                        /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                        let _392 := staticcall(gas(), value_114, _391, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6903:6926  \"vester.balanceOf(USER1)\" */ _391, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                        if iszero(_392)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_122 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_122, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_122, returndatasize())\n                        }\n                        /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                        let expr_22 := _1\n                        if _392\n                        {\n                            let _393 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:6903:6926  \"vester.balanceOf(USER1)\" */ returndatasize()) { _393 := returndatasize() }\n                            finalize_allocation(_391, _393)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:6903:6926  \"vester.balanceOf(USER1)\" */ add(_391, _393), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _391), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:6903:6926  \"vester.balanceOf(USER1)\"\n                            expr_22 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_391)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _394 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_394, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_394, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_22)\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _394, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 86:6088:6096  \"70 ether\" */ 0x03cb71f51fc5580000)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _395 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _394, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _394, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_395)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_123 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_123, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_123, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _395\n                        {\n                            finalize_allocation_107616(_394)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_116 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                        let _396 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                        mstore(_396, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\" */ add(_396, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_114)\n                        /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                        let _397 := staticcall(gas(), value_116, _396, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\" */ _396, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                        if iszero(_397)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_124 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_124, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_124, returndatasize())\n                        }\n                        /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                        let expr_23 := _1\n                        if _397\n                        {\n                            let _398 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\" */ returndatasize()) { _398 := returndatasize() }\n                            finalize_allocation(_396, _398)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\" */ add(_396, _398), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _396), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:6979:7014  \"zfiToken.balanceOf(address(vester))\"\n                            expr_23 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_396)\n                        }\n                        /// @src 86:7045:7064  \"vesterStakedBalance\"\n                        fun_assertEq_107787(expr_23)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_117 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), sub(shl(160, 1), 1))\n                        /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                        let _399 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                        mstore(_399, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x10c1c103))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\" */ add(_399, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_115)\n                        /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                        let _400 := staticcall(gas(), value_117, _399, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\" */ _399, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                        if iszero(_400)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_125 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_125, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_125, returndatasize())\n                        }\n                        /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                        let expr_24 := _1\n                        if _400\n                        {\n                            let _401 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\" */ returndatasize()) { _401 := returndatasize() }\n                            finalize_allocation(_399, _401)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\" */ add(_399, _401), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _399), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:7104:7147  \"rewardTracker.stakedAmounts(address(USER1))\"\n                            expr_24 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_399)\n                        }\n                        /// @src 86:7157:7188  \"assertEq(0, vesterStakedAmount)\"\n                        fun_assertEq_107701(expr_24)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        if gt(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        {\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, 36)\n                        }\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        let _402 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_402, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\" */ add(_402, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        let _403 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\" */ _402, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\" */ _402, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_403)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_126 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_126, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_126, returndatasize())\n                        }\n                        /// @src 86:7198:7231  \"vm.warp(block.timestamp + 1 days)\"\n                        if _403\n                        {\n                            finalize_allocation_107616(_402)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_118 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_119 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                        let _404 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                        mstore(_404, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7267:7290  \"vester.claimable(USER1)\" */ add(_404, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_119)\n                        /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                        let _405 := staticcall(gas(), value_118, _404, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7267:7290  \"vester.claimable(USER1)\" */ _404, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                        if iszero(_405)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_127 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_127, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_127, returndatasize())\n                        }\n                        /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                        let expr_25 := _1\n                        if _405\n                        {\n                            let _406 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7267:7290  \"vester.claimable(USER1)\" */ returndatasize()) { _406 := returndatasize() }\n                            finalize_allocation(_404, _406)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7267:7290  \"vester.claimable(USER1)\" */ add(_404, _406), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _404), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:7267:7290  \"vester.claimable(USER1)\"\n                            expr_25 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_404)\n                        }\n                        /// @src 86:7325:7340  \"claimableAmount\"\n                        fun_assertEq_107790(expr_25)\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        let _407 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        mstore(_407, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7351:7371  \"vm.startPrank(USER1)\" */ add(_407, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_119)\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        let _408 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:7351:7371  \"vm.startPrank(USER1)\" */ _407, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7351:7371  \"vm.startPrank(USER1)\" */ _407, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        if iszero(_408)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_128 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_128, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_128, returndatasize())\n                        }\n                        /// @src 86:7351:7371  \"vm.startPrank(USER1)\"\n                        if _408\n                        {\n                            finalize_allocation_107616(_407)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_120 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:7385:7399  \"vester.claim()\"\n                        let _409 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7385:7399  \"vester.claim()\"\n                        mstore(_409, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:7385:7399  \"vester.claim()\"\n                        let _410 := call(gas(), value_120, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:7385:7399  \"vester.claim()\" */ _409, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:7385:7399  \"vester.claim()\" */ _409, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7385:7399  \"vester.claim()\"\n                        if iszero(_410)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_129 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_129, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_129, returndatasize())\n                        }\n                        /// @src 86:7385:7399  \"vester.claim()\"\n                        if _410\n                        {\n                            let _411 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7385:7399  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7385:7399  \"vester.claim()\" */ returndatasize()) { _411 := returndatasize() }\n                            finalize_allocation(_409, _411)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7385:7399  \"vester.claim()\" */ add(_409, _411), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _409), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        let _412 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        mstore(_412, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        let _413 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:7409:7423  \"vm.stopPrank()\" */ _412, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:7409:7423  \"vm.stopPrank()\" */ _412, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        if iszero(_413)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_130 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_130, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_130, returndatasize())\n                        }\n                        /// @src 86:7409:7423  \"vm.stopPrank()\"\n                        if _413\n                        {\n                            finalize_allocation_107616(_412)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_121 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_122 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                        let _414 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                        mstore(_414, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7457:7480  \"vester.balanceOf(USER1)\" */ add(_414, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_122)\n                        /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                        let _415 := staticcall(gas(), value_121, _414, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7457:7480  \"vester.balanceOf(USER1)\" */ _414, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                        if iszero(_415)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_131 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_131, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_131, returndatasize())\n                        }\n                        /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                        let expr_26 := _1\n                        if _415\n                        {\n                            let _416 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7457:7480  \"vester.balanceOf(USER1)\" */ returndatasize()) { _416 := returndatasize() }\n                            finalize_allocation(_414, _416)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7457:7480  \"vester.balanceOf(USER1)\" */ add(_414, _416), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _414), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:7457:7480  \"vester.balanceOf(USER1)\"\n                            expr_26 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_414)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _417 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_417, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_417, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x0340aad21b3b700000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _417, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_26)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _418 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _417, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _417, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_418)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_132 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_132, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_132, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _418\n                        {\n                            finalize_allocation_107616(_417)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_123 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                        let _419 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_419, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\" */ add(_419, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_122)\n                        /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                        let _420 := staticcall(gas(), value_123, _419, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\" */ _419, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_420)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_133 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_133, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_133, returndatasize())\n                        }\n                        /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                        let expr_27 := _1\n                        if _420\n                        {\n                            let _421 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _421 := returndatasize() }\n                            finalize_allocation(_419, _421)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\" */ add(_419, _421), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _419), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:7577:7602  \"zfiToken.balanceOf(USER1)\"\n                            expr_27 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_419)\n                        }\n                        /// @src 86:7637:7651  \"claimedBalance\"\n                        fun_assertEq_107790(expr_27)\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        let _422 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_422, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\" */ add(_422, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        let _423 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\" */ _422, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\" */ _422, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_423)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_134 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_134, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_134, returndatasize())\n                        }\n                        /// @src 86:7681:7714  \"vm.warp(block.timestamp + 1 days)\"\n                        if _423\n                        {\n                            finalize_allocation_107616(_422)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_124 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_125 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                        let _424 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                        mstore(_424, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7742:7765  \"vester.claimable(USER1)\" */ add(_424, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_125)\n                        /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                        let _425 := staticcall(gas(), value_124, _424, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7742:7765  \"vester.claimable(USER1)\" */ _424, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                        if iszero(_425)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_135 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_135, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_135, returndatasize())\n                        }\n                        /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                        let expr_28 := _1\n                        if _425\n                        {\n                            let _426 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7742:7765  \"vester.claimable(USER1)\" */ returndatasize()) { _426 := returndatasize() }\n                            finalize_allocation(_424, _426)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7742:7765  \"vester.claimable(USER1)\" */ add(_424, _426), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _424), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:7742:7765  \"vester.claimable(USER1)\"\n                            expr_28 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_424)\n                        }\n                        /// @src 86:7800:7815  \"claimableAmount\"\n                        fun_assertEq_107790(expr_28)\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        let _427 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        mstore(_427, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7826:7846  \"vm.startPrank(USER1)\" */ add(_427, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_125)\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        let _428 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:7826:7846  \"vm.startPrank(USER1)\" */ _427, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7826:7846  \"vm.startPrank(USER1)\" */ _427, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        if iszero(_428)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_136 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_136, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_136, returndatasize())\n                        }\n                        /// @src 86:7826:7846  \"vm.startPrank(USER1)\"\n                        if _428\n                        {\n                            finalize_allocation_107616(_427)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_126 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:7860:7874  \"vester.claim()\"\n                        let _429 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7860:7874  \"vester.claim()\"\n                        mstore(_429, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:7860:7874  \"vester.claim()\"\n                        let _430 := call(gas(), value_126, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:7860:7874  \"vester.claim()\" */ _429, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:7860:7874  \"vester.claim()\" */ _429, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7860:7874  \"vester.claim()\"\n                        if iszero(_430)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_137 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_137, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_137, returndatasize())\n                        }\n                        /// @src 86:7860:7874  \"vester.claim()\"\n                        if _430\n                        {\n                            let _431 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7860:7874  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7860:7874  \"vester.claim()\" */ returndatasize()) { _431 := returndatasize() }\n                            finalize_allocation(_429, _431)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7860:7874  \"vester.claim()\" */ add(_429, _431), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _429), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        let _432 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        mstore(_432, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        let _433 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:7884:7898  \"vm.stopPrank()\" */ _432, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:7884:7898  \"vm.stopPrank()\" */ _432, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        if iszero(_433)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_138 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_138, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_138, returndatasize())\n                        }\n                        /// @src 86:7884:7898  \"vm.stopPrank()\"\n                        if _433\n                        {\n                            finalize_allocation_107616(_432)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_127 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_128 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                        let _434 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                        mstore(_434, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:7924:7947  \"vester.balanceOf(USER1)\" */ add(_434, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_128)\n                        /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                        let _435 := staticcall(gas(), value_127, _434, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:7924:7947  \"vester.balanceOf(USER1)\" */ _434, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                        if iszero(_435)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_139 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_139, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_139, returndatasize())\n                        }\n                        /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                        let expr_29 := _1\n                        if _435\n                        {\n                            let _436 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:7924:7947  \"vester.balanceOf(USER1)\" */ returndatasize()) { _436 := returndatasize() }\n                            finalize_allocation(_434, _436)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:7924:7947  \"vester.balanceOf(USER1)\" */ add(_434, _436), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _434), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:7924:7947  \"vester.balanceOf(USER1)\"\n                            expr_29 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_434)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _437 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_437, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_437, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x02b5e3af16b1880000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _437, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_29)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _438 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _437, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _437, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_438)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_140 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_140, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_140, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _438\n                        {\n                            finalize_allocation_107616(_437)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_129 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                        let _439 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_439, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\" */ add(_439, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_128)\n                        /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                        let _440 := staticcall(gas(), value_129, _439, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\" */ _439, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_440)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_141 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_141, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_141, returndatasize())\n                        }\n                        /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                        let expr_30 := _1\n                        if _440\n                        {\n                            let _441 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _441 := returndatasize() }\n                            finalize_allocation(_439, _441)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\" */ add(_439, _441), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _439), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8040:8065  \"zfiToken.balanceOf(USER1)\"\n                            expr_30 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_439)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _442 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_442, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_442, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x01158e460913d00000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _442, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_30)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _443 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _442, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _442, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_443)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_142 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_142, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_142, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _443\n                        {\n                            finalize_allocation_107616(_442)\n                        }\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        let _444 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_444, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\" */ add(_444, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        let _445 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\" */ _444, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\" */ _444, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_445)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_143 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_143, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_143, returndatasize())\n                        }\n                        /// @src 86:8148:8181  \"vm.warp(block.timestamp + 1 days)\"\n                        if _445\n                        {\n                            finalize_allocation_107616(_444)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_130 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_131 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                        let _446 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                        mstore(_446, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8209:8232  \"vester.claimable(USER1)\" */ add(_446, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_131)\n                        /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                        let _447 := staticcall(gas(), value_130, _446, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8209:8232  \"vester.claimable(USER1)\" */ _446, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                        if iszero(_447)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_144 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_144, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_144, returndatasize())\n                        }\n                        /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                        let expr_31 := _1\n                        if _447\n                        {\n                            let _448 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8209:8232  \"vester.claimable(USER1)\" */ returndatasize()) { _448 := returndatasize() }\n                            finalize_allocation(_446, _448)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8209:8232  \"vester.claimable(USER1)\" */ add(_446, _448), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _446), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8209:8232  \"vester.claimable(USER1)\"\n                            expr_31 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_446)\n                        }\n                        /// @src 86:8267:8282  \"claimableAmount\"\n                        fun_assertEq_107790(expr_31)\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        let _449 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        mstore(_449, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8293:8313  \"vm.startPrank(USER1)\" */ add(_449, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_131)\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        let _450 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:8293:8313  \"vm.startPrank(USER1)\" */ _449, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8293:8313  \"vm.startPrank(USER1)\" */ _449, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        if iszero(_450)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_145 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_145, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_145, returndatasize())\n                        }\n                        /// @src 86:8293:8313  \"vm.startPrank(USER1)\"\n                        if _450\n                        {\n                            finalize_allocation_107616(_449)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_132 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:8327:8341  \"vester.claim()\"\n                        let _451 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8327:8341  \"vester.claim()\"\n                        mstore(_451, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:8327:8341  \"vester.claim()\"\n                        let _452 := call(gas(), value_132, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:8327:8341  \"vester.claim()\" */ _451, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:8327:8341  \"vester.claim()\" */ _451, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8327:8341  \"vester.claim()\"\n                        if iszero(_452)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_146 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_146, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_146, returndatasize())\n                        }\n                        /// @src 86:8327:8341  \"vester.claim()\"\n                        if _452\n                        {\n                            let _453 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8327:8341  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8327:8341  \"vester.claim()\" */ returndatasize()) { _453 := returndatasize() }\n                            finalize_allocation(_451, _453)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8327:8341  \"vester.claim()\" */ add(_451, _453), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _451), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        let _454 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        mstore(_454, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        let _455 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:8351:8365  \"vm.stopPrank()\" */ _454, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:8351:8365  \"vm.stopPrank()\" */ _454, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        if iszero(_455)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_147 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_147, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_147, returndatasize())\n                        }\n                        /// @src 86:8351:8365  \"vm.stopPrank()\"\n                        if _455\n                        {\n                            finalize_allocation_107616(_454)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_133 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_134 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                        let _456 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                        mstore(_456, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8391:8414  \"vester.balanceOf(USER1)\" */ add(_456, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_134)\n                        /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                        let _457 := staticcall(gas(), value_133, _456, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8391:8414  \"vester.balanceOf(USER1)\" */ _456, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                        if iszero(_457)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_148 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_148, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_148, returndatasize())\n                        }\n                        /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                        let expr_32 := _1\n                        if _457\n                        {\n                            let _458 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8391:8414  \"vester.balanceOf(USER1)\" */ returndatasize()) { _458 := returndatasize() }\n                            finalize_allocation(_456, _458)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8391:8414  \"vester.balanceOf(USER1)\" */ add(_456, _458), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _456), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8391:8414  \"vester.balanceOf(USER1)\"\n                            expr_32 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_456)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _459 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_459, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_459, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x022b1c8c1227a00000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _459, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_32)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _460 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _459, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _459, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_460)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_149 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_149, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_149, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _460\n                        {\n                            finalize_allocation_107616(_459)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_135 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                        let _461 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_461, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\" */ add(_461, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_134)\n                        /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                        let _462 := staticcall(gas(), value_135, _461, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\" */ _461, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_462)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_150 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_150, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_150, returndatasize())\n                        }\n                        /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                        let expr_33 := _1\n                        if _462\n                        {\n                            let _463 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _463 := returndatasize() }\n                            finalize_allocation(_461, _463)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\" */ add(_461, _463), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _461), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8507:8532  \"zfiToken.balanceOf(USER1)\"\n                            expr_33 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_461)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _464 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_464, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_464, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x01a055690d9db80000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _464, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_33)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _465 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _464, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _464, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_465)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_151 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_151, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_151, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _465\n                        {\n                            finalize_allocation_107616(_464)\n                        }\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        let _466 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_466, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\" */ add(_466, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        let _467 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\" */ _466, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\" */ _466, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_467)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_152 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_152, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_152, returndatasize())\n                        }\n                        /// @src 86:8615:8648  \"vm.warp(block.timestamp + 1 days)\"\n                        if _467\n                        {\n                            finalize_allocation_107616(_466)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_136 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_137 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                        let _468 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                        mstore(_468, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8676:8699  \"vester.claimable(USER1)\" */ add(_468, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_137)\n                        /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                        let _469 := staticcall(gas(), value_136, _468, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8676:8699  \"vester.claimable(USER1)\" */ _468, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                        if iszero(_469)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_153 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_153, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_153, returndatasize())\n                        }\n                        /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                        let expr_34 := _1\n                        if _469\n                        {\n                            let _470 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8676:8699  \"vester.claimable(USER1)\" */ returndatasize()) { _470 := returndatasize() }\n                            finalize_allocation(_468, _470)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8676:8699  \"vester.claimable(USER1)\" */ add(_468, _470), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _468), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8676:8699  \"vester.claimable(USER1)\"\n                            expr_34 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_468)\n                        }\n                        /// @src 86:8734:8749  \"claimableAmount\"\n                        fun_assertEq_107790(expr_34)\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        let _471 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        mstore(_471, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8760:8780  \"vm.startPrank(USER1)\" */ add(_471, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_137)\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        let _472 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:8760:8780  \"vm.startPrank(USER1)\" */ _471, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8760:8780  \"vm.startPrank(USER1)\" */ _471, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        if iszero(_472)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_154 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_154, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_154, returndatasize())\n                        }\n                        /// @src 86:8760:8780  \"vm.startPrank(USER1)\"\n                        if _472\n                        {\n                            finalize_allocation_107616(_471)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_138 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:8794:8808  \"vester.claim()\"\n                        let _473 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8794:8808  \"vester.claim()\"\n                        mstore(_473, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:8794:8808  \"vester.claim()\"\n                        let _474 := call(gas(), value_138, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:8794:8808  \"vester.claim()\" */ _473, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:8794:8808  \"vester.claim()\" */ _473, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8794:8808  \"vester.claim()\"\n                        if iszero(_474)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_155 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_155, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_155, returndatasize())\n                        }\n                        /// @src 86:8794:8808  \"vester.claim()\"\n                        if _474\n                        {\n                            let _475 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8794:8808  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8794:8808  \"vester.claim()\" */ returndatasize()) { _475 := returndatasize() }\n                            finalize_allocation(_473, _475)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8794:8808  \"vester.claim()\" */ add(_473, _475), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _473), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        let _476 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        mstore(_476, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        let _477 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:8818:8832  \"vm.stopPrank()\" */ _476, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:8818:8832  \"vm.stopPrank()\" */ _476, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        if iszero(_477)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_156 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_156, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_156, returndatasize())\n                        }\n                        /// @src 86:8818:8832  \"vm.stopPrank()\"\n                        if _477\n                        {\n                            finalize_allocation_107616(_476)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_139 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_140 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                        let _478 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                        mstore(_478, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8858:8881  \"vester.balanceOf(USER1)\" */ add(_478, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_140)\n                        /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                        let _479 := staticcall(gas(), value_139, _478, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8858:8881  \"vester.balanceOf(USER1)\" */ _478, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                        if iszero(_479)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_157 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_157, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_157, returndatasize())\n                        }\n                        /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                        let expr_35 := _1\n                        if _479\n                        {\n                            let _480 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8858:8881  \"vester.balanceOf(USER1)\" */ returndatasize()) { _480 := returndatasize() }\n                            finalize_allocation(_478, _480)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8858:8881  \"vester.balanceOf(USER1)\" */ add(_478, _480), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _478), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8858:8881  \"vester.balanceOf(USER1)\"\n                            expr_35 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_478)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _481 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_481, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_481, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x01a055690d9db80000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _481, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_35)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _482 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _481, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _481, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_482)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_158 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_158, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_158, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _482\n                        {\n                            finalize_allocation_107616(_481)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_141 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                        let _483 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_483, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\" */ add(_483, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_140)\n                        /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                        let _484 := staticcall(gas(), value_141, _483, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\" */ _483, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_484)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_159 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_159, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_159, returndatasize())\n                        }\n                        /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                        let expr_36 := _1\n                        if _484\n                        {\n                            let _485 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _485 := returndatasize() }\n                            finalize_allocation(_483, _485)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\" */ add(_483, _485), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _483), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:8974:8999  \"zfiToken.balanceOf(USER1)\"\n                            expr_36 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_483)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _486 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_486, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_486, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x022b1c8c1227a00000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _486, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_36)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _487 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _486, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _486, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_487)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_160 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_160, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_160, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _487\n                        {\n                            finalize_allocation_107616(_486)\n                        }\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        let _488 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_488, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\" */ add(_488, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        let _489 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\" */ _488, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\" */ _488, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_489)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_161 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_161, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_161, returndatasize())\n                        }\n                        /// @src 86:9082:9115  \"vm.warp(block.timestamp + 1 days)\"\n                        if _489\n                        {\n                            finalize_allocation_107616(_488)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_142 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_143 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                        let _490 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                        mstore(_490, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9143:9166  \"vester.claimable(USER1)\" */ add(_490, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_143)\n                        /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                        let _491 := staticcall(gas(), value_142, _490, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9143:9166  \"vester.claimable(USER1)\" */ _490, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                        if iszero(_491)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_162 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_162, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_162, returndatasize())\n                        }\n                        /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                        let expr_37 := _1\n                        if _491\n                        {\n                            let _492 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9143:9166  \"vester.claimable(USER1)\" */ returndatasize()) { _492 := returndatasize() }\n                            finalize_allocation(_490, _492)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9143:9166  \"vester.claimable(USER1)\" */ add(_490, _492), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _490), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:9143:9166  \"vester.claimable(USER1)\"\n                            expr_37 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_490)\n                        }\n                        /// @src 86:9201:9216  \"claimableAmount\"\n                        fun_assertEq_107790(expr_37)\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        let _493 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        mstore(_493, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9227:9247  \"vm.startPrank(USER1)\" */ add(_493, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_143)\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        let _494 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:9227:9247  \"vm.startPrank(USER1)\" */ _493, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9227:9247  \"vm.startPrank(USER1)\" */ _493, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        if iszero(_494)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_163 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_163, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_163, returndatasize())\n                        }\n                        /// @src 86:9227:9247  \"vm.startPrank(USER1)\"\n                        if _494\n                        {\n                            finalize_allocation_107616(_493)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_144 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:9261:9275  \"vester.claim()\"\n                        let _495 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9261:9275  \"vester.claim()\"\n                        mstore(_495, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:9261:9275  \"vester.claim()\"\n                        let _496 := call(gas(), value_144, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:9261:9275  \"vester.claim()\" */ _495, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:9261:9275  \"vester.claim()\" */ _495, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9261:9275  \"vester.claim()\"\n                        if iszero(_496)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_164 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_164, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_164, returndatasize())\n                        }\n                        /// @src 86:9261:9275  \"vester.claim()\"\n                        if _496\n                        {\n                            let _497 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9261:9275  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9261:9275  \"vester.claim()\" */ returndatasize()) { _497 := returndatasize() }\n                            finalize_allocation(_495, _497)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9261:9275  \"vester.claim()\" */ add(_495, _497), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _495), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        let _498 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        mstore(_498, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        let _499 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:9285:9299  \"vm.stopPrank()\" */ _498, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:9285:9299  \"vm.stopPrank()\" */ _498, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        if iszero(_499)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_165 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_165, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_165, returndatasize())\n                        }\n                        /// @src 86:9285:9299  \"vm.stopPrank()\"\n                        if _499\n                        {\n                            finalize_allocation_107616(_498)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_145 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_146 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                        let _500 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                        mstore(_500, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9325:9348  \"vester.balanceOf(USER1)\" */ add(_500, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_146)\n                        /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                        let _501 := staticcall(gas(), value_145, _500, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9325:9348  \"vester.balanceOf(USER1)\" */ _500, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                        if iszero(_501)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_166 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_166, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_166, returndatasize())\n                        }\n                        /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                        let expr_38 := _1\n                        if _501\n                        {\n                            let _502 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9325:9348  \"vester.balanceOf(USER1)\" */ returndatasize()) { _502 := returndatasize() }\n                            finalize_allocation(_500, _502)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9325:9348  \"vester.balanceOf(USER1)\" */ add(_500, _502), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _500), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:9325:9348  \"vester.balanceOf(USER1)\"\n                            expr_38 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_500)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _503 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_503, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_503, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x01158e460913d00000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _503, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_38)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _504 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _503, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _503, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_504)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_167 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_167, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_167, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _504\n                        {\n                            finalize_allocation_107616(_503)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_147 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                        let _505 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_505, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\" */ add(_505, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_146)\n                        /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                        let _506 := staticcall(gas(), value_147, _505, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\" */ _505, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_506)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_168 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_168, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_168, returndatasize())\n                        }\n                        /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                        let expr_39 := _1\n                        if _506\n                        {\n                            let _507 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _507 := returndatasize() }\n                            finalize_allocation(_505, _507)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\" */ add(_505, _507), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _505), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:9441:9466  \"zfiToken.balanceOf(USER1)\"\n                            expr_39 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_505)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _508 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_508, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_508, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x02b5e3af16b1880000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _508, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_39)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _509 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _508, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _508, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_509)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_169 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_169, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_169, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _509\n                        {\n                            finalize_allocation_107616(_508)\n                        }\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        let _510 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_510, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\" */ add(_510, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        let _511 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\" */ _510, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\" */ _510, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_511)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_170 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_170, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_170, returndatasize())\n                        }\n                        /// @src 86:9549:9582  \"vm.warp(block.timestamp + 1 days)\"\n                        if _511\n                        {\n                            finalize_allocation_107616(_510)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_148 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_149 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                        let _512 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                        mstore(_512, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9610:9633  \"vester.claimable(USER1)\" */ add(_512, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_149)\n                        /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                        let _513 := staticcall(gas(), value_148, _512, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9610:9633  \"vester.claimable(USER1)\" */ _512, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                        if iszero(_513)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_171 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_171, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_171, returndatasize())\n                        }\n                        /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                        let expr_40 := _1\n                        if _513\n                        {\n                            let _514 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9610:9633  \"vester.claimable(USER1)\" */ returndatasize()) { _514 := returndatasize() }\n                            finalize_allocation(_512, _514)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9610:9633  \"vester.claimable(USER1)\" */ add(_512, _514), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _512), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:9610:9633  \"vester.claimable(USER1)\"\n                            expr_40 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_512)\n                        }\n                        /// @src 86:9668:9683  \"claimableAmount\"\n                        fun_assertEq_107790(expr_40)\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        let _515 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        mstore(_515, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9694:9714  \"vm.startPrank(USER1)\" */ add(_515, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_149)\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        let _516 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:9694:9714  \"vm.startPrank(USER1)\" */ _515, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9694:9714  \"vm.startPrank(USER1)\" */ _515, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        if iszero(_516)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_172 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_172, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_172, returndatasize())\n                        }\n                        /// @src 86:9694:9714  \"vm.startPrank(USER1)\"\n                        if _516\n                        {\n                            finalize_allocation_107616(_515)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_150 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:9728:9742  \"vester.claim()\"\n                        let _517 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9728:9742  \"vester.claim()\"\n                        mstore(_517, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:9728:9742  \"vester.claim()\"\n                        let _518 := call(gas(), value_150, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:9728:9742  \"vester.claim()\" */ _517, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:9728:9742  \"vester.claim()\" */ _517, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9728:9742  \"vester.claim()\"\n                        if iszero(_518)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_173 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_173, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_173, returndatasize())\n                        }\n                        /// @src 86:9728:9742  \"vester.claim()\"\n                        if _518\n                        {\n                            let _519 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9728:9742  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9728:9742  \"vester.claim()\" */ returndatasize()) { _519 := returndatasize() }\n                            finalize_allocation(_517, _519)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9728:9742  \"vester.claim()\" */ add(_517, _519), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _517), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        let _520 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        mstore(_520, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        let _521 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:9752:9766  \"vm.stopPrank()\" */ _520, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:9752:9766  \"vm.stopPrank()\" */ _520, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        if iszero(_521)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_174 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_174, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_174, returndatasize())\n                        }\n                        /// @src 86:9752:9766  \"vm.stopPrank()\"\n                        if _521\n                        {\n                            finalize_allocation_107616(_520)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_151 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_152 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                        let _522 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                        mstore(_522, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9792:9815  \"vester.balanceOf(USER1)\" */ add(_522, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_152)\n                        /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                        let _523 := staticcall(gas(), value_151, _522, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9792:9815  \"vester.balanceOf(USER1)\" */ _522, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                        if iszero(_523)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_175 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_175, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_175, returndatasize())\n                        }\n                        /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                        let expr_41 := _1\n                        if _523\n                        {\n                            let _524 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9792:9815  \"vester.balanceOf(USER1)\" */ returndatasize()) { _524 := returndatasize() }\n                            finalize_allocation(_522, _524)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9792:9815  \"vester.balanceOf(USER1)\" */ add(_522, _524), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _522), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:9792:9815  \"vester.balanceOf(USER1)\"\n                            expr_41 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_522)\n                        }\n                        /// @src 86:9867:9880  \"vesterBalance\"\n                        fun_assertEq_107790(expr_41)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_153 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                        let _525 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_525, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\" */ add(_525, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_152)\n                        /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                        let _526 := staticcall(gas(), value_153, _525, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\" */ _525, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_526)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_176 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_176, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_176, returndatasize())\n                        }\n                        /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                        let expr_42 := _1\n                        if _526\n                        {\n                            let _527 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _527 := returndatasize() }\n                            finalize_allocation(_525, _527)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\" */ add(_525, _527), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _525), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:9908:9933  \"zfiToken.balanceOf(USER1)\"\n                            expr_42 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_525)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _528 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        mstore(_528, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                        mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_528, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), 0x0340aad21b3b700000)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _528, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_42)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        let _529 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _528, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _528, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if iszero(_529)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_177 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_177, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_177, returndatasize())\n                        }\n                        /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                        if _529\n                        {\n                            finalize_allocation_107616(_528)\n                        }\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        let _530 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_530, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\" */ add(_530, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        let _531 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\" */ _530, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\" */ _530, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_531)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_178 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_178, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_178, returndatasize())\n                        }\n                        /// @src 86:10016:10049  \"vm.warp(block.timestamp + 1 days)\"\n                        if _531\n                        {\n                            finalize_allocation_107616(_530)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_154 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_155 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                        let _532 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                        mstore(_532, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10077:10100  \"vester.claimable(USER1)\" */ add(_532, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_155)\n                        /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                        let _533 := staticcall(gas(), value_154, _532, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10077:10100  \"vester.claimable(USER1)\" */ _532, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                        if iszero(_533)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_179 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_179, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_179, returndatasize())\n                        }\n                        /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                        let expr_43 := _1\n                        if _533\n                        {\n                            let _534 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10077:10100  \"vester.claimable(USER1)\" */ returndatasize()) { _534 := returndatasize() }\n                            finalize_allocation(_532, _534)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10077:10100  \"vester.claimable(USER1)\" */ add(_532, _534), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _532), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:10077:10100  \"vester.claimable(USER1)\"\n                            expr_43 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_532)\n                        }\n                        /// @src 86:10135:10150  \"claimableAmount\"\n                        fun_assertEq_107790(expr_43)\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        let _535 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        mstore(_535, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10161:10181  \"vm.startPrank(USER1)\" */ add(_535, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_155)\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        let _536 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:10161:10181  \"vm.startPrank(USER1)\" */ _535, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10161:10181  \"vm.startPrank(USER1)\" */ _535, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        if iszero(_536)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_180 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_180, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_180, returndatasize())\n                        }\n                        /// @src 86:10161:10181  \"vm.startPrank(USER1)\"\n                        if _536\n                        {\n                            finalize_allocation_107616(_535)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_156 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:10195:10209  \"vester.claim()\"\n                        let _537 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10195:10209  \"vester.claim()\"\n                        mstore(_537, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:10195:10209  \"vester.claim()\"\n                        let _538 := call(gas(), value_156, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:10195:10209  \"vester.claim()\" */ _537, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:10195:10209  \"vester.claim()\" */ _537, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10195:10209  \"vester.claim()\"\n                        if iszero(_538)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_181 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_181, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_181, returndatasize())\n                        }\n                        /// @src 86:10195:10209  \"vester.claim()\"\n                        if _538\n                        {\n                            let _539 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10195:10209  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10195:10209  \"vester.claim()\" */ returndatasize()) { _539 := returndatasize() }\n                            finalize_allocation(_537, _539)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10195:10209  \"vester.claim()\" */ add(_537, _539), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _537), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        let _540 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        mstore(_540, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        let _541 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:10219:10233  \"vm.stopPrank()\" */ _540, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:10219:10233  \"vm.stopPrank()\" */ _540, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        if iszero(_541)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_182 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_182, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_182, returndatasize())\n                        }\n                        /// @src 86:10219:10233  \"vm.stopPrank()\"\n                        if _541\n                        {\n                            finalize_allocation_107616(_540)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_157 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_158 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                        let _542 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                        mstore(_542, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10259:10282  \"vester.balanceOf(USER1)\" */ add(_542, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_158)\n                        /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                        let _543 := staticcall(gas(), value_157, _542, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10259:10282  \"vester.balanceOf(USER1)\" */ _542, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                        if iszero(_543)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_183 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_183, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_183, returndatasize())\n                        }\n                        /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                        let expr_44 := _1\n                        if _543\n                        {\n                            let _544 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10259:10282  \"vester.balanceOf(USER1)\" */ returndatasize()) { _544 := returndatasize() }\n                            finalize_allocation(_542, _544)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10259:10282  \"vester.balanceOf(USER1)\" */ add(_542, _544), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _542), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:10259:10282  \"vester.balanceOf(USER1)\"\n                            expr_44 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_542)\n                        }\n                        /// @src 86:10326:10339  \"vesterBalance\"\n                        fun_assertEq_107701(expr_44)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_159 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                        let _545 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_545, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\" */ add(_545, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_158)\n                        /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                        let _546 := staticcall(gas(), value_159, _545, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\" */ _545, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_546)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_184 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_184, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_184, returndatasize())\n                        }\n                        /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                        let expr_45 := _1\n                        if _546\n                        {\n                            let _547 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _547 := returndatasize() }\n                            finalize_allocation(_545, _547)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\" */ add(_545, _547), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _545), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:10367:10392  \"zfiToken.balanceOf(USER1)\"\n                            expr_45 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_545)\n                        }\n                        /// @src 86:10423:10437  \"claimedBalance\"\n                        fun_assertEq_107787(expr_45)\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        let _548 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        mstore(_548, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x72eb5f81))\n                        mstore(/** @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\" */ add(_548, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), add(/** @src 86:7206:7221  \"block.timestamp\" */ timestamp(), /** @src 86:7224:7230  \"1 days\" */ 0x015180))\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        let _549 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\" */ _548, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\" */ _548, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        if iszero(_549)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_185 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_185, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_185, returndatasize())\n                        }\n                        /// @src 86:10486:10519  \"vm.warp(block.timestamp + 1 days)\"\n                        if _549\n                        {\n                            finalize_allocation_107616(_548)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_160 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_161 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                        let _550 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                        mstore(_550, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x402914f5))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10547:10570  \"vester.claimable(USER1)\" */ add(_550, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_161)\n                        /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                        let _551 := staticcall(gas(), value_160, _550, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10547:10570  \"vester.claimable(USER1)\" */ _550, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                        if iszero(_551)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_186 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_186, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_186, returndatasize())\n                        }\n                        /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                        let expr_46 := _1\n                        if _551\n                        {\n                            let _552 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10547:10570  \"vester.claimable(USER1)\" */ returndatasize()) { _552 := returndatasize() }\n                            finalize_allocation(_550, _552)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10547:10570  \"vester.claimable(USER1)\" */ add(_550, _552), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _550), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:10547:10570  \"vester.claimable(USER1)\"\n                            expr_46 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_550)\n                        }\n                        /// @src 86:10580:10608  \"assertEq(0, claimableAmount)\"\n                        fun_assertEq_107701(expr_46)\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        let _553 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        mstore(_553, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10618:10638  \"vm.startPrank(USER1)\" */ add(_553, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_161)\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        let _554 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:10618:10638  \"vm.startPrank(USER1)\" */ _553, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10618:10638  \"vm.startPrank(USER1)\" */ _553, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        if iszero(_554)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_187 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_187, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_187, returndatasize())\n                        }\n                        /// @src 86:10618:10638  \"vm.startPrank(USER1)\"\n                        if _554\n                        {\n                            finalize_allocation_107616(_553)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_162 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:10652:10666  \"vester.claim()\"\n                        let _555 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10652:10666  \"vester.claim()\"\n                        mstore(_555, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e71d92d))\n                        /// @src 86:10652:10666  \"vester.claim()\"\n                        let _556 := call(gas(), value_162, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 86:10652:10666  \"vester.claim()\" */ _555, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:10652:10666  \"vester.claim()\" */ _555, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10652:10666  \"vester.claim()\"\n                        if iszero(_556)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_188 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_188, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_188, returndatasize())\n                        }\n                        /// @src 86:10652:10666  \"vester.claim()\"\n                        if _556\n                        {\n                            let _557 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10652:10666  \"vester.claim()\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10652:10666  \"vester.claim()\" */ returndatasize()) { _557 := returndatasize() }\n                            finalize_allocation(_555, _557)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10652:10666  \"vester.claim()\" */ add(_555, _557), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _555), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                        }\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        let _558 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        mstore(_558, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        let _559 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 86:10676:10690  \"vm.stopPrank()\" */ _558, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4, /** @src 86:10676:10690  \"vm.stopPrank()\" */ _558, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        if iszero(_559)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_189 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_189, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_189, returndatasize())\n                        }\n                        /// @src 86:10676:10690  \"vm.stopPrank()\"\n                        if _559\n                        {\n                            finalize_allocation_107616(_558)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if _1 { revert(_1, _1) }\n                        }\n                        let value_163 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:2339:2345  \"vester\" */ 0x28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let value_164 := and(sload(32), sub(shl(160, 1), 1))\n                        /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                        let _560 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                        mstore(_560, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10716:10739  \"vester.balanceOf(USER1)\" */ add(_560, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_164)\n                        /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                        let _561 := staticcall(gas(), value_163, _560, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10716:10739  \"vester.balanceOf(USER1)\" */ _560, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                        if iszero(_561)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_190 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_190, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_190, returndatasize())\n                        }\n                        /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                        let expr_47 := _1\n                        if _561\n                        {\n                            let _562 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10716:10739  \"vester.balanceOf(USER1)\" */ returndatasize()) { _562 := returndatasize() }\n                            finalize_allocation(_560, _562)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10716:10739  \"vester.balanceOf(USER1)\" */ add(_560, _562), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _560), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:10716:10739  \"vester.balanceOf(USER1)\"\n                            expr_47 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_560)\n                        }\n                        /// @src 86:10749:10775  \"assertEq(0, vesterBalance)\"\n                        fun_assertEq_107701(expr_47)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_165 := and(sload(/** @src 86:6233:6241  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                        let _563 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                        mstore(_563, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\" */ add(_563, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 4), value_164)\n                        /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                        let _564 := staticcall(gas(), value_165, _563, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\" */ _563, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                        /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                        if iszero(_564)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_191 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_191, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_191, returndatasize())\n                        }\n                        /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                        let expr_48 := _1\n                        if _564\n                        {\n                            let _565 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32\n                            /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32, /** @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _565 := returndatasize() }\n                            finalize_allocation(_563, _565)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\" */ add(_563, _565), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _563), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 86:10802:10827  \"zfiToken.balanceOf(USER1)\"\n                            expr_48 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_563)\n                        }\n                        /// @src 86:10858:10872  \"claimedBalance\"\n                        fun_assertEq_107787(expr_48)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        return(_1, _1)\n                    }\n                    case 0xfa7626d4 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_166 := and(sload(/** @src 13:1016:1042  \"bool public IS_TEST = true\" */ 30), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, iszero(iszero(value_166)))\n                        return(memPos_11, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, _2)\n                let tail_2 := add(add(headStart, shl(5, length)), _2)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                let i_1 := i\n                for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    let tail_3 := add(tail_2, _2)\n                    mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n                    let memberValue0 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), _2)\n                    let pos_1 := tail_3\n                    let length_1 := mload(memberValue0)\n                    mstore(tail_3, length_1)\n                    pos_1 := add(tail_2, 96)\n                    let srcPtr_1 := add(memberValue0, _1)\n                    let i_2 := i\n                    for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                    {\n                        mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                        pos_1 := add(pos_1, _1)\n                        srcPtr_1 := add(srcPtr_1, _1)\n                    }\n                    tail_2 := pos_1\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function abi_encode_array_string_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function finalize_allocation_107616(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_107662(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n            }\n            function finalize_allocation_108240(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 128)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_250227(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 96)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ size, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 31), not(31)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_address_bytes32(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 286 @src 2:1243:1447  \"function failed() public view returns (bool) {...\"\n            function fun_failed() -> var\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value := and(sload(/** @src 2:1302:1309  \"_failed\" */ 0x08), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                /// @src 2:1298:1441  \"if (_failed) {...\"\n                switch /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ value\n                case /** @src 2:1298:1441  \"if (_failed) {...\" */ 0 {\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    mstore(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(add(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _3 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                    if iszero(_3)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ 32)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(/** @src -1:-1:-1 */ expr, expr)\n                        }\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_1)\n                    }\n                    /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    var := /** @src 2:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                    /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    leave\n                }\n                default /// @src 2:1298:1441  \"if (_failed) {...\"\n                {\n                    /// @src 2:1325:1339  \"return _failed\"\n                    var := value\n                    leave\n                }\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                size := add(shl(5, length), 0x20)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_string_storage_250240(pos) -> ret\n            {\n                let slotValue := sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(pos, _1), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1052:1066  \"self._calldata\" */ 20)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let dataPos := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(pos, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(pos, i), _1)\n                }\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(pos, _1), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ value)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(pos, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(pos, i), _1)\n                }\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                value0 := value\n            }\n            function update_storage_value_offsett_contract_ZFIToken_to_contract_ZFIToken(value)\n            {\n                sstore(/** @src 9:6854:6866  \"self._target\" */ 17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ or(and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_address_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(headStart, 32), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x015af1d78b58c40000)\n            }\n            /// @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_address_uint256_107774(headStart, value0) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(headStart, 32), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x03cb71f51fc5580000)\n            }\n            /// @ast-id 5871 @src 4:26720:26811  \"function deal(address to, uint256 give) internal virtual {...\"\n            function fun_deal(var_to)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1))\n                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                let _2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ add(_2, 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(add(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 86:891:898  \"2 ether\" */ 0x1bc16d674ec80000)\n                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                let _3 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ 0, _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _2, 0)\n                if iszero(_3)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                if _3\n                {\n                    finalize_allocation_107616(_2)\n                }\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            /// @ast-id 63415 @src 86:1791:2104  \"function deployRewardDistributor() public returns(address rewardDistributorAddress){...\"\n            function fun_deployRewardDistributor() -> var_rewardDistributorAddress\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _1 := sload(/** @src 86:1898:1914  \"DEPLOYER_ADDRESS\" */ 0x1f)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ value, value)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _4 := 64\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                let _5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_5, 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(_1, _2))\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                let _6 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3, /** @src -1:-1:-1 */ value, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src -1:-1:-1 */ value)\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                if iszero(_6)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src -1:-1:-1 */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                if _6\n                {\n                    finalize_allocation_107616(_5)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    value := /** @src -1:-1:-1 */ value\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value_1 := and(sload(/** @src 86:1990:1998  \"zfiToken\" */ 0x23), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                let value_2 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), _2)\n                /// @src 86:1960:2024  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\"\n                let _7 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                /// @src 86:1960:2024  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\"\n                let _8 := datasize(\"RewardDistributor_58666\")\n                let _9 := add(_7, _8)\n                if or(gt(_9, 0xffffffffffffffff), lt(_9, _7))\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                    revert(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36)\n                }\n                /// @src 86:1960:2024  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\"\n                datacopy(_7, dataoffset(\"RewardDistributor_58666\"), _8)\n                let expr_63399_address := create(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 86:1960:2024  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\" */ _7, sub(abi_encode_address_address(_9, value_1, value_2), _7))\n                if iszero(expr_63399_address)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_1, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 86:1925:2025  \"rewardDistributorAddress = address(new RewardDistributor(address(zfiToken), address(rewardTracker)))\"\n                var_rewardDistributorAddress := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(/** @src 86:1952:2025  \"address(new RewardDistributor(address(zfiToken), address(rewardTracker)))\" */ expr_63399_address, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2)\n                /// @src 86:2048:2072  \"rewardDistributorAddress\"\n                fun_log(var_rewardDistributorAddress)\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                }\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                let _10 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                let _11 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 86:2083:2097  \"vm.stopPrank()\" */ _10, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ 4, /** @src 86:2083:2097  \"vm.stopPrank()\" */ _10, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                if iszero(_11)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_2, /** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 86:2083:2097  \"vm.stopPrank()\"\n                if _11\n                {\n                    finalize_allocation_107616(_10)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    if value\n                    {\n                        revert(/** @src 86:1884:1915  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                }\n            }\n            /// @ast-id 24443 @src 16:6841:6957  \"function log(address p0) internal pure {...\"\n            function fun_log(var_p0)\n            {\n                /// @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                let expr_24439_mpos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                let _1 := add(expr_24439_mpos, 0x20)\n                mstore(_1, shl(225, 0x161765e1))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(/** @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\" */ add(expr_24439_mpos, 36), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(var_p0, sub(shl(160, 1), 1)))\n                /// @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                mstore(expr_24439_mpos, 36)\n                finalize_allocation_250227(expr_24439_mpos)\n                /// @src 16:1222:1381  \"assembly {...\"\n                pop(staticcall(gas(), /** @src 16:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 16:1222:1381  \"assembly {...\" */ _1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 16:1105:1119  \"payload.length\" */ expr_24439_mpos), /** @src 16:1222:1381  \"assembly {...\" */ 0, 0))\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                value0 := value\n            }\n            /// @ast-id 416 @src 2:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq(var_left)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1))\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_left)\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), 0x015af1d78b58c40000)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if _3\n                {\n                    finalize_allocation_107616(_2)\n                }\n            }\n            /// @ast-id 416 @src 2:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq_107701(var_right)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1))\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_right)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(_3)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if _3\n                {\n                    finalize_allocation_107616(_2)\n                }\n            }\n            /// @ast-id 416 @src 2:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq_107787(var_right)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1))\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x03cb71f51fc5580000)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_right)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if _3\n                {\n                    finalize_allocation_107616(_2)\n                }\n            }\n            /// @ast-id 416 @src 2:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq_107790(var_right)\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1))\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x8ac7230489e80000)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_right)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if _3\n                {\n                    finalize_allocation_107616(_2)\n                }\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ returndatasize())\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_address_bytes32_bytes32(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(headStart, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value1)\n                mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(headStart, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value2)\n            }\n            /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n            function fun_getCallParams_107628() -> var_mpos\n            {\n                /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ extract_byte_array_length(sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)))\n                case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, sub(abi_encode_string_storage_250240(memPtr), memPtr))\n                    /// @src 9:1151:1172  \"return self._calldata\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let pos := mload(64)\n                    let pos_1 := pos\n                    let length := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    pos := add(pos, _1)\n                    mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { }\n                    lt(i, length)\n                    {\n                        i := add(i, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    finalize_allocation(pos_1, sub(pos, pos_1))\n                    /// @src 9:11302:11310  \"b.length\"\n                    let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 5\n                    let product := shl(_2, expr)\n                    if iszero(or(iszero(expr), eq(_1, div(product, expr))))\n                    {\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x24)\n                    }\n                    let _3 := array_allocation_size_bytes(product)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _3)\n                    mstore(memPtr_1, product)\n                    calldatacopy(add(memPtr_1, _1), calldatasize(), add(array_allocation_size_bytes(product), not(31)))\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                    for { }\n                    /** @src 9:1109:1119  \"self._keys\" */ 1\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11360:11363  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        { break }\n                        /// @src 9:11456:11540  \"assembly {...\"\n                        mstore(add(add(memPtr_1, shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                    }\n                    /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n            function fun_getCallParams_107754() -> var_mpos\n            {\n                /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ extract_byte_array_length(sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)))\n                case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, sub(abi_encode_string_storage_250240(memPtr), memPtr))\n                    /// @src 9:1151:1172  \"return self._calldata\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let pos := mload(64)\n                    let pos_1 := pos\n                    let length := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    pos := add(pos, _1)\n                    mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { }\n                    lt(i, length)\n                    {\n                        i := add(i, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    finalize_allocation(pos_1, sub(pos, pos_1))\n                    /// @src 9:11302:11310  \"b.length\"\n                    let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 5\n                    let product := shl(_2, expr)\n                    if iszero(or(iszero(expr), eq(_1, div(product, expr))))\n                    {\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x24)\n                    }\n                    let _3 := array_allocation_size_bytes(product)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _3)\n                    mstore(memPtr_1, product)\n                    calldatacopy(add(memPtr_1, _1), calldatasize(), add(array_allocation_size_bytes(product), not(31)))\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                    for { }\n                    /** @src 9:1109:1119  \"self._keys\" */ 1\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11360:11363  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        { break }\n                        /// @src 9:11456:11540  \"assembly {...\"\n                        mstore(add(add(memPtr_1, shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                    }\n                    /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n            function fun_getCallParams() -> var_mpos\n            {\n                /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ extract_byte_array_length(sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)))\n                case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, sub(abi_encode_string_storage_250240(memPtr), memPtr))\n                    /// @src 9:1151:1172  \"return self._calldata\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let pos := mload(64)\n                    let pos_1 := pos\n                    let length := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    pos := add(pos, _1)\n                    mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { }\n                    lt(i, length)\n                    {\n                        i := add(i, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    finalize_allocation(pos_1, sub(pos, pos_1))\n                    /// @src 9:11302:11310  \"b.length\"\n                    let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 5\n                    let product := shl(_2, expr)\n                    if iszero(or(iszero(expr), eq(_1, div(product, expr))))\n                    {\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x24)\n                    }\n                    let _3 := array_allocation_size_bytes(product)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _3)\n                    mstore(memPtr_1, product)\n                    calldatacopy(add(memPtr_1, _1), calldatasize(), add(array_allocation_size_bytes(product), not(31)))\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                    for { }\n                    /** @src 9:1109:1119  \"self._keys\" */ 1\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11360:11363  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        { break }\n                        /// @src 9:11456:11540  \"assembly {...\"\n                        mstore(add(add(memPtr_1, shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                    }\n                    /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n            function fun_getCallParams_269488() -> var_mpos\n            {\n                /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ extract_byte_array_length(sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)))\n                case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, sub(abi_encode_string_storage_250240(memPtr), memPtr))\n                    /// @src 9:1151:1172  \"return self._calldata\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let pos := mload(64)\n                    let pos_1 := pos\n                    let length := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    pos := add(pos, _1)\n                    mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { }\n                    lt(i, length)\n                    {\n                        i := add(i, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    finalize_allocation(pos_1, sub(pos, pos_1))\n                    /// @src 9:11302:11310  \"b.length\"\n                    let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 5\n                    let product := shl(_2, expr)\n                    if iszero(or(iszero(expr), eq(_1, div(product, expr))))\n                    {\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x24)\n                    }\n                    let _3 := array_allocation_size_bytes(product)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _3)\n                    mstore(memPtr_1, product)\n                    calldatacopy(add(memPtr_1, _1), calldatasize(), add(array_allocation_size_bytes(product), not(31)))\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                    for { }\n                    /** @src 9:1109:1119  \"self._keys\" */ 1\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11360:11363  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        { break }\n                        /// @src 9:11456:11540  \"assembly {...\"\n                        mstore(add(add(memPtr_1, shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                    }\n                    /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n            function fun_getCallParams_284171() -> var_mpos\n            {\n                /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ extract_byte_array_length(sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)))\n                case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, sub(abi_encode_string_storage_250240(memPtr), memPtr))\n                    /// @src 9:1151:1172  \"return self._calldata\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let pos := mload(64)\n                    let pos_1 := pos\n                    let length := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    pos := add(pos, _1)\n                    mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    for { }\n                    lt(i, length)\n                    {\n                        i := add(i, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    finalize_allocation(pos_1, sub(pos, pos_1))\n                    /// @src 9:11302:11310  \"b.length\"\n                    let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 5\n                    let product := shl(_2, expr)\n                    if iszero(or(iszero(expr), eq(_1, div(product, expr))))\n                    {\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x24)\n                    }\n                    let _3 := array_allocation_size_bytes(product)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _3)\n                    mstore(memPtr_1, product)\n                    calldatacopy(add(memPtr_1, _1), calldatasize(), add(array_allocation_size_bytes(product), not(31)))\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                    /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                    for { }\n                    /** @src 9:1109:1119  \"self._keys\" */ 1\n                    /// @src 9:11331:11344  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11360:11363  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                        /// @src 9:11346:11358  \"i < b.length\"\n                        { break }\n                        /// @src 9:11456:11540  \"assembly {...\"\n                        mstore(add(add(memPtr_1, shl(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _1), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                    }\n                    /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 7591 @src 9:1251:1594  \"function callTarget(StdStorage storage self) internal view returns (bool, bytes32) {...\"\n            function fun_callTarget_107633() -> var, var_1\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(/** @src 9:1381:1390  \"self._sig\" */ 15))\n                /// @src 9:1392:1411  \"getCallParams(self)\"\n                let expr_mpos := fun_getCallParams()\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _1 := 0x20\n                let _2 := add(expr_mpos_1, _1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(_2, and(value, shl(224, 0xffffffff)))\n                let _3 := 36\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3), length)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _4 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1)\n                let _5 := 4\n                mstore(expr_mpos_1, add(_4, _5))\n                finalize_allocation(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                /// @src 9:1458:1470  \"self._target\"\n                let _6 := 17\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value_1 := and(sload(/** @src 9:1458:1470  \"self._target\" */ _6), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _7 := 0\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component := staticcall(gas(), value_1, _2, mload(expr_mpos_1), /** @src -1:-1:-1 */ _7, _7)\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component_mpos := extract_returndata()\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _8 := sload(/** @src 9:1540:1551  \"self._depth\" */ 16)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let product := shl(5, _8)\n                if iszero(eq(_8, and(_8, sub(shl(251, 1), 1))))\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                }\n                /// @src 9:10974:10985  \"bytes32 out\"\n                let var_out := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11018  \"b.length\"\n                let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos)\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                let expr_1 := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)\n                case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_1 := expr }\n                default {\n                    expr_1 := /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1\n                }\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _7\n                /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                for { }\n                /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_1)\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                {\n                    /// @src 9:11078:11081  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 9:11114:11124  \"offset + i\"\n                    let _9 := checked_add_uint256(product, var_i)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    if iszero(lt(_9, mload(expr_component_mpos)))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x32)\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    let cleaned := and(mload(add(add(expr_component_mpos, _9), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(248, 255))\n                    let product_1 := shl(/** @src 9:1540:1551  \"self._depth\" */ 3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_i)\n                    if iszero(or(iszero(var_i), eq(/** @src 9:11142:11143  \"8\" */ 0x08, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ div(product_1, var_i))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                    var_out := or(var_out, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shr(product_1, cleaned))\n                }\n                /// @src 9:1563:1587  \"return (success, result)\"\n                var := expr_component\n                var_1 := var_out\n            }\n            /// @ast-id 7591 @src 9:1251:1594  \"function callTarget(StdStorage storage self) internal view returns (bool, bytes32) {...\"\n            function fun_callTarget_107674() -> var, var_1\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(/** @src 9:1381:1390  \"self._sig\" */ 15))\n                /// @src 9:1392:1411  \"getCallParams(self)\"\n                let expr_mpos := fun_getCallParams()\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _1 := 0x20\n                let _2 := add(expr_mpos_1, _1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(_2, and(value, shl(224, 0xffffffff)))\n                let _3 := 36\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3), length)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _4 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1)\n                let _5 := 4\n                mstore(expr_mpos_1, add(_4, _5))\n                finalize_allocation(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                /// @src 9:1458:1470  \"self._target\"\n                let _6 := 17\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value_1 := and(sload(/** @src 9:1458:1470  \"self._target\" */ _6), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _7 := 0\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component := staticcall(gas(), value_1, _2, mload(expr_mpos_1), /** @src -1:-1:-1 */ _7, _7)\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component_mpos := extract_returndata()\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _8 := sload(/** @src 9:1540:1551  \"self._depth\" */ 16)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let product := shl(5, _8)\n                if iszero(eq(_8, and(_8, sub(shl(251, 1), 1))))\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                }\n                /// @src 9:10974:10985  \"bytes32 out\"\n                let var_out := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11018  \"b.length\"\n                let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos)\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                let expr_1 := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)\n                case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_1 := expr }\n                default {\n                    expr_1 := /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1\n                }\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _7\n                /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                for { }\n                /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_1)\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                {\n                    /// @src 9:11078:11081  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 9:11114:11124  \"offset + i\"\n                    let _9 := checked_add_uint256(product, var_i)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    if iszero(lt(_9, mload(expr_component_mpos)))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x32)\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    let cleaned := and(mload(add(add(expr_component_mpos, _9), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(248, 255))\n                    let product_1 := shl(/** @src 9:1540:1551  \"self._depth\" */ 3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_i)\n                    if iszero(or(iszero(var_i), eq(/** @src 9:11142:11143  \"8\" */ 0x08, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ div(product_1, var_i))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                    var_out := or(var_out, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shr(product_1, cleaned))\n                }\n                /// @src 9:1563:1587  \"return (success, result)\"\n                var := expr_component\n                var_1 := var_out\n            }\n            /// @ast-id 7591 @src 9:1251:1594  \"function callTarget(StdStorage storage self) internal view returns (bool, bytes32) {...\"\n            function fun_callTarget() -> var, var_1\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(/** @src 9:1381:1390  \"self._sig\" */ 15))\n                /// @src 9:1392:1411  \"getCallParams(self)\"\n                let expr_mpos := fun_getCallParams_269488()\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _1 := 0x20\n                let _2 := add(expr_mpos_1, _1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(_2, and(value, shl(224, 0xffffffff)))\n                let _3 := 36\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3), length)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _4 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1)\n                let _5 := 4\n                mstore(expr_mpos_1, add(_4, _5))\n                finalize_allocation(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                /// @src 9:1458:1470  \"self._target\"\n                let _6 := 17\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value_1 := and(sload(/** @src 9:1458:1470  \"self._target\" */ _6), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _7 := 0\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component := staticcall(gas(), value_1, _2, mload(expr_mpos_1), /** @src -1:-1:-1 */ _7, _7)\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component_mpos := extract_returndata()\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _8 := sload(/** @src 9:1540:1551  \"self._depth\" */ 16)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let product := shl(5, _8)\n                if iszero(eq(_8, and(_8, sub(shl(251, 1), 1))))\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                }\n                /// @src 9:10974:10985  \"bytes32 out\"\n                let var_out := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11018  \"b.length\"\n                let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos)\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                let expr_1 := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)\n                case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_1 := expr }\n                default {\n                    expr_1 := /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1\n                }\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _7\n                /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                for { }\n                /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_1)\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                {\n                    /// @src 9:11078:11081  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 9:11114:11124  \"offset + i\"\n                    let _9 := checked_add_uint256(product, var_i)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    if iszero(lt(_9, mload(expr_component_mpos)))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x32)\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    let cleaned := and(mload(add(add(expr_component_mpos, _9), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(248, 255))\n                    let product_1 := shl(/** @src 9:1540:1551  \"self._depth\" */ 3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_i)\n                    if iszero(or(iszero(var_i), eq(/** @src 9:11142:11143  \"8\" */ 0x08, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ div(product_1, var_i))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                    var_out := or(var_out, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shr(product_1, cleaned))\n                }\n                /// @src 9:1563:1587  \"return (success, result)\"\n                var := expr_component\n                var_1 := var_out\n            }\n            /// @ast-id 7591 @src 9:1251:1594  \"function callTarget(StdStorage storage self) internal view returns (bool, bytes32) {...\"\n            function fun_callTarget_269494() -> var, var_1\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(/** @src 9:1381:1390  \"self._sig\" */ 15))\n                /// @src 9:1392:1411  \"getCallParams(self)\"\n                let expr_mpos := fun_getCallParams_284171()\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(64)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _1 := 0x20\n                let _2 := add(expr_mpos_1, _1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(_2, and(value, shl(224, 0xffffffff)))\n                let _3 := 36\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3), length)\n                /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                let _4 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1)\n                let _5 := 4\n                mstore(expr_mpos_1, add(_4, _5))\n                finalize_allocation(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                /// @src 9:1458:1470  \"self._target\"\n                let _6 := 17\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let value_1 := and(sload(/** @src 9:1458:1470  \"self._target\" */ _6), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _7 := 0\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component := staticcall(gas(), value_1, _2, mload(expr_mpos_1), /** @src -1:-1:-1 */ _7, _7)\n                /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                let expr_component_mpos := extract_returndata()\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _8 := sload(/** @src 9:1540:1551  \"self._depth\" */ 16)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let product := shl(5, _8)\n                if iszero(eq(_8, and(_8, sub(shl(251, 1), 1))))\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                }\n                /// @src 9:10974:10985  \"bytes32 out\"\n                let var_out := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11018  \"b.length\"\n                let expr := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos)\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                let expr_1 := /** @src -1:-1:-1 */ _7\n                /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)\n                case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_1 := expr }\n                default {\n                    expr_1 := /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1\n                }\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _7\n                /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                for { }\n                /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_1)\n                /// @src 9:11054:11067  \"uint256 i = 0\"\n                {\n                    /// @src 9:11078:11081  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 9:11114:11124  \"offset + i\"\n                    let _9 := checked_add_uint256(product, var_i)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    if iszero(lt(_9, mload(expr_component_mpos)))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x32)\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    let cleaned := and(mload(add(add(expr_component_mpos, _9), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(248, 255))\n                    let product_1 := shl(/** @src 9:1540:1551  \"self._depth\" */ 3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_i)\n                    if iszero(or(iszero(var_i), eq(/** @src 9:11142:11143  \"8\" */ 0x08, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ div(product_1, var_i))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3)\n                    }\n                    /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                    var_out := or(var_out, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shr(product_1, cleaned))\n                }\n                /// @src 9:1563:1587  \"return (success, result)\"\n                var := expr_component\n                var_1 := var_out\n            }\n            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, /** @src 9:12275:12388  \"assembly {...\" */ not(0))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                {\n                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_decode_array_bytes32_dyn_fromMemory(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end))\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let _1 := mload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_string_dyn(_1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(src))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            /// @ast-id 8129 @src 9:4249:6742  \"function find(StdStorage storage self, bool _clear) internal returns (FindData storage) {...\"\n            function fun_find() -> var_slot\n            {\n                /// @ast-id 8129\n                let /// @ast-id 8129\n                var_clear := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0\n                let value := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                let value_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(/** @src 9:4397:4406  \"self._sig\" */ 15))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := sload(/** @src 9:4438:4449  \"self._depth\" */ 16)\n                /// @src 9:4481:4500  \"getCallParams(self)\"\n                let expr_mpos := fun_getCallParams()\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(var_clear, value)\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let dataSlot := keccak256(var_clear, 0x40)\n                mstore(var_clear, and(value_1, shl(224, 0xffffffff)))\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(var_clear, 0x40)\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                let _2 := add(expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _2, length)\n                let _3 := add(/** @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_3, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                let _4 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3, /** @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_1)\n                mstore(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                finalize_allocation(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                mstore(var_clear, /** @src 9:4573:4621  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, mload(/** @src 9:4573:4621  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_1)))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0x20, dataSlot_1)\n                /// @src 9:4547:4802  \"if (self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:4551:4628  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(var_clear, 0x40), /** @src 9:4438:4449  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                /// @src 9:4547:4802  \"if (self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(var_clear, value)\n                    mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let dataSlot_2 := keccak256(var_clear, 0x40)\n                    mstore(var_clear, and(value_1, shl(224, 0xffffffff)))\n                    mstore(0x20, dataSlot_2)\n                    let dataSlot_3 := keccak256(var_clear, 0x40)\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    let expr_mpos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    let _5 := add(expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                    let length_1 := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _5, length_1)\n                    let _6 := add(/** @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_1)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_6, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    let _7 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _6, /** @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2)\n                    mstore(expr_mpos_2, add(_7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    finalize_allocation(expr_mpos_2, add(_7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                    mstore(var_clear, /** @src 9:4742:4790  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _5, mload(/** @src 9:4742:4790  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_2)))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(0x20, dataSlot_3)\n                    /// @src 9:4713:4791  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                    var_slot := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(var_clear, 0x40)\n                    /// @src 9:4713:4791  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                    leave\n                }\n                /// @src 9:4811:4822  \"vm.record()\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 9:4811:4822  \"vm.record()\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(var_clear, var_clear)\n                }\n                /// @src 9:4811:4822  \"vm.record()\"\n                let _8 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:4811:4822  \"vm.record()\"\n                mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x266cf109))\n                /// @src 9:4811:4822  \"vm.record()\"\n                let _9 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, var_clear, /** @src 9:4811:4822  \"vm.record()\" */ _8, /** @src 9:4361:4373  \"self._target\" */ 4, /** @src 9:4811:4822  \"vm.record()\" */ _8, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_clear)\n                /// @src 9:4811:4822  \"vm.record()\"\n                if iszero(_9)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 9:4811:4822  \"vm.record()\"\n                if _9\n                {\n                    finalize_allocation_107616(_8)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    var_clear := var_clear\n                }\n                /// @src 9:4857:4873  \"callTarget(self)\"\n                let expr_component, expr_component_1 := fun_callTarget()\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                let _10 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x65bc9481))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(/** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ value)\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                let _11 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _10, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                if iszero(_11)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_1, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                let expr_component_mpos := var_clear\n                if _11\n                {\n                    let _12 := returndatasize()\n                    returndatacopy(_10, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _12)\n                    finalize_allocation(_10, _12)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let offset := mload(_10)\n                    if gt(offset, 0xffffffffffffffff)\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value0 := abi_decode_array_bytes32_dyn_fromMemory(add(_10, offset), /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let offset_1 := mload(add(_10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if gt(offset_1, 0xffffffffffffffff)\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    pop(abi_decode_array_bytes32_dyn_fromMemory(add(_10, offset_1), /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12)))\n                    expr_component_mpos := value0\n                }\n                /// @src 9:4947:6408  \"if (reads.length == 0) {...\"\n                switch /** @src 9:4951:4968  \"reads.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:4951:4963  \"reads.length\" */ expr_component_mpos))\n                case /** @src 9:4947:6408  \"if (reads.length == 0) {...\" */ 0 {\n                    /// @src 9:5094:5107  \"uint256 i = 0\"\n                    let var_i := var_clear\n                    /// @src 9:5089:6398  \"for (uint256 i = 0; i < reads.length; i++) {...\"\n                    for { }\n                    /** @src 9:12275:12388  \"assembly {...\" */ 1\n                    /// @src 9:5094:5107  \"uint256 i = 0\"\n                    {\n                        /// @src 9:5127:5130  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:5109:5125  \"i < reads.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:5113:5125  \"reads.length\" */ expr_component_mpos)))\n                        /// @src 9:5109:5125  \"i < reads.length\"\n                        { break }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _13 := mload(/** @src 9:5178:5186  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        let _14 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        mstore(_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        let _15 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ _14, sub(abi_encode_address_bytes32(add(_14, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ value, _13), _14), _14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        if iszero(_15)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_2, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        let expr := var_clear\n                        if _15\n                        {\n                            let _16 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ returndatasize()) { _16 := returndatasize() }\n                            finalize_allocation(_14, _16)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ add(_14, _16), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_14)\n                        }\n                        /// @src 9:5205:5319  \"if (prev == bytes32(0)) {...\"\n                        if /** @src 9:5209:5227  \"prev == bytes32(0)\" */ iszero(expr)\n                        /// @src 9:5205:5319  \"if (prev == bytes32(0)) {...\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let _17 := mload(/** @src 9:5290:5298  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 9:5256:5300  \"WARNING_UninitedSlot(who, uint256(reads[i]))\"\n                            let _18 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:5256:5300  \"WARNING_UninitedSlot(who, uint256(reads[i]))\"\n                            log1(_18, sub(abi_encode_address_bytes32(_18, value, _17), _18), 0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _19 := mload(/** @src 9:5369:5377  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_2 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        let _20 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        mstore(_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        let _21 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ _20, sub(abi_encode_address_bytes32(add(_20, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ value_2, _19), _20), _20, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        if iszero(_21)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_3, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        let expr_1 := var_clear\n                        if _21\n                        {\n                            let _22 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_20, _22)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ add(_20, _22), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            expr_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_20)\n                        }\n                        /// @src 9:2057:2073  \"callTarget(self)\"\n                        let expr_component_2, expr_component_3 := fun_callTarget()\n                        /// @src 9:2102:2167  \"prevReturnValue == bytes32(0) ? bytes32(UINT256_MAX) : bytes32(0)\"\n                        let expr_2 := var_clear\n                        switch /** @src 9:2102:2131  \"prevReturnValue == bytes32(0)\" */ iszero(expr_component_3)\n                        case /** @src 9:2102:2167  \"prevReturnValue == bytes32(0) ? bytes32(UINT256_MAX) : bytes32(0)\" */ 0 { expr_2 := var_clear }\n                        default {\n                            expr_2 := /** @src 9:12275:12388  \"assembly {...\" */ not(0)\n                        }\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        let _23 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        mstore(_23, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        let _24 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\" */ _23, sub(abi_encode_address_bytes32_bytes32(add(_23, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\" */ value_2, _19, expr_2), _23), _23, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        if iszero(_24)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_4, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        if _24\n                        {\n                            finalize_allocation_107616(_23)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if var_clear\n                            {\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                        }\n                        /// @src 9:2254:2270  \"callTarget(self)\"\n                        let expr_component_4, expr_component_5 := fun_callTarget()\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_3 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        let _25 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        mstore(_25, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        let _26 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\" */ _25, sub(abi_encode_address_bytes32_bytes32(add(_25, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\" */ value_3, _19, expr_1), _25), _25, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        if iszero(_26)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_5, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        if _26\n                        {\n                            finalize_allocation_107616(_25)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if var_clear\n                            {\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                        }\n                        /// @src 9:2343:2389  \"success && (prevReturnValue != newReturnValue)\"\n                        let expr_3 := expr_component_2\n                        if expr_component_2\n                        {\n                            expr_3 := /** @src 9:2355:2388  \"prevReturnValue != newReturnValue\" */ iszero(eq(expr_component_3, expr_component_5))\n                        }\n                        /// @src 9:5337:5429  \"if (!checkSlotMutatesCall(self, reads[i])) {...\"\n                        if /** @src 9:5341:5378  \"!checkSlotMutatesCall(self, reads[i])\" */ iszero(/** @src 9:5342:5378  \"checkSlotMutatesCall(self, reads[i])\" */ expr_3)\n                        /// @src 9:5337:5429  \"if (!checkSlotMutatesCall(self, reads[i])) {...\"\n                        {\n                            /// @src 9:5402:5410  \"continue\"\n                            continue\n                        }\n                        /// @src 9:5447:5497  \"(uint256 offsetLeft, uint256 offsetRight) = (0, 0)\"\n                        let var_offsetLeft := var_clear\n                        let var_offsetRight := var_clear\n                        /// @src 9:5516:5772  \"if (self._enable_packed_slots) {...\"\n                        if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:5520:5545  \"self._enable_packed_slots\" */ 19), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                        /// @src 9:5516:5772  \"if (self._enable_packed_slots) {...\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let _27 := mload(/** @src 9:5654:5662  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let value_4 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            let _28 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            mstore(_28, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            let _29 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ _28, sub(abi_encode_address_bytes32(add(_28, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ value_4, _27), _28), _28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            if iszero(_29)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_6 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_6, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_6, returndatasize())\n                            }\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            let expr_4 := var_clear\n                            if _29\n                            {\n                                let _30 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ returndatasize()) { _30 := returndatasize() }\n                                finalize_allocation(_28, _30)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ add(_28, _30), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                expr_4 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_28)\n                            }\n                            /// @src 9:3293:3321  \"findOffset(self, slot, true)\"\n                            let expr_component_6, expr_component_7 := fun_findOffset(_27)\n                            /// @src 9:3372:3401  \"findOffset(self, slot, false)\"\n                            let expr_component_8, expr_component_9 := fun_findOffset_250253(_27)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let value_5 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            let _31 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            mstore(_31, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            let _32 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\" */ _31, sub(abi_encode_address_bytes32_bytes32(add(_31, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\" */ value_5, _27, expr_4), _31), _31, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if iszero(_32)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_7 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_7, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_7, returndatasize())\n                            }\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if _32\n                            {\n                                finalize_allocation_107616(_31)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                if var_clear\n                                {\n                                    revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                                }\n                            }\n                            /// @src 9:3558:3581  \"foundLeft && foundRight\"\n                            let expr_5 := expr_component_6\n                            if expr_component_6 { expr_5 := expr_component_8 }\n                            /// @src 9:5601:5663  \"(found, offsetLeft, offsetRight) = findOffsets(self, reads[i])\"\n                            var_offsetRight := expr_component_9\n                            var_offsetLeft := expr_component_7\n                            /// @src 9:5685:5754  \"if (!found) {...\"\n                            if /** @src 9:5689:5695  \"!found\" */ iszero(expr_5)\n                            /// @src 9:5685:5754  \"if (!found) {...\"\n                            {\n                                /// @src 9:5723:5731  \"continue\"\n                                continue\n                            }\n                        }\n                        /// @src 9:12275:12388  \"assembly {...\"\n                        let _33 := 1\n                        /// @src 9:5994:6078  \"if (uint256(callResult) != curVal) {...\"\n                        if /** @src 9:5998:6027  \"uint256(callResult) != curVal\" */ iszero(eq(expr_component_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shr(var_offsetRight, /** @src 9:5902:5959  \"uint256(prev) & getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr, /** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:5918:5959  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ var_offsetRight, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:5918:5959  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ var_offsetRight, var_offsetLeft)), /** @src 9:12275:12388  \"assembly {...\" */ _33), not(0)))))))\n                        /// @src 9:5994:6078  \"if (uint256(callResult) != curVal) {...\"\n                        {\n                            /// @src 9:6051:6059  \"continue\"\n                            continue\n                        }\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        let _34 := add(expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        let length_2 := mload(expr_mpos)\n                        copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _34, length_2)\n                        let _35 := add(/** @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_2)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_35, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        let _36 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _35, /** @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3)\n                        mstore(expr_mpos_3, add(_36, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_3, add(_36, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                        /// @src 9:6122:6170  \"keccak256(abi.encodePacked(params, field_depth))\"\n                        let expr_6 := keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _34, mload(/** @src 9:6122:6170  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_3))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _37 := mload(/** @src 9:6180:6188  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\"\n                        let _38 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        mstore(_38, value)\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_38, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20), and(value_1, shl(224, 0xffffffff)))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_38, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_6)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _39 := 96\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_38, _39), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _37)\n                        /// @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\"\n                        log1(_38, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 128, /** @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\" */ 0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _40 := mload(/** @src 9:6319:6327  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let memPtr := mload(0x40)\n                        finalize_allocation_108240(memPtr)\n                        mstore(memPtr, _40)\n                        /// @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\"\n                        let _41 := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        mstore(_41, var_offsetLeft)\n                        /// @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\"\n                        let _42 := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                        mstore(_42, var_offsetRight)\n                        /// @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\"\n                        let _43 := add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _39)\n                        mstore(_43, /** @src 9:12275:12388  \"assembly {...\" */ _33)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(0, value)\n                        mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let dataSlot_4 := keccak256(0, 0x40)\n                        mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                        mstore(0x20, dataSlot_4)\n                        let dataSlot_5 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        let _44 := add(expr_mpos_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        let length_3 := mload(expr_mpos)\n                        copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _44, length_3)\n                        let _45 := add(/** @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_3)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_45, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        let _46 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _45, /** @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_4)\n                        mstore(expr_mpos_4, add(_46, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_4, add(_46, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                        mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6230:6278  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _44, mload(/** @src 9:6230:6278  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_4)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(0x20, dataSlot_5)\n                        let dataSlot_6 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        sstore(dataSlot_6, mload(memPtr))\n                        sstore(add(dataSlot_6, /** @src 9:12275:12388  \"assembly {...\" */ _33), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_41))\n                        sstore(add(dataSlot_6, /** @src 9:4397:4406  \"self._sig\" */ 2), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_42))\n                        let memberSlot := add(dataSlot_6, /** @src 9:4438:4449  \"self._depth\" */ 3)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let cleaned := iszero(iszero(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_43)))\n                        let value_6 := and(sload(memberSlot), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(255))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        sstore(memberSlot, or(value_6, and(cleaned, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)))\n                        /// @src 9:6378:6383  \"break\"\n                        break\n                    }\n                }\n                default /// @src 9:4947:6408  \"if (reads.length == 0) {...\"\n                {\n                    /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                    let _47 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                    mstore(_47, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ add(_47, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                    mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _47, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), 0x40)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _47, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): No \")\n                    mstore(add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _47, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"storage use detected for target.\")\n                    /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                    revert(_47, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0, value)\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let dataSlot_7 := keccak256(0, 0x40)\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                mstore(0x20, dataSlot_7)\n                let dataSlot_8 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                let expr_mpos_5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                let _48 := add(expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                let length_4 := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _48, length_4)\n                let _49 := add(/** @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_4)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_49, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                let _50 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _49, /** @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_5)\n                mstore(expr_mpos_5, add(_50, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                finalize_allocation(expr_mpos_5, add(_50, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6461:6509  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _48, mload(/** @src 9:6461:6509  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_5)))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0x20, dataSlot_8)\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:6439:6516  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40), /** @src 9:4438:4449  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff))\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    let memPtr_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(memPtr_1, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(add(memPtr_1, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                    mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 47)\n                    mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Slo\")\n                    mstore(add(memPtr_1, 100), \"t(s) not found.\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 9:6600:6648  \"if (_clear) {...\"\n                if var_clear\n                {\n                    /// @src 9:6632:6636  \"self\"\n                    fun_clear()\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0, value)\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let dataSlot_9 := keccak256(0, 0x40)\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                mstore(0x20, dataSlot_9)\n                let dataSlot_10 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                let expr_mpos_6 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                let _51 := add(expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                let length_5 := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _51, length_5)\n                let _52 := add(/** @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_5)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_52, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                let _53 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _52, /** @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_6)\n                mstore(expr_mpos_6, add(_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                finalize_allocation(expr_mpos_6, add(_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6686:6734  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _51, mload(/** @src 9:6686:6734  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_6)))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0x20, dataSlot_10)\n                /// @src 9:6657:6735  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                var_slot := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n            }\n            /// @ast-id 8129 @src 9:4249:6742  \"function find(StdStorage storage self, bool _clear) internal returns (FindData storage) {...\"\n            function fun_find_107716() -> var_slot\n            {\n                /// @ast-id 8129\n                let /// @ast-id 8129\n                var_clear := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0\n                let value := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                let value_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sload(/** @src 9:4397:4406  \"self._sig\" */ 15))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := sload(/** @src 9:4438:4449  \"self._depth\" */ 16)\n                /// @src 9:4481:4500  \"getCallParams(self)\"\n                let expr_mpos := fun_getCallParams()\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(var_clear, value)\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let dataSlot := keccak256(var_clear, 0x40)\n                mstore(var_clear, and(value_1, shl(224, 0xffffffff)))\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(var_clear, 0x40)\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                let expr_mpos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                let _2 := add(expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _2, length)\n                let _3 := add(/** @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_3, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                let _4 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3, /** @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_1)\n                mstore(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                finalize_allocation(expr_mpos_1, add(_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                mstore(var_clear, /** @src 9:4573:4621  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, mload(/** @src 9:4573:4621  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_1)))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0x20, dataSlot_1)\n                /// @src 9:4547:4802  \"if (self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:4551:4628  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(var_clear, 0x40), /** @src 9:4438:4449  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                /// @src 9:4547:4802  \"if (self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(var_clear, value)\n                    mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let dataSlot_2 := keccak256(var_clear, 0x40)\n                    mstore(var_clear, and(value_1, shl(224, 0xffffffff)))\n                    mstore(0x20, dataSlot_2)\n                    let dataSlot_3 := keccak256(var_clear, 0x40)\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    let expr_mpos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    let _5 := add(expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                    let length_1 := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _5, length_1)\n                    let _6 := add(/** @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_1)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_6, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    let _7 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _6, /** @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2)\n                    mstore(expr_mpos_2, add(_7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                    /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                    finalize_allocation(expr_mpos_2, add(_7, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                    mstore(var_clear, /** @src 9:4742:4790  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _5, mload(/** @src 9:4742:4790  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_2)))\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    mstore(0x20, dataSlot_3)\n                    /// @src 9:4713:4791  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                    var_slot := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(var_clear, 0x40)\n                    /// @src 9:4713:4791  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                    leave\n                }\n                /// @src 9:4811:4822  \"vm.record()\"\n                if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 9:4811:4822  \"vm.record()\"\n                {\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    revert(var_clear, var_clear)\n                }\n                /// @src 9:4811:4822  \"vm.record()\"\n                let _8 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:4811:4822  \"vm.record()\"\n                mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x266cf109))\n                /// @src 9:4811:4822  \"vm.record()\"\n                let _9 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, var_clear, /** @src 9:4811:4822  \"vm.record()\" */ _8, /** @src 9:4361:4373  \"self._target\" */ 4, /** @src 9:4811:4822  \"vm.record()\" */ _8, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_clear)\n                /// @src 9:4811:4822  \"vm.record()\"\n                if iszero(_9)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 9:4811:4822  \"vm.record()\"\n                if _9\n                {\n                    finalize_allocation_107616(_8)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    var_clear := var_clear\n                }\n                /// @src 9:4857:4873  \"callTarget(self)\"\n                let expr_component, expr_component_1 := fun_callTarget()\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                let _10 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x65bc9481))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(/** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ value)\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                let _11 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _10, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                if iszero(_11)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_1, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                let expr_component_mpos := var_clear\n                if _11\n                {\n                    let _12 := returndatasize()\n                    returndatacopy(_10, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _12)\n                    finalize_allocation(_10, _12)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let offset := mload(_10)\n                    if gt(offset, 0xffffffffffffffff)\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value0 := abi_decode_array_bytes32_dyn_fromMemory(add(_10, offset), /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let offset_1 := mload(add(_10, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if gt(offset_1, 0xffffffffffffffff)\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    pop(abi_decode_array_bytes32_dyn_fromMemory(add(_10, offset_1), /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12)))\n                    expr_component_mpos := value0\n                }\n                /// @src 9:4947:6408  \"if (reads.length == 0) {...\"\n                switch /** @src 9:4951:4968  \"reads.length == 0\" */ iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:4951:4963  \"reads.length\" */ expr_component_mpos))\n                case /** @src 9:4947:6408  \"if (reads.length == 0) {...\" */ 0 {\n                    /// @src 9:5094:5107  \"uint256 i = 0\"\n                    let var_i := var_clear\n                    /// @src 9:5089:6398  \"for (uint256 i = 0; i < reads.length; i++) {...\"\n                    for { }\n                    /** @src 9:12275:12388  \"assembly {...\" */ 1\n                    /// @src 9:5094:5107  \"uint256 i = 0\"\n                    {\n                        /// @src 9:5127:5130  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:5109:5125  \"i < reads.length\"\n                        if iszero(lt(var_i, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(/** @src 9:5113:5125  \"reads.length\" */ expr_component_mpos)))\n                        /// @src 9:5109:5125  \"i < reads.length\"\n                        { break }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _13 := mload(/** @src 9:5178:5186  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        let _14 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        mstore(_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        let _15 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ _14, sub(abi_encode_address_bytes32(add(_14, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ value, _13), _14), _14, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        if iszero(_15)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_2 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_2, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                        let expr := var_clear\n                        if _15\n                        {\n                            let _16 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ returndatasize()) { _16 := returndatasize() }\n                            finalize_allocation(_14, _16)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ add(_14, _16), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_14)\n                        }\n                        /// @src 9:5205:5319  \"if (prev == bytes32(0)) {...\"\n                        if /** @src 9:5209:5227  \"prev == bytes32(0)\" */ iszero(expr)\n                        /// @src 9:5205:5319  \"if (prev == bytes32(0)) {...\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let _17 := mload(/** @src 9:5290:5298  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 9:5256:5300  \"WARNING_UninitedSlot(who, uint256(reads[i]))\"\n                            let _18 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:5256:5300  \"WARNING_UninitedSlot(who, uint256(reads[i]))\"\n                            log1(_18, sub(abi_encode_address_bytes32(_18, value, _17), _18), 0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _19 := mload(/** @src 9:5369:5377  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_2 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        let _20 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        mstore(_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        let _21 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ _20, sub(abi_encode_address_bytes32(add(_20, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ value_2, _19), _20), _20, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        if iszero(_21)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_3, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                        let expr_1 := var_clear\n                        if _21\n                        {\n                            let _22 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_20, _22)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ add(_20, _22), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            expr_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_20)\n                        }\n                        /// @src 9:2057:2073  \"callTarget(self)\"\n                        let expr_component_2, expr_component_3 := fun_callTarget()\n                        /// @src 9:2102:2167  \"prevReturnValue == bytes32(0) ? bytes32(UINT256_MAX) : bytes32(0)\"\n                        let expr_2 := var_clear\n                        switch /** @src 9:2102:2131  \"prevReturnValue == bytes32(0)\" */ iszero(expr_component_3)\n                        case /** @src 9:2102:2167  \"prevReturnValue == bytes32(0) ? bytes32(UINT256_MAX) : bytes32(0)\" */ 0 { expr_2 := var_clear }\n                        default {\n                            expr_2 := /** @src 9:12275:12388  \"assembly {...\" */ not(0)\n                        }\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        let _23 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        mstore(_23, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        let _24 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\" */ _23, sub(abi_encode_address_bytes32_bytes32(add(_23, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\" */ value_2, _19, expr_2), _23), _23, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        if iszero(_24)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_4, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                        if _24\n                        {\n                            finalize_allocation_107616(_23)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if var_clear\n                            {\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                        }\n                        /// @src 9:2254:2270  \"callTarget(self)\"\n                        let expr_component_4, expr_component_5 := fun_callTarget()\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let value_3 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        let _25 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        mstore(_25, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        let _26 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\" */ _25, sub(abi_encode_address_bytes32_bytes32(add(_25, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\" */ value_3, _19, expr_1), _25), _25, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        if iszero(_26)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_5, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                        if _26\n                        {\n                            finalize_allocation_107616(_25)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            if var_clear\n                            {\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                        }\n                        /// @src 9:2343:2389  \"success && (prevReturnValue != newReturnValue)\"\n                        let expr_3 := expr_component_2\n                        if expr_component_2\n                        {\n                            expr_3 := /** @src 9:2355:2388  \"prevReturnValue != newReturnValue\" */ iszero(eq(expr_component_3, expr_component_5))\n                        }\n                        /// @src 9:5337:5429  \"if (!checkSlotMutatesCall(self, reads[i])) {...\"\n                        if /** @src 9:5341:5378  \"!checkSlotMutatesCall(self, reads[i])\" */ iszero(/** @src 9:5342:5378  \"checkSlotMutatesCall(self, reads[i])\" */ expr_3)\n                        /// @src 9:5337:5429  \"if (!checkSlotMutatesCall(self, reads[i])) {...\"\n                        {\n                            /// @src 9:5402:5410  \"continue\"\n                            continue\n                        }\n                        /// @src 9:5447:5497  \"(uint256 offsetLeft, uint256 offsetRight) = (0, 0)\"\n                        let var_offsetLeft := var_clear\n                        let var_offsetRight := var_clear\n                        /// @src 9:5516:5772  \"if (self._enable_packed_slots) {...\"\n                        if /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:5520:5545  \"self._enable_packed_slots\" */ 19), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)\n                        /// @src 9:5516:5772  \"if (self._enable_packed_slots) {...\"\n                        {\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let _27 := mload(/** @src 9:5654:5662  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let value_4 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            let _28 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            mstore(_28, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            let _29 := staticcall(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ _28, sub(abi_encode_address_bytes32(add(_28, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ value_4, _27), _28), _28, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            if iszero(_29)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_6 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_6, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_6, returndatasize())\n                            }\n                            /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                            let expr_4 := var_clear\n                            if _29\n                            {\n                                let _30 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                if gt(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20, /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ returndatasize()) { _30 := returndatasize() }\n                                finalize_allocation(_28, _30)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ add(_28, _30), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _28), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                expr_4 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_28)\n                            }\n                            /// @src 9:3293:3321  \"findOffset(self, slot, true)\"\n                            let expr_component_6, expr_component_7 := fun_findOffset(_27)\n                            /// @src 9:3372:3401  \"findOffset(self, slot, false)\"\n                            let expr_component_8, expr_component_9 := fun_findOffset_250253(_27)\n                            /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                            let value_5 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            {\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            let _31 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            mstore(_31, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            let _32 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\" */ _31, sub(abi_encode_address_bytes32_bytes32(add(_31, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\" */ value_5, _27, expr_4), _31), _31, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if iszero(_32)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_7 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_7, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_7, returndatasize())\n                            }\n                            /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if _32\n                            {\n                                finalize_allocation_107616(_31)\n                                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                                if var_clear\n                                {\n                                    revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                                }\n                            }\n                            /// @src 9:3558:3581  \"foundLeft && foundRight\"\n                            let expr_5 := expr_component_6\n                            if expr_component_6 { expr_5 := expr_component_8 }\n                            /// @src 9:5601:5663  \"(found, offsetLeft, offsetRight) = findOffsets(self, reads[i])\"\n                            var_offsetRight := expr_component_9\n                            var_offsetLeft := expr_component_7\n                            /// @src 9:5685:5754  \"if (!found) {...\"\n                            if /** @src 9:5689:5695  \"!found\" */ iszero(expr_5)\n                            /// @src 9:5685:5754  \"if (!found) {...\"\n                            {\n                                /// @src 9:5723:5731  \"continue\"\n                                continue\n                            }\n                        }\n                        /// @src 9:12275:12388  \"assembly {...\"\n                        let _33 := 1\n                        /// @src 9:5994:6078  \"if (uint256(callResult) != curVal) {...\"\n                        if /** @src 9:5998:6027  \"uint256(callResult) != curVal\" */ iszero(eq(expr_component_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shr(var_offsetRight, /** @src 9:5902:5959  \"uint256(prev) & getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr, /** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:5918:5959  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ var_offsetRight, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:5918:5959  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ var_offsetRight, var_offsetLeft)), /** @src 9:12275:12388  \"assembly {...\" */ _33), not(0)))))))\n                        /// @src 9:5994:6078  \"if (uint256(callResult) != curVal) {...\"\n                        {\n                            /// @src 9:6051:6059  \"continue\"\n                            continue\n                        }\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_3 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        let _34 := add(expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        let length_2 := mload(expr_mpos)\n                        copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _34, length_2)\n                        let _35 := add(/** @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_2)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_35, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        let _36 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _35, /** @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3)\n                        mstore(expr_mpos_3, add(_36, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                        /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_3, add(_36, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                        /// @src 9:6122:6170  \"keccak256(abi.encodePacked(params, field_depth))\"\n                        let expr_6 := keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _34, mload(/** @src 9:6122:6170  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_3))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _37 := mload(/** @src 9:6180:6188  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\"\n                        let _38 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        mstore(_38, value)\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_38, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20), and(value_1, shl(224, 0xffffffff)))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_38, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_6)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _39 := 96\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_38, _39), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _37)\n                        /// @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\"\n                        log1(_38, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 128, /** @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\" */ 0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _40 := mload(/** @src 9:6319:6327  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let memPtr := mload(0x40)\n                        finalize_allocation_108240(memPtr)\n                        mstore(memPtr, _40)\n                        /// @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\"\n                        let _41 := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        mstore(_41, var_offsetLeft)\n                        /// @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\"\n                        let _42 := add(memPtr, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                        mstore(_42, var_offsetRight)\n                        /// @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\"\n                        let _43 := add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _39)\n                        mstore(_43, /** @src 9:12275:12388  \"assembly {...\" */ _33)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(0, value)\n                        mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let dataSlot_4 := keccak256(0, 0x40)\n                        mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                        mstore(0x20, dataSlot_4)\n                        let dataSlot_5 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        let _44 := add(expr_mpos_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                        let length_3 := mload(expr_mpos)\n                        copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _44, length_3)\n                        let _45 := add(/** @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_4, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_3)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_45, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        let _46 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _45, /** @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_4)\n                        mstore(expr_mpos_4, add(_46, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                        /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_4, add(_46, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                        mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6230:6278  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _44, mload(/** @src 9:6230:6278  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_4)))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(0x20, dataSlot_5)\n                        let dataSlot_6 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        sstore(dataSlot_6, mload(memPtr))\n                        sstore(add(dataSlot_6, /** @src 9:12275:12388  \"assembly {...\" */ _33), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_41))\n                        sstore(add(dataSlot_6, /** @src 9:4397:4406  \"self._sig\" */ 2), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_42))\n                        let memberSlot := add(dataSlot_6, /** @src 9:4438:4449  \"self._depth\" */ 3)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let cleaned := iszero(iszero(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_43)))\n                        let value_6 := and(sload(memberSlot), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(255))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        sstore(memberSlot, or(value_6, and(cleaned, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff)))\n                        /// @src 9:6378:6383  \"break\"\n                        break\n                    }\n                }\n                default /// @src 9:4947:6408  \"if (reads.length == 0) {...\"\n                {\n                    /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                    let _47 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                    mstore(_47, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ add(_47, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                    mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _47, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), 0x40)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _47, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): No \")\n                    mstore(add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _47, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"storage use detected for target.\")\n                    /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                    revert(_47, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0, value)\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let dataSlot_7 := keccak256(0, 0x40)\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                mstore(0x20, dataSlot_7)\n                let dataSlot_8 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                let expr_mpos_5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                let _48 := add(expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                let length_4 := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _48, length_4)\n                let _49 := add(/** @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_5, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_4)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_49, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                let _50 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _49, /** @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_5)\n                mstore(expr_mpos_5, add(_50, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                finalize_allocation(expr_mpos_5, add(_50, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6461:6509  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _48, mload(/** @src 9:6461:6509  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_5)))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0x20, dataSlot_8)\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if iszero(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:6439:6516  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40), /** @src 9:4438:4449  \"self._depth\" */ 3)), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0xff))\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    let memPtr_1 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(memPtr_1, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(add(memPtr_1, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                    mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 36), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 47)\n                    mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 68), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Slo\")\n                    mstore(add(memPtr_1, 100), \"t(s) not found.\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 9:6600:6648  \"if (_clear) {...\"\n                if var_clear\n                {\n                    /// @src 9:6632:6636  \"self\"\n                    fun_clear()\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0, value)\n                mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                let dataSlot_9 := keccak256(0, 0x40)\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                mstore(0x20, dataSlot_9)\n                let dataSlot_10 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                let expr_mpos_6 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(0x40)\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                let _51 := add(expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20)\n                let length_5 := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _51, length_5)\n                let _52 := add(/** @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_6, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ length_5)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ add(_52, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                let _53 := sub(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _52, /** @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_6)\n                mstore(expr_mpos_6, add(_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x20))\n                /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                finalize_allocation(expr_mpos_6, add(_53, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40))\n                mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6686:6734  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _51, mload(/** @src 9:6686:6734  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_6)))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                mstore(0x20, dataSlot_10)\n                /// @src 9:6657:6735  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                var_slot := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x40)\n            }\n            /// @ast-id 7751 @src 9:2560:3074  \"function findOffset(StdStorage storage self, bytes32 slot, bool left) internal returns (bool, uint256) {...\"\n            function fun_findOffset(var_slot) -> var, var_1\n            {\n                /// @src 9:2678:2696  \"uint256 offset = 0\"\n                let var_offset := /** @src 9:2695:2696  \"0\" */ 0x00\n                /// @src 9:2673:3041  \"for (uint256 offset = 0; offset < 256; offset++) {...\"\n                for { }\n                /** @src 9:2698:2710  \"offset < 256\" */ lt(var_offset, /** @src 9:2707:2710  \"256\" */ 0x0100)\n                /// @src 9:2678:2696  \"uint256 offset = 0\"\n                {\n                    /// @src 9:2712:2720  \"offset++\"\n                    var_offset := increment_uint256(var_offset)\n                }\n                {\n                    /// @src 9:2771:2774  \"255\"\n                    let _1 := 0xff\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let diff := sub(/** @src 9:2771:2774  \"255\" */ _1, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ var_offset)\n                    if gt(diff, /** @src 9:2771:2774  \"255\" */ _1)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        mstore(/** @src 9:2695:2696  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        mstore(/** @src 9:2824:2836  \"self._target\" */ 4, 17)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:2695:2696  \"0\" */ 0x00, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ 0x24)\n                    }\n                    /// @src 9:3316:3320  \"true\"\n                    let _2 := 0x01\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let value := and(sload(/** @src 9:2824:2836  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                    let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3))\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:2695:2696  \"0\" */ 0x00, 0x00)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _4 := 64\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    let _5 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    let _6 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _3, /** @src 9:2695:2696  \"0\" */ 0x00, /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _5, sub(abi_encode_address_bytes32_bytes32(add(_5, /** @src 9:2824:2836  \"self._target\" */ 4), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ value, var_slot, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(diff, /** @src 9:3316:3320  \"true\" */ _2)), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _5), _5, /** @src 9:2695:2696  \"0\" */ 0x00)\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    if iszero(_6)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 9:2695:2696  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    if _6\n                    {\n                        finalize_allocation_107616(_5)\n                    }\n                    /// @src 9:2910:2926  \"callTarget(self)\"\n                    let expr_component, expr_component_1 := fun_callTarget_269494()\n                    /// @src 9:2945:2975  \"success && (uint256(data) > 0)\"\n                    let expr := expr_component\n                    if expr_component\n                    {\n                        expr := /** @src 9:2957:2974  \"uint256(data) > 0\" */ iszero(iszero(/** @src 9:2957:2970  \"uint256(data)\" */ expr_component_1))\n                    }\n                    /// @src 9:2941:3031  \"if (success && (uint256(data) > 0)) {...\"\n                    if expr\n                    {\n                        /// @src 9:2995:3016  \"return (true, offset)\"\n                        var := /** @src 9:3316:3320  \"true\" */ _2\n                        /// @src 9:2995:3016  \"return (true, offset)\"\n                        var_1 := var_offset\n                        leave\n                    }\n                }\n                /// @src 9:3050:3067  \"return (false, 0)\"\n                var := /** @src 9:2695:2696  \"0\" */ 0x00\n                /// @src 9:3050:3067  \"return (false, 0)\"\n                var_1 := /** @src 9:2695:2696  \"0\" */ 0x00\n            }\n            /// @ast-id 7751 @src 9:2560:3074  \"function findOffset(StdStorage storage self, bytes32 slot, bool left) internal returns (bool, uint256) {...\"\n            function fun_findOffset_250253(var_slot) -> var, var_1\n            {\n                /// @src 9:2678:2696  \"uint256 offset = 0\"\n                let var_offset := /** @src 9:4551:4561  \"self.finds\" */ 0\n                /// @src 9:2673:3041  \"for (uint256 offset = 0; offset < 256; offset++) {...\"\n                for { }\n                /** @src 9:2698:2710  \"offset < 256\" */ lt(var_offset, /** @src 9:2707:2710  \"256\" */ 0x0100)\n                /// @src 9:2678:2696  \"uint256 offset = 0\"\n                {\n                    /// @src 9:2712:2720  \"offset++\"\n                    var_offset := increment_uint256(var_offset)\n                }\n                {\n                    /// @src 9:2789:2790  \"1\"\n                    let _1 := 0x01\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let value := and(sload(/** @src 9:2824:2836  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    if iszero(extcodesize(/** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2))\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    {\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        revert(/** @src 9:4551:4561  \"self.finds\" */ 0, 0)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _3 := 64\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    let _4 := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_3)\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    mstore(_4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    let _5 := call(gas(), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ _2, /** @src 9:4551:4561  \"self.finds\" */ 0, /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _4, sub(abi_encode_address_bytes32_bytes32(add(_4, /** @src 9:2824:2836  \"self._target\" */ 4), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ value, var_slot, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(var_offset, /** @src 9:2789:2790  \"1\" */ _1)), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _4), _4, /** @src 9:4551:4561  \"self.finds\" */ 0)\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    if iszero(_5)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ mload(_3)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 9:4551:4561  \"self.finds\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                    if _5\n                    {\n                        finalize_allocation_107616(_4)\n                    }\n                    /// @src 9:2910:2926  \"callTarget(self)\"\n                    let expr_component, expr_component_1 := fun_callTarget_269494()\n                    /// @src 9:2945:2975  \"success && (uint256(data) > 0)\"\n                    let expr := expr_component\n                    if expr_component\n                    {\n                        expr := /** @src 9:2957:2974  \"uint256(data) > 0\" */ iszero(iszero(/** @src 9:2957:2970  \"uint256(data)\" */ expr_component_1))\n                    }\n                    /// @src 9:2941:3031  \"if (success && (uint256(data) > 0)) {...\"\n                    if expr\n                    {\n                        /// @src 9:2995:3016  \"return (true, offset)\"\n                        var := /** @src 9:2789:2790  \"1\" */ _1\n                        /// @src 9:2995:3016  \"return (true, offset)\"\n                        var_1 := var_offset\n                        leave\n                    }\n                }\n                /// @src 9:3050:3067  \"return (false, 0)\"\n                var := /** @src 9:4551:4561  \"self.finds\" */ 0\n                /// @src 9:3050:3067  \"return (false, 0)\"\n                var_1 := /** @src 9:4551:4561  \"self.finds\" */ 0\n            }\n            /// @ast-id 8774 @src 9:11586:11825  \"function clear(StdStorage storage self) internal {...\"\n            function fun_clear()\n            {\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                sstore(/** @src 9:11652:11664  \"self._target\" */ 17, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:11652:11664  \"self._target\" */ 17), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ shl(160, 0xffffffffffffffffffffffff)))\n                sstore(/** @src 9:11681:11690  \"self._sig\" */ 15, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:11681:11690  \"self._sig\" */ 15), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(0xffffffff)))\n                let oldLen := sload(/** @src 9:11707:11717  \"self._keys\" */ 14)\n                /// @src 9:11645:11664  \"delete self._target\"\n                let _1 := 0\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                sstore(/** @src 9:11707:11717  \"self._keys\" */ 14, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                if iszero(iszero(oldLen))\n                {\n                    mstore(/** @src 9:11645:11664  \"delete self._target\" */ _1, /** @src 9:11707:11717  \"self._keys\" */ 14)\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    let _2 := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let _3 := add(_2, oldLen)\n                    let start := _2\n                    for { }\n                    lt(start, _3)\n                    {\n                        start := add(start, /** @src 9:11707:11717  \"self._keys\" */ 1)\n                    }\n                    /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        sstore(start, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                    }\n                }\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                sstore(/** @src 9:11734:11745  \"self._depth\" */ 16, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                sstore(/** @src 9:11762:11787  \"self._enable_packed_slots\" */ 19, /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ and(sload(/** @src 9:11762:11787  \"self._enable_packed_slots\" */ 19), /** @src 86:312:10883  \"contract Vester_Tester is Test {...\" */ not(255)))\n                let oldLen_1 := extract_byte_array_length(sload(/** @src 9:11804:11818  \"self._calldata\" */ 20))\n                /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                if iszero(iszero(oldLen_1))\n                {\n                    switch gt(oldLen_1, 31)\n                    case 1 {\n                        mstore(/** @src 9:11645:11664  \"delete self._target\" */ _1, /** @src 9:11804:11818  \"self._calldata\" */ 20)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        let _4 := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                        let _5 := add(_4, shr(5, add(oldLen_1, 31)))\n                        let start_1 := 0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed\n                        for { } lt(start_1, _5) { start_1 := add(start_1, 1) }\n                        {\n                            sstore(start_1, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                        }\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(/** @src 9:11804:11818  \"self._calldata\" */ 20, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                        /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                        sstore(_4, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                    }\n                    default /// @src 86:312:10883  \"contract Vester_Tester is Test {...\"\n                    {\n                        sstore(/** @src 9:11804:11818  \"self._calldata\" */ 20, /** @src 9:11645:11664  \"delete self._target\" */ _1)\n                    }\n                }\n            }\n        }\n        /// @use-src 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 73:\"src/access/Governable.sol\", 74:\"src/staking/RewardDistributor.sol\", 78:\"src/staking/interfaces/IRewardDistributor.sol\"\n        object \"RewardDistributor_58666\" {\n            code {\n                {\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"RewardDistributor_58666\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let value0 := abi_decode_address_fromMemory(_1)\n                    let value1 := abi_decode_address_fromMemory(add(_1, 32))\n                    /// @src 55:1713:1714  \"1\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 55:1713:1714  \"1\" */ 0x01)\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _2 := not(sub(shl(160, 1), 1))\n                    sstore(/** @src 55:1713:1714  \"1\" */ 0x01, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 55:1713:1714  \"1\" */ 0x01), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 73:204:214  \"msg.sender\" */ caller()))\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _3 := sub(shl(160, 1), 1)\n                    let _4 := and(/** @src 74:989:1015  \"_rewardToken == address(0)\" */ value0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                    /// @src 74:989:1047  \"_rewardToken == address(0) || _rewardTracker == address(0)\"\n                    let expr := /** @src 74:989:1015  \"_rewardToken == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                    /// @src 74:989:1047  \"_rewardToken == address(0) || _rewardTracker == address(0)\"\n                    if iszero(expr)\n                    {\n                        expr := /** @src 74:1019:1047  \"_rewardTracker == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(/** @src 74:1019:1047  \"_rewardTracker == address(0)\" */ value1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3))\n                    }\n                    /// @src 74:985:1099  \"if (_rewardToken == address(0) || _rewardTracker == address(0)) {...\"\n                    if expr\n                    {\n                        /// @src 74:1070:1088  \"ZeroAddressError()\"\n                        let _5 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 74:1070:1088  \"ZeroAddressError()\"\n                        mstore(_5, shl(224, 0x3efa09af))\n                        revert(_5, 4)\n                    }\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    sstore(/** @src 74:1108:1134  \"rewardToken = _rewardToken\" */ 0x02, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1108:1134  \"rewardToken = _rewardToken\" */ 0x02), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), _4))\n                    sstore(/** @src 74:1144:1174  \"rewardTracker = _rewardTracker\" */ 0x05, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1144:1174  \"rewardTracker = _rewardTracker\" */ 0x05), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), and(value1, _3)))\n                    sstore(/** @src 74:1184:1202  \"admin = msg.sender\" */ 0x06, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1184:1202  \"admin = msg.sender\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 73:204:214  \"msg.sender\" */ caller()))\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _6 := mload(64)\n                    let _7 := datasize(\"RewardDistributor_58666_deployed\")\n                    codecopy(_6, dataoffset(\"RewardDistributor_58666_deployed\"), _7)\n                    return(_6, _7)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 52:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 73:\"src/access/Governable.sol\", 74:\"src/staking/RewardDistributor.sol\"\n            object \"RewardDistributor_58666_deployed\" {\n                code {\n                    {\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x12d43a51 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                mstore(_1, and(sload(/** @src 73:149:167  \"address public gov\" */ 1), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(_1, 32)\n                            }\n                            case 0x18e20a03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value := calldataload(_3)\n                                let _5 := sub(shl(160, 1), 1)\n                                /// @src 74:833:893  \"require(msg.sender == admin, \\\"RewardDistributor: forbidden\\\")\"\n                                require_helper_stringliteral_3ae3(/** @src 74:841:860  \"msg.sender == admin\" */ eq(/** @src 74:841:851  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 74:855:860  \"admin\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _5)))\n                                if /** @src 74:1932:1957  \"lastDistributionTime != 0\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sload(_3))\n                                {\n                                    let memPtr := mload(_2)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, _3), 32)\n                                    mstore(add(memPtr, 36), 47)\n                                    mstore(add(memPtr, 68), \"RewardDistributor: invalid lastD\")\n                                    mstore(add(memPtr, 100), \"istributionTime\")\n                                    revert(memPtr, 132)\n                                }\n                                let cleaned := and(sload(/** @src 74:2055:2068  \"rewardTracker\" */ 0x05), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _5)\n                                /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                if iszero(extcodesize(cleaned))\n                                {\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                let _6 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                mstore(_6, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(226, 0x0f8562c3))\n                                /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                let _7 := call(gas(), cleaned, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4, /** @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\" */ _6, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3, /** @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\" */ _6, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                                /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                if iszero(_7)\n                                {\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    let pos := mload(_2)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                if _7\n                                {\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    if gt(_6, 0xffffffffffffffff)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, 0x24)\n                                    }\n                                    mstore(_2, _6)\n                                    _4 := _4\n                                }\n                                sstore(/** @src 74:2095:2122  \"tokensPerInterval = _amount\" */ 0x03, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ value)\n                                /// @src 74:2137:2169  \"TokensPerIntervalChange(_amount)\"\n                                let _8 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_8, value)\n                                /// @src 74:2137:2169  \"TokensPerIntervalChange(_amount)\"\n                                log1(_8, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 74:2137:2169  \"TokensPerIntervalChange(_amount)\" */ 0x98dc76c39aa5a5dcb749f8750a65db3dfa1e14bcc1591a9c16a7420e5da748f8)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x3ae6d6eb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 74:833:893  \"require(msg.sender == admin, \\\"RewardDistributor: forbidden\\\")\"\n                                require_helper_stringliteral_3ae3(/** @src 74:841:860  \"msg.sender == admin\" */ eq(/** @src 74:841:851  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 74:855:860  \"admin\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))))\n                                sstore(_3, /** @src 74:1770:1785  \"block.timestamp\" */ timestamp())\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x6bcb411a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_1 := and(sload(/** @src 74:612:640  \"address public rewardTracker\" */ 5), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos := mload(_2)\n                                mstore(memPos, value_1)\n                                return(memPos, 32)\n                            }\n                            case 0x6ccae054 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let value_2 := calldataload(36)\n                                let _9 := sub(shl(160, 1), 1)\n                                if iszero(eq(value_2, and(value_2, _9))) { revert(0, 0) }\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(1), _9)))\n                                /// @src 74:1659:1666  \"_amount\"\n                                fun_safeTransfer(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(/** @src 74:1621:1635  \"IERC20(_token)\" */ value0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _9), /** @src 74:1659:1666  \"_amount\" */ value_2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ calldataload(68))\n                                return(_4, _4)\n                            }\n                            case 0x704b6c02 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                let _10 := sub(shl(160, 1), 1)\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _10)))\n                                let _11 := and(/** @src 74:1280:1300  \"_admin == address(0)\" */ value0_1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _10)\n                                /// @src 74:1276:1352  \"if (_admin == address(0)) {...\"\n                                if /** @src 74:1280:1300  \"_admin == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _11)\n                                /// @src 74:1276:1352  \"if (_admin == address(0)) {...\"\n                                {\n                                    /// @src 74:1323:1341  \"ZeroAddressError()\"\n                                    let _12 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 74:1323:1341  \"ZeroAddressError()\"\n                                    mstore(_12, shl(224, 0x3efa09af))\n                                    revert(_12, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 74:1361:1375  \"admin = _admin\" */ 0x06, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1361:1375  \"admin = _admin\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _11))\n                                /// @src 74:1390:1406  \"AdminSet(_admin)\"\n                                let _13 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_13, _11)\n                                /// @src 74:1390:1406  \"AdminSet(_admin)\"\n                                log1(_13, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 74:1390:1406  \"AdminSet(_admin)\" */ 0x8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x75b17350 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _14 := sload(_3)\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _14)\n                                return(memPos_1, 32)\n                            }\n                            case 0xa8d93627 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _15 := sload(/** @src 74:524:565  \"uint256 public override tokensPerInterval\" */ 3)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, _15)\n                                return(memPos_2, 32)\n                            }\n                            case 0xcfad57a2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address()\n                                let _16 := sload(/** @src 73:278:281  \"gov\" */ 0x01)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let _17 := sub(shl(160, 1), 1)\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(_16, _17)))\n                                let _18 := and(/** @src 73:392:410  \"_gov == address(0)\" */ value0_2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _17)\n                                /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                if /** @src 73:392:410  \"_gov == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _18)\n                                /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                {\n                                    /// @src 73:433:451  \"ZeroAddressError()\"\n                                    let _19 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 73:433:451  \"ZeroAddressError()\"\n                                    mstore(_19, /** @src 74:1323:1341  \"ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                                    /// @src 73:433:451  \"ZeroAddressError()\"\n                                    revert(_19, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 73:278:281  \"gov\" */ 0x01, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(_16, shl(160, 0xffffffffffffffffffffffff)), _18))\n                                /// @src 73:496:508  \"GovSet(_gov)\"\n                                let _20 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_20, _18)\n                                /// @src 73:496:508  \"GovSet(_gov)\"\n                                log1(_20, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 73:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xe4fc6b6d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := fun_distribute()\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, ret)\n                                return(memPos_3, 32)\n                            }\n                            case 0xeded3fda {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret_1 := fun_pendingRewards()\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, ret_1)\n                                return(memPos_4, 32)\n                            }\n                            case 0xf7c618c1 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_3 := and(sload(/** @src 74:483:518  \"address public override rewardToken\" */ 2), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, value_3)\n                                return(memPos_5, 32)\n                            }\n                            case 0xf851a440 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_4 := and(sload(/** @src 74:647:667  \"address public admin\" */ 6), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, value_4)\n                                return(memPos_6, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function require_helper_stringliteral_7c37(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"Governable: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 50320 @src 52:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := add(expr_mpos, 0x20)\n                        mstore(_1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                        let _2 := sub(shl(160, 1), 1)\n                        mstore(/** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, 36), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(var_to, _2))\n                        mstore(add(/** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 68), var_value)\n                        /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_mpos, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 68)\n                        let newFreePtr := add(expr_mpos, 128)\n                        let _3 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _3), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        mstore(64, newFreePtr)\n                        let _4 := and(/** @src 52:4504:4518  \"address(token)\" */ var_token_address, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2)\n                        /// @src -1:-1:-1\n                        let _5 := 0\n                        /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), _4, /** @src -1:-1:-1 */ _5, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_mpos), /** @src -1:-1:-1 */ _5, _5)\n                        /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                        let data := /** @src -1:-1:-1 */ _5\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            if gt(_6, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _5, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                            }\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, add(and(add(_6, 31), not(31)), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ _5, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ returndatasize())\n                        }\n                        /// @src 53:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                        let var_mpos := /** @src 53:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_4, expr_component, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ data)\n                        /// @src 52:4551:4568  \"returndata.length\"\n                        let expr := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 52:4551:4568  \"returndata.length\" */ var_mpos)\n                        /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        let expr_1 := /** @src 52:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                        /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        if expr_1\n                        {\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            if slt(sub(/** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let value := mload(/** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let _7 := iszero(value)\n                            if iszero(eq(value, iszero(_7)))\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            expr_1 := _7\n                        }\n                        /// @src 52:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                        if expr_1\n                        {\n                            /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            let _8 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_8, shl(224, 0x5274afe7))\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            mstore(/** @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_8, 4), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                            /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_8, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                    }\n                    /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 53:4793:5201  \"if (!success) {...\"\n                        switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 36)\n                            }\n                            /// @src 53:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 53:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 53:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    function require_helper_stringliteral_3ae3(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 28)\n                            mstore(add(memPtr, 68), \"RewardDistributor: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 58592 @src 74:2182:2454  \"function pendingRewards() public view override returns (uint256) {...\"\n                    function fun_pendingRewards() -> var_\n                    {\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := sload(/** @src 74:2280:2300  \"lastDistributionTime\" */ 0x04)\n                        /// @src 74:2257:2335  \"if (block.timestamp == lastDistributionTime) {...\"\n                        if /** @src 74:2261:2300  \"block.timestamp == lastDistributionTime\" */ eq(/** @src 74:2261:2276  \"block.timestamp\" */ timestamp(), /** @src 74:2261:2300  \"block.timestamp == lastDistributionTime\" */ _1)\n                        /// @src 74:2257:2335  \"if (block.timestamp == lastDistributionTime) {...\"\n                        {\n                            /// @src 74:2316:2324  \"return 0\"\n                            var_ := /** @src -1:-1:-1 */ 0\n                            /// @src 74:2316:2324  \"return 0\"\n                            leave\n                        }\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let diff := sub(/** @src 74:2261:2276  \"block.timestamp\" */ timestamp(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)\n                        if gt(diff, /** @src 74:2261:2276  \"block.timestamp\" */ timestamp())\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 74:2280:2300  \"lastDistributionTime\" */ 0x04, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                        }\n                        let _2 := sload(/** @src 74:2419:2436  \"tokensPerInterval\" */ 0x03)\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let product := mul(_2, diff)\n                        if iszero(or(iszero(_2), eq(diff, div(product, _2))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 74:2280:2300  \"lastDistributionTime\" */ 0x04, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                        }\n                        /// @src 74:2412:2447  \"return tokensPerInterval * timeDiff\"\n                        var_ := product\n                    }\n                    /// @ast-id 58665 @src 74:2460:3106  \"function distribute() external override returns (uint256) {...\"\n                    function fun_distribute() -> var\n                    {\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 74:2549:2576  \"msg.sender == rewardTracker\" */ eq(/** @src 74:2549:2559  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 74:2563:2576  \"rewardTracker\" */ 0x05), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 37)\n                            mstore(add(memPtr, 68), \"RewardDistributor: invalid msg.s\")\n                            mstore(add(memPtr, 100), \"ender\")\n                            revert(memPtr, 132)\n                        }\n                        /// @src 74:2649:2682  \"uint256 amount = pendingRewards()\"\n                        let var_amount := /** @src 74:2666:2682  \"pendingRewards()\" */ fun_pendingRewards()\n                        /// @src 74:2692:2742  \"if (amount == 0) {...\"\n                        if /** @src 74:2696:2707  \"amount == 0\" */ iszero(var_amount)\n                        /// @src 74:2692:2742  \"if (amount == 0) {...\"\n                        {\n                            /// @src 74:2723:2731  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 74:2723:2731  \"return 0\"\n                            leave\n                        }\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        sstore(/** @src 74:2752:2790  \"lastDistributionTime = block.timestamp\" */ 0x04, /** @src 74:2775:2790  \"block.timestamp\" */ timestamp())\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let cleaned := and(sload(/** @src 74:2826:2837  \"rewardToken\" */ 0x02), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)\n                        /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        let _2 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        mstore(_2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ add(_2, /** @src 74:2752:2790  \"lastDistributionTime = block.timestamp\" */ 0x04), /** @src 74:2857:2861  \"this\" */ address())\n                        /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        let _3 := staticcall(gas(), cleaned, _2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 36, /** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ _2, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            if slt(sub(/** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ add(_2, _4), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ 32)\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            expr := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                        }\n                        /// @src 74:2873:2936  \"if (amount > balance) {...\"\n                        if /** @src 74:2877:2893  \"amount > balance\" */ gt(var_amount, expr)\n                        /// @src 74:2873:2936  \"if (amount > balance) {...\"\n                        {\n                            /// @src 74:2909:2925  \"amount = balance\"\n                            var_amount := expr\n                        }\n                        /// @src 74:2946:3077  \"if (amount != 0) {...\"\n                        if /** @src 74:2950:2961  \"amount != 0\" */ iszero(iszero(var_amount))\n                        /// @src 74:2946:3077  \"if (amount != 0) {...\"\n                        {\n                            /// @src 74:3022:3028  \"amount\"\n                            fun_safeTransfer(/** @src 74:2977:2996  \"IERC20(rewardToken)\" */ cleaned, /** @src 74:2549:2559  \"msg.sender\" */ caller(), /** @src 74:3022:3028  \"amount\" */ var_amount)\n                            /// @src 74:3048:3066  \"Distribute(amount)\"\n                            let _5 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            mstore(_5, var_amount)\n                            /// @src 74:3048:3066  \"Distribute(amount)\"\n                            log1(_5, /** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ 32, /** @src 74:3048:3066  \"Distribute(amount)\" */ 0x4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead)\n                        }\n                        /// @src 74:3086:3099  \"return amount\"\n                        var := var_amount\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        /// @use-src 49:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 73:\"src/access/Governable.sol\", 77:\"src/staking/Vester.sol\", 80:\"src/staking/interfaces/IVester.sol\"\n        object \"Vester_61451\" {\n            code {\n                {\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    mstore(64, memoryguard(0x0100))\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"Vester_61451\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    let _1 := add(memoryDataOffset, argSize)\n                    if slt(sub(_1, memoryDataOffset), 192)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let offset := mload(memoryDataOffset)\n                    let _2 := sub(shl(64, 1), 1)\n                    if gt(offset, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n                    let offset_1 := mload(add(memoryDataOffset, 32))\n                    if gt(offset_1, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n                    let value := mload(add(memoryDataOffset, 64))\n                    let value3 := abi_decode_address_fromMemory(add(memoryDataOffset, 96))\n                    let value4 := abi_decode_address_fromMemory(add(memoryDataOffset, 128))\n                    let value5 := abi_decode_address_fromMemory(add(memoryDataOffset, 160))\n                    /// @src 55:1713:1714  \"1\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 1)\n                    sstore(1, or(and(sload(1), not(sub(shl(160, 1), 1))), /** @src 73:204:214  \"msg.sender\" */ caller()))\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    sstore(/** @src 77:819:821  \"18\" */ 0x04, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 77:819:821  \"18\" */ 0x04), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ not(255)), /** @src 77:819:821  \"18\" */ 0x12))\n                    /// @src 77:1944:2011  \"_esToken == address(0) ||...\"\n                    let expr := /** @src 77:1944:1966  \"_esToken == address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 77:1944:1966  \"_esToken == address(0)\" */ value3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 77:1944:2011  \"_esToken == address(0) ||...\"\n                    if iszero(expr)\n                    {\n                        expr := /** @src 77:1982:2011  \"_claimableToken == address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 77:1982:2011  \"_claimableToken == address(0)\" */ value4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    /// @src 77:1944:2055  \"_esToken == address(0) ||...\"\n                    let expr_1 := expr\n                    if iszero(expr)\n                    {\n                        expr_1 := /** @src 77:2027:2055  \"_rewardTracker == address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 77:2027:2055  \"_rewardTracker == address(0)\" */ value5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    /// @src 77:1927:2116  \"if (...\"\n                    if expr_1\n                    {\n                        /// @src 77:2087:2105  \"ZeroAddressError()\"\n                        let _3 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 77:2087:2105  \"ZeroAddressError()\"\n                        mstore(_3, shl(224, 0x3efa09af))\n                        revert(_3, /** @src 77:819:821  \"18\" */ 0x04)\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let newLen := mload(value0)\n                    if gt(newLen, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 77:819:821  \"18\" */ 0x04, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    let _4 := sload(/** @src 77:2125:2137  \"name = _name\" */ 0x02)\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    length := shr(1, _4)\n                    let outOfPlaceEncoding := and(_4, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 77:819:821  \"18\" */ 0x04, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    if gt(length, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:2125:2137  \"name = _name\" */ 0x02)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let deleteStart := add(data, shr(5, add(newLen, 31)))\n                        if lt(newLen, 32) { deleteStart := data }\n                        let _5 := add(data, shr(5, add(length, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _5) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    srcOffset := 32\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:2125:2137  \"name = _name\" */ 0x02)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, 32) }\n                        {\n                            sstore(dstPtr, mload(add(value0, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, 32)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value0, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 77:2125:2137  \"name = _name\" */ 0x02, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if newLen\n                        {\n                            value_1 := mload(add(value0, srcOffset))\n                        }\n                        sstore(/** @src 77:2125:2137  \"name = _name\" */ 0x02, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                    }\n                    let newLen_1 := mload(value1)\n                    if gt(newLen_1, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 77:819:821  \"18\" */ 0x04, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    let _6 := sload(/** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03)\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    length_1 := shr(1, _6)\n                    let outOfPlaceEncoding_1 := and(_6, 1)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 77:819:821  \"18\" */ 0x04, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    if gt(length_1, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                        if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                        let _7 := add(data_1, shr(5, add(length_1, 31)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _7) { start_1 := add(start_1, 1) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    srcOffset_1 := 32\n                    switch gt(newLen_1, 31)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                        {\n                            sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, 1)\n                            srcOffset_1 := add(srcOffset_1, 32)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(value1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ add(shl(1, newLen_1), 1))\n                    }\n                    default {\n                        let value_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if newLen_1\n                        {\n                            value_2 := mload(add(value1, srcOffset_1))\n                        }\n                        sstore(/** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(value_2, not(shr(shl(/** @src 77:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n                    }\n                    /// @src 77:2174:2208  \"vestingDuration = _vestingDuration\"\n                    mstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 128, /** @src 77:2174:2208  \"vestingDuration = _vestingDuration\" */ value)\n                    /// @src 77:2219:2237  \"esToken = _esToken\"\n                    mstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 160, /** @src 77:2219:2237  \"esToken = _esToken\" */ value3)\n                    /// @src 77:2247:2279  \"claimableToken = _claimableToken\"\n                    mstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 192, /** @src 77:2247:2279  \"claimableToken = _claimableToken\" */ value4)\n                    /// @src 77:2290:2320  \"rewardTracker = _rewardTracker\"\n                    mstore(224, value5)\n                    /// @src 77:2331:2416  \"if (rewardTracker != address(0)) {...\"\n                    if /** @src 77:2335:2362  \"rewardTracker != address(0)\" */ iszero(iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(value5, sub(shl(160, 1), 1))))\n                    /// @src 77:2331:2416  \"if (rewardTracker != address(0)) {...\"\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        sstore(/** @src 77:2378:2405  \"hasMaxVestableAmount = true\" */ 0x06, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 77:2378:2405  \"hasMaxVestableAmount = true\" */ 0x06), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ not(255)), 1))\n                    }\n                    let _8 := mload(64)\n                    let _9 := datasize(\"Vester_61451_deployed\")\n                    codecopy(_8, dataoffset(\"Vester_61451_deployed\"), _9)\n                    setimmutable(_8, \"60441\", mload(128))\n                    setimmutable(_8, \"60443\", mload(160))\n                    setimmutable(_8, \"60445\", mload(192))\n                    setimmutable(_8, \"60448\", mload(/** @src 77:2290:2320  \"rewardTracker = _rewardTracker\" */ 224))\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    return(_8, _9)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let _1 := mload(offset)\n                    if gt(_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    let _2 := 0x20\n                    let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n                    mstore(array_1, _1)\n                    if gt(add(add(offset, _1), _2), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    for { } lt(i, _1) { i := add(i, _2) }\n                    {\n                        mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n                    }\n                    mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    array := array_1\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 52:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 61:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\", 73:\"src/access/Governable.sol\", 77:\"src/staking/Vester.sol\"\n            object \"Vester_61451_deployed\" {\n                code {\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 77:745:763  \"string public name\" */ 2)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(_5, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, _5)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 77:745:763  \"string public name\" */ 2)\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let dataPos := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                finalize_allocation(_1, sub(ret, _1))\n                                let memPos := mload(_2)\n                                return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                            }\n                            case 0x08f26c76 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_1 := fun_getMaxVestableAmount(abi_decode_address_14901())\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, ret_1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x095ea7b3 { external_fun_approve() }\n                            case 0x0db9ea4a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:1094:1145  \"mapping(address => uint256) public lastVestingTimes\" */ 10)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _7 := sload(keccak256(_4, _2))\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, _7)\n                                return(memPos_2, 32)\n                            }\n                            case 0x12d43a51 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value := and(sload(/** @src 73:149:167  \"address public gov\" */ 1), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, value)\n                                return(memPos_3, 32)\n                            }\n                            case 0x13e82e7a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address_14901()\n                                let value1 := abi_decode_address()\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:3228:3440  \"function claimForAccount(...\"\n                                fun_validateHandler()\n                                /// @src 77:3399:3433  \"return _claim(_account, _receiver)\"\n                                let var := /** @src 77:3406:3433  \"_claim(_account, _receiver)\" */ fun_claim(value0, value1)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, var)\n                                return(memPos_4, 32)\n                            }\n                            case 0x1514617e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, /** @src 77:562:602  \"uint256 public immutable vestingDuration\" */ loadimmutable(\"60441\"))\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(memPos_5, 32)\n                            }\n                            case 0x16ca05c5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, and(/** @src 77:608:640  \"address public immutable esToken\" */ loadimmutable(\"60443\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_6, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _8 := sload(/** @src 77:828:863  \"uint256 public override totalSupply\" */ 5)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _8)\n                                return(memPos_7, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                /// @ast-id 61129 @src 77:8164:8376  \"function transferFrom(...\"\n                                /** @ast-id 61129 */ /** @ast-id 61129 */ fun_transfer()\n                            }\n                            case /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x27e235e3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:909:952  \"mapping(address => uint256) public balances\" */ 7)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _9 := sload(keccak256(_4, _2))\n                                let memPos_8 := mload(_2)\n                                mstore(memPos_8, _9)\n                                return(memPos_8, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_1 := and(sload(_3), 0xff)\n                                let memPos_9 := mload(_2)\n                                mstore(memPos_9, value_1)\n                                return(memPos_9, 32)\n                            }\n                            case 0x342fcda9 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address_14901()\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:2927:3105  \"function depositForAccount(...\"\n                                fun_validateHandler()\n                                /// @src 77:3090:3097  \"_amount\"\n                                fun_deposit(value0_1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ calldataload(36))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0x387a785d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:1230:1300  \"mapping(address => uint256) public override cumulativeRewardDeductions\" */ 12)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _10 := sload(keccak256(_4, _2))\n                                let memPos_10 := mload(_2)\n                                mstore(memPos_10, _10)\n                                return(memPos_10, 32)\n                            }\n                            case 0x3ccfd60b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:3834:3860  \"_claim(account, _receiver)\"\n                                pop(fun_claim(/** @src 77:3777:3787  \"msg.sender\" */ caller(), caller()))\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, /** @src 77:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _11 := 0x20\n                                mstore(_11, /** @src 77:3895:3917  \"cumulativeClaimAmounts\" */ 0x08)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _12 := sload(keccak256(_4, _2))\n                                mstore(_11, /** @src 77:3954:3962  \"balances\" */ 0x07)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _13 := sload(keccak256(_4, _2))\n                                if /** @src 77:4044:4059  \"totalVested > 0\" */ iszero(/** @src 77:4003:4026  \"balance + claimedAmount\" */ checked_add_uint256(_13, _12))\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                {\n                                    let memPtr := mload(_2)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, _3), _11)\n                                    mstore(add(memPtr, 36), 29)\n                                    mstore(add(memPtr, 68), \"Vester: vested amount is zero\")\n                                    revert(memPtr, 100)\n                                }\n                                let _14 := and(/** @src 77:4164:4177  \"rewardTracker\" */ loadimmutable(\"60448\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                if iszero(extcodesize(_14))\n                                {\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                let _15 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                mstore(_15, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0xb5f73e8d))\n                                mstore(/** @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ add(_15, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3), /** @src 77:4203:4207  \"this\" */ address())\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(add(/** @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36), /** @src 77:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(add(/** @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 68), _13)\n                                /// @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                let _16 := call(gas(), _14, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 100, /** @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4)\n                                /// @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                if iszero(_16)\n                                {\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let pos := mload(_2)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 77:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                if _16\n                                {\n                                    finalize_allocation_14909(_15)\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    _4 := _4\n                                }\n                                /// @src 77:4254:4261  \"balance\"\n                                fun_burn(/** @src 77:3777:3787  \"msg.sender\" */ caller(), /** @src 77:4254:4261  \"balance\" */ _13)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, /** @src 77:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_11, /** @src 77:3895:3917  \"cumulativeClaimAmounts\" */ 0x08)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                sstore(keccak256(_4, _2), _4)\n                                mstore(_11, /** @src 77:4328:4342  \"claimedAmounts\" */ 0x09)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                sstore(keccak256(_4, _2), _4)\n                                mstore(_11, /** @src 77:4368:4384  \"lastVestingTimes\" */ 0x0a)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                sstore(keccak256(_4, _2), _4)\n                                /// @src 77:4409:4450  \"Withdraw(account, claimedAmount, balance)\"\n                                let _17 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_17, /** @src 77:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(add(_17, _11), _12)\n                                mstore(add(_17, _2), _13)\n                                /// @src 77:4409:4450  \"Withdraw(account, claimedAmount, balance)\"\n                                log1(_17, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 96, /** @src 77:4409:4450  \"Withdraw(account, claimedAmount, balance)\" */ 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x402914f5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_2 := fun_claimable(abi_decode_address_14901())\n                                let memPos_11 := mload(_2)\n                                mstore(memPos_11, ret_2)\n                                return(memPos_11, 32)\n                            }\n                            case 0x41f22724 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address_14901()\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:5619:5809  \"function setBonusRewards(...\"\n                                fun_validateHandler()\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:5770:5782  \"bonusRewards\" */ 0x0d)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), calldataload(36))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0x46ea87af {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:1369:1410  \"mapping(address => bool) public isHandler\" */ 14)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let value_2 := and(sload(keccak256(_4, _2)), 0xff)\n                                let memPos_12 := mload(_2)\n                                mstore(memPos_12, iszero(iszero(value_2)))\n                                return(memPos_12, 32)\n                            }\n                            case 0x4e71d92d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:3178:3215  \"return _claim(msg.sender, msg.sender)\"\n                                let var_1 := /** @src 77:3185:3215  \"_claim(msg.sender, msg.sender)\" */ fun_claim(/** @src 77:3192:3202  \"msg.sender\" */ caller(), caller())\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let memPos_13 := mload(_2)\n                                mstore(memPos_13, var_1)\n                                return(memPos_13, 32)\n                            }\n                            case 0x69de9b93 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value_3 := calldataload(_3)\n                                let _18 := iszero(iszero(value_3))\n                                if iszero(eq(value_3, _18)) { revert(0, 0) }\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))))\n                                let value_4 := and(sload(/** @src 77:2701:2745  \"hasMaxVestableAmount = _hasMaxVestableAmount\" */ 0x06), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ not(255))\n                                sstore(/** @src 77:2701:2745  \"hasMaxVestableAmount = _hasMaxVestableAmount\" */ 0x06, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(value_4, and(_18, 255)))\n                                /// @src 77:2760:2806  \"HasMaxVestableAmountSet(_hasMaxVestableAmount)\"\n                                let _19 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_19, _18)\n                                /// @src 77:2760:2806  \"HasMaxVestableAmountSet(_hasMaxVestableAmount)\"\n                                log1(_19, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32, /** @src 77:2760:2806  \"HasMaxVestableAmountSet(_hasMaxVestableAmount)\" */ 0x1fd2231f946f86c7aca4810d9697f7edffaba8a34f2a1fc7716f354ed2d3449d)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x6bcb411a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_14 := mload(_2)\n                                mstore(memPos_14, and(/** @src 77:691:738  \"address public immutable override rewardTracker\" */ loadimmutable(\"60448\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_14, 32)\n                            }\n                            case 0x6ccae054 {\n                                if callvalue() { revert(_4, _4) }\n                                let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                let _20 := sub(shl(160, 1), 1)\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _20)))\n                                let _21 := and(/** @src 77:3648:3662  \"IERC20(_token)\" */ param_3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _20)\n                                /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_mpos := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _22 := add(expr_mpos, 0x20)\n                                mstore(_22, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _23 := sub(abi_encode_address_uint256(add(expr_mpos, 36), param_4, param_5), expr_mpos)\n                                let _24 := not(31)\n                                mstore(expr_mpos, add(_23, _24))\n                                finalize_allocation(expr_mpos, _23)\n                                /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                                let expr_component := call(gas(), _21, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ _22, mload(expr_mpos), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, _4)\n                                /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                                let data := _4\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _25 := returndatasize()\n                                    if gt(_25, 0xffffffffffffffff)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                    }\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let memPtr_1 := mload(_2)\n                                    finalize_allocation(memPtr_1, add(and(add(_25, 31), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _24), 0x20))\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    mstore(memPtr_1, _25)\n                                    data := memPtr_1\n                                    returndatacopy(add(memPtr_1, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, returndatasize())\n                                }\n                                /// @src 53:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                let var_mpos := /** @src 53:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_21, expr_component, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                /// @src 52:4551:4568  \"returndata.length\"\n                                let expr := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(/** @src 52:4551:4568  \"returndata.length\" */ var_mpos)\n                                /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                let expr_1 := /** @src 52:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                                /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                if expr_1\n                                {\n                                    expr_1 := /** @src 52:4577:4608  \"!abi.decode(returndata, (bool))\" */ iszero(/** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)))\n                                }\n                                /// @src 52:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                if expr_1\n                                {\n                                    /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    let _26 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_26, shl(224, 0x5274afe7))\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    mstore(/** @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_26, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3), _21)\n                                    /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_26, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                }\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:7376:7384  \"balances\" */ 0x07)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _27 := sload(keccak256(_4, _2))\n                                let memPos_15 := mload(_2)\n                                mstore(memPos_15, _27)\n                                return(memPos_15, 32)\n                            }\n                            case 0x71417b32 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:1030:1088  \"mapping(address => uint256) public override claimedAmounts\" */ 9)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _28 := sload(keccak256(_4, _2))\n                                let memPos_16 := mload(_2)\n                                mstore(memPos_16, _28)\n                                return(memPos_16, 32)\n                            }\n                            case 0x93035473 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_3 := fun_getTotalVested(abi_decode_address_14901())\n                                let memPos_17 := mload(_2)\n                                mstore(memPos_17, ret_3)\n                                return(memPos_17, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr_2 := mload(_2)\n                                let ret_4 := 0\n                                let slotValue_1 := sload(/** @src 77:769:789  \"string public symbol\" */ 3)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let length_1 := ret_4\n                                let _29 := 1\n                                length_1 := shr(_29, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, _29)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _30 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _30))\n                                {\n                                    mstore(ret_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(ret_4, 0x24)\n                                }\n                                mstore(memPtr_2, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr_2, _30), and(slotValue_1, not(255)))\n                                    ret_4 := add(add(memPtr_2, shl(5, iszero(iszero(length_1)))), _30)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 77:769:789  \"string public symbol\" */ 3)\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let dataPos_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i_1 := 0\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _30) }\n                                    {\n                                        mstore(add(add(memPtr_2, i_1), _30), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _29)\n                                    }\n                                    ret_4 := add(add(memPtr_2, i_1), _30)\n                                }\n                                finalize_allocation(memPtr_2, sub(ret_4, memPtr_2))\n                                let memPos_18 := mload(_2)\n                                return(memPos_18, sub(abi_encode_string(memPos_18, memPtr_2), memPos_18))\n                            }\n                            case 0x9cb7de4b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_14901()\n                                let value_5 := calldataload(36)\n                                let _31 := iszero(iszero(value_5))\n                                if iszero(eq(value_5, _31)) { revert(0, 0) }\n                                let _32 := sub(shl(160, 1), 1)\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _32)))\n                                let _33 := and(value0_3, _32)\n                                mstore(_4, _33)\n                                mstore(32, /** @src 77:2509:2518  \"isHandler\" */ 0x0e)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _34 := keccak256(_4, _2)\n                                let value_6 := and(sload(_34), not(255))\n                                sstore(_34, or(value_6, and(_31, 255)))\n                                /// @src 77:2555:2586  \"HandlerSet(_handler, _isActive)\"\n                                let _35 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_35, _33)\n                                mstore(add(_35, 32), _31)\n                                /// @src 77:2555:2586  \"HandlerSet(_handler, _isActive)\"\n                                log1(_35, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2, /** @src 77:2555:2586  \"HandlerSet(_handler, _isActive)\" */ 0x6cc67219f62a9e5d66cc9f2a62e16634cffcf48facd698a829bafcc1ad2c5c83)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xa2545fa5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:1306:1362  \"mapping(address => uint256) public override bonusRewards\" */ 13)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _36 := sload(keccak256(_4, _2))\n                                let memPos_19 := mload(_2)\n                                mstore(memPos_19, _36)\n                                return(memPos_19, 32)\n                            }\n                            case 0xa9059cbb { external_fun_approve() }\n                            case 0xacf077a5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_7 := and(sload(/** @src 77:870:902  \"bool public hasMaxVestableAmount\" */ 6), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0xff)\n                                let memPos_20 := mload(_2)\n                                mstore(memPos_20, iszero(iszero(value_7)))\n                                return(memPos_20, 32)\n                            }\n                            case 0xb5ff136d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:958:1024  \"mapping(address => uint256) public override cumulativeClaimAmounts\" */ 8)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _37 := sload(keccak256(_4, _2))\n                                let memPos_21 := mload(_2)\n                                mstore(memPos_21, _37)\n                                return(memPos_21, 32)\n                            }\n                            case 0xb6b55f25 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:2906:2913  \"_amount\"\n                                fun_deposit(/** @src 77:2894:2904  \"msg.sender\" */ caller(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ calldataload(_3))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xb71bce2a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:1152:1224  \"mapping(address => uint256) public override transferredCumulativeRewards\" */ 11)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _38 := sload(keccak256(_4, _2))\n                                let memPos_22 := mload(_2)\n                                mstore(memPos_22, _38)\n                                return(memPos_22, 32)\n                            }\n                            case 0xcfad57a2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_14901()\n                                let _39 := sload(/** @src 73:278:281  \"gov\" */ 0x01)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _40 := sub(shl(160, 1), 1)\n                                /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(_39, _40)))\n                                let _41 := and(/** @src 73:392:410  \"_gov == address(0)\" */ value0_4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _40)\n                                /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                if /** @src 73:392:410  \"_gov == address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _41)\n                                /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                {\n                                    /// @src 73:433:451  \"ZeroAddressError()\"\n                                    let _42 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 73:433:451  \"ZeroAddressError()\"\n                                    mstore(_42, shl(224, 0x3efa09af))\n                                    revert(_42, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 73:278:281  \"gov\" */ 0x01, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(_39, shl(160, 0xffffffffffffffffffffffff)), _41))\n                                /// @src 73:496:508  \"GovSet(_gov)\"\n                                let _43 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_43, _41)\n                                /// @src 73:496:508  \"GovSet(_gov)\"\n                                log1(_43, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32, /** @src 73:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xd0b038b7 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address_14901()\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:5167:5389  \"function setTransferredCumulativeRewards(...\"\n                                fun_validateHandler()\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, and(value0_5, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:5334:5362  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), calldataload(36))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xd5a73fdd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_5 := fun_getTotalVested(abi_decode_address_14901())\n                                let memPos_23 := mload(_2)\n                                mstore(memPos_23, ret_5)\n                                return(memPos_23, 32)\n                            }\n                            case 0xd89b7007 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_6 := abi_decode_address_14901()\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:5395:5613  \"function setCumulativeRewardDeductions(...\"\n                                fun_validateHandler()\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, and(value0_6, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 77:5560:5586  \"cumulativeRewardDeductions\" */ 0x0c)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), calldataload(36))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                pop(abi_decode_address_14901())\n                                pop(abi_decode_address())\n                                let memPos_24 := mload(_2)\n                                mstore(memPos_24, _4)\n                                return(memPos_24, 32)\n                            }\n                            case 0xf421f62a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_25 := mload(_2)\n                                mstore(memPos_25, /** @src 77:7074:7101  \"rewardTracker != address(0)\" */ iszero(iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 77:7074:7087  \"rewardTracker\" */ loadimmutable(\"60448\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))))\n                                return(memPos_25, 32)\n                            }\n                            case 0xf6d6d5aa {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_26 := mload(_2)\n                                mstore(memPos_26, and(/** @src 77:646:685  \"address public immutable claimableToken\" */ loadimmutable(\"60445\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_26, 32)\n                            }\n                            case 0xf713c230 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_7 := abi_decode_address_14901()\n                                let value1_1 := abi_decode_address()\n                                /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 77:4463:5161  \"function transferStakeValues(...\"\n                                fun_validateHandler()\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _44 := sub(shl(160, 1), 1)\n                                let _45 := and(value0_7, _44)\n                                mstore(_4, _45)\n                                let _46 := 32\n                                mstore(_46, /** @src 77:4658:4686  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _47 := sload(keccak256(_4, _2))\n                                /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                let _48 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                mstore(_48, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x3792def3))\n                                mstore(/** @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\" */ add(_48, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3), _45)\n                                /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                let _49 := staticcall(gas(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 77:4769:4782  \"rewardTracker\" */ loadimmutable(\"60448\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _44), /** @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\" */ _48, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36, /** @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\" */ _48, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _46)\n                                /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                if iszero(_49)\n                                {\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let pos_1 := mload(_2)\n                                    returndatacopy(pos_1, _4, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                let expr_2 := _4\n                                if _49\n                                {\n                                    let _50 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _46\n                                    /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                    if gt(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _46, /** @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\" */ returndatasize()) { _50 := returndatasize() }\n                                    finalize_allocation(_48, _50)\n                                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    if slt(sub(/** @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\" */ add(_48, _50), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _48), _46) { revert(0, 0) }\n                                    /// @src 77:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                    expr_2 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_48)\n                                }\n                                /// @src 77:4888:4946  \"transferredCumulativeReward +...\"\n                                let _51 := checked_add_uint256(_47, expr_2)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _52 := and(value1_1, _44)\n                                mstore(_4, _52)\n                                mstore(_46, /** @src 77:4658:4686  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ _51)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, _45)\n                                mstore(_46, /** @src 77:4956:4982  \"cumulativeRewardDeductions\" */ 0x0c)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ expr_2)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_46, /** @src 77:4658:4686  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), _4)\n                                mstore(_46, /** @src 77:5098:5110  \"bonusRewards\" */ 0x0d)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _53 := sload(keccak256(_4, _2))\n                                mstore(_4, _52)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ _53)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, _45)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), _4)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation_14909(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ not(31)))\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, _1)\n                        let length := mload(value0)\n                        mstore(add(headStart, _1), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ not(31))), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 64)\n                    }\n                    function abi_decode_address_14901() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function external_fun_approve()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        pop(abi_decode_address_14901())\n                        /// @ast-id 61084 @src 77:7465:7640  \"function transfer(...\"\n                        /** @ast-id 61084 */ /** @ast-id 61084 */ fun_transfer()\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _1 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        value0 := value\n                        let value_1 := calldataload(36)\n                        if iszero(eq(value_1, and(value_1, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        value1 := value_1\n                        value2 := calldataload(68)\n                    }\n                    function require_helper_stringliteral_7c37(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"Governable: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 50892 @src 55:2431:2738  \"function _nonReentrantBefore() private {...\"\n                    function fun_nonReentrantBefore()\n                    {\n                        /// @src 55:2554:2640  \"if (_status == ENTERED) {...\"\n                        if /** @src 55:2558:2576  \"_status == ENTERED\" */ eq(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(/** @src 55:2558:2565  \"_status\" */ 0x00), /** @src 55:1755:1756  \"2\" */ 0x02)\n                        /// @src 55:2554:2640  \"if (_status == ENTERED) {...\"\n                        {\n                            /// @src 55:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            let _1 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 55:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            mstore(_1, shl(224, 0x3ee5aeb5))\n                            revert(_1, 4)\n                        }\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 55:2558:2565  \"_status\" */ 0x00, /** @src 55:1755:1756  \"2\" */ 0x02)\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        value0 := value\n                    }\n                    /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 53:4793:5201  \"if (!success) {...\"\n                        switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36)\n                            }\n                            /// @src 53:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 53:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 53:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 60964 @src 77:5815:6116  \"function claimable(...\"\n                    function fun_claimable(var_account) -> var_\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 77:5932:5954  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        mstore(0x20, /** @src 77:5979:5993  \"claimedAmounts\" */ 0x09)\n                        /// @src 77:5932:6003  \"cumulativeClaimAmounts[_account] -...\"\n                        let expr := checked_sub_uint256(_1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)))\n                        /// @src 77:6080:6109  \"return amount + nextClaimable\"\n                        var_ := /** @src 77:6087:6109  \"amount + nextClaimable\" */ checked_add_uint256(expr, /** @src 77:6037:6070  \"_getNextClaimableAmount(_account)\" */ fun_getNextClaimableAmount(var_account))\n                    }\n                    /// @ast-id 61027 @src 77:6122:6996  \"function getMaxVestableAmount(...\"\n                    function fun_getMaxVestableAmount(var_account) -> var\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 77:7074:7087  \"rewardTracker\" */ loadimmutable(\"60448\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        /// @src 77:6233:6291  \"if (!hasRewardTracker()) {...\"\n                        if /** @src 77:7074:7101  \"rewardTracker != address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        /// @src 77:6233:6291  \"if (!hasRewardTracker()) {...\"\n                        {\n                            /// @src 77:6272:6280  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 77:6272:6280  \"return 0\"\n                            leave\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _3 := and(var_account, _1)\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                        let _5 := 0x20\n                        mstore(_5, /** @src 77:6339:6367  \"transferredCumulativeRewards\" */ 0x0b)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _6 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        mstore(_5, /** @src 77:6431:6443  \"bonusRewards\" */ 0x0d)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _7 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        let _8 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        mstore(_8, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x3792def3))\n                        mstore(/** @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\" */ add(_8, 4), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                        /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        let _9 := staticcall(gas(), _2, _8, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36, /** @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\" */ _8, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _5)\n                        /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        if iszero(_9)\n                        {\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            let pos := mload(0x40)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        let expr := /** @src -1:-1:-1 */ _4\n                        /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        if _9\n                        {\n                            let _10 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _5\n                            /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                            if gt(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _5, /** @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\" */ returndatasize()) { _10 := returndatasize() }\n                            finalize_allocation(_8, _10)\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            if slt(sub(/** @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\" */ add(_8, _10), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _8), _5)\n                            {\n                                revert(/** @src -1:-1:-1 */ _4, _4)\n                            }\n                            /// @src 77:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                            expr := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_8)\n                        }\n                        /// @src 77:6598:6682  \"cumulativeReward +...\"\n                        let expr_1 := checked_add_uint256(/** @src 77:6598:6656  \"cumulativeReward +...\" */ checked_add_uint256(expr, _6), /** @src 77:6598:6682  \"cumulativeReward +...\" */ _7)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                        mstore(_5, /** @src 77:6729:6755  \"cumulativeRewardDeductions\" */ 0x0c)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _11 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        /// @src 77:6822:6914  \"if (maxVestableAmount < cumulativeRewardDeduction) {...\"\n                        if /** @src 77:6826:6871  \"maxVestableAmount < cumulativeRewardDeduction\" */ lt(expr_1, _11)\n                        /// @src 77:6822:6914  \"if (maxVestableAmount < cumulativeRewardDeduction) {...\"\n                        {\n                            /// @src 77:6891:6899  \"return 0\"\n                            var := /** @src -1:-1:-1 */ _4\n                            /// @src 77:6891:6899  \"return 0\"\n                            leave\n                        }\n                        /// @src 77:6927:6979  \"return maxVestableAmount - cumulativeRewardDeduction\"\n                        var := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 77:6934:6979  \"maxVestableAmount - cumulativeRewardDeduction\" */ expr_1, _11)\n                    }\n                    /// @ast-id 61056 @src 77:7114:7263  \"function getTotalVested(address _account) public view returns (uint256) {...\"\n                    function fun_getTotalVested(var_account) -> var\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 77:7203:7211  \"balances\" */ 0x07)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        mstore(0x20, /** @src 77:7224:7246  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 77:7196:7256  \"return balances[_account] + cumulativeClaimAmounts[_account]\"\n                        var := /** @src 77:7203:7256  \"balances[_account] + cumulativeClaimAmounts[_account]\" */ checked_add_uint256(_1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)))\n                    }\n                    /// @ast-id 61084 @src 77:7465:7640  \"function transfer(...\"\n                    function fun_transfer()\n                    {\n                        /// @src 77:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\"\n                        let _1 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 77:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\"\n                        mstore(_1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(229, 4594637))\n                        mstore(/** @src 77:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\" */ add(_1, 4), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        mstore(add(/** @src 77:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36), 25)\n                        mstore(add(/** @src 77:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 68), \"Vester: non-transferrable\")\n                        /// @src 77:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\"\n                        revert(_1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 100)\n                    }\n                    /// @ast-id 61240 @src 77:8967:9312  \"function _burn(address _account, uint256 _amount) private {...\"\n                    function fun_burn(var_account, var_amount)\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := and(/** @src 77:9043:9065  \"_account != address(0)\" */ var_account, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 77:9043:9065  \"_account != address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 34)\n                            mstore(add(memPtr, 68), \"Vester: burn from the zero addre\")\n                            mstore(add(memPtr, 100), \"ss\")\n                            revert(memPtr, 132)\n                        }\n                        mstore(/** @src 77:9063:9064  \"0\" */ 0x00, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:9136:9144  \"balances\" */ 0x07)\n                        /// @src 77:9136:9164  \"balances[_account] - _amount\"\n                        let _2 := checked_sub_uint256(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src 77:9063:9064  \"0\" */ 0x00, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), /** @src 77:9136:9164  \"balances[_account] - _amount\" */ var_amount)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src 77:9063:9064  \"0\" */ 0x00, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:9136:9144  \"balances\" */ 0x07)\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src 77:9063:9064  \"0\" */ 0x00, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ _2)\n                        sstore(/** @src 77:9229:9240  \"totalSupply\" */ 0x05, /** @src 77:9229:9250  \"totalSupply - _amount\" */ checked_sub_uint256(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(/** @src 77:9229:9240  \"totalSupply\" */ 0x05), /** @src 77:9229:9250  \"totalSupply - _amount\" */ var_amount))\n                        /// @src 77:9266:9305  \"Transfer(_account, address(0), _amount)\"\n                        let _3 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        mstore(_3, var_amount)\n                        /// @src 77:9266:9305  \"Transfer(_account, address(0), _amount)\"\n                        log3(_3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x20, /** @src 77:9266:9305  \"Transfer(_account, address(0), _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 77:9063:9064  \"0\" */ 0x00)\n                    }\n                    /// @ast-id 61299 @src 77:9318:9936  \"function _deposit(address _account, uint256 _amount) private {...\"\n                    function fun_deposit(var_account, var_amount)\n                    {\n                        /// @src 77:9407:9408  \"0\"\n                        let _1 := 0x00\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if /** @src 77:9397:9408  \"_amount > 0\" */ iszero(var_amount)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 23)\n                            mstore(add(memPtr, 68), \"Vester: invalid _amount\")\n                            revert(memPtr, 100)\n                        }\n                        /// @src 77:9462:9470  \"_account\"\n                        fun_updateVesting(var_account)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := and(/** @src 77:9529:9542  \"rewardTracker\" */ loadimmutable(\"60448\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        /// @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        if iszero(extcodesize(_3))\n                        {\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            revert(/** @src 77:9407:9408  \"0\" */ _1, _1)\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _4 := 64\n                        /// @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        let _5 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_4)\n                        /// @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        mstore(_5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(225, 0x198405b7))\n                        let _6 := and(var_account, _2)\n                        mstore(/** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ add(_5, 4), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        mstore(add(/** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36), var_amount)\n                        mstore(add(/** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 68), /** @src 77:9589:9593  \"this\" */ address())\n                        /// @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        let _7 := call(gas(), _3, /** @src 77:9407:9408  \"0\" */ _1, /** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 100, /** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 77:9407:9408  \"0\" */ _1)\n                        /// @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        if iszero(_7)\n                        {\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            let pos := mload(_4)\n                            returndatacopy(pos, /** @src 77:9407:9408  \"0\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        if _7\n                        {\n                            finalize_allocation_14909(_5)\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            _1 := /** @src 77:9407:9408  \"0\" */ _1\n                        }\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if /** @src 77:8735:8757  \"_account != address(0)\" */ iszero(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        {\n                            let memPtr_1 := mload(_4)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, /** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ 4), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                            mstore(add(memPtr_1, 36), 32)\n                            mstore(add(memPtr_1, 68), \"Vester: mint to the zero address\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 77:8819:8830  \"totalSupply\" */ 0x05, /** @src 77:8819:8840  \"totalSupply + _amount\" */ checked_add_uint256(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(/** @src 77:8819:8830  \"totalSupply\" */ 0x05), /** @src 77:8819:8840  \"totalSupply + _amount\" */ var_amount))\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src 77:9407:9408  \"0\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        mstore(32, /** @src 77:8871:8879  \"balances\" */ 0x07)\n                        /// @src 77:8871:8899  \"balances[_account] + _amount\"\n                        let _8 := checked_add_uint256(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src 77:9407:9408  \"0\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4)), /** @src 77:8871:8899  \"balances[_account] + _amount\" */ var_amount)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src 77:9407:9408  \"0\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        mstore(32, /** @src 77:8871:8879  \"balances\" */ 0x07)\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src 77:9407:9408  \"0\" */ _1, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4), /** @src 55:1755:1756  \"2\" */ _8)\n                        /// @src 77:8915:8954  \"Transfer(address(0), _account, _amount)\"\n                        let _9 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_4)\n                        mstore(_9, var_amount)\n                        /// @src 77:8915:8954  \"Transfer(address(0), _account, _amount)\"\n                        log3(_9, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32, /** @src 77:8915:8954  \"Transfer(address(0), _account, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1, /** @src 77:8915:8954  \"Transfer(address(0), _account, _amount)\" */ _6)\n                        /// @src 77:9641:9888  \"if (hasMaxVestableAmount) {...\"\n                        if /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 77:9645:9665  \"hasMaxVestableAmount\" */ 0x06), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0xff)\n                        /// @src 77:9641:9888  \"if (hasMaxVestableAmount) {...\"\n                        {\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            if /** @src 77:9770:9807  \"getTotalVested(_account) <= maxAmount\" */ gt(/** @src 77:9770:9794  \"getTotalVested(_account)\" */ fun_getTotalVested(var_account), /** @src 77:9701:9731  \"getMaxVestableAmount(_account)\" */ fun_getMaxVestableAmount(var_account))\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            {\n                                let memPtr_2 := mload(_4)\n                                mstore(memPtr_2, shl(229, 4594637))\n                                mstore(add(memPtr_2, /** @src 77:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ 4), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                                mstore(add(memPtr_2, 36), 36)\n                                mstore(add(memPtr_2, 68), \"Vester: max vestable amount exce\")\n                                mstore(add(memPtr_2, 100), \"eded\")\n                                revert(memPtr_2, 132)\n                            }\n                        }\n                        /// @src 77:9903:9929  \"Deposit(_account, _amount)\"\n                        let _10 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_4)\n                        /// @src 77:9903:9929  \"Deposit(_account, _amount)\"\n                        log1(_10, sub(abi_encode_address_uint256(_10, var_account, var_amount), _10), 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c)\n                    }\n                    /// @ast-id 61339 @src 77:9942:10391  \"function _updateVesting(address _account) private {...\"\n                    function fun_updateVesting(var_account)\n                    {\n                        /// @src 77:10019:10052  \"_getNextClaimableAmount(_account)\"\n                        let expr := fun_getNextClaimableAmount(var_account)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := and(var_account, sub(shl(160, 1), 1))\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:10062:10078  \"lastVestingTimes\" */ 0x0a)\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 77:10091:10106  \"block.timestamp\" */ timestamp())\n                        /// @src 77:10117:10165  \"if (amount == 0) {...\"\n                        if /** @src 77:10121:10132  \"amount == 0\" */ iszero(expr)\n                        /// @src 77:10117:10165  \"if (amount == 0) {...\"\n                        {\n                            /// @src 77:10148:10155  \"return;\"\n                            leave\n                        }\n                        /// @src 77:10267:10273  \"amount\"\n                        fun_burn(var_account, expr)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:10331:10353  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 77:10331:10384  \"cumulativeClaimAmounts[_account] +...\"\n                        let _3 := checked_add_uint256(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), /** @src 77:10331:10384  \"cumulativeClaimAmounts[_account] +...\" */ expr)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:10331:10353  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ _3)\n                    }\n                    /// @ast-id 61393 @src 77:10397:10986  \"function _getNextClaimableAmount(...\"\n                    function fun_getNextClaimableAmount(var_account) -> var\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:10540:10556  \"lastVestingTimes\" */ 0x0a)\n                        /// @src 77:10522:10566  \"block.timestamp - lastVestingTimes[_account]\"\n                        let expr := checked_sub_uint256(/** @src 77:10522:10537  \"block.timestamp\" */ timestamp(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 77:10595:10603  \"balances\" */ 0x07)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _2 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        /// @src 77:10623:10674  \"if (balance == 0) {...\"\n                        if /** @src 77:10627:10639  \"balance == 0\" */ iszero(_2)\n                        /// @src 77:10623:10674  \"if (balance == 0) {...\"\n                        {\n                            /// @src 77:10655:10663  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 77:10655:10663  \"return 0\"\n                            leave\n                        }\n                        /// @src 77:10707:10732  \"getVestedAmount(_account)\"\n                        let expr_1 := fun_getTotalVested(var_account)\n                        /// @src 77:10768:10866  \"Math.mulDiv(...\"\n                        let expr_2 := fun_mulDiv(expr_1, expr, /** @src 77:10841:10856  \"vestingDuration\" */ loadimmutable(\"60441\"))\n                        /// @src 77:10877:10955  \"if (claimableAmount < balance) {...\"\n                        if /** @src 77:10881:10906  \"claimableAmount < balance\" */ lt(expr_2, _2)\n                        /// @src 77:10877:10955  \"if (claimableAmount < balance) {...\"\n                        {\n                            /// @src 77:10922:10944  \"return claimableAmount\"\n                            var := expr_2\n                            leave\n                        }\n                        /// @src 77:10965:10979  \"return balance\"\n                        var := _2\n                    }\n                    /// @ast-id 52099 @src 61:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                    function fun_mulDiv(var_x, var_y, var_denominator) -> var_result\n                    {\n                        /// @src 61:4248:4253  \"x * y\"\n                        let expr := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:4248:4253  \"x * y\" */ var_x, var_y)\n                        /// @src 61:4383:4514  \"assembly {...\"\n                        let usr$mm := mulmod(var_x, var_y, not(0))\n                        let _1 := lt(usr$mm, expr)\n                        let _2 := sub(usr$mm, expr)\n                        let var_prod1 := sub(_2, _1)\n                        /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                        if /** @src 61:4595:4605  \"prod1 == 0\" */ eq(/** @src 61:4383:4514  \"assembly {...\" */ _2, _1)\n                        /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                        {\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            if iszero(var_denominator)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x12)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                            }\n                            /// @src 61:4918:4944  \"return prod0 / denominator\"\n                            var_result := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ div(expr, var_denominator)\n                            /// @src 61:4918:4944  \"return prod0 / denominator\"\n                            leave\n                        }\n                        /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                        if /** @src 61:5065:5085  \"denominator <= prod1\" */ iszero(gt(var_denominator, var_prod1))\n                        /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                        {\n                            /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                            let _3 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                            mstore(_3, shl(224, 0x227bc153))\n                            revert(_3, 4)\n                        }\n                        /// @src 61:5435:5735  \"assembly {...\"\n                        let var_remainder := mulmod(var_x, var_y, var_denominator)\n                        /// @src 61:5954:5985  \"denominator & (0 - denominator)\"\n                        let expr_1 := and(var_denominator, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src -1:-1:-1 */ 0, /** @src 61:5969:5984  \"0 - denominator\" */ var_denominator))\n                        /// @src 61:5999:6370  \"assembly {...\"\n                        let var_denominator_1 := div(var_denominator, expr_1)\n                        /// @src 61:6813:6814  \"2\"\n                        let _4 := 0x02\n                        /// @src 61:6793:6814  \"(3 * denominator) ^ 2\"\n                        let expr_2 := xor(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:6794:6795  \"3\" */ 0x03, /** @src 61:6794:6809  \"3 * denominator\" */ var_denominator_1), /** @src 61:6813:6814  \"2\" */ _4)\n                        /// @src 61:7031:7067  \"inverse *= 2 - denominator * inverse\"\n                        let expr_3 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7031:7067  \"inverse *= 2 - denominator * inverse\" */ expr_2, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7046:7067  \"denominator * inverse\" */ var_denominator_1, expr_2)))\n                        /// @src 61:7100:7136  \"inverse *= 2 - denominator * inverse\"\n                        let expr_4 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7100:7136  \"inverse *= 2 - denominator * inverse\" */ expr_3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7115:7136  \"denominator * inverse\" */ var_denominator_1, expr_3)))\n                        /// @src 61:7170:7206  \"inverse *= 2 - denominator * inverse\"\n                        let expr_5 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7170:7206  \"inverse *= 2 - denominator * inverse\" */ expr_4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7185:7206  \"denominator * inverse\" */ var_denominator_1, expr_4)))\n                        /// @src 61:7240:7276  \"inverse *= 2 - denominator * inverse\"\n                        let expr_6 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7240:7276  \"inverse *= 2 - denominator * inverse\" */ expr_5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7255:7276  \"denominator * inverse\" */ var_denominator_1, expr_5)))\n                        /// @src 61:7310:7346  \"inverse *= 2 - denominator * inverse\"\n                        let expr_7 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7310:7346  \"inverse *= 2 - denominator * inverse\" */ expr_6, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7325:7346  \"denominator * inverse\" */ var_denominator_1, expr_6)))\n                        /// @src 61:7889:7902  \"return result\"\n                        var_result := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 61:5999:6370  \"assembly {...\" */ div(/** @src 61:5435:5735  \"assembly {...\" */ sub(expr, var_remainder), /** @src 61:5999:6370  \"assembly {...\" */ expr_1), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)), /** @src 61:5999:6370  \"assembly {...\" */ add(div(sub(/** @src -1:-1:-1 */ 0, /** @src 61:5999:6370  \"assembly {...\" */ expr_1), expr_1), 1))), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7381:7417  \"inverse *= 2 - denominator * inverse\" */ expr_7, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _4, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 61:7396:7417  \"denominator * inverse\" */ var_denominator_1, expr_7))))\n                    }\n                    /// @ast-id 61438 @src 77:10992:11373  \"function _claim(...\"\n                    function fun_claim(var_account, var_receiver) -> var\n                    {\n                        /// @src 77:11118:11126  \"_account\"\n                        fun_updateVesting(var_account)\n                        /// @src 77:11154:11173  \"claimable(_account)\"\n                        let expr := fun_claimable(var_account)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(var_account, _1)\n                        /// @src -1:-1:-1\n                        let _3 := 0\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 77:11210:11224  \"claimedAmounts\" */ 0x09)\n                        /// @src 77:11210:11243  \"claimedAmounts[_account] + amount\"\n                        let _4 := checked_add_uint256(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), /** @src 77:11210:11243  \"claimedAmounts[_account] + amount\" */ expr)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 77:11210:11224  \"claimedAmounts\" */ 0x09)\n                        /// @src 55:1755:1756  \"2\"\n                        sstore(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ _4)\n                        /// @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        let _5 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        /// @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        mstore(_5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        let _6 := call(gas(), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 77:11261:11275  \"claimableToken\" */ loadimmutable(\"60445\"), /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1), /** @src -1:-1:-1 */ _3, /** @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\" */ _5, sub(abi_encode_address_uint256(add(_5, 4), var_receiver, expr), _5), _5, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x20)\n                        /// @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        if iszero(_6)\n                        {\n                            /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            let pos := mload(0x40)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _3, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        if _6\n                        {\n                            let _7 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x20\n                            /// @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                            if gt(/** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _7, /** @src 77:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\" */ returndatasize()) { _7 := returndatasize() }\n                            finalize_allocation(_5, _7)\n                            pop(abi_decode_bool_fromMemory(_5, add(_5, _7)))\n                        }\n                        /// @src 77:11320:11343  \"Claim(_account, amount)\"\n                        let _8 := /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        /// @src 77:11320:11343  \"Claim(_account, amount)\"\n                        log1(_8, sub(abi_encode_address_uint256(_8, var_account, expr), _8), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                        /// @src 77:11353:11366  \"return amount\"\n                        var := expr\n                    }\n                    /// @ast-id 61450 @src 77:11379:11488  \"function _validateHandler() private view {...\"\n                    function fun_validateHandler()\n                    {\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 77:11448:11458  \"msg.sender\" */ caller())\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(0x20, /** @src 77:11438:11447  \"isHandler\" */ 0x0e)\n                        /// @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if iszero(and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 77:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), 0xff))\n                        {\n                            let memPtr := mload(0x40)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 0x20)\n                            mstore(add(memPtr, 36), 17)\n                            mstore(add(memPtr, 68), \"Vester: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000815000a\"\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 13:\"lib/forge-std/src/Test.sol\", 83:\"test/00_ZFI.t.sol\"\n    object \"ZFI_test_62240\" {\n        code {\n            {\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := 0\n                let _3 := not(255)\n                /// @src 3:3166:3170  \"true\"\n                let _4 := 0x0c\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                sstore(/** @src 3:3166:3170  \"true\" */ _4, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ _4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ or(and(sload(/** @src 13:1038:1042  \"true\" */ 0x1e), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                finalize_allocation_3703(_1)\n                mstore(_1, /** @src 3:3166:3170  \"true\" */ _4)\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                let _5 := add(_1, 32)\n                mstore(_5, \"TEAM_ADDRESS\")\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                let i := _2\n                for { }\n                lt(i, /** @src 3:3166:3170  \"true\" */ _4)\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                { i := add(i, 32) }\n                {\n                    mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ i), 32), mload(add(add(_1, i), 32)))\n                }\n                mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 44), _2)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                mstore(expr_mpos, /** @src 3:3166:3170  \"true\" */ _4)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation_3703(expr_mpos)\n                /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                let _6 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _7 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _8 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_8)\n                {\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let expr := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if _8\n                {\n                    let _9 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, _9), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(_2, _2)\n                    }\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value := mload(_7)\n                    if iszero(eq(value, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    {\n                        revert(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, _2)\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    expr := value\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    revert(_2, _2)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _10 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_10, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let length := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length)\n                copy_memory_to_memory_with_cleanup(_5, add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _11 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_11)\n                {\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if _11\n                {\n                    finalize_allocation_2709(_10)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    _2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2\n                }\n                let _12 := sload(/** @src 13:1038:1042  \"true\" */ 0x1e)\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ or(and(_12, not(sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 256))), and(shl(8, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 256))))\n                let memPtr := mload(64)\n                finalize_allocation_3703(memPtr)\n                let _13 := 16\n                mstore(memPtr, _13)\n                mstore(add(memPtr, 32), \"DEPLOYER_ADDRESS\")\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                let i_1 := 0\n                for { } lt(i_1, _13) { i_1 := add(i_1, 32) }\n                {\n                    mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ i_1), 32), mload(add(add(memPtr, i_1), 32)))\n                }\n                mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 48), 0)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                mstore(expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _13)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation_3703(expr_mpos_1)\n                /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                let _14 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_1))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _15 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_15, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_15, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _16 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _15, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _15, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_16)\n                {\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_2, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let expr_1 := _2\n                if _16\n                {\n                    let _17 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _17 := returndatasize() }\n                    finalize_allocation(_15, _17)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_15, _17), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value_1 := mload(_15)\n                    if iszero(eq(value_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    expr_1 := value_1\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _18 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_18, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let length_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr)\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_1)\n                copy_memory_to_memory_with_cleanup(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(memPtr, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_1)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _19 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src -1:-1:-1 */ _2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_19)\n                {\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_3 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_3, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if _19\n                {\n                    finalize_allocation_2709(_18)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if _2\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                }\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                sstore(31, or(and(sload(31), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_3703(memPtr_1)\n                mstore(memPtr_1, 5)\n                mstore(add(memPtr_1, 32), \"USER1\")\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                let i_2 := 0\n                for { } lt(i_2, 5) { i_2 := add(i_2, 32) }\n                {\n                    mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ i_2), 32), mload(add(add(memPtr_1, i_2), 32)))\n                }\n                mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 37), 0)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                mstore(expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 5)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation_3703(expr_mpos_2)\n                /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                let _20 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_2))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _21 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_21, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_21, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _22 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _21, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_22)\n                {\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_4 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_4, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let expr_2 := _2\n                if _22\n                {\n                    let _23 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _23 := returndatasize() }\n                    finalize_allocation(_21, _23)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_21, _23), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value_2 := mload(_21)\n                    if iszero(eq(value_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    expr_2 := value_2\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _24 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_24, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let length_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1)\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_2)\n                copy_memory_to_memory_with_cleanup(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(memPtr_1, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _25 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src -1:-1:-1 */ _2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_25)\n                {\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let pos_5 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    returndatacopy(pos_5, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                    revert(pos_5, returndatasize())\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if _25\n                {\n                    finalize_allocation_2709(_24)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if _2\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                }\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                sstore(32, or(and(sload(32), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                let _26 := mload(64)\n                let _27 := datasize(\"ZFI_test_62240_deployed\")\n                codecopy(_26, dataoffset(\"ZFI_test_62240_deployed\"), _27)\n                return(_26, _27)\n            }\n            function finalize_allocation_2709(memPtr)\n            {\n                if gt(memPtr, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_3703(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31)))\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                if or(gt(newFreePtr, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n        }\n        /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 13:\"lib/forge-std/src/Test.sol\", 83:\"test/00_ZFI.t.sol\"\n        object \"ZFI_test_62240_deployed\" {\n            code {\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _2 := 0\n                        switch shr(224, calldataload(_2))\n                        case 0x0a9254e4 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let _3 := sub(shl(160, 1), 1)\n                            let value := and(sload(/** @src 83:569:585  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3)\n                            let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4))\n                            /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ add(_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ _1, /** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:587:594  \"2 ether\" */ 0x1bc16d674ec80000)\n                            /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                            let _5 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4, _2, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _1, /** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                            if iszero(_5)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                            if _5\n                            {\n                                finalize_allocation_15050(_1)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                _2 := _2\n                            }\n                            let value_1 := and(sload(/** @src 83:569:585  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3)\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4))\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _6 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            mstore(_6, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_6, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_1)\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _7 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4, _2, /** @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _6, /** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _6, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(_7)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if _7\n                            {\n                                finalize_allocation_15050(_6)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(/** @src 83:903:936  \"zfiToken = ZFIToken(deploy_ZFI())\" */ 0x21, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(sload(/** @src 83:903:936  \"zfiToken = ZFIToken(deploy_ZFI())\" */ 0x21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(160, 0xffffffffffffffffffffffff)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 83:923:935  \"deploy_ZFI()\" */ fun_deploy_ZFI(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3)))\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4))\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            let _8 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            let _9 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4, _2, /** @src 83:946:960  \"vm.stopPrank()\" */ _8, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:946:960  \"vm.stopPrank()\" */ _8, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            if iszero(_9)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 83:946:960  \"vm.stopPrank()\"\n                            if _9\n                            {\n                                finalize_allocation_15050(_8)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            return(_2, _2)\n                        }\n                        case 0x1ed7831c {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let pos_3 := mload(64)\n                            let pos_4 := pos_3\n                            let length := sload(/** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(pos_3, length)\n                            let _10 := 0x20\n                            pos_3 := add(pos_3, _10)\n                            mstore(_2, /** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                            let i := _2\n                            for { } lt(i, length) { i := add(i, 1) }\n                            {\n                                mstore(pos_3, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                                pos_3 := add(pos_3, _10)\n                                srcPtr := add(srcPtr, 1)\n                            }\n                            finalize_allocation(pos_4, sub(pos_3, pos_4))\n                            let memPos := mload(64)\n                            return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_4), memPos))\n                        }\n                        case 0x2ade3880 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let length_1 := sload(/** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _11 := array_allocation_size_array_string_dyn(length_1)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _11)\n                            mstore(memPtr, length_1)\n                            let mpos := memPtr\n                            mpos := add(memPtr, 0x20)\n                            let mpos_1 := mpos\n                            mstore(_2, /** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                            let i_1 := _2\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                            {\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_15053(memPtr_1)\n                                mstore(memPtr_1, and(sload(spos), sub(shl(160, 1), 1)))\n                                let _12 := add(spos, 1)\n                                let length_2 := sload(_12)\n                                let _13 := array_allocation_size_array_string_dyn(length_2)\n                                let memPtr_2 := mload(64)\n                                finalize_allocation(memPtr_2, _13)\n                                mstore(memPtr_2, length_2)\n                                let mpos_2 := memPtr_2\n                                mpos_2 := add(memPtr_2, 0x20)\n                                mstore(0, _12)\n                                let spos_1 := keccak256(0, 0x20)\n                                let i_2 := 0\n                                for { } lt(i_2, length_2) { i_2 := add(i_2, 1) }\n                                {\n                                    let memPtr_3 := mload(64)\n                                    let ret := 0\n                                    let slotValue := sload(spos_1)\n                                    let length_3 := ret\n                                    length_3 := shr(1, slotValue)\n                                    if iszero(and(slotValue, 1))\n                                    {\n                                        length_3 := and(length_3, 0x7f)\n                                    }\n                                    if eq(and(slotValue, 1), lt(length_3, 0x20))\n                                    {\n                                        mstore(ret, shl(224, 0x4e487b71))\n                                        mstore(4, 0x22)\n                                        revert(ret, 0x24)\n                                    }\n                                    mstore(memPtr_3, length_3)\n                                    switch and(slotValue, 1)\n                                    case 0 {\n                                        mstore(add(memPtr_3, 0x20), and(slotValue, not(255)))\n                                        ret := add(add(memPtr_3, shl(5, iszero(iszero(length_3)))), 0x20)\n                                    }\n                                    case 1 {\n                                        mstore(0, spos_1)\n                                        let dataPos := keccak256(0, 0x20)\n                                        let i_3 := 0\n                                        for { } lt(i_3, length_3) { i_3 := add(i_3, 0x20) }\n                                        {\n                                            mstore(add(add(memPtr_3, i_3), 0x20), sload(dataPos))\n                                            dataPos := add(dataPos, 1)\n                                        }\n                                        ret := add(add(memPtr_3, i_3), 0x20)\n                                    }\n                                    finalize_allocation(memPtr_3, sub(ret, memPtr_3))\n                                    mstore(mpos_2, memPtr_3)\n                                    mpos_2 := add(mpos_2, 0x20)\n                                    spos_1 := add(spos_1, 1)\n                                }\n                                mstore(add(memPtr_1, 0x20), memPtr_2)\n                                mstore(mpos, memPtr_1)\n                                mpos := add(mpos, 0x20)\n                                spos := add(spos, 2)\n                            }\n                            let memPos_1 := mload(64)\n                            let tail := add(memPos_1, 0x20)\n                            mstore(memPos_1, 0x20)\n                            let pos_5 := tail\n                            let length_4 := mload(memPtr)\n                            mstore(tail, length_4)\n                            pos_5 := add(memPos_1, 64)\n                            let _14 := 5\n                            let tail_1 := add(add(memPos_1, shl(_14, length_4)), 64)\n                            let srcPtr_1 := mpos_1\n                            let i_4 := _2\n                            for { } lt(i_4, length_4) { i_4 := add(i_4, 1) }\n                            {\n                                mstore(pos_5, add(sub(tail_1, memPos_1), not(63)))\n                                let _15 := mload(srcPtr_1)\n                                let tail_2 := add(tail_1, 64)\n                                mstore(tail_1, and(mload(_15), sub(shl(160, 1), 1)))\n                                let memberValue0 := mload(add(_15, 0x20))\n                                mstore(add(tail_1, 0x20), 64)\n                                let pos_6 := tail_2\n                                let length_5 := mload(memberValue0)\n                                mstore(tail_2, length_5)\n                                let _16 := 96\n                                pos_6 := add(tail_1, _16)\n                                let tail_3 := add(add(tail_1, shl(_14, length_5)), _16)\n                                let srcPtr_2 := add(memberValue0, 0x20)\n                                let i_5 := _2\n                                for { } lt(i_5, length_5) { i_5 := add(i_5, 1) }\n                                {\n                                    mstore(pos_6, add(sub(tail_3, tail_1), not(95)))\n                                    tail_3 := abi_encode_string(mload(srcPtr_2), tail_3)\n                                    srcPtr_2 := add(srcPtr_2, 0x20)\n                                    pos_6 := add(pos_6, 0x20)\n                                }\n                                tail_1 := tail_3\n                                srcPtr_1 := add(srcPtr_1, 0x20)\n                                pos_5 := add(pos_5, 0x20)\n                            }\n                            return(memPos_1, sub(tail_1, memPos_1))\n                        }\n                        case 0x3e5e3c23 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let pos_7 := mload(64)\n                            let pos_8 := pos_7\n                            let length_6 := sload(/** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(pos_7, length_6)\n                            let _17 := 0x20\n                            pos_7 := add(pos_7, _17)\n                            mstore(_2, /** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let srcPtr_3 := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                            let i_6 := _2\n                            for { } lt(i_6, length_6) { i_6 := add(i_6, 1) }\n                            {\n                                mstore(pos_7, and(sload(srcPtr_3), sub(shl(160, 1), 1)))\n                                pos_7 := add(pos_7, _17)\n                                srcPtr_3 := add(srcPtr_3, 1)\n                            }\n                            finalize_allocation(pos_8, sub(pos_7, pos_8))\n                            let memPos_2 := mload(64)\n                            return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, pos_8), memPos_2))\n                        }\n                        case 0x3f7286f4 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let pos_9 := mload(64)\n                            let pos_10 := pos_9\n                            let length_7 := sload(/** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(pos_9, length_7)\n                            let _18 := 0x20\n                            pos_9 := add(pos_9, _18)\n                            mstore(_2, /** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let srcPtr_4 := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                            let i_7 := _2\n                            for { } lt(i_7, length_7) { i_7 := add(i_7, 1) }\n                            {\n                                mstore(pos_9, and(sload(srcPtr_4), sub(shl(160, 1), 1)))\n                                pos_9 := add(pos_9, _18)\n                                srcPtr_4 := add(srcPtr_4, 1)\n                            }\n                            finalize_allocation(pos_10, sub(pos_9, pos_10))\n                            let memPos_3 := mload(64)\n                            return(memPos_3, sub(abi_encode_array_address_dyn(memPos_3, pos_10), memPos_3))\n                        }\n                        case 0x46091aeb {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            fun_test_GiveAdminRoleAway()\n                            return(_2, _2)\n                        }\n                        case 0x49a4986a {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            /// @src 83:2260:2507  \"function test_Upgrade() public {...\"\n                            fun_test_GiveAdminRoleAway()\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _19 := sub(shl(160, 1), 1)\n                            let value_2 := and(shr(8, sload(/** @src 83:2349:2361  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _19)\n                            let _20 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _20))\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            let _21 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            mstore(_21, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_2)\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            let _22 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _20, _2, /** @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\" */ _21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\" */ _21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            if iszero(_22)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_11 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_11, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_11, returndatasize())\n                            }\n                            /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                            if _22\n                            {\n                                finalize_allocation_15050(_21)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            /// @src 83:2401:2415  \"new ZFIToken()\"\n                            let _23 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2401:2415  \"new ZFIToken()\"\n                            let _24 := datasize(\"ZFIToken_58326\")\n                            let _25 := add(_23, _24)\n                            let _26 := 0xffffffffffffffff\n                            if or(gt(_25, _26), lt(_25, _23))\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, shl(224, 0x4e487b71))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                                revert(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, 36)\n                            }\n                            /// @src 83:2401:2415  \"new ZFIToken()\"\n                            datacopy(_23, dataoffset(\"ZFIToken_58326\"), _24)\n                            let expr_address := create(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2401:2415  \"new ZFIToken()\" */ _23, sub(_25, _23))\n                            if iszero(expr_address)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_12 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_12, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_12, returndatasize())\n                            }\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let memPtr_4 := mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let newFreePtr := add(memPtr_4, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if or(gt(newFreePtr, /** @src 83:2401:2415  \"new ZFIToken()\" */ _26), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ lt(newFreePtr, memPtr_4))\n                            {\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0, shl(224, 0x4e487b71))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                                revert(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0, 36)\n                            }\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(memPtr_4, _2)\n                            let value_3 := and(sload(/** @src 83:2458:2466  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _19)\n                            /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                            if iszero(extcodesize(value_3))\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                            let _27 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                            mstore(_27, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x278f7943))\n                            /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                            let _28 := call(gas(), value_3, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\" */ _27, sub(abi_encode_address_bytes(add(_27, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), and(/** @src 83:2393:2416  \"address(new ZFIToken())\" */ expr_address, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _19), /** @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\" */ memPtr_4), _27), _27, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                            if iszero(_28)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_13 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_13, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_13, returndatasize())\n                            }\n                            /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                            if _28\n                            {\n                                finalize_allocation_15050(_27)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            return(_2, _2)\n                        }\n                        case 0x66d9a9a0 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let length_8 := sload(/** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _29 := array_allocation_size_array_string_dyn(length_8)\n                            let memPtr_5 := mload(64)\n                            finalize_allocation(memPtr_5, _29)\n                            mstore(memPtr_5, length_8)\n                            let mpos_3 := memPtr_5\n                            mpos_3 := add(memPtr_5, 0x20)\n                            mstore(_2, /** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let spos_2 := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                            let i_8 := _2\n                            for { } lt(i_8, length_8) { i_8 := add(i_8, 1) }\n                            {\n                                let memPtr_6 := mload(64)\n                                finalize_allocation_15053(memPtr_6)\n                                mstore(memPtr_6, and(sload(spos_2), sub(shl(160, 1), 1)))\n                                let _30 := add(spos_2, 1)\n                                let pos_14 := mload(64)\n                                let pos_15 := pos_14\n                                let length_9 := sload(_30)\n                                mstore(pos_14, length_9)\n                                pos_14 := add(pos_14, 0x20)\n                                mstore(_2, _30)\n                                let srcPtr_5 := keccak256(_2, 0x20)\n                                let itemCounter := _2\n                                for { }\n                                lt(add(itemCounter, 7), length_9)\n                                {\n                                    itemCounter := add(itemCounter, 8)\n                                }\n                                {\n                                    let data := sload(srcPtr_5)\n                                    let _31 := shl(224, 0xffffffff)\n                                    mstore(pos_14, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data), _31))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _32 := 192\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    mstore(add(pos_14, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_32, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data), _31))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _33 := 160\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    mstore(add(pos_14, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_33, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data), _31))\n                                    let _34 := 96\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _35 := 128\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    mstore(add(pos_14, _34), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_35, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data), _31))\n                                    mstore(add(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _35), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _34, data), _31))\n                                    mstore(add(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _33), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data), _31))\n                                    mstore(add(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _32), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data), _31))\n                                    mstore(add(pos_14, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data, _31))\n                                    pos_14 := add(pos_14, 256)\n                                    srcPtr_5 := add(srcPtr_5, 1)\n                                }\n                                let data_1 := sload(srcPtr_5)\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96, data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_9)\n                                {\n                                    mstore(pos_14, and(data_1, shl(224, 0xffffffff)))\n                                    pos_14 := add(pos_14, 0x20)\n                                }\n                                finalize_allocation(pos_15, sub(pos_14, pos_15))\n                                mstore(add(memPtr_6, 0x20), pos_15)\n                                mstore(mpos_3, memPtr_6)\n                                mpos_3 := add(mpos_3, 0x20)\n                                spos_2 := add(spos_2, 2)\n                            }\n                            let memPos_4 := mload(64)\n                            return(memPos_4, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_4, memPtr_5), memPos_4))\n                        }\n                        case 0x84d7db65 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            /// @src 83:1702:1935  \"function test_Mint() public {...\"\n                            fun_test_GiveAdminRoleAway()\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _36 := sub(shl(160, 1), 1)\n                            let value_4 := and(sload(/** @src 83:1788:1804  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _36)\n                            let _37 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37))\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _38 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            mstore(_38, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_38, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_4)\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _39 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37, _2, /** @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _38, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _38, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(_39)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_16 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_16, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_16, returndatasize())\n                            }\n                            /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if _39\n                            {\n                                finalize_allocation_15050(_38)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            let value_5 := and(sload(/** @src 83:1815:1823  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _36)\n                            let _40 := 32\n                            let value_6 := and(sload(_40), _36)\n                            /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                            if iszero(extcodesize(value_5))\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                            let _41 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                            mstore(_41, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x40c10f19))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ add(_41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_6)\n                            /// @src 83:1836:1844  \"10 ether\"\n                            let _42 := 0x8ac7230489e80000\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ _41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:1836:1844  \"10 ether\" */ _42)\n                            /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                            let _43 := call(gas(), value_5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ _41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ _41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                            if iszero(_43)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_17 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_17, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_17, returndatasize())\n                            }\n                            /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                            if _43\n                            {\n                                finalize_allocation_15050(_41)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37))\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            let _44 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            mstore(_44, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            let _45 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37, _2, /** @src 83:1855:1869  \"vm.stopPrank()\" */ _44, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:1855:1869  \"vm.stopPrank()\" */ _44, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            if iszero(_45)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_18 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_18, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_18, returndatasize())\n                            }\n                            /// @src 83:1855:1869  \"vm.stopPrank()\"\n                            if _45\n                            {\n                                finalize_allocation_15050(_44)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            let value_7 := and(sload(/** @src 83:1815:1823  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _36)\n                            let value_8 := and(sload(_40), _36)\n                            /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                            let _46 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                            mstore(_46, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ add(_46, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_8)\n                            /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                            let _47 := staticcall(gas(), value_7, _46, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ _46, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _40)\n                            /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                            if iszero(_47)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_19 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_19, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_19, returndatasize())\n                            }\n                            /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                            let expr := _2\n                            if _47\n                            {\n                                let _48 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _40\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _40, /** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _48 := returndatasize() }\n                                finalize_allocation(_46, _48)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if slt(sub(/** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ add(_46, _48), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _46), _40) { revert(_2, _2) }\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                expr := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_46)\n                            }\n                            /// @src 83:1890:1927  \"zfiToken.balanceOf(USER1) == 10 ether\"\n                            fun_assertTrue(eq(expr, /** @src 83:1836:1844  \"10 ether\" */ _42))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            return(_2, _2)\n                        }\n                        case 0x85226c81 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let length_10 := sload(/** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _49 := array_allocation_size_array_string_dyn(length_10)\n                            let memPtr_7 := mload(64)\n                            finalize_allocation(memPtr_7, _49)\n                            mstore(memPtr_7, length_10)\n                            let mpos_4 := memPtr_7\n                            let _50 := 0x20\n                            mpos_4 := add(memPtr_7, _50)\n                            mstore(0, /** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let spos_3 := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                            let i_9 := 0\n                            for { } lt(i_9, length_10) { i_9 := add(i_9, 1) }\n                            {\n                                let memPtr_8 := mload(64)\n                                let ret_1 := 0\n                                let slotValue_1 := sload(spos_3)\n                                let length_11 := ret_1\n                                let _51 := 1\n                                length_11 := shr(_51, slotValue_1)\n                                let outOfPlaceEncoding := and(slotValue_1, _51)\n                                if iszero(outOfPlaceEncoding)\n                                {\n                                    length_11 := and(length_11, 0x7f)\n                                }\n                                if eq(outOfPlaceEncoding, lt(length_11, _50))\n                                {\n                                    mstore(ret_1, shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(ret_1, 0x24)\n                                }\n                                mstore(memPtr_8, length_11)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(memPtr_8, _50), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_11)))), _50)\n                                }\n                                case 1 {\n                                    mstore(0, spos_3)\n                                    let dataPos_1 := keccak256(0, _50)\n                                    let i_10 := 0\n                                    for { } lt(i_10, length_11) { i_10 := add(i_10, _50) }\n                                    {\n                                        mstore(add(add(memPtr_8, i_10), _50), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _51)\n                                    }\n                                    ret_1 := add(add(memPtr_8, i_10), _50)\n                                }\n                                finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                                mstore(mpos_4, memPtr_8)\n                                mpos_4 := add(mpos_4, _50)\n                                spos_3 := add(spos_3, _51)\n                            }\n                            let memPos_5 := mload(64)\n                            return(memPos_5, sub(abi_encode_array_string_dyn(memPos_5, memPtr_7), memPos_5))\n                        }\n                        case 0x916a17c6 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let length_12 := sload(/** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _52 := array_allocation_size_array_string_dyn(length_12)\n                            let memPtr_9 := mload(64)\n                            finalize_allocation(memPtr_9, _52)\n                            mstore(memPtr_9, length_12)\n                            let mpos_5 := memPtr_9\n                            mpos_5 := add(memPtr_9, 0x20)\n                            mstore(_2, /** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let spos_4 := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                            let i_11 := _2\n                            for { } lt(i_11, length_12) { i_11 := add(i_11, 1) }\n                            {\n                                let memPtr_10 := mload(64)\n                                finalize_allocation_15053(memPtr_10)\n                                mstore(memPtr_10, and(sload(spos_4), sub(shl(160, 1), 1)))\n                                let _53 := add(spos_4, 1)\n                                let pos_20 := mload(64)\n                                let pos_21 := pos_20\n                                let length_13 := sload(_53)\n                                mstore(pos_20, length_13)\n                                pos_20 := add(pos_20, 0x20)\n                                mstore(_2, _53)\n                                let srcPtr_6 := keccak256(_2, 0x20)\n                                let itemCounter_1 := _2\n                                for { }\n                                lt(add(itemCounter_1, 7), length_13)\n                                {\n                                    itemCounter_1 := add(itemCounter_1, 8)\n                                }\n                                {\n                                    let data_2 := sload(srcPtr_6)\n                                    let _54 := shl(224, 0xffffffff)\n                                    mstore(pos_20, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data_2), _54))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _55 := 192\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    mstore(add(pos_20, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_55, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2), _54))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _56 := 160\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    mstore(add(pos_20, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_56, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2), _54))\n                                    let _57 := 96\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _58 := 128\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    mstore(add(pos_20, _57), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_58, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2), _54))\n                                    mstore(add(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _58), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _57, data_2), _54))\n                                    mstore(add(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _56), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data_2), _54))\n                                    mstore(add(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _55), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data_2), _54))\n                                    mstore(add(pos_20, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2, _54))\n                                    pos_20 := add(pos_20, 256)\n                                    srcPtr_6 := add(srcPtr_6, 1)\n                                }\n                                let data_3 := sload(srcPtr_6)\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96, data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data_3), shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_13)\n                                {\n                                    mstore(pos_20, and(data_3, shl(224, 0xffffffff)))\n                                    pos_20 := add(pos_20, 0x20)\n                                }\n                                finalize_allocation(pos_21, sub(pos_20, pos_21))\n                                mstore(add(memPtr_10, 0x20), pos_21)\n                                mstore(mpos_5, memPtr_10)\n                                mpos_5 := add(mpos_5, 0x20)\n                                spos_4 := add(spos_4, 2)\n                            }\n                            let memPos_6 := mload(64)\n                            return(memPos_6, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_6, memPtr_9), memPos_6))\n                        }\n                        case 0xb5508aa9 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let length_14 := sload(/** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _59 := array_allocation_size_array_string_dyn(length_14)\n                            let memPtr_11 := mload(64)\n                            finalize_allocation(memPtr_11, _59)\n                            mstore(memPtr_11, length_14)\n                            let mpos_6 := memPtr_11\n                            let _60 := 0x20\n                            mpos_6 := add(memPtr_11, _60)\n                            mstore(0, /** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let spos_5 := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                            let i_12 := 0\n                            for { } lt(i_12, length_14) { i_12 := add(i_12, 1) }\n                            {\n                                let memPtr_12 := mload(64)\n                                let ret_2 := 0\n                                let slotValue_2 := sload(spos_5)\n                                let length_15 := ret_2\n                                let _61 := 1\n                                length_15 := shr(_61, slotValue_2)\n                                let outOfPlaceEncoding_1 := and(slotValue_2, _61)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_15 := and(length_15, 0x7f)\n                                }\n                                if eq(outOfPlaceEncoding_1, lt(length_15, _60))\n                                {\n                                    mstore(ret_2, shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(ret_2, 0x24)\n                                }\n                                mstore(memPtr_12, length_15)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr_12, _60), and(slotValue_2, not(255)))\n                                    ret_2 := add(add(memPtr_12, shl(5, iszero(iszero(length_15)))), _60)\n                                }\n                                case 1 {\n                                    mstore(0, spos_5)\n                                    let dataPos_2 := keccak256(0, _60)\n                                    let i_13 := 0\n                                    for { } lt(i_13, length_15) { i_13 := add(i_13, _60) }\n                                    {\n                                        mstore(add(add(memPtr_12, i_13), _60), sload(dataPos_2))\n                                        dataPos_2 := add(dataPos_2, _61)\n                                    }\n                                    ret_2 := add(add(memPtr_12, i_13), _60)\n                                }\n                                finalize_allocation(memPtr_12, sub(ret_2, memPtr_12))\n                                mstore(mpos_6, memPtr_12)\n                                mpos_6 := add(mpos_6, _60)\n                                spos_5 := add(spos_5, _61)\n                            }\n                            let memPos_7 := mload(64)\n                            return(memPos_7, sub(abi_encode_array_string_dyn(memPos_7, memPtr_11), memPos_7))\n                        }\n                        case 0xba414fa6 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let ret_3 := fun_failed()\n                            let memPos_8 := mload(64)\n                            mstore(memPos_8, iszero(iszero(ret_3)))\n                            return(memPos_8, 32)\n                        }\n                        case 0xca2925eb {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let ret_4 := fun_deploy_ZFI()\n                            let memPos_9 := mload(64)\n                            mstore(memPos_9, and(ret_4, sub(shl(160, 1), 1)))\n                            return(memPos_9, 32)\n                        }\n                        case 0xe1a7e93f {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            /// @src 83:1941:2254  \"function test_Pause() public {...\"\n                            fun_test_GiveAdminRoleAway()\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _62 := sub(shl(160, 1), 1)\n                            let value_9 := and(sload(/** @src 83:2028:2044  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                            let _63 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _64 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let _65 := shl(225, 0x03223eab)\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            mstore(_64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _65)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_64, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_9)\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _66 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _64, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _64, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(_66)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_22 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_22, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_22, returndatasize())\n                            }\n                            /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if _66\n                            {\n                                finalize_allocation_15050(_64)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            let value_10 := and(sload(/** @src 83:2055:2063  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                            let value_11 := and(sload(32), _62)\n                            /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                            if iszero(extcodesize(value_10))\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                            let _67 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                            mstore(_67, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x40c10f19))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ add(_67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_11)\n                            /// @src 83:2076:2084  \"10 ether\"\n                            let _68 := 0x8ac7230489e80000\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ _67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:2076:2084  \"10 ether\" */ _68)\n                            /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                            let _69 := call(gas(), value_10, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ _67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ _67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                            if iszero(_69)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_23 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_23, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_23, returndatasize())\n                            }\n                            /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                            if _69\n                            {\n                                finalize_allocation_15050(_67)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            let value_12 := and(sload(/** @src 83:2055:2063  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                            /// @src 83:2095:2111  \"zfiToken.pause()\"\n                            if iszero(extcodesize(value_12))\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2095:2111  \"zfiToken.pause()\"\n                            let _70 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2095:2111  \"zfiToken.pause()\"\n                            mstore(_70, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x8456cb59))\n                            /// @src 83:2095:2111  \"zfiToken.pause()\"\n                            let _71 := call(gas(), value_12, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2095:2111  \"zfiToken.pause()\" */ _70, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:2095:2111  \"zfiToken.pause()\" */ _70, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2095:2111  \"zfiToken.pause()\"\n                            if iszero(_71)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_24 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_24, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_24, returndatasize())\n                            }\n                            /// @src 83:2095:2111  \"zfiToken.pause()\"\n                            if _71\n                            {\n                                finalize_allocation_15050(_70)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            let _72 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            mstore(_72, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            let _73 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2121:2135  \"vm.stopPrank()\" */ _72, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:2121:2135  \"vm.stopPrank()\" */ _72, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            if iszero(_73)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_25 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_25, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_25, returndatasize())\n                            }\n                            /// @src 83:2121:2135  \"vm.stopPrank()\"\n                            if _73\n                            {\n                                finalize_allocation_15050(_72)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            let value_13 := and(sload(32), _62)\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            let _74 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            mstore(_74, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _65)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:2145:2165  \"vm.startPrank(USER1)\" */ add(_74, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_13)\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            let _75 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2145:2165  \"vm.startPrank(USER1)\" */ _74, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:2145:2165  \"vm.startPrank(USER1)\" */ _74, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            if iszero(_75)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_26 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_26, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_26, returndatasize())\n                            }\n                            /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                            if _75\n                            {\n                                finalize_allocation_15050(_74)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            let _76 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            mstore(_76, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x3d211205))\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            let _77 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2175:2192  \"vm.expectRevert()\" */ _76, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:2175:2192  \"vm.expectRevert()\" */ _76, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            if iszero(_77)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_27 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_27, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_27, returndatasize())\n                            }\n                            /// @src 83:2175:2192  \"vm.expectRevert()\"\n                            if _77\n                            {\n                                finalize_allocation_15050(_76)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                if _2 { revert(_2, _2) }\n                            }\n                            let value_14 := and(sload(/** @src 83:2055:2063  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                            let value_15 := and(sload(/** @src 83:2028:2044  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                            /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                            let _78 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                            mstore(_78, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xa9059cbb))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(/** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ add(_78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_15)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ _78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:2076:2084  \"10 ether\" */ _68)\n                            /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                            let _79 := call(gas(), value_14, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ _78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ _78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                            /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                            if iszero(_79)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_28 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_28, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_28, returndatasize())\n                            }\n                            /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                            if _79\n                            {\n                                let _80 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                                /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _80, /** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ returndatasize()) { _80 := returndatasize() }\n                                finalize_allocation(_78, _80)\n                                pop(abi_decode_bool_fromMemory(_78, add(_78, _80)))\n                            }\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            return(_2, _2)\n                        }\n                        case 0xe20c9f71 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let pos_29 := mload(64)\n                            let pos_30 := pos_29\n                            let length_16 := sload(/** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            mstore(pos_29, length_16)\n                            let _81 := 0x20\n                            pos_29 := add(pos_29, _81)\n                            mstore(_2, /** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let srcPtr_7 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                            let i_14 := _2\n                            for { } lt(i_14, length_16) { i_14 := add(i_14, 1) }\n                            {\n                                mstore(pos_29, and(sload(srcPtr_7), sub(shl(160, 1), 1)))\n                                pos_29 := add(pos_29, _81)\n                                srcPtr_7 := add(srcPtr_7, 1)\n                            }\n                            finalize_allocation(pos_30, sub(pos_29, pos_30))\n                            let memPos_10 := mload(64)\n                            return(memPos_10, sub(abi_encode_array_address_dyn(memPos_10, pos_30), memPos_10))\n                        }\n                        case 0xfa7626d4 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let value_16 := and(sload(/** @src 13:1016:1042  \"bool public IS_TEST = true\" */ 30), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0xff)\n                            let memPos_11 := mload(64)\n                            mstore(memPos_11, iszero(iszero(value_16)))\n                            return(memPos_11, 32)\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_encode_array_address_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, _1)\n                    mstore(headStart, _1)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    pos := add(headStart, 64)\n                    let srcPtr := add(value0, _1)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, _1)\n                    }\n                    tail := pos\n                }\n                function abi_encode_string(value, pos) -> end\n                {\n                    let length := mload(value)\n                    mstore(pos, length)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        let _1 := 0x20\n                        mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                    }\n                    mstore(add(add(pos, length), 0x20), 0)\n                    end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                }\n                function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, _1)\n                    mstore(headStart, _1)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    let _2 := 64\n                    pos := add(headStart, _2)\n                    let tail_2 := add(add(headStart, shl(5, length)), _2)\n                    let srcPtr := add(value0, _1)\n                    let i := 0\n                    let i_1 := i\n                    for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                    {\n                        mstore(pos, add(sub(tail_2, headStart), not(63)))\n                        let _3 := mload(srcPtr)\n                        let tail_3 := add(tail_2, _2)\n                        mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n                        let memberValue0 := mload(add(_3, _1))\n                        mstore(add(tail_2, _1), _2)\n                        let pos_1 := tail_3\n                        let length_1 := mload(memberValue0)\n                        mstore(tail_3, length_1)\n                        pos_1 := add(tail_2, 96)\n                        let srcPtr_1 := add(memberValue0, _1)\n                        let i_2 := i\n                        for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                            pos_1 := add(pos_1, _1)\n                            srcPtr_1 := add(srcPtr_1, _1)\n                        }\n                        tail_2 := pos_1\n                        srcPtr := add(srcPtr, _1)\n                        pos := add(pos, _1)\n                    }\n                    tail := tail_2\n                }\n                function abi_encode_array_string_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, _1)\n                    mstore(headStart, _1)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    pos := add(headStart, 64)\n                    let tail_2 := add(add(headStart, shl(5, length)), 64)\n                    let srcPtr := add(value0, _1)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, add(sub(tail_2, headStart), not(63)))\n                        tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                        srcPtr := add(srcPtr, _1)\n                        pos := add(pos, _1)\n                    }\n                    tail := tail_2\n                }\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                function finalize_allocation_15050(memPtr)\n                {\n                    if gt(memPtr, 0xffffffffffffffff)\n                    {\n                        mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, memPtr)\n                }\n                function finalize_allocation_15053(memPtr)\n                {\n                    let newFreePtr := add(memPtr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ size, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), not(31)))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                /// @ast-id 286 @src 2:1243:1447  \"function failed() public view returns (bool) {...\"\n                function fun_failed() -> var\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value := and(sload(/** @src 2:1302:1309  \"_failed\" */ 0x08), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0xff)\n                    /// @src 2:1298:1441  \"if (_failed) {...\"\n                    switch /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value\n                    case /** @src 2:1298:1441  \"if (_failed) {...\" */ 0 {\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        let _1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        mstore(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        let _3 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_1, _4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_1)\n                        }\n                        /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                        var := /** @src 2:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                        /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                        leave\n                    }\n                    default /// @src 2:1298:1441  \"if (_failed) {...\"\n                    {\n                        /// @src 2:1325:1339  \"return _failed\"\n                        var := value\n                        leave\n                    }\n                }\n                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                function array_allocation_size_array_string_dyn(length) -> size\n                {\n                    if gt(length, 0xffffffffffffffff)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    size := add(shl(5, length), 0x20)\n                }\n                function abi_encode_address_bytes(headStart, value0, value1) -> tail\n                {\n                    mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                    mstore(add(headStart, 32), 64)\n                    tail := abi_encode_string(value1, add(headStart, 64))\n                }\n                /// @ast-id 62062 @src 83:973:1242  \"function deploy_ZFI() public returns(address ZFY_proxy_address){...\"\n                function fun_deploy_ZFI() -> var_ZFY_proxy_address\n                {\n                    /// @src 83:1087:1101  \"new ZFIToken()\"\n                    let _1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 83:1087:1101  \"new ZFIToken()\"\n                    let _2 := datasize(\"ZFIToken_58326\")\n                    let _3 := add(_1, _2)\n                    let _4 := 0xffffffffffffffff\n                    if or(gt(_3, _4), lt(_3, _1))\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    /// @src 83:1087:1101  \"new ZFIToken()\"\n                    datacopy(_1, dataoffset(\"ZFIToken_58326\"), _2)\n                    let _5 := 0\n                    let expr_address := create(_5, _1, sub(_3, _1))\n                    if iszero(expr_address)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _6 := sub(shl(160, 1), 1)\n                    let value := and(shr(8, sload(/** @src 83:1219:1231  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _6)\n                    /// @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\"\n                    let expr_mpos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\"\n                    mstore(add(expr_mpos, 0x20), shl(224, 0x26dcff15))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    mstore(/** @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\" */ add(expr_mpos, 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value)\n                    /// @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\"\n                    mstore(expr_mpos, 36)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let newFreePtr := add(expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if or(gt(newFreePtr, /** @src 83:1087:1101  \"new ZFIToken()\" */ _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ lt(newFreePtr, expr_mpos))\n                    {\n                        mstore(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\" */ 36)\n                    }\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                    /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                    let _7 := datasize(\"ERC1967Proxy_49452\")\n                    let _8 := add(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos, /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96)\n                    /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                    if or(gt(_8, /** @src 83:1087:1101  \"new ZFIToken()\" */ _4), /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ lt(_8, newFreePtr))\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(4, 0x41)\n                        revert(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\" */ 36)\n                    }\n                    /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                    datacopy(newFreePtr, dataoffset(\"ERC1967Proxy_49452\"), _7)\n                    let expr_62057_address := create(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ newFreePtr, add(sub(abi_encode_address_bytes(_8, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 83:1079:1102  \"address(new ZFIToken())\" */ expr_address, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _6), /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ expr_mpos), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ not(95)))\n                    /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                    if iszero(expr_62057_address)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_1, /** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 83:1112:1235  \"ZFY_proxy_address = address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))))\"\n                    var_ZFY_proxy_address := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 83:1132:1235  \"address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))))\" */ expr_62057_address, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _6)\n                }\n                function abi_encode_bytes32_address(headStart, value0, value1) -> tail\n                {\n                    tail := add(headStart, 64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(headStart, value0)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                }\n                function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                {\n                    if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                    let value := mload(headStart)\n                    if iszero(eq(value, iszero(iszero(value))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    value0 := value\n                }\n                /// @ast-id 62123 @src 83:1248:1696  \"function test_GiveAdminRoleAway() public {...\"\n                function fun_test_GiveAdminRoleAway()\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _1 := sload(/** @src 83:1313:1329  \"DEPLOYER_ADDRESS\" */ 0x1f)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _2 := sub(shl(160, 1), 1)\n                    let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ value, value)\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _4 := 64\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _5 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _6 := shl(225, 0x03223eab)\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _7 := 4\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    mstore(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_5, _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(_1, _2))\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _8 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src -1:-1:-1 */ value, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src -1:-1:-1 */ value)\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if iszero(_8)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src -1:-1:-1 */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if _8\n                    {\n                        finalize_allocation_15050(_5)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        value := /** @src -1:-1:-1 */ value\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_1 := and(sload(/** @src 83:1340:1348  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let _9 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _10 := shl(224, 0xa217fddf)\n                    /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    mstore(_9, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _11 := 32\n                    /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let _12 := staticcall(gas(), value_1, _9, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ _9, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                    /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    if iszero(_12)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_1, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let expr := value\n                    if _12\n                    {\n                        let _13 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ returndatasize()) { _13 := returndatasize() }\n                        finalize_allocation(_9, _13)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ add(_9, _13), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _9), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_9)\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _14 := sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)\n                    /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    if iszero(extcodesize(value_1))\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    let _15 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    mstore(_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x2f2ff15d))\n                    /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    let _16 := call(gas(), value_1, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ _15, sub(abi_encode_bytes32_address(add(_15, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ expr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(shr(8, _14), _2)), /** @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ _15), _15, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    if iszero(_16)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_2, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_2, returndatasize())\n                    }\n                    /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    if _16\n                    {\n                        finalize_allocation_15050(_15)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    let _17 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _18 := shl(224, 0x90c5013b)\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    mstore(_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _18)\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    let _19 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1413:1427  \"vm.stopPrank()\" */ _17, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1413:1427  \"vm.stopPrank()\" */ _17, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    if iszero(_19)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_3 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_3, returndatasize())\n                    }\n                    /// @src 83:1413:1427  \"vm.stopPrank()\"\n                    if _19\n                    {\n                        finalize_allocation_15050(_17)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_2 := and(shr(8, sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    let _20 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    mstore(_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    mstore(/** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ add(_20, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value_2)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ _20, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:1459:1466  \"2 ether\" */ 0x1bc16d674ec80000)\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    let _21 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ _20, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ _20, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    if iszero(_21)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_4 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_4, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_4, returndatasize())\n                    }\n                    /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                    if _21\n                    {\n                        finalize_allocation_15050(_20)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_3 := and(shr(8, sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    let _22 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    mstore(_22, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    mstore(/** @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_22, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value_3)\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    let _23 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\" */ _22, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\" */ _22, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    if iszero(_23)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_5 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_5, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_5, returndatasize())\n                    }\n                    /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                    if _23\n                    {\n                        finalize_allocation_15050(_22)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_4 := and(sload(/** @src 83:1340:1348  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let _24 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    mstore(_24, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10)\n                    /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let _25 := staticcall(gas(), value_4, _24, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ _24, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                    /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    if iszero(_25)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_6 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_6, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_6, returndatasize())\n                    }\n                    /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let expr_1 := value\n                    if _25\n                    {\n                        let _26 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ returndatasize()) { _26 := returndatasize() }\n                        finalize_allocation(_24, _26)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ add(_24, _26), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _24), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        expr_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_24)\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_5 := and(sload(/** @src 83:1313:1329  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                    if iszero(extcodesize(value_4))\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                    let _27 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                    mstore(_27, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xd547741f))\n                    /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                    let _28 := call(gas(), value_4, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\" */ _27, sub(abi_encode_bytes32_address(add(_27, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\" */ expr_1, value_5), _27), _27, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                    if iszero(_28)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_7 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_7, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_7, returndatasize())\n                    }\n                    /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                    if _28\n                    {\n                        finalize_allocation_15050(_27)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    let _29 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    mstore(_29, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _18)\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    let _30 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1592:1606  \"vm.stopPrank()\" */ _29, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1592:1606  \"vm.stopPrank()\" */ _29, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    if iszero(_30)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_8 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_8, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_8, returndatasize())\n                    }\n                    /// @src 83:1592:1606  \"vm.stopPrank()\"\n                    if _30\n                    {\n                        finalize_allocation_15050(_29)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_6 := and(sload(/** @src 83:1340:1348  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let _31 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    mstore(_31, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10)\n                    /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let _32 := staticcall(gas(), value_6, _31, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ _31, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                    /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    if iszero(_32)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_9 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_9, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_9, returndatasize())\n                    }\n                    /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                    let expr_2 := value\n                    if _32\n                    {\n                        let _33 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ returndatasize()) { _33 := returndatasize() }\n                        finalize_allocation(_31, _33)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ add(_31, _33), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _31), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        expr_2 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_31)\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let value_7 := and(shr(8, sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    let _34 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                    /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    mstore(_34, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x24745215))\n                    /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    let _35 := staticcall(gas(), value_6, _34, sub(abi_encode_bytes32_address(add(_34, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ expr_2, value_7), _34), _34, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                    /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    if iszero(_35)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_10 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_10, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_10, returndatasize())\n                    }\n                    /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                    let expr_3 := value\n                    if _35\n                    {\n                        let _36 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                        /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ returndatasize()) { _36 := returndatasize() }\n                        finalize_allocation(_34, _36)\n                        expr_3 := abi_decode_bool_fromMemory(_34, add(_34, _36))\n                    }\n                    fun_assertTrue(expr_3)\n                }\n                /// @ast-id 326 @src 2:1594:1683  \"function assertTrue(bool data) internal pure virtual {...\"\n                function fun_assertTrue(var_data)\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _1))\n                    /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                    let _2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                    mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x0c9fd581))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    mstore(/** @src 2:1657:1676  \"vm.assertTrue(data)\" */ add(_2, 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ iszero(iszero(var_data)))\n                    /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                    let _3 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _1, /** @src 2:1657:1676  \"vm.assertTrue(data)\" */ _2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 2:1657:1676  \"vm.assertTrue(data)\" */ _2, 0)\n                    if iszero(_3)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 2:1657:1676  \"vm.assertTrue(data)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                    if _3 { finalize_allocation_15050(_2) }\n                }\n            }\n            /// @use-src 41:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 42:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 43:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\"\n            object \"ERC1967Proxy_49452\" {\n                code {\n                    {\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        mstore(64, memoryguard(0x80))\n                        let programSize := datasize(\"ERC1967Proxy_49452\")\n                        let argSize := sub(codesize(), programSize)\n                        let memoryDataOffset := allocate_memory(argSize)\n                        codecopy(memoryDataOffset, programSize, argSize)\n                        let _1 := add(memoryDataOffset, argSize)\n                        if slt(sub(_1, memoryDataOffset), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        let value := mload(memoryDataOffset)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        let _3 := 32\n                        let offset := mload(add(memoryDataOffset, _3))\n                        if gt(offset, sub(shl(64, 1), 1))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        let _4 := add(memoryDataOffset, offset)\n                        if iszero(slt(add(_4, 0x1f), _1))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        let _5 := mload(_4)\n                        let array := allocate_memory(array_allocation_size_bytes(_5))\n                        mstore(array, _5)\n                        if gt(add(add(_4, _5), _3), _1)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        for { } lt(i, _5) { i := add(i, _3) }\n                        {\n                            mstore(add(add(array, i), _3), mload(add(add(_4, i), _3)))\n                        }\n                        mstore(add(add(array, _5), _3), /** @src -1:-1:-1 */ 0)\n                        /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                        if /** @src 42:2263:2297  \"newImplementation.code.length == 0\" */ iszero(/** @src 42:2263:2292  \"newImplementation.code.length\" */ extcodesize(value))\n                        /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                        {\n                            /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                            let _6 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                            /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                            mstore(_6, shl(224, 0x4c9c8ce3))\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            mstore(/** @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ add(_6, 4), /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ _2)\n                            /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                            revert(_6, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                        }\n                        /// @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _7 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        sstore(_7, or(and(sload(_7), not(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ sub(shl(160, 1), 1))), /** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2))\n                        /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                        let _8 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                        /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                        log2(/** @src -1:-1:-1 */ 0, 0, /** @src 42:2922:2949  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _2)\n                        /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                        switch /** @src 42:2964:2979  \"data.length > 0\" */ iszero(iszero(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 42:2964:2975  \"data.length\" */ array)))\n                        case /** @src 42:2960:3108  \"if (data.length > 0) {...\" */ 0 {\n                            /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                            if /** @src 42:6648:6661  \"msg.value > 0\" */ iszero(iszero(/** @src 42:6648:6657  \"msg.value\" */ callvalue()))\n                            /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                            {\n                                /// @src 42:6684:6703  \"ERC1967NonPayable()\"\n                                mstore(_8, shl(224, 0xb398979f))\n                                revert(_8, 4)\n                            }\n                        }\n                        default /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                        {\n                            /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                            let expr_component := delegatecall(gas(), value, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ add(array, _3), /** @src 53:4255:4280  \"target.delegatecall(data)\" */ mload(array), /** @src -1:-1:-1 */ 0, 0)\n                            /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                            let data := /** @src -1:-1:-1 */ 0\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            switch returndatasize()\n                            case 0 { data := 96 }\n                            default {\n                                let _9 := returndatasize()\n                                let memPtr := allocate_memory(array_allocation_size_bytes(_9))\n                                mstore(memPtr, _9)\n                                data := memPtr\n                                returndatacopy(add(memPtr, _3), /** @src -1:-1:-1 */ 0, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ returndatasize())\n                            }\n                            /// @src 53:4297:4352  \"verifyCallResultFromTarget(target, success, returndata)\"\n                            pop(fun_verifyCallResultFromTarget(value, expr_component, /** @src 53:4255:4280  \"target.delegatecall(data)\" */ data))\n                        }\n                        /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        let _10 := mload(64)\n                        let _11 := datasize(\"ERC1967Proxy_49452_deployed\")\n                        codecopy(_10, dataoffset(\"ERC1967Proxy_49452_deployed\"), _11)\n                        return(_10, _11)\n                    }\n                    function allocate_memory(size) -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 53:4793:5201  \"if (!success) {...\"\n                        switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                                mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                            }\n                            /// @src 53:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 53:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                                /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 53:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                }\n                /// @use-src 41:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 42:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 43:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\"\n                object \"ERC1967Proxy_49452_deployed\" {\n                    code {\n                        {\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            mstore(64, 128)\n                            /// @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                            let value := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 43:1019:1838  \"assembly {...\"\n                            calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 43:1019:1838  \"assembly {...\" */ calldatasize())\n                            let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ _1, /** @src 43:1019:1838  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                            /// @src 43:1019:1838  \"assembly {...\"\n                            returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 43:1019:1838  \"assembly {...\" */ returndatasize())\n                            switch usr$result\n                            case 0 {\n                                revert(/** @src -1:-1:-1 */ _1, /** @src 43:1019:1838  \"assembly {...\" */ returndatasize())\n                            }\n                            default {\n                                return(/** @src -1:-1:-1 */ _1, /** @src 43:1019:1838  \"assembly {...\" */ returndatasize())\n                            }\n                        }\n                    }\n                    data \".metadata\" hex\"a164736f6c6343000815000a\"\n                }\n            }\n            /// @use-src 24:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 27:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\", 29:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 31:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\", 32:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 33:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\", 34:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 35:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 38:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 39:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 40:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 49:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 51:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\", 60:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 72:\"src/ZFI/ZFIToken.sol\", 81:\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\"\n            object \"ZFIToken_58326\" {\n                code {\n                    {\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := memoryguard(0xa0)\n                        mstore(64, _1)\n                        if callvalue() { revert(0, 0) }\n                        /// @src 26:1163:1176  \"address(this)\"\n                        mstore(128, /** @src 26:1171:1175  \"this\" */ address())\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _2 := datasize(\"ZFIToken_58326_deployed\")\n                        codecopy(_1, dataoffset(\"ZFIToken_58326_deployed\"), _2)\n                        setimmutable(_1, \"47263\", mload(/** @src 26:1163:1176  \"address(this)\" */ 128))\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        return(_1, _2)\n                    }\n                }\n                /// @use-src 24:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 27:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\", 29:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 31:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\", 32:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 33:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\", 34:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 42:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 58:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 59:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 72:\"src/ZFI/ZFIToken.sol\", 81:\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\"\n                object \"ZFIToken_58326_deployed\" {\n                    code {\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := memoryguard(0x80)\n                            mstore(64, _1)\n                            if iszero(lt(calldatasize(), 4))\n                            {\n                                switch shr(224, calldataload(0))\n                                case 0x01ffc9a7 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    let value := calldataload(4)\n                                    let _2 := and(value, shl(224, 0xffffffff))\n                                    if iszero(eq(value, _2)) { revert(0, 0) }\n                                    /// @src 24:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                    let expr := /** @src 24:3551:3598  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2, /** @src 24:3566:3598  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                                    /// @src 24:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                    if iszero(expr)\n                                    {\n                                        expr := /** @src 34:1133:1173  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 34:1148:1173  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                    }\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(_1, iszero(iszero(expr)))\n                                    return(_1, 32)\n                                }\n                                case 0x06fdde03 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPtr := mload(64)\n                                    let ret := 0\n                                    /// @src 27:3141:3148  \"$._name\"\n                                    let _3 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let slotValue := sload(/** @src 27:3141:3148  \"$._name\" */ _3)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let length := extract_byte_array_length(slotValue)\n                                    mstore(memPtr, length)\n                                    let _4 := 0x20\n                                    let _5 := 1\n                                    switch and(slotValue, _5)\n                                    case 0 {\n                                        mstore(add(memPtr, _4), and(slotValue, not(255)))\n                                        ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _4)\n                                    }\n                                    case 1 {\n                                        mstore(0, /** @src 27:3141:3148  \"$._name\" */ _3)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dataPos := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                        let i := 0\n                                        for { } lt(i, length) { i := add(i, _4) }\n                                        {\n                                            mstore(add(add(memPtr, i), _4), sload(dataPos))\n                                            dataPos := add(dataPos, _5)\n                                        }\n                                        ret := add(add(memPtr, i), _4)\n                                    }\n                                    finalize_allocation(memPtr, sub(ret, memPtr))\n                                    let memPos := mload(64)\n                                    mstore(memPos, _4)\n                                    return(memPos, sub(abi_encode_string(memPtr, add(memPos, _4)), memPos))\n                                }\n                                case 0x095ea7b3 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value0 := abi_decode_address()\n                                    /// @src 27:10380:10384  \"true\"\n                                    fun_approve(/** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 27:10380:10384  \"true\" */ value0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                    let memPos_1 := mload(64)\n                                    mstore(memPos_1, 1)\n                                    return(memPos_1, 32)\n                                }\n                                case 0x18160ddd {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let _6 := sload(/** @src 27:4322:4336  \"$._totalSupply\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let memPos_2 := mload(64)\n                                    mstore(memPos_2, _6)\n                                    return(memPos_2, 32)\n                                }\n                                case 0x23b872dd {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                    let value0_1 := abi_decode_address()\n                                    let value1 := abi_decode_address_31541()\n                                    /// @src 32:2281:2353  \"modifier whenNotPaused() {...\"\n                                    fun_requireNotPaused()\n                                    /// @src 32:2345:2346  \"_\"\n                                    let _7 := fun_transferFrom_inner(value0_1, value1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(68))\n                                    let memPos_3 := mload(64)\n                                    mstore(memPos_3, iszero(iszero(_7)))\n                                    return(memPos_3, 32)\n                                }\n                                case 0x248a9ca3 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    mstore(0, calldataload(4))\n                                    mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _8 := sload(/** @src 24:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1))\n                                    let memPos_4 := mload(64)\n                                    mstore(memPos_4, _8)\n                                    return(memPos_4, 32)\n                                }\n                                case 0x26dcff15 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    let value0_2 := abi_decode_address()\n                                    let _9 := sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let value_1 := and(_9, 0xffffffffffffffff)\n                                    /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                    let expr_1 := /** @src 25:4726:4742  \"initialized == 0\" */ iszero(value_1)\n                                    /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                    if expr_1\n                                    {\n                                        expr_1 := /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                    }\n                                    /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                    let expr_2 := /** @src 25:4790:4806  \"initialized == 1\" */ eq(value_1, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                    /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                    if expr_2\n                                    {\n                                        expr_2 := /** @src 25:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 25:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 25:4818:4822  \"this\" */ address()))\n                                    }\n                                    /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                    let expr_3 := /** @src 25:4855:4868  \"!initialSetup\" */ iszero(expr_1)\n                                    /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                    if expr_3\n                                    {\n                                        expr_3 := /** @src 25:4872:4885  \"!construction\" */ iszero(expr_2)\n                                    }\n                                    /// @src 25:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                    if expr_3\n                                    {\n                                        /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                        let _10 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                        mstore(_10, shl(224, 0xf92ee8a9))\n                                        revert(_10, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    let _11 := not(0xffffffffffffffff)\n                                    sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_9, _11), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                    /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                    if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                    /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_9, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                    }\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation_49957(memPtr_1)\n                                    mstore(memPtr_1, 10)\n                                    mstore(add(memPtr_1, 32), \"Zyfi Token\")\n                                    let memPtr_2 := mload(64)\n                                    finalize_allocation_49957(memPtr_2)\n                                    mstore(memPtr_2, 3)\n                                    mstore(add(memPtr_2, 32), \"ZFI\")\n                                    let _12 := sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let value_2 := and(_12, 0xffffffffffffffff)\n                                    /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                    let expr_4 := /** @src 25:4726:4742  \"initialized == 0\" */ iszero(value_2)\n                                    /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                    if expr_4\n                                    {\n                                        expr_4 := /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                    }\n                                    /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                    let expr_5 := /** @src 25:4790:4806  \"initialized == 1\" */ eq(value_2, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                    /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                    if expr_5\n                                    {\n                                        expr_5 := /** @src 25:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 25:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 25:4818:4822  \"this\" */ address()))\n                                    }\n                                    /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                    let expr_6 := /** @src 25:4855:4868  \"!initialSetup\" */ iszero(expr_4)\n                                    /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                    if expr_6\n                                    {\n                                        expr_6 := /** @src 25:4872:4885  \"!construction\" */ iszero(expr_5)\n                                    }\n                                    /// @src 25:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                    if expr_6\n                                    {\n                                        /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                        let _13 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                        mstore(_13, shl(224, 0xf92ee8a9))\n                                        revert(_13, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_12, _11), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                    /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                    if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                    /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_12, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                    }\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let newLen := mload(memPtr_1)\n                                    if gt(newLen, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let _14 := extract_byte_array_length(sload(/** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_14, 31)\n                                    {\n                                        mstore(0, /** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let deleteStart := add(19393869656648957010684718629437485012893776189133053609402333970098045905584, shr(5, add(newLen, 31)))\n                                        if lt(newLen, 32)\n                                        {\n                                            deleteStart := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                        }\n                                        let start := deleteStart\n                                        for { }\n                                        lt(start, add(19393869656648957010684718629437485012893776189133053609402333970098045905584, shr(5, add(_14, 31))))\n                                        {\n                                            start := add(start, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start, 0) }\n                                    }\n                                    let srcOffset := 0\n                                    srcOffset := 32\n                                    switch gt(newLen, 31)\n                                    case 1 {\n                                        mstore(0, /** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                        let i_1 := 0\n                                        for { } lt(i_1, and(newLen, not(31))) { i_1 := add(i_1, 32) }\n                                        {\n                                            sstore(dstPtr, mload(add(memPtr_1, srcOffset)))\n                                            dstPtr := add(dstPtr, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset := add(srcOffset, 32)\n                                        }\n                                        if lt(and(newLen, not(31)), newLen)\n                                        {\n                                            let lastValue := mload(add(memPtr_1, srcOffset))\n                                            sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_3 := 0\n                                        if newLen\n                                        {\n                                            value_3 := mload(add(memPtr_1, srcOffset))\n                                        }\n                                        sstore(/** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen)))\n                                    }\n                                    let newLen_1 := mload(memPtr_2)\n                                    if gt(newLen_1, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let _15 := extract_byte_array_length(sload(/** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_15, 31)\n                                    {\n                                        mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let deleteStart_1 := add(31949013729812444881239907556254782105475912131904715391540824249639680385706, shr(5, add(newLen_1, 31)))\n                                        if lt(newLen_1, 32)\n                                        {\n                                            deleteStart_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                        }\n                                        let start_1 := deleteStart_1\n                                        for { }\n                                        lt(start_1, add(31949013729812444881239907556254782105475912131904715391540824249639680385706, shr(5, add(_15, 31))))\n                                        {\n                                            start_1 := add(start_1, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_1, 0) }\n                                    }\n                                    let srcOffset_1 := 0\n                                    srcOffset_1 := 32\n                                    switch gt(newLen_1, 31)\n                                    case 1 {\n                                        mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                        let i_2 := 0\n                                        for { } lt(i_2, and(newLen_1, not(31))) { i_2 := add(i_2, 32) }\n                                        {\n                                            sstore(dstPtr_1, mload(add(memPtr_2, srcOffset_1)))\n                                            dstPtr_1 := add(dstPtr_1, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_1 := add(srcOffset_1, 32)\n                                        }\n                                        if lt(and(newLen_1, not(31)), newLen_1)\n                                        {\n                                            let lastValue_1 := mload(add(memPtr_2, srcOffset_1))\n                                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_1), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_4 := 0\n                                        if newLen_1\n                                        {\n                                            value_4 := mload(add(memPtr_2, srcOffset_1))\n                                        }\n                                        sstore(/** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_4, not(shr(shl(3, newLen_1), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_1)))\n                                    }\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    /// @src 32:1237:1303  \"assembly {...\"\n                                    let _16 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 32:1237:1303  \"assembly {...\" */ _16, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 32:1237:1303  \"assembly {...\" */ _16), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)))\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let memPtr_3 := mload(64)\n                                    finalize_allocation_49957(memPtr_3)\n                                    mstore(memPtr_3, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(memPtr_3, 32), \"1\")\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let newLen_2 := mload(memPtr_1)\n                                    if gt(newLen_2, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let _17 := extract_byte_array_length(sload(/** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_17, 31)\n                                    {\n                                        mstore(0, /** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let deleteStart_2 := add(30158956085912968823615024008721865502849334730239338980345710057699140031869, shr(5, add(newLen_2, 31)))\n                                        if lt(newLen_2, 32)\n                                        {\n                                            deleteStart_2 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                        }\n                                        let start_2 := deleteStart_2\n                                        for { }\n                                        lt(start_2, add(30158956085912968823615024008721865502849334730239338980345710057699140031869, shr(5, add(_17, 31))))\n                                        {\n                                            start_2 := add(start_2, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_2, 0) }\n                                    }\n                                    let srcOffset_2 := 0\n                                    srcOffset_2 := 32\n                                    switch gt(newLen_2, 31)\n                                    case 1 {\n                                        mstore(0, /** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_2 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                        let i_3 := 0\n                                        for { } lt(i_3, and(newLen_2, not(31))) { i_3 := add(i_3, 32) }\n                                        {\n                                            sstore(dstPtr_2, mload(add(memPtr_1, srcOffset_2)))\n                                            dstPtr_2 := add(dstPtr_2, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_2 := add(srcOffset_2, 32)\n                                        }\n                                        if lt(and(newLen_2, not(31)), newLen_2)\n                                        {\n                                            let lastValue_2 := mload(add(memPtr_1, srcOffset_2))\n                                            sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_2), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_5 := 0\n                                        if newLen_2\n                                        {\n                                            value_5 := mload(add(memPtr_1, srcOffset_2))\n                                        }\n                                        sstore(/** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_5, not(shr(shl(3, newLen_2), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_2)))\n                                    }\n                                    let newLen_3 := mload(memPtr_3)\n                                    if gt(newLen_3, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let _18 := extract_byte_array_length(sload(/** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_18, 31)\n                                    {\n                                        mstore(0, /** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let deleteStart_3 := add(43246917397366557439122818263899697367203722805747902111665069041191356951413, shr(5, add(newLen_3, 31)))\n                                        if lt(newLen_3, 32)\n                                        {\n                                            deleteStart_3 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                        }\n                                        let _19 := add(43246917397366557439122818263899697367203722805747902111665069041191356951413, shr(5, add(_18, 31)))\n                                        let start_3 := deleteStart_3\n                                        for { }\n                                        lt(start_3, _19)\n                                        {\n                                            start_3 := add(start_3, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_3, 0) }\n                                    }\n                                    let srcOffset_3 := 0\n                                    srcOffset_3 := 32\n                                    switch gt(newLen_3, 31)\n                                    case 1 {\n                                        let loopEnd := and(newLen_3, not(31))\n                                        mstore(0, /** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_3 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                        let i_4 := 0\n                                        for { } lt(i_4, loopEnd) { i_4 := add(i_4, 32) }\n                                        {\n                                            sstore(dstPtr_3, mload(add(memPtr_3, srcOffset_3)))\n                                            dstPtr_3 := add(dstPtr_3, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_3 := add(srcOffset_3, 32)\n                                        }\n                                        if lt(loopEnd, newLen_3)\n                                        {\n                                            let lastValue_3 := mload(add(memPtr_3, srcOffset_3))\n                                            sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_3), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_6 := 0\n                                        if newLen_3\n                                        {\n                                            value_6 := mload(add(memPtr_3, srcOffset_3))\n                                        }\n                                        sstore(/** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_6, not(shr(shl(3, newLen_3), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_3)))\n                                    }\n                                    sstore(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                    sstore(/** @src 33:3902:3918  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    /// @src 81:1407:1449  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n                                    pop(fun_grantRole_31547(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                    /// @src 81:1459:1494  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n                                    pop(fun_grantRole_31548(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                    /// @src 81:1504:1539  \"_grantRole(MINTER_ROLE, msg.sender)\"\n                                    pop(fun_grantRole_31549(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                    /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                    if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                    /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                        /// @src 25:5142:5156  \"Initialized(1)\"\n                                        let _20 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_20, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        /// @src 25:5142:5156  \"Initialized(1)\"\n                                        log1(_20, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 25:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                    }\n                                    /// @src 72:432:474  \"_grantRole(DEFAULT_ADMIN_ROLE, _ONDEFYDAO)\"\n                                    pop(fun_grantRole_31547(value0_2))\n                                    /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                    if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                    /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                        /// @src 25:5142:5156  \"Initialized(1)\"\n                                        let _21 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_21, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        /// @src 25:5142:5156  \"Initialized(1)\"\n                                        log1(_21, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 25:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                    }\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x2f2ff15d {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value_7 := calldataload(4)\n                                    let value1_1 := abi_decode_address_31541()\n                                    mstore(0, value_7)\n                                    mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 24:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1)))\n                                    /// @src 24:5350:5375  \"_grantRole(role, account)\"\n                                    pop(fun_grantRole(value_7, value1_1))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x313ce567 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPos_5 := mload(64)\n                                    mstore(memPos_5, /** @src 27:4122:4124  \"18\" */ 0x12)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(memPos_5, 32)\n                                }\n                                case 0x3644e515 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    /// @src 33:4087:4117  \"return _buildDomainSeparator()\"\n                                    let var := /** @src 33:4094:4117  \"_buildDomainSeparator()\" */ fun_buildDomainSeparator()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let memPos_6 := mload(64)\n                                    mstore(memPos_6, var)\n                                    return(memPos_6, 32)\n                                }\n                                case 0x36568abe {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value1_2 := abi_decode_address_31541()\n                                    /// @src 24:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                                    if /** @src 24:6441:6475  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 24:6441:6475  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)), /** @src 30:966:976  \"msg.sender\" */ caller()))\n                                    /// @src 24:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                                    {\n                                        /// @src 24:6498:6528  \"AccessControlBadConfirmation()\"\n                                        let _22 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 24:6498:6528  \"AccessControlBadConfirmation()\"\n                                        mstore(_22, shl(225, 0x334bd919))\n                                        revert(_22, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    /// @src 24:6549:6586  \"_revokeRole(role, callerConfirmation)\"\n                                    pop(fun_revokeRole(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(4), /** @src 24:6549:6586  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x3f4ba83a {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole_31553()\n                                    /// @src 32:1237:1303  \"assembly {...\"\n                                    let _23 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _24 := sload(/** @src 32:1237:1303  \"assembly {...\" */ _23)\n                                    /// @src 32:3163:3225  \"if (!paused()) {...\"\n                                    if /** @src 32:3167:3176  \"!paused()\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(_24, 0xff))\n                                    /// @src 32:3163:3225  \"if (!paused()) {...\"\n                                    {\n                                        /// @src 32:3199:3214  \"ExpectedPause()\"\n                                        let _25 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 32:3199:3214  \"ExpectedPause()\"\n                                        mstore(_25, shl(224, 0x8dfc202b))\n                                        revert(_25, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    sstore(/** @src 32:1237:1303  \"assembly {...\" */ _23, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(_24, not(255)))\n                                    /// @src 32:3823:3845  \"Unpaused(_msgSender())\"\n                                    let _26 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_26, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 32:3823:3845  \"Unpaused(_msgSender())\"\n                                    log1(_26, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 32:3823:3845  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x40c10f19 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value0_3 := abi_decode_address()\n                                    let value_8 := calldataload(36)\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole_31555()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _27 := and(/** @src 27:9066:9087  \"account == address(0)\" */ value0_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 27:9062:9153  \"if (account == address(0)) {...\"\n                                    if /** @src 27:9066:9087  \"account == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _27)\n                                    /// @src 27:9062:9153  \"if (account == address(0)) {...\"\n                                    {\n                                        /// @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                        let _28 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                        mstore(_28, shl(224, 0xec442f05))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\" */ add(_28, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), 0)\n                                        /// @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                        revert(_28, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    /// @src 27:7761:7775  \"$._totalSupply\"\n                                    let _29 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _30 := sload(/** @src 27:7761:7775  \"$._totalSupply\" */ _29)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let sum := add(_30, value_8)\n                                    if gt(_30, sum)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(0, 36)\n                                    }\n                                    sstore(/** @src 27:7761:7775  \"$._totalSupply\" */ _29, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sum)\n                                    mstore(0, _27)\n                                    mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ 37439836327923360225337895871394760624280537466773280374265222508165906222592)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dataSlot := keccak256(0, 64)\n                                    sstore(dataSlot, add(sload(/** @src 27:8557:8581  \"$._balances[to] += value\" */ dataSlot), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ value_8))\n                                    /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                    let _31 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_31, value_8)\n                                    /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                    log3(_31, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ _27)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x42966c68 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    /// @src 28:1005:1010  \"value\"\n                                    fun_burn(/** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(4))\n                                    return(0, 0)\n                                }\n                                case 0x4cd88b76 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let offset := calldataload(4)\n                                    let _32 := 0xffffffffffffffff\n                                    if gt(offset, _32) { revert(0, 0) }\n                                    let value0_4 := abi_decode_string(add(4, offset), calldatasize())\n                                    let offset_1 := calldataload(36)\n                                    if gt(offset_1, _32) { revert(0, 0) }\n                                    let value1_3 := abi_decode_string(add(4, offset_1), calldatasize())\n                                    /// @src 25:8837:8901  \"assembly {...\"\n                                    let _33 := 108904022758810753673719992590105913556127789646572562039383141376366747609600\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _34 := sload(/** @src 25:8837:8901  \"assembly {...\" */ _33)\n                                    /// @src 25:4301:4317  \"!$._initializing\"\n                                    let _35 := iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _34), 0xff))\n                                    let value_9 := and(_34, _32)\n                                    /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                    let expr_7 := /** @src 25:4726:4742  \"initialized == 0\" */ iszero(value_9)\n                                    /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                    if expr_7 { expr_7 := _35 }\n                                    /// @src 25:4805:4806  \"1\"\n                                    let _36 := 0x01\n                                    /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                    let expr_8 := /** @src 25:4790:4806  \"initialized == 1\" */ eq(value_9, /** @src 25:4805:4806  \"1\" */ _36)\n                                    /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                    if expr_8\n                                    {\n                                        expr_8 := /** @src 25:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 25:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 25:4818:4822  \"this\" */ address()))\n                                    }\n                                    /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                    let expr_9 := /** @src 25:4855:4868  \"!initialSetup\" */ iszero(expr_7)\n                                    /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                    if expr_9\n                                    {\n                                        expr_9 := /** @src 25:4872:4885  \"!construction\" */ iszero(expr_8)\n                                    }\n                                    /// @src 25:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                    if expr_9\n                                    {\n                                        /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                        let _37 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                        mstore(_37, shl(224, 0xf92ee8a9))\n                                        revert(_37, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    sstore(/** @src 25:8837:8901  \"assembly {...\" */ _33, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_34, not(0xffffffffffffffff)), /** @src 25:4805:4806  \"1\" */ _36))\n                                    /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                    if _35\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ _33, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_34, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                    }\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let newLen_4 := mload(value0_4)\n                                    if gt(newLen_4, _32)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 36)\n                                    }\n                                    /// @src 27:2895:2902  \"$._name\"\n                                    let _38 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _39 := extract_byte_array_length(sload(/** @src 27:2895:2902  \"$._name\" */ _38))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _40 := 31\n                                    if gt(_39, _40)\n                                    {\n                                        mstore(0, /** @src 27:2895:2902  \"$._name\" */ _38)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _41 := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                        let deleteStart_4 := add(_41, shr(5, add(newLen_4, _40)))\n                                        if lt(newLen_4, 32) { deleteStart_4 := _41 }\n                                        let _42 := add(_41, shr(5, add(_39, _40)))\n                                        let start_4 := deleteStart_4\n                                        for { }\n                                        lt(start_4, _42)\n                                        {\n                                            start_4 := add(start_4, /** @src 25:4805:4806  \"1\" */ _36)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_4, 0) }\n                                    }\n                                    let srcOffset_4 := 0\n                                    srcOffset_4 := 32\n                                    switch gt(newLen_4, _40)\n                                    case 1 {\n                                        let loopEnd_1 := and(newLen_4, not(31))\n                                        mstore(0, /** @src 27:2895:2902  \"$._name\" */ _38)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_4 := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                        let i_5 := 0\n                                        for { } lt(i_5, loopEnd_1) { i_5 := add(i_5, 32) }\n                                        {\n                                            sstore(dstPtr_4, mload(add(value0_4, srcOffset_4)))\n                                            dstPtr_4 := add(dstPtr_4, /** @src 25:4805:4806  \"1\" */ _36)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_4 := add(srcOffset_4, 32)\n                                        }\n                                        if lt(loopEnd_1, newLen_4)\n                                        {\n                                            let lastValue_4 := mload(add(value0_4, srcOffset_4))\n                                            sstore(dstPtr_4, and(lastValue_4, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 27:2895:2902  \"$._name\" */ _38, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), /** @src 25:4805:4806  \"1\" */ _36))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_10 := 0\n                                        if newLen_4\n                                        {\n                                            value_10 := mload(add(value0_4, srcOffset_4))\n                                        }\n                                        sstore(/** @src 27:2895:2902  \"$._name\" */ _38, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_10, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4)))\n                                    }\n                                    let newLen_5 := mload(value1_3)\n                                    if gt(newLen_5, _32)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 36)\n                                    }\n                                    /// @src 27:2920:2929  \"$._symbol\"\n                                    let _43 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _44 := extract_byte_array_length(sload(/** @src 27:2920:2929  \"$._symbol\" */ _43))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_44, _40)\n                                    {\n                                        mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ _43)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _45 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                        let deleteStart_5 := add(_45, shr(5, add(newLen_5, _40)))\n                                        if lt(newLen_5, 32) { deleteStart_5 := _45 }\n                                        let _46 := add(_45, shr(5, add(_44, _40)))\n                                        let start_5 := deleteStart_5\n                                        for { }\n                                        lt(start_5, _46)\n                                        {\n                                            start_5 := add(start_5, /** @src 25:4805:4806  \"1\" */ _36)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_5, 0) }\n                                    }\n                                    let srcOffset_5 := 0\n                                    srcOffset_5 := 32\n                                    switch gt(newLen_5, _40)\n                                    case 1 {\n                                        let loopEnd_2 := and(newLen_5, not(31))\n                                        mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ _43)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_5 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                        let i_6 := 0\n                                        for { } lt(i_6, loopEnd_2) { i_6 := add(i_6, 32) }\n                                        {\n                                            sstore(dstPtr_5, mload(add(value1_3, srcOffset_5)))\n                                            dstPtr_5 := add(dstPtr_5, /** @src 25:4805:4806  \"1\" */ _36)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_5 := add(srcOffset_5, 32)\n                                        }\n                                        if lt(loopEnd_2, newLen_5)\n                                        {\n                                            let lastValue_5 := mload(add(value1_3, srcOffset_5))\n                                            sstore(dstPtr_5, and(lastValue_5, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 27:2920:2929  \"$._symbol\" */ _43, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), /** @src 25:4805:4806  \"1\" */ _36))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_11 := 0\n                                        if newLen_5\n                                        {\n                                            value_11 := mload(add(value1_3, srcOffset_5))\n                                        }\n                                        sstore(/** @src 27:2920:2929  \"$._symbol\" */ _43, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_11, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5)))\n                                    }\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    /// @src 32:1237:1303  \"assembly {...\"\n                                    let _47 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 32:1237:1303  \"assembly {...\" */ _47, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 32:1237:1303  \"assembly {...\" */ _47), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)))\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    fun_checkInitializing()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let memPtr_4 := mload(64)\n                                    finalize_allocation_49957(memPtr_4)\n                                    mstore(memPtr_4, /** @src 25:4805:4806  \"1\" */ _36)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(memPtr_4, 32), \"1\")\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let newLen_6 := mload(value0_4)\n                                    if gt(newLen_6, _32)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 36)\n                                    }\n                                    /// @src 33:3766:3773  \"$._name\"\n                                    let _48 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _49 := extract_byte_array_length(sload(/** @src 33:3766:3773  \"$._name\" */ _48))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_49, _40)\n                                    {\n                                        mstore(0, /** @src 33:3766:3773  \"$._name\" */ _48)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _50 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                        let deleteStart_6 := add(_50, shr(5, add(newLen_6, _40)))\n                                        if lt(newLen_6, 32) { deleteStart_6 := _50 }\n                                        let _51 := add(_50, shr(5, add(_49, _40)))\n                                        let start_6 := deleteStart_6\n                                        for { }\n                                        lt(start_6, _51)\n                                        {\n                                            start_6 := add(start_6, /** @src 25:4805:4806  \"1\" */ _36)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_6, 0) }\n                                    }\n                                    let srcOffset_6 := 0\n                                    srcOffset_6 := 32\n                                    switch gt(newLen_6, _40)\n                                    case 1 {\n                                        let loopEnd_3 := and(newLen_6, not(31))\n                                        mstore(0, /** @src 33:3766:3773  \"$._name\" */ _48)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_6 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                        let i_7 := 0\n                                        for { } lt(i_7, loopEnd_3) { i_7 := add(i_7, 32) }\n                                        {\n                                            sstore(dstPtr_6, mload(add(value0_4, srcOffset_6)))\n                                            dstPtr_6 := add(dstPtr_6, /** @src 25:4805:4806  \"1\" */ _36)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_6 := add(srcOffset_6, 32)\n                                        }\n                                        if lt(loopEnd_3, newLen_6)\n                                        {\n                                            let lastValue_6 := mload(add(value0_4, srcOffset_6))\n                                            sstore(dstPtr_6, and(lastValue_6, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 33:3766:3773  \"$._name\" */ _48, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), /** @src 25:4805:4806  \"1\" */ _36))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_12 := 0\n                                        if newLen_6\n                                        {\n                                            value_12 := mload(add(value0_4, srcOffset_6))\n                                        }\n                                        sstore(/** @src 33:3766:3773  \"$._name\" */ _48, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_12, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6)))\n                                    }\n                                    let newLen_7 := mload(memPtr_4)\n                                    if gt(newLen_7, _32)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 36)\n                                    }\n                                    /// @src 33:3790:3800  \"$._version\"\n                                    let _52 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _53 := extract_byte_array_length(sload(/** @src 33:3790:3800  \"$._version\" */ _52))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if gt(_53, _40)\n                                    {\n                                        mstore(0, /** @src 33:3790:3800  \"$._version\" */ _52)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _54 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                        let deleteStart_7 := add(_54, shr(5, add(newLen_7, _40)))\n                                        if lt(newLen_7, 32) { deleteStart_7 := _54 }\n                                        let _55 := add(_54, shr(5, add(_53, _40)))\n                                        let start_7 := deleteStart_7\n                                        for { }\n                                        lt(start_7, _55)\n                                        {\n                                            start_7 := add(start_7, /** @src 25:4805:4806  \"1\" */ _36)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        { sstore(start_7, 0) }\n                                    }\n                                    let srcOffset_7 := 0\n                                    srcOffset_7 := 32\n                                    switch gt(newLen_7, _40)\n                                    case 1 {\n                                        let loopEnd_4 := and(newLen_7, not(31))\n                                        mstore(0, /** @src 33:3790:3800  \"$._version\" */ _52)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dstPtr_7 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                        let i_8 := 0\n                                        for { } lt(i_8, loopEnd_4) { i_8 := add(i_8, 32) }\n                                        {\n                                            sstore(dstPtr_7, mload(add(memPtr_4, srcOffset_7)))\n                                            dstPtr_7 := add(dstPtr_7, /** @src 25:4805:4806  \"1\" */ _36)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            srcOffset_7 := add(srcOffset_7, 32)\n                                        }\n                                        if lt(loopEnd_4, newLen_7)\n                                        {\n                                            let lastValue_7 := mload(add(memPtr_4, srcOffset_7))\n                                            sstore(dstPtr_7, and(lastValue_7, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 33:3790:3800  \"$._version\" */ _52, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), /** @src 25:4805:4806  \"1\" */ _36))\n                                    }\n                                    default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    {\n                                        let value_13 := 0\n                                        if newLen_7\n                                        {\n                                            value_13 := mload(add(memPtr_4, srcOffset_7))\n                                        }\n                                        sstore(/** @src 33:3790:3800  \"$._version\" */ _52, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_13, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7)))\n                                    }\n                                    sstore(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                    sstore(/** @src 33:3902:3918  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                    /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                    fun_checkInitializing()\n                                    /// @src 81:1407:1449  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n                                    pop(fun_grantRole_31547(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                    /// @src 81:1459:1494  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n                                    pop(fun_grantRole_31548(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                    /// @src 81:1504:1539  \"_grantRole(MINTER_ROLE, msg.sender)\"\n                                    pop(fun_grantRole_31549(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                    /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                    if _35\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ _33, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 25:8837:8901  \"assembly {...\" */ _33), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                        /// @src 25:5142:5156  \"Initialized(1)\"\n                                        let _56 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_56, /** @src 25:4805:4806  \"1\" */ _36)\n                                        /// @src 25:5142:5156  \"Initialized(1)\"\n                                        log1(_56, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 25:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                    }\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x4f1ef286 {\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value0_5 := abi_decode_address()\n                                    let offset_2 := calldataload(36)\n                                    if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                    if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                                    let array := abi_decode_available_length_string(add(offset_2, 36), calldataload(add(4, offset_2)), calldatasize())\n                                    let _57 := sub(shl(160, 1), 1)\n                                    /// @src 26:4671:4694  \"address(this) == __self\"\n                                    let _58 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 26:4688:4694  \"__self\" */ loadimmutable(\"47263\"), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57)\n                                    /// @src 26:4671:4791  \"address(this) == __self || // Must be called through delegatecall...\"\n                                    let expr_10 := /** @src 26:4671:4694  \"address(this) == __self\" */ eq(/** @src 26:4679:4683  \"this\" */ address(), /** @src 26:4671:4694  \"address(this) == __self\" */ _58)\n                                    /// @src 26:4671:4791  \"address(this) == __self || // Must be called through delegatecall...\"\n                                    if iszero(expr_10)\n                                    {\n                                        expr_10 := /** @src 26:4749:4791  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57), /** @src 26:4749:4791  \"ERC1967Utils.getImplementation() != __self\" */ _58))\n                                    }\n                                    /// @src 26:4654:4905  \"if (...\"\n                                    if expr_10\n                                    {\n                                        /// @src 26:4865:4894  \"UUPSUnauthorizedCallContext()\"\n                                        let _59 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 26:4865:4894  \"UUPSUnauthorizedCallContext()\"\n                                        mstore(_59, shl(225, 0x703e46dd))\n                                        revert(_59, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole_31562()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _60 := and(/** @src 26:6151:6187  \"IERC1822Proxiable(newImplementation)\" */ value0_5, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57)\n                                    /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    let _61 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    mstore(_61, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(224, 0x52d1902d))\n                                    let _62 := 32\n                                    /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    let trySuccessCondition := staticcall(gas(), _60, _61, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4, /** @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _61, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62)\n                                    /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    let expr_11 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0\n                                    /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    if trySuccessCondition\n                                    {\n                                        let _63 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        if gt(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62, /** @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _63 := returndatasize() }\n                                        finalize_allocation(_61, _63)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if slt(sub(/** @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_61, _63), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _61), _62) { revert(0, 0) }\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        expr_11 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_61)\n                                    }\n                                    /// @src 26:6147:6584  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                                    switch iszero(trySuccessCondition)\n                                    case 0 {\n                                        /// @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                                        let _64 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                                        /// @src 26:6241:6361  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                                        if /** @src 26:6245:6285  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_11, /** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64))\n                                        /// @src 26:6241:6361  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                                        {\n                                            /// @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                            let _65 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                            mstore(_65, shl(226, 0x2a875269))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\" */ add(_65, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), expr_11)\n                                            /// @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                            revert(_65, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                        /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                                        if /** @src 42:2263:2297  \"newImplementation.code.length == 0\" */ iszero(/** @src 42:2263:2292  \"newImplementation.code.length\" */ extcodesize(value0_5))\n                                        /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                                        {\n                                            /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                            let _66 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                            mstore(_66, shl(224, 0x4c9c8ce3))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ add(_66, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _60)\n                                            /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                            revert(_66, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                        sstore(/** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(sload(/** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _60))\n                                        /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                                        let _67 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                                        log2(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, 0, /** @src 42:2922:2949  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _60)\n                                        /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                                        switch /** @src 42:2964:2979  \"data.length > 0\" */ iszero(iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 42:2964:2975  \"data.length\" */ array)))\n                                        case /** @src 42:2960:3108  \"if (data.length > 0) {...\" */ 0 {\n                                            /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                                            if /** @src 42:6648:6661  \"msg.value > 0\" */ iszero(iszero(/** @src 42:6648:6657  \"msg.value\" */ callvalue()))\n                                            /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                                            {\n                                                /// @src 42:6684:6703  \"ERC1967NonPayable()\"\n                                                mstore(_67, shl(224, 0xb398979f))\n                                                revert(_67, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                            }\n                                        }\n                                        default /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                                        {\n                                            /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                                            let expr_component := delegatecall(gas(), value0_5, add(array, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62), /** @src 53:4255:4280  \"target.delegatecall(data)\" */ mload(array), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, 0)\n                                            /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                                            let data := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0\n                                            switch returndatasize()\n                                            case 0 { data := 96 }\n                                            default {\n                                                let _68 := returndatasize()\n                                                let _69 := array_allocation_size_string(_68)\n                                                let memPtr_5 := mload(64)\n                                                finalize_allocation(memPtr_5, _69)\n                                                mstore(memPtr_5, _68)\n                                                data := memPtr_5\n                                                returndatacopy(add(memPtr_5, _62), 0, returndatasize())\n                                            }\n                                            /// @src 53:4297:4352  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                            pop(fun_verifyCallResultFromTarget(value0_5, expr_component, /** @src 53:4255:4280  \"target.delegatecall(data)\" */ data))\n                                        }\n                                    }\n                                    default /// @src 26:6147:6584  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                                    {\n                                        /// @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                        let _70 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                        mstore(_70, /** @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\" */ add(_70, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _60)\n                                        /// @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                        revert(_70, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    return(0, 0)\n                                }\n                                case 0x52d1902d {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    /// @src 26:5090:5235  \"if (address(this) != __self) {...\"\n                                    if /** @src 26:5094:5117  \"address(this) != __self\" */ iszero(eq(/** @src 26:5102:5106  \"this\" */ address(), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 26:5111:5117  \"__self\" */ loadimmutable(\"47263\"), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))))\n                                    /// @src 26:5090:5235  \"if (address(this) != __self) {...\"\n                                    {\n                                        /// @src 26:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                        let _71 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 26:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                        mstore(_71, /** @src 26:4865:4894  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                                        /// @src 26:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                        revert(_71, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                    let memPos_7 := mload(64)\n                                    mstore(memPos_7, /** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(memPos_7, 32)\n                                }\n                                case 0x5a47a1a7 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    let value_14 := calldataload(4)\n                                    let _72 := iszero(iszero(value_14))\n                                    if iszero(eq(value_14, _72)) { revert(0, 0) }\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole_31562()\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let value_15 := and(sload(0), not(255))\n                                    sstore(0, or(value_15, and(_72, 255)))\n                                    /// @src 81:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\"\n                                    let _73 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_73, _72)\n                                    /// @src 81:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\"\n                                    log1(_73, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 81:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\" */ 0xcfea93b2060af4c4737eb6d7b0d85428b120e6613299f9b6d7703a689c81d0dc)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x5c975abb {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let value_16 := and(sload(/** @src 32:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff)\n                                    let memPos_8 := mload(64)\n                                    mstore(memPos_8, iszero(iszero(value_16)))\n                                    return(memPos_8, 32)\n                                }\n                                case 0x63ac5d97 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPos_9 := mload(64)\n                                    mstore(memPos_9, /** @src 81:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(memPos_9, 32)\n                                }\n                                case 0x70a08231 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 27:2326:2389  \"assembly {...\" */ 37439836327923360225337895871394760624280537466773280374265222508165906222592)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _74 := sload(keccak256(0, 64))\n                                    let memPos_10 := mload(64)\n                                    mstore(memPos_10, _74)\n                                    return(memPos_10, 32)\n                                }\n                                case 0x79cc6790 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value0_6 := abi_decode_address()\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole_31555()\n                                    /// @src 81:3752:3758  \"amount\"\n                                    fun_burn(value0_6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                    return(0, 0)\n                                }\n                                case 0x7ecebe00 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                    mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 31:972:1036  \"assembly {...\" */ 41026498920877473550552694860415970151284396403628511442111957027090812156672)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _75 := sload(keccak256(0, 64))\n                                    let memPos_11 := mload(64)\n                                    mstore(memPos_11, _75)\n                                    return(memPos_11, 32)\n                                }\n                                case 0x8456cb59 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole_31553()\n                                    /// @src 32:2281:2353  \"modifier whenNotPaused() {...\"\n                                    fun_requireNotPaused()\n                                    /// @src 32:1237:1303  \"assembly {...\"\n                                    let _76 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 32:1237:1303  \"assembly {...\" */ _76, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(sload(/** @src 32:1237:1303  \"assembly {...\" */ _76), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)), /** @src 32:3496:3500  \"true\" */ 0x01))\n                                    /// @src 32:3515:3535  \"Paused(_msgSender())\"\n                                    let _77 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_77, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 32:3515:3535  \"Paused(_msgSender())\"\n                                    log1(_77, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 32:3515:3535  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0x84b0196e {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    /// @src 33:5777:5820  \"$._hashedName == 0 && $._hashedVersion == 0\"\n                                    let expr_12 := /** @src 33:5777:5795  \"$._hashedName == 0\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600))\n                                    /// @src 33:5777:5820  \"$._hashedName == 0 && $._hashedVersion == 0\"\n                                    if expr_12\n                                    {\n                                        expr_12 := /** @src 33:5799:5820  \"$._hashedVersion == 0\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 33:5799:5815  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101))\n                                    }\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if iszero(expr_12)\n                                    {\n                                        let memPtr_6 := mload(64)\n                                        mstore(memPtr_6, shl(229, 4594637))\n                                        mstore(add(memPtr_6, 4), 32)\n                                        mstore(add(memPtr_6, 36), 21)\n                                        mstore(add(memPtr_6, 68), \"EIP712: Uninitialized\")\n                                        revert(memPtr_6, 100)\n                                    }\n                                    let converted := copy_array_from_storage_to_memory_string()\n                                    let converted_1 := copy_array_from_storage_to_memory_string_31571()\n                                    let memPtr_7 := mload(64)\n                                    let _78 := 0x20\n                                    let newFreePtr := add(memPtr_7, _78)\n                                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_7))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    mstore(memPtr_7, 0)\n                                    let memPos_12 := mload(64)\n                                    mstore(memPos_12, shl(248, 15))\n                                    mstore(add(memPos_12, _78), 224)\n                                    let tail := abi_encode_string(converted, add(memPos_12, 224))\n                                    mstore(add(memPos_12, 64), sub(tail, memPos_12))\n                                    let tail_1 := abi_encode_string(converted_1, tail)\n                                    mstore(add(memPos_12, 96), /** @src 33:5965:5978  \"block.chainid\" */ chainid())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(memPos_12, 128), /** @src 33:6000:6004  \"this\" */ address())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(memPos_12, 160), 0)\n                                    mstore(add(memPos_12, 192), sub(tail_1, memPos_12))\n                                    let pos := tail_1\n                                    let length_1 := mload(memPtr_7)\n                                    mstore(tail_1, length_1)\n                                    pos := add(tail_1, _78)\n                                    let srcPtr := newFreePtr\n                                    let i_9 := 0\n                                    for { } lt(i_9, length_1) { i_9 := add(i_9, 1) }\n                                    {\n                                        mstore(pos, mload(srcPtr))\n                                        pos := add(pos, _78)\n                                        srcPtr := add(srcPtr, _78)\n                                    }\n                                    return(memPos_12, sub(pos, memPos_12))\n                                }\n                                case 0x91d14854 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value1_4 := abi_decode_address_31541()\n                                    mstore(0, calldataload(4))\n                                    mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _79 := keccak256(0, 64)\n                                    mstore(0, and(value1_4, sub(shl(160, 1), 1)))\n                                    mstore(32, _79)\n                                    let value_17 := and(sload(keccak256(0, 64)), 0xff)\n                                    let memPos_13 := mload(64)\n                                    mstore(memPos_13, iszero(iszero(value_17)))\n                                    return(memPos_13, 32)\n                                }\n                                case 0x95d89b41 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPtr_8 := mload(64)\n                                    let ret_1 := 0\n                                    /// @src 27:3400:3409  \"$._symbol\"\n                                    let _80 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let slotValue_1 := sload(/** @src 27:3400:3409  \"$._symbol\" */ _80)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let length_2 := extract_byte_array_length(slotValue_1)\n                                    mstore(memPtr_8, length_2)\n                                    let _81 := 0x20\n                                    let _82 := 1\n                                    switch and(slotValue_1, _82)\n                                    case 0 {\n                                        mstore(add(memPtr_8, _81), and(slotValue_1, not(255)))\n                                        ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_2)))), _81)\n                                    }\n                                    case 1 {\n                                        mstore(0, /** @src 27:3400:3409  \"$._symbol\" */ _80)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dataPos_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                        let i_10 := 0\n                                        for { } lt(i_10, length_2) { i_10 := add(i_10, _81) }\n                                        {\n                                            mstore(add(add(memPtr_8, i_10), _81), sload(dataPos_1))\n                                            dataPos_1 := add(dataPos_1, _82)\n                                        }\n                                        ret_1 := add(add(memPtr_8, i_10), _81)\n                                    }\n                                    finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                                    let memPos_14 := mload(64)\n                                    mstore(memPos_14, _81)\n                                    return(memPos_14, sub(abi_encode_string(memPtr_8, add(memPos_14, _81)), memPos_14))\n                                }\n                                case 0xa217fddf {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPos_15 := mload(64)\n                                    mstore(memPos_15, 0)\n                                    return(memPos_15, 32)\n                                }\n                                case 0xa9059cbb {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value0_7 := abi_decode_address()\n                                    /// @src 32:2281:2353  \"modifier whenNotPaused() {...\"\n                                    fun_requireNotPaused()\n                                    /// @src 81:2448:2686  \"if (_inPrivateTransferMode) {...\"\n                                    if /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(0), 0xff)\n                                    /// @src 81:2448:2686  \"if (_inPrivateTransferMode) {...\"\n                                    {\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(0, /** @src 81:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _83 := keccak256(0, 64)\n                                        mstore(0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(32, _83)\n                                        if iszero(and(sload(keccak256(0, 64)), 0xff))\n                                        {\n                                            let memPtr_9 := mload(64)\n                                            mstore(memPtr_9, shl(229, 4594637))\n                                            revert(memPtr_9, sub(abi_encode_stringliteral(add(memPtr_9, 4)), memPtr_9))\n                                        }\n                                    }\n                                    /// @src 27:4911:4916  \"value\"\n                                    fun_transfer(/** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 27:4911:4916  \"value\" */ value0_7, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                    let memPos_16 := mload(64)\n                                    mstore(memPos_16, 1)\n                                    return(memPos_16, 32)\n                                }\n                                case 0xad3cb1cc {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPtr_10 := mload(64)\n                                    finalize_allocation_49957(memPtr_10)\n                                    mstore(memPtr_10, 5)\n                                    mstore(add(memPtr_10, 32), \"5.0.0\")\n                                    let memPos_17 := mload(64)\n                                    mstore(memPos_17, 32)\n                                    return(memPos_17, sub(abi_encode_string(memPtr_10, add(memPos_17, 32)), memPos_17))\n                                }\n                                case 0xd505accf {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                                    let value0_8 := abi_decode_address()\n                                    let value1_5 := abi_decode_address_31541()\n                                    let value_18 := calldataload(68)\n                                    let value_19 := calldataload(100)\n                                    let value_20 := calldataload(132)\n                                    if iszero(eq(value_20, and(value_20, 0xff))) { revert(0, 0) }\n                                    /// @src 29:2294:2391  \"if (block.timestamp > deadline) {...\"\n                                    if /** @src 29:2298:2324  \"block.timestamp > deadline\" */ gt(/** @src 29:2298:2313  \"block.timestamp\" */ timestamp(), /** @src 29:2298:2324  \"block.timestamp > deadline\" */ value_19)\n                                    /// @src 29:2294:2391  \"if (block.timestamp > deadline) {...\"\n                                    {\n                                        /// @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                        let _84 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                        mstore(_84, shl(225, 0x313c8981))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\" */ add(_84, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), value_19)\n                                        /// @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                        revert(_84, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    let _85 := sub(shl(160, 1), 1)\n                                    let _86 := and(value0_8, _85)\n                                    mstore(0, _86)\n                                    mstore(32, /** @src 31:972:1036  \"assembly {...\" */ 41026498920877473550552694860415970151284396403628511442111957027090812156672)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dataSlot_1 := keccak256(0, 64)\n                                    let _87 := sload(/** @src 31:1954:1972  \"$._nonces[owner]++\" */ dataSlot_1)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(dataSlot_1, add(/** @src 31:1954:1972  \"$._nonces[owner]++\" */ _87, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1))\n                                    /// @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                    let expr_mpos := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                    let _88 := add(expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32)\n                                    mstore(_88, /** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64), _86)\n                                    mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 96), and(value1_5, _85))\n                                    mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 128), value_18)\n                                    mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 160), _87)\n                                    mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 192), value_19)\n                                    /// @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                    mstore(expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 192)\n                                    let newFreePtr_1 := add(expr_mpos, 224)\n                                    if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr_1)\n                                    /// @src 29:2422:2511  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                    let _89 := keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _88, mload(/** @src 29:2422:2511  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                                    /// @src 33:4094:4117  \"_buildDomainSeparator()\"\n                                    let _90 := fun_buildDomainSeparator()\n                                    /// @src 59:3515:3748  \"assembly {...\"\n                                    let usr$ptr := mload(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64)\n                                    /// @src 59:3515:3748  \"assembly {...\"\n                                    mstore(usr$ptr, \"\\x19\\x01\")\n                                    mstore(add(usr$ptr, 0x02), _90)\n                                    mstore(add(usr$ptr, 0x22), _89)\n                                    /// @src 58:6967:6992  \"tryRecover(hash, v, r, s)\"\n                                    let expr_component_1, expr_component_2, expr_component_3 := fun_tryRecover(/** @src 59:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 58:6967:6992  \"tryRecover(hash, v, r, s)\" */ value_20, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(164), calldataload(196))\n                                    /// @src 58:7021:7029  \"errorArg\"\n                                    fun_throwError(expr_component_2, expr_component_3)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _91 := and(/** @src 29:2635:2650  \"signer != owner\" */ expr_component_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _85)\n                                    /// @src 29:2631:2719  \"if (signer != owner) {...\"\n                                    if /** @src 29:2635:2650  \"signer != owner\" */ iszero(eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _91, _86))\n                                    /// @src 29:2631:2719  \"if (signer != owner) {...\"\n                                    {\n                                        /// @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                        let _92 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                        mstore(_92, shl(225, 0x25c00723))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\" */ add(_92, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _91)\n                                        mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\" */ _92, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), _86)\n                                        /// @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                        revert(_92, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                    }\n                                    /// @src 27:10380:10384  \"true\"\n                                    fun_approve(value0_8, value1_5, value_18)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0xd5391393 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPos_18 := mload(64)\n                                    mstore(memPos_18, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(memPos_18, 32)\n                                }\n                                case 0xd547741f {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value_21 := calldataload(4)\n                                    let value1_6 := abi_decode_address_31541()\n                                    mstore(0, value_21)\n                                    mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                    /// @src 24:3202:3206  \"role\"\n                                    fun_checkRole(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 24:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1)))\n                                    /// @src 24:5767:5793  \"_revokeRole(role, account)\"\n                                    pop(fun_revokeRole(value_21, value1_6))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(0, 0)\n                                }\n                                case 0xdd62ed3e {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                    let value0_9 := abi_decode_address()\n                                    let _93 := abi_decode_address_31541()\n                                    /// @src 27:5162:5182  \"$._allowances[owner]\"\n                                    let _94 := mapping_index_access_mapping_address_bool_of_address(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ value0_9)\n                                    mstore(0, and(_93, sub(shl(160, 1), 1)))\n                                    mstore(0x20, _94)\n                                    let _95 := sload(keccak256(0, 64))\n                                    let memPos_19 := mload(64)\n                                    mstore(memPos_19, _95)\n                                    return(memPos_19, 0x20)\n                                }\n                                case 0xdfbaefb1 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let value_22 := and(sload(0), 0xff)\n                                    let memPos_20 := mload(64)\n                                    mstore(memPos_20, iszero(iszero(value_22)))\n                                    return(memPos_20, 32)\n                                }\n                                case 0xe63ab1e9 {\n                                    if callvalue() { revert(0, 0) }\n                                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                    let memPos_21 := mload(64)\n                                    mstore(memPos_21, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    return(memPos_21, 32)\n                                }\n                            }\n                            revert(0, 0)\n                        }\n                        function abi_encode_string(value, pos) -> end\n                        {\n                            let length := mload(value)\n                            mstore(pos, length)\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            for { } lt(i, length) { i := add(i, 0x20) }\n                            {\n                                let _1 := 0x20\n                                mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                            }\n                            mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                        }\n                        function abi_decode_address() -> value\n                        {\n                            value := calldataload(4)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        }\n                        function abi_decode_address_31541() -> value\n                        {\n                            value := calldataload(36)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        }\n                        function finalize_allocation_49957(memPtr)\n                        {\n                            let newFreePtr := add(memPtr, 64)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        function finalize_allocation(memPtr, size)\n                        {\n                            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        function array_allocation_size_string(length) -> size\n                        {\n                            if gt(length, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            size := add(and(add(length, 31), not(31)), 0x20)\n                        }\n                        function abi_decode_available_length_string(src, length, end) -> array\n                        {\n                            let _1 := array_allocation_size_string(length)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _1)\n                            array := memPtr\n                            mstore(memPtr, length)\n                            if gt(add(src, length), end)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            calldatacopy(add(memPtr, 0x20), src, length)\n                            mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        }\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        function abi_decode_string(offset, end) -> array\n                        {\n                            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                            array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n                        }\n                        function mapping_index_access_mapping_address_bool_of_address(key) -> dataSlot\n                        {\n                            mstore(0, and(key, sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 27:5162:5175  \"$._allowances\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            dataSlot := keccak256(0, 0x40)\n                        }\n                        /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                        function fun_checkRole_31553()\n                        {\n                            /// @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\"\n                            let _1 := 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _2)\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                mstore(_3, shl(224, 0xe2517d3f))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                            }\n                        }\n                        /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                        function fun_checkRole_31555()\n                        {\n                            /// @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                            let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _2)\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                mstore(_3, shl(224, 0xe2517d3f))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                            }\n                        }\n                        /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                        function fun_checkRole_31562()\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := 0\n                            mstore(_1, _1)\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := keccak256(_1, 0x40)\n                            mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _2)\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, 0x40)), 0xff))\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                mstore(_3, shl(224, 0xe2517d3f))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), _1)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                            }\n                        }\n                        /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                        function fun_checkRole(var_role)\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _1)\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                            /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                mstore(_2, shl(224, 0xe2517d3f))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), var_role)\n                                /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                revert(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                            }\n                        }\n                        /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                        function fun_grantRole_31547(var_account) -> var\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := 0\n                            mstore(_1, _1)\n                            /// @src 24:2887:2958  \"assembly {...\"\n                            let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _3 := keccak256(_1, 0x40)\n                            let _4 := and(var_account, sub(shl(160, 1), 1))\n                            mstore(_1, _4)\n                            mstore(0x20, _3)\n                            /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, 0x40)), 0xff))\n                            case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                /// @src 24:7628:7640  \"return false\"\n                                var := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1\n                                /// @src 24:7628:7640  \"return false\"\n                                leave\n                            }\n                            default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(_1, _1)\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _5 := keccak256(_1, 0x40)\n                                mstore(_1, _4)\n                                mstore(0x20, _5)\n                                let dataSlot := keccak256(_1, 0x40)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                log4(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, _1, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, _4, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 24:7586:7597  \"return true\"\n                                var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                /// @src 24:7586:7597  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                        function fun_grantRole_31548(var_account) -> var\n                        {\n                            /// @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\"\n                            let _1 := 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n                            /// @src -1:-1:-1\n                            let _2 := 0\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                            /// @src 24:2887:2958  \"assembly {...\"\n                            let _3 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _4 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            let _5 := and(var_account, sub(shl(160, 1), 1))\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                            mstore(0x20, _4)\n                            /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                            case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                /// @src 24:7628:7640  \"return false\"\n                                var := /** @src -1:-1:-1 */ _2\n                                /// @src 24:7628:7640  \"return false\"\n                                leave\n                            }\n                            default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _6 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                                mstore(0x20, _6)\n                                let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                log4(/** @src -1:-1:-1 */ _2, _2, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 24:7586:7597  \"return true\"\n                                var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                /// @src 24:7586:7597  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                        function fun_grantRole_31549(var_account) -> var\n                        {\n                            /// @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                            let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                            /// @src -1:-1:-1\n                            let _2 := 0\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                            /// @src 24:2887:2958  \"assembly {...\"\n                            let _3 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _4 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            let _5 := and(var_account, sub(shl(160, 1), 1))\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                            mstore(0x20, _4)\n                            /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                            case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                /// @src 24:7628:7640  \"return false\"\n                                var := /** @src -1:-1:-1 */ _2\n                                /// @src 24:7628:7640  \"return false\"\n                                leave\n                            }\n                            default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _6 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                                mstore(0x20, _6)\n                                let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                log4(/** @src -1:-1:-1 */ _2, _2, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 24:7586:7597  \"return true\"\n                                var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                /// @src 24:7586:7597  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                        function fun_grantRole(var_role, var_account) -> var\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                            /// @src 24:2887:2958  \"assembly {...\"\n                            let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            let _4 := and(var_account, sub(shl(160, 1), 1))\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            mstore(0x20, _3)\n                            /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                            case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                /// @src 24:7628:7640  \"return false\"\n                                var := /** @src -1:-1:-1 */ _1\n                                /// @src 24:7628:7640  \"return false\"\n                                leave\n                            }\n                            default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                mstore(0x20, _5)\n                                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                log4(/** @src -1:-1:-1 */ _1, _1, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 24:7586:7597  \"return true\"\n                                var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                /// @src 24:7586:7597  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 46988 @src 24:7892:8280  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                        function fun_revokeRole(var_role, var_account) -> var\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                            /// @src 24:2887:2958  \"assembly {...\"\n                            let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            let _4 := and(var_account, sub(shl(160, 1), 1))\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            mstore(0x20, _3)\n                            /// @src 24:8055:8274  \"if (hasRole(role, account)) {...\"\n                            switch /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff)\n                            case /** @src 24:8055:8274  \"if (hasRole(role, account)) {...\" */ 0 {\n                                /// @src 24:8251:8263  \"return false\"\n                                var := /** @src -1:-1:-1 */ _1\n                                /// @src 24:8251:8263  \"return false\"\n                                leave\n                            }\n                            default /// @src 24:8055:8274  \"if (hasRole(role, account)) {...\"\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                mstore(0x20, _5)\n                                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                sstore(dataSlot, and(sload(dataSlot), not(255)))\n                                /// @src 24:8155:8195  \"RoleRevoked(role, account, _msgSender())\"\n                                log4(/** @src -1:-1:-1 */ _1, _1, /** @src 24:8155:8195  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 24:8209:8220  \"return true\"\n                                var := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1\n                                /// @src 24:8209:8220  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        function extract_byte_array_length(data) -> length\n                        {\n                            length := shr(1, data)\n                            let outOfPlaceEncoding := and(data, 1)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            if eq(outOfPlaceEncoding, lt(length, 32))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x22)\n                                revert(0, 0x24)\n                            }\n                        }\n                        function copy_array_from_storage_to_memory_string() -> memPtr\n                        {\n                            memPtr := mload(64)\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 33:6441:6448  \"$._name\"\n                            let _1 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let slotValue := sload(/** @src 33:6441:6448  \"$._name\" */ _1)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let length := extract_byte_array_length(slotValue)\n                            mstore(memPtr, length)\n                            let _2 := 0x20\n                            let _3 := 1\n                            switch and(slotValue, _3)\n                            case 0 {\n                                mstore(add(memPtr, _2), and(slotValue, not(255)))\n                                ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:6441:6448  \"$._name\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let dataPos := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, _3)\n                                }\n                                ret := add(add(memPtr, i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                        }\n                        function copy_array_from_storage_to_memory_string_31571() -> memPtr\n                        {\n                            memPtr := mload(64)\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 33:6826:6836  \"$._version\"\n                            let _1 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let slotValue := sload(/** @src 33:6826:6836  \"$._version\" */ _1)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let length := extract_byte_array_length(slotValue)\n                            mstore(memPtr, length)\n                            let _2 := 0x20\n                            let _3 := 1\n                            switch and(slotValue, _3)\n                            case 0 {\n                                mstore(add(memPtr, _2), and(slotValue, not(255)))\n                                ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:6826:6836  \"$._version\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let dataPos := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, _3)\n                                }\n                                ret := add(add(memPtr, i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                        }\n                        /// @ast-id 47993 @src 27:11224:11711  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                        function fun_approve(var_owner, var_spender, var_value)\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(/** @src 27:11389:11408  \"owner == address(0)\" */ var_owner, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                            if /** @src 27:11389:11408  \"owner == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                            /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                mstore(_3, shl(224, 0xe602df05))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\" */ add(_3, 4), /** @src 27:11406:11407  \"0\" */ 0x00)\n                                /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            let _4 := and(/** @src 27:11487:11508  \"spender == address(0)\" */ var_spender, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                            if /** @src 27:11487:11508  \"spender == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                let _5 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                mstore(_5, shl(225, 0x4a1406b1))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\" */ add(_5, 4), /** @src 27:11406:11407  \"0\" */ 0x00)\n                                /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                revert(_5, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            /// @src 27:11582:11602  \"$._allowances[owner]\"\n                            let _6 := mapping_index_access_mapping_address_bool_of_address(var_owner)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            mstore(0x20, _6)\n                            sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), var_value)\n                            /// @src 27:11663:11694  \"Approval(owner, spender, value)\"\n                            let _7 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            mstore(_7, var_value)\n                            /// @src 27:11663:11694  \"Approval(owner, spender, value)\"\n                            log3(_7, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:11663:11694  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _4)\n                        }\n                        /// @ast-id 47907 @src 27:9522:9728  \"function _burn(address account, uint256 value) internal {...\"\n                        function fun_burn(var_account, var_value)\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := and(/** @src 27:9592:9613  \"account == address(0)\" */ var_account, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))\n                            /// @src 27:9588:9677  \"if (account == address(0)) {...\"\n                            if /** @src 27:9592:9613  \"account == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            /// @src 27:9588:9677  \"if (account == address(0)) {...\"\n                            {\n                                /// @src 27:9636:9666  \"ERC20InvalidSender(address(0))\"\n                                let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 27:9636:9666  \"ERC20InvalidSender(address(0))\"\n                                mstore(_2, shl(225, 0x4b637e8f))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:9636:9666  \"ERC20InvalidSender(address(0))\" */ add(_2, 4), /** @src 27:9611:9612  \"0\" */ 0x00)\n                                /// @src 27:9636:9666  \"ERC20InvalidSender(address(0))\"\n                                revert(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            /// @src 27:2326:2389  \"assembly {...\"\n                            let _3 := 37439836327923360225337895871394760624280537466773280374265222508165906222592\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _3)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _4 := sload(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40))\n                            /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                            if /** @src 27:7872:7891  \"fromBalance < value\" */ lt(_4, var_value)\n                            /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                            {\n                                /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                let _5 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                mstore(_5, shl(226, 0x391434e3))\n                                revert(_5, sub(abi_encode_address_uint256_uint256(add(_5, 4), var_account, _4, var_value), _5))\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _3)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            sstore(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), sub(/** @src 27:8123:8142  \"fromBalance - value\" */ _4, var_value))\n                            /// @src 27:8344:8358  \"$._totalSupply\"\n                            let _6 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            sstore(/** @src 27:8344:8358  \"$._totalSupply\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(sload(/** @src 27:8344:8358  \"$._totalSupply\" */ _6), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_value))\n                            /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                            let _7 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            mstore(_7, var_value)\n                            /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                            log3(_7, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0)\n                        }\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                        {\n                            tail := add(headStart, 96)\n                            mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                            mstore(add(headStart, 32), value1)\n                            mstore(add(headStart, 64), value2)\n                        }\n                        /// @ast-id 48736 @src 33:4130:4321  \"function _buildDomainSeparator() private view returns (bytes32) {...\"\n                        function fun_buildDomainSeparator() -> var\n                        {\n                            /// @src 33:4243:4260  \"_EIP712NameHash()\"\n                            let expr := fun_EIP712NameHash()\n                            /// @src 33:4262:4282  \"_EIP712VersionHash()\"\n                            let expr_1 := fun_EIP712VersionHash()\n                            /// @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                            let expr_mpos := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(_1, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64), expr)\n                            mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ expr_1)\n                            mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 33:4284:4297  \"block.chainid\" */ chainid())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 33:4307:4311  \"this\" */ address())\n                            /// @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let newFreePtr := add(expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 33:4204:4314  \"return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\"\n                            var := /** @src 33:4211:4314  \"keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\" */ keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, mload(/** @src 33:4211:4314  \"keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\" */ expr_mpos))\n                        }\n                        /// @ast-id 48897 @src 33:7058:7745  \"function _EIP712NameHash() internal view returns (bytes32) {...\"\n                        function fun_EIP712NameHash() -> var\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := copy_array_from_storage_to_memory_string()\n                            /// @src 33:7230:7248  \"bytes(name).length\"\n                            let expr := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 33:7230:7248  \"bytes(name).length\" */ _1)\n                            /// @src 33:7226:7739  \"if (bytes(name).length > 0) {...\"\n                            switch /** @src 33:7230:7252  \"bytes(name).length > 0\" */ iszero(iszero(expr))\n                            case /** @src 33:7226:7739  \"if (bytes(name).length > 0) {...\" */ 0 {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _2 := sload(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600)\n                                /// @src 33:7599:7729  \"if (hashedName != 0) {...\"\n                                switch /** @src 33:7603:7618  \"hashedName != 0\" */ iszero(iszero(_2))\n                                case /** @src 33:7599:7729  \"if (hashedName != 0) {...\" */ 0 {\n                                    /// @src 33:7694:7714  \"return keccak256(\\\"\\\")\"\n                                    var := /** @src 33:7701:7714  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n                                    /// @src 33:7694:7714  \"return keccak256(\\\"\\\")\"\n                                    leave\n                                }\n                                default /// @src 33:7599:7729  \"if (hashedName != 0) {...\"\n                                {\n                                    /// @src 33:7638:7655  \"return hashedName\"\n                                    var := _2\n                                    leave\n                                }\n                            }\n                            default /// @src 33:7226:7739  \"if (bytes(name).length > 0) {...\"\n                            {\n                                /// @src 33:7268:7297  \"return keccak256(bytes(name))\"\n                                var := /** @src 33:7275:7297  \"keccak256(bytes(name))\" */ keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(/** @src 33:7275:7297  \"keccak256(bytes(name))\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20), expr)\n                                /// @src 33:7268:7297  \"return keccak256(bytes(name))\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 48949 @src 33:7966:8689  \"function _EIP712VersionHash() internal view returns (bytes32) {...\"\n                        function fun_EIP712VersionHash() -> var\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := copy_array_from_storage_to_memory_string_31571()\n                            /// @src 33:8147:8168  \"bytes(version).length\"\n                            let expr := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 33:8147:8168  \"bytes(version).length\" */ _1)\n                            /// @src 33:8143:8683  \"if (bytes(version).length > 0) {...\"\n                            switch /** @src 33:8147:8172  \"bytes(version).length > 0\" */ iszero(iszero(expr))\n                            case /** @src 33:8143:8683  \"if (bytes(version).length > 0) {...\" */ 0 {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _2 := sload(/** @src 33:8507:8523  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101)\n                                /// @src 33:8537:8673  \"if (hashedVersion != 0) {...\"\n                                switch /** @src 33:8541:8559  \"hashedVersion != 0\" */ iszero(iszero(_2))\n                                case /** @src 33:8537:8673  \"if (hashedVersion != 0) {...\" */ 0 {\n                                    /// @src 33:8638:8658  \"return keccak256(\\\"\\\")\"\n                                    var := /** @src 33:8645:8658  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n                                    /// @src 33:8638:8658  \"return keccak256(\\\"\\\")\"\n                                    leave\n                                }\n                                default /// @src 33:8537:8673  \"if (hashedVersion != 0) {...\"\n                                {\n                                    /// @src 33:8579:8599  \"return hashedVersion\"\n                                    var := _2\n                                    leave\n                                }\n                            }\n                            default /// @src 33:8143:8683  \"if (bytes(version).length > 0) {...\"\n                            {\n                                /// @src 33:8188:8220  \"return keccak256(bytes(version))\"\n                                var := /** @src 33:8195:8220  \"keccak256(bytes(version))\" */ keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(/** @src 33:8195:8220  \"keccak256(bytes(version))\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20), expr)\n                                /// @src 33:8188:8220  \"return keccak256(bytes(version))\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                        {\n                            /// @src 53:4793:5201  \"if (!success) {...\"\n                            switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                            case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                if expr\n                                {\n                                    expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                }\n                                /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                if expr\n                                {\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    mstore(_1, shl(224, 0x9996b315))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    revert(_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                /// @src 53:5173:5190  \"return returndata\"\n                                var_mpos := var_returndata_mpos\n                                leave\n                            }\n                            default /// @src 53:4793:5201  \"if (!success) {...\"\n                            {\n                                /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    mstore(_2, shl(225, 0x0a12f521))\n                                    revert(_2, 4)\n                                }\n                                default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                {\n                                    /// @src 53:6046:6188  \"assembly {...\"\n                                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                }\n                            }\n                        }\n                        /// @ast-id 51539 @src 58:5140:6670  \"function tryRecover(...\"\n                        function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                        {\n                            /// @src 58:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                            if /** @src 58:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 58:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                            /// @src 58:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                            {\n                                /// @src 58:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                var := /** @src 58:6297:6298  \"0\" */ 0x00\n                                /// @src 58:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                var_1 := /** @src 58:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                                /// @src 58:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                var_2 := var_s\n                                leave\n                            }\n                            /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                            let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            mstore(_1, var_hash)\n                            mstore(add(_1, 32), and(var_v, 0xff))\n                            mstore(add(_1, 64), var_r)\n                            mstore(add(_1, 96), var_s)\n                            /// @src -1:-1:-1\n                            let _2 := 0\n                            /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                            mstore(/** @src -1:-1:-1 */ _2, _2)\n                            /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                            if iszero(staticcall(gas(), 1, _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32))\n                            /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                            let _3 := mload(/** @src -1:-1:-1 */ _2)\n                            /// @src 58:6491:6604  \"if (signer == address(0)) {...\"\n                            if /** @src 58:6495:6515  \"signer == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 58:6495:6515  \"signer == address(0)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 58:6491:6604  \"if (signer == address(0)) {...\"\n                            {\n                                /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                var := /** @src -1:-1:-1 */ _2\n                                /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                var_1 := /** @src 58:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                                /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                var_2 := /** @src -1:-1:-1 */ _2\n                                /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                leave\n                            }\n                            /// @src 58:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                            var := _3\n                            var_1 := /** @src -1:-1:-1 */ _2\n                            /// @src 58:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                        }\n                        /// @ast-id 51624 @src 58:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                        function fun_throwError(var_error, var_errorArg)\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            if iszero(lt(var_error, 4))\n                            {\n                                mstore(/** @src 58:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(/** @src 58:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x24)\n                            }\n                            /// @src 58:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                            switch /** @src 58:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                            case /** @src 58:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                                /// @src 58:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                                switch /** @src 58:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1)\n                                case /** @src 58:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                    /// @src 58:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                    switch /** @src 58:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 58:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                    case /** @src 58:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                        /// @src 58:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                        if /** @src 58:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 58:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                        /// @src 58:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                        {\n                                            /// @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                            let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                            mstore(_1, shl(226, 0x35e2f383))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), var_errorArg)\n                                            /// @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                            revert(_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                    }\n                                    default /// @src 58:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                    {\n                                        /// @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                        let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                        mstore(_2, shl(224, 0xfce698f7))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), var_errorArg)\n                                        /// @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                        revert(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 58:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                                {\n                                    /// @src 58:7439:7462  \"ECDSAInvalidSignature()\"\n                                    let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 58:7439:7462  \"ECDSAInvalidSignature()\"\n                                    mstore(_3, shl(224, 0xf645eedf))\n                                    revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                            }\n                            default /// @src 58:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                            {\n                                /// @src 58:7327:7334  \"return;\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 47165 @src 25:7084:7225  \"function _checkInitializing() internal view virtual {...\"\n                        function fun_checkInitializing()\n                        {\n                            /// @src 25:7146:7219  \"if (!_isInitializing()) {...\"\n                            if /** @src 25:7150:7168  \"!_isInitializing()\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff))\n                            /// @src 25:7146:7219  \"if (!_isInitializing()) {...\"\n                            {\n                                /// @src 25:7191:7208  \"NotInitializing()\"\n                                let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 25:7191:7208  \"NotInitializing()\"\n                                mstore(_1, shl(227, 0x1afcd79f))\n                                revert(_1, 4)\n                            }\n                        }\n                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        function abi_encode_stringliteral(headStart) -> tail\n                        {\n                            mstore(headStart, 32)\n                            mstore(add(headStart, 32), 87)\n                            mstore(add(headStart, 64), \"AccessControl: account is missin\")\n                            mstore(add(headStart, 96), \"g transferrer role to transfer i\")\n                            mstore(add(headStart, 128), \"n private transfer mode\")\n                            tail := add(headStart, 160)\n                        }\n                        /// @ast-id 47749 @src 27:6868:7168  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                        function fun_transfer(var_from, var_to, var_value)\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(/** @src 27:6951:6969  \"from == address(0)\" */ var_from, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            /// @src 27:6947:7033  \"if (from == address(0)) {...\"\n                            if /** @src 27:6951:6969  \"from == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                            /// @src 27:6947:7033  \"if (from == address(0)) {...\"\n                            {\n                                /// @src 27:6992:7022  \"ERC20InvalidSender(address(0))\"\n                                let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 27:6992:7022  \"ERC20InvalidSender(address(0))\"\n                                mstore(_3, /** @src 27:9636:9666  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:6992:7022  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 27:6967:6968  \"0\" */ 0x00)\n                                /// @src 27:6992:7022  \"ERC20InvalidSender(address(0))\"\n                                revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            let _4 := and(/** @src 27:7046:7062  \"to == address(0)\" */ var_to, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                            /// @src 27:7042:7128  \"if (to == address(0)) {...\"\n                            if /** @src 27:7046:7062  \"to == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            /// @src 27:7042:7128  \"if (to == address(0)) {...\"\n                            {\n                                /// @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                                let _5 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                                mstore(_5, /** @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 27:6967:6968  \"0\" */ 0x00)\n                                /// @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                                revert(_5, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            /// @src 27:7621:8167  \"if (from == address(0)) {...\"\n                            let _6 := 0\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                            /// @src 27:2326:2389  \"assembly {...\"\n                            let _7 := 37439836327923360225337895871394760624280537466773280374265222508165906222592\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _7)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _8 := sload(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40))\n                            /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                            if /** @src 27:7872:7891  \"fromBalance < value\" */ lt(_8, var_value)\n                            /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                            {\n                                /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                let _9 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                mstore(_9, shl(226, 0x391434e3))\n                                revert(_9, sub(abi_encode_address_uint256_uint256(add(_9, 4), var_from, _8, var_value), _9))\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                            mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _7)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            sstore(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), sub(/** @src 27:8123:8142  \"fromBalance - value\" */ _8, var_value))\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            let dataSlot := keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            sstore(dataSlot, add(sload(/** @src 27:8557:8581  \"$._balances[to] += value\" */ dataSlot), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_value))\n                            /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                            let _10 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            mstore(_10, var_value)\n                            /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                            log3(_10, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                        }\n                        /// @ast-id 48544 @src 32:2905:3033  \"function _requireNotPaused() internal view virtual {...\"\n                        function fun_requireNotPaused()\n                        {\n                            /// @src 32:2966:3027  \"if (paused()) {...\"\n                            if /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 32:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff)\n                            /// @src 32:2966:3027  \"if (paused()) {...\"\n                            {\n                                /// @src 32:3001:3016  \"EnforcedPause()\"\n                                let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 32:3001:3016  \"EnforcedPause()\"\n                                mstore(_1, shl(224, 0xd93c0665))\n                                revert(_1, 4)\n                            }\n                        }\n                        /// @src 81:2859:3476  \"function transferFrom(...\"\n                        function fun_transferFrom_inner(var_from, var_to, var_amount) -> var\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := 0\n                            mstore(_1, /** @src 81:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := 0x40\n                            let _3 := keccak256(_1, _2)\n                            mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _3)\n                            /// @src 81:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\"\n                            switch /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, _2)), 0xff)\n                            case /** @src 81:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\" */ 0 {\n                                /// @src 81:3144:3324  \"if (_inPrivateTransferMode) {...\"\n                                if /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(_1), 0xff)\n                                /// @src 81:3144:3324  \"if (_inPrivateTransferMode) {...\"\n                                {\n                                    /// @src 81:3186:3313  \"revert(...\"\n                                    let _4 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                    /// @src 81:3186:3313  \"revert(...\"\n                                    mstore(_4, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(229, 4594637))\n                                    /// @src 81:3186:3313  \"revert(...\"\n                                    revert(_4, sub(abi_encode_stringliteral(add(_4, 4)), _4))\n                                }\n                            }\n                            default /// @src 81:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\"\n                            {\n                                /// @src 81:3095:3101  \"amount\"\n                                fun_transfer(var_from, var_to, var_amount)\n                                /// @src 81:3116:3127  \"return true\"\n                                var := /** @src 81:3123:3127  \"true\" */ 0x01\n                                /// @src 81:3116:3127  \"return true\"\n                                leave\n                            }\n                            /// @src 27:5162:5182  \"$._allowances[owner]\"\n                            let _5 := mapping_index_access_mapping_address_bool_of_address(/** @src 27:12119:12144  \"allowance(owner, spender)\" */ var_from)\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _5)\n                            let _6 := sload(keccak256(_1, _2))\n                            /// @src 27:12154:12464  \"if (currentAllowance != type(uint256).max) {...\"\n                            if /** @src 27:12158:12195  \"currentAllowance != type(uint256).max\" */ iszero(eq(_6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0)))\n                            /// @src 27:12154:12464  \"if (currentAllowance != type(uint256).max) {...\"\n                            {\n                                /// @src 27:12211:12341  \"if (currentAllowance < value) {...\"\n                                if /** @src 27:12215:12239  \"currentAllowance < value\" */ lt(_6, var_amount)\n                                /// @src 27:12211:12341  \"if (currentAllowance < value) {...\"\n                                {\n                                    /// @src 27:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                    let _7 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                    /// @src 27:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                    mstore(_7, shl(225, 0x7dc7a0d9))\n                                    revert(_7, sub(abi_encode_address_uint256_uint256(add(_7, 4), /** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 27:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _6, var_amount), _7))\n                                }\n                                /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                                if /** @src 27:11389:11408  \"owner == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 27:11389:11408  \"owner == address(0)\" */ var_from, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                    let _8 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                    /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_8, shl(224, 0xe602df05))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\" */ add(_8, 4), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                    /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_8, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                                if /** @src 27:11487:11508  \"spender == address(0)\" */ iszero(/** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                    let _9 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                    /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_9, shl(225, 0x4a1406b1))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\" */ add(_9, 4), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                    /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_9, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                /// @src 27:11582:11602  \"$._allowances[owner]\"\n                                let _10 := mapping_index_access_mapping_address_bool_of_address(var_from)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _10)\n                                sstore(keccak256(_1, _2), sub(/** @src 27:12407:12431  \"currentAllowance - value\" */ _6, var_amount))\n                            }\n                            /// @src 81:3441:3447  \"amount\"\n                            fun_transfer(var_from, var_to, var_amount)\n                            /// @src 81:3458:3469  \"return true\"\n                            var := /** @src 27:5162:5175  \"$._allowances\" */ 1\n                        }\n                    }\n                    data \".metadata\" hex\"a164736f6c6343000815000a\"\n                }\n            }\n            data \".metadata\" hex\"a164736f6c6343000815000a\"\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 13:\"lib/forge-std/src/Test.sol\", 84:\"test/02_RewardTracker.t.sol\"\n    object \"RewardTracker_Tester_62554\" {\n        code {\n            {\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := 0\n                let _3 := not(255)\n                /// @src 3:3166:3170  \"true\"\n                let _4 := 0x0c\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                sstore(/** @src 3:3166:3170  \"true\" */ _4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ _4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 13:1038:1042  \"true\" */ 0x1e), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                finalize_allocation_3851(_1)\n                mstore(_1, /** @src 3:3166:3170  \"true\" */ _4)\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                let _5 := add(_1, 32)\n                mstore(_5, \"TEAM_ADDRESS\")\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                let i := _2\n                for { }\n                lt(i, /** @src 3:3166:3170  \"true\" */ _4)\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                { i := add(i, 32) }\n                {\n                    mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ i), 32), mload(add(add(_1, i), 32)))\n                }\n                mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 44), _2)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                mstore(expr_mpos, /** @src 3:3166:3170  \"true\" */ _4)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation_3851(expr_mpos)\n                /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                let _6 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _7 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _8 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_8)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, _2, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if _8\n                {\n                    let _9 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, _9), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(_2, _2)\n                    }\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value := mload(_7)\n                    if iszero(eq(value, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    {\n                        revert(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2, _2)\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    expr := value\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    revert(_2, _2)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _10 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_10, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let length := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length)\n                copy_memory_to_memory_with_cleanup(_5, add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _11 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_11)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos_1 := mload(64)\n                    returndatacopy(pos_1, _2, returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if _11\n                {\n                    finalize_allocation_2834(_10)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    _2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2\n                }\n                let _12 := sload(/** @src 13:1038:1042  \"true\" */ 0x1e)\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(_12, not(sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 256))), and(shl(8, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 256))))\n                let memPtr := mload(64)\n                finalize_allocation_3851(memPtr)\n                let _13 := 16\n                mstore(memPtr, _13)\n                mstore(add(memPtr, 32), \"DEPLOYER_ADDRESS\")\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                let i_1 := 0\n                for { } lt(i_1, _13) { i_1 := add(i_1, 32) }\n                {\n                    mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ i_1), 32), mload(add(add(memPtr, i_1), 32)))\n                }\n                mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 48), 0)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                mstore(expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _13)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation_3851(expr_mpos_1)\n                /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                let _14 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_1))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _15 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_15, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_15, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _16 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _15, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _15, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_16)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos_2 := mload(64)\n                    returndatacopy(pos_2, /** @src -1:-1:-1 */ _2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let expr_1 := _2\n                if _16\n                {\n                    let _17 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _17 := returndatasize() }\n                    finalize_allocation(_15, _17)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_15, _17), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value_1 := mload(_15)\n                    if iszero(eq(value_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    expr_1 := value_1\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _18 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_18, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let length_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr)\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_1)\n                copy_memory_to_memory_with_cleanup(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(memPtr, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_1)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _19 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src -1:-1:-1 */ _2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_19)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos_3 := mload(64)\n                    returndatacopy(pos_3, /** @src -1:-1:-1 */ _2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if _19\n                {\n                    finalize_allocation_2834(_18)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if _2\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                sstore(31, or(and(sload(31), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_3851(memPtr_1)\n                mstore(memPtr_1, 5)\n                mstore(add(memPtr_1, 32), \"USER1\")\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                let i_2 := 0\n                for { } lt(i_2, 5) { i_2 := add(i_2, 32) }\n                {\n                    mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ i_2), 32), mload(add(add(memPtr_1, i_2), 32)))\n                }\n                mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 37), 0)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                mstore(expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 5)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation_3851(expr_mpos_2)\n                /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                let _20 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_2))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _21 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_21, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_21, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _22 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _21, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _21, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_22)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos_4 := mload(64)\n                    returndatacopy(pos_4, /** @src -1:-1:-1 */ _2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let expr_2 := _2\n                if _22\n                {\n                    let _23 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _23 := returndatasize() }\n                    finalize_allocation(_21, _23)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_21, _23), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _21), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let value_2 := mload(_21)\n                    if iszero(eq(value_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    expr_2 := value_2\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _24 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                let _25 := and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n                mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_24, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _25)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64)\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let length_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1)\n                mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_2)\n                copy_memory_to_memory_with_cleanup(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(memPtr_1, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _26 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src -1:-1:-1 */ _2)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_26)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos_5 := mload(64)\n                    returndatacopy(pos_5, /** @src -1:-1:-1 */ _2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ returndatasize())\n                    revert(pos_5, returndatasize())\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if _26\n                {\n                    finalize_allocation_2834(_24)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if _2\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                sstore(32, or(and(sload(32), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _25))\n                /// @src 84:574:588  \"new ZFI_test()\"\n                let _27 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                /// @src 84:574:588  \"new ZFI_test()\"\n                let _28 := datasize(\"ZFI_test_62240\")\n                let _29 := add(_27, _28)\n                if or(gt(_29, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 84:574:588  \"new ZFI_test()\" */ lt(_29, _27))\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(_2, shl(224, 0x4e487b71))\n                    mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x41)\n                    revert(_2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                }\n                /// @src 84:574:588  \"new ZFI_test()\"\n                datacopy(_27, dataoffset(\"ZFI_test_62240\"), _28)\n                let expr_address := create(_2, _27, sub(_29, _27))\n                if iszero(expr_address)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let pos_6 := mload(64)\n                    returndatacopy(pos_6, /** @src 84:574:588  \"new ZFI_test()\" */ _2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ returndatasize())\n                    revert(pos_6, returndatasize())\n                }\n                sstore(/** @src 84:574:588  \"new ZFI_test()\" */ 0x23, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 84:574:588  \"new ZFI_test()\" */ 0x23), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(expr_address, sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                let _30 := mload(64)\n                let _31 := datasize(\"RewardTracker_Tester_62554_deployed\")\n                codecopy(_30, dataoffset(\"RewardTracker_Tester_62554_deployed\"), _31)\n                return(_30, _31)\n            }\n            function finalize_allocation_2834(memPtr)\n            {\n                if gt(memPtr, /** @src 84:574:588  \"new ZFI_test()\" */ sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_3851(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, /** @src 84:574:588  \"new ZFI_test()\" */ sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31)))\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                if or(gt(newFreePtr, /** @src 84:574:588  \"new ZFI_test()\" */ sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n        }\n        /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 9:\"lib/forge-std/src/StdStorage.sol\", 13:\"lib/forge-std/src/Test.sol\", 16:\"lib/forge-std/src/console2.sol\", 84:\"test/02_RewardTracker.t.sol\"\n        object \"RewardTracker_Tester_62554_deployed\" {\n            code {\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(64, memoryguard(0x80))\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _1 := 0\n                        switch shr(224, calldataload(_1))\n                        case 0x0a9254e4 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let _2 := sub(shl(160, 1), 1)\n                            /// @src 84:683:714  \"deal(DEPLOYER_ADDRESS, 2 ether)\"\n                            fun_deal(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 84:688:704  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2))\n                            /// @src 84:724:751  \"deal(TEAM_ADDRESS, 2 ether)\"\n                            fun_deal(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(shr(8, sload(/** @src 84:729:741  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2))\n                            /// @src 84:761:781  \"deal(USER1, 2 ether)\"\n                            fun_deal(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 84:766:771  \"USER1\" */ 0x20), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2))\n                            let value := and(sload(/** @src 84:841:852  \"zfiDeployer\" */ 0x23), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                            /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                            let _3 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                            mstore(_3, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xca2925eb))\n                            /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                            let _4 := call(gas(), value, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 84:841:865  \"zfiDeployer.deploy_ZFI()\" */ _3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:841:865  \"zfiDeployer.deploy_ZFI()\" */ _3, /** @src 84:766:771  \"USER1\" */ 0x20)\n                            /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                            if iszero(_4)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                            let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1\n                            /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                            if _4\n                            {\n                                let _5 := /** @src 84:766:771  \"USER1\" */ 0x20\n                                /// @src 84:841:865  \"zfiDeployer.deploy_ZFI()\"\n                                if gt(/** @src 84:766:771  \"USER1\" */ _5, /** @src 84:841:865  \"zfiDeployer.deploy_ZFI()\" */ returndatasize()) { _5 := returndatasize() }\n                                finalize_allocation(_3, _5)\n                                expr := abi_decode_address_fromMemory(_3, add(_3, _5))\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _6 := shl(160, 0xffffffffffffffffffffffff)\n                            sstore(/** @src 84:875:911  \"zfiToken = ZFIToken(zfiTokenAddress)\" */ 0x21, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 84:875:911  \"zfiToken = ZFIToken(zfiTokenAddress)\" */ 0x21), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _6), and(/** @src 84:886:911  \"ZFIToken(zfiTokenAddress)\" */ expr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)))\n                            sstore(/** @src 84:954:1042  \"rewardTracker = RewardTracker(RewardTracker_Tester.deployRewardTracker(zfiTokenAddress))\" */ 0x22, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 84:954:1042  \"rewardTracker = RewardTracker(RewardTracker_Tester.deployRewardTracker(zfiTokenAddress))\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _6), and(/** @src 84:984:1041  \"RewardTracker_Tester.deployRewardTracker(zfiTokenAddress)\" */ fun_deployRewardTracker(expr), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)))\n                            sstore(/** @src 84:1061:1100  \"DISTRIBUTOR = deployRewardDistributor()\" */ 0x25, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 84:1061:1100  \"DISTRIBUTOR = deployRewardDistributor()\" */ 0x25), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _6), and(/** @src 84:1075:1100  \"deployRewardDistributor()\" */ fun_deployRewardDistributor(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)))\n                            let value_1 := and(sload(/** @src 84:688:704  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                            let _7 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _7))\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _8 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_8, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_1)\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _9 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _7, _1, /** @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _8, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _8, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(_9)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 84:1110:1141  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if _9\n                            {\n                                finalize_allocation_37026(_8)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                _1 := _1\n                            }\n                            let value_2 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:954:1042  \"rewardTracker = RewardTracker(RewardTracker_Tester.deployRewardTracker(zfiTokenAddress))\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                            let value_3 := and(sload(/** @src 84:1061:1100  \"DISTRIBUTOR = deployRewardDistributor()\" */ 0x25), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                            /// @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                            if iszero(extcodesize(value_2))\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                            let _10 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                            mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x189acdbd))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\" */ add(_10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_3)\n                            /// @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                            let _11 := call(gas(), value_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\" */ _10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\" */ _10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                            if iszero(_11)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 84:1151:1188  \"rewardTracker.initialize(DISTRIBUTOR)\"\n                            if _11\n                            {\n                                finalize_allocation_37026(_10)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _7))\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            let _12 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            mstore(_12, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            let _13 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _7, _1, /** @src 84:1198:1212  \"vm.stopPrank()\" */ _12, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:1198:1212  \"vm.stopPrank()\" */ _12, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            if iszero(_13)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_3 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 84:1198:1212  \"vm.stopPrank()\"\n                            if _13\n                            {\n                                finalize_allocation_37026(_12)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            return(_1, _1)\n                        }\n                        case 0x1ed7831c {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let pos_4 := mload(64)\n                            let pos_5 := pos_4\n                            let length := sload(/** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(pos_4, length)\n                            let _14 := 0x20\n                            pos_4 := add(pos_4, _14)\n                            mstore(_1, /** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                            let i := _1\n                            for { } lt(i, length) { i := add(i, 1) }\n                            {\n                                mstore(pos_4, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                                pos_4 := add(pos_4, _14)\n                                srcPtr := add(srcPtr, 1)\n                            }\n                            finalize_allocation(pos_5, sub(pos_4, pos_5))\n                            let memPos := mload(64)\n                            return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_5), memPos))\n                        }\n                        case 0x2ade3880 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let length_1 := sload(/** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _15 := array_allocation_size_array_string_dyn(length_1)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _15)\n                            mstore(memPtr, length_1)\n                            let mpos := memPtr\n                            let _16 := 0x20\n                            mpos := add(memPtr, _16)\n                            let mpos_1 := mpos\n                            mstore(_1, /** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                            let i_1 := _1\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                            {\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_37029(memPtr_1)\n                                mstore(memPtr_1, and(sload(spos), sub(shl(160, 1), 1)))\n                                let _17 := 1\n                                let _18 := add(spos, _17)\n                                let length_2 := sload(_18)\n                                let _19 := array_allocation_size_array_string_dyn(length_2)\n                                let memPtr_2 := mload(64)\n                                finalize_allocation(memPtr_2, _19)\n                                mstore(memPtr_2, length_2)\n                                let mpos_2 := memPtr_2\n                                mpos_2 := add(memPtr_2, _16)\n                                mstore(0, _18)\n                                let spos_1 := keccak256(0, _16)\n                                let i_2 := 0\n                                for { } lt(i_2, length_2) { i_2 := add(i_2, _17) }\n                                {\n                                    let memPtr_3 := mload(64)\n                                    finalize_allocation(memPtr_3, sub(abi_encode_string_storage(spos_1, memPtr_3), memPtr_3))\n                                    mstore(mpos_2, memPtr_3)\n                                    mpos_2 := add(mpos_2, _16)\n                                    spos_1 := add(spos_1, _17)\n                                }\n                                mstore(add(memPtr_1, _16), memPtr_2)\n                                mstore(mpos, memPtr_1)\n                                mpos := add(mpos, _16)\n                                spos := add(spos, 2)\n                            }\n                            let memPos_1 := mload(64)\n                            let tail := add(memPos_1, _16)\n                            mstore(memPos_1, _16)\n                            let pos_6 := tail\n                            let length_3 := mload(memPtr)\n                            mstore(tail, length_3)\n                            pos_6 := add(memPos_1, 64)\n                            let _20 := 5\n                            let tail_1 := add(add(memPos_1, shl(_20, length_3)), 64)\n                            let srcPtr_1 := mpos_1\n                            let i_3 := _1\n                            for { } lt(i_3, length_3) { i_3 := add(i_3, 1) }\n                            {\n                                mstore(pos_6, add(sub(tail_1, memPos_1), not(63)))\n                                let _21 := mload(srcPtr_1)\n                                let tail_2 := add(tail_1, 64)\n                                mstore(tail_1, and(mload(_21), sub(shl(160, 1), 1)))\n                                let memberValue0 := mload(add(_21, _16))\n                                mstore(add(tail_1, _16), 64)\n                                let pos_7 := tail_2\n                                let length_4 := mload(memberValue0)\n                                mstore(tail_2, length_4)\n                                let _22 := 96\n                                pos_7 := add(tail_1, _22)\n                                let tail_3 := add(add(tail_1, shl(_20, length_4)), _22)\n                                let srcPtr_2 := add(memberValue0, _16)\n                                let i_4 := _1\n                                for { } lt(i_4, length_4) { i_4 := add(i_4, 1) }\n                                {\n                                    mstore(pos_7, add(sub(tail_3, tail_1), not(95)))\n                                    tail_3 := abi_encode_string(mload(srcPtr_2), tail_3)\n                                    srcPtr_2 := add(srcPtr_2, _16)\n                                    pos_7 := add(pos_7, _16)\n                                }\n                                tail_1 := tail_3\n                                srcPtr_1 := add(srcPtr_1, _16)\n                                pos_6 := add(pos_6, _16)\n                            }\n                            return(memPos_1, sub(tail_1, memPos_1))\n                        }\n                        case 0x3e5e3c23 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let pos_8 := mload(64)\n                            let pos_9 := pos_8\n                            let length_5 := sload(/** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(pos_8, length_5)\n                            let _23 := 0x20\n                            pos_8 := add(pos_8, _23)\n                            mstore(_1, /** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let srcPtr_3 := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                            let i_5 := _1\n                            for { } lt(i_5, length_5) { i_5 := add(i_5, 1) }\n                            {\n                                mstore(pos_8, and(sload(srcPtr_3), sub(shl(160, 1), 1)))\n                                pos_8 := add(pos_8, _23)\n                                srcPtr_3 := add(srcPtr_3, 1)\n                            }\n                            finalize_allocation(pos_9, sub(pos_8, pos_9))\n                            let memPos_2 := mload(64)\n                            return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, pos_9), memPos_2))\n                        }\n                        case 0x3f7286f4 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let pos_10 := mload(64)\n                            let pos_11 := pos_10\n                            let length_6 := sload(/** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(pos_10, length_6)\n                            let _24 := 0x20\n                            pos_10 := add(pos_10, _24)\n                            mstore(_1, /** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let srcPtr_4 := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                            let i_6 := _1\n                            for { } lt(i_6, length_6) { i_6 := add(i_6, 1) }\n                            {\n                                mstore(pos_10, and(sload(srcPtr_4), sub(shl(160, 1), 1)))\n                                pos_10 := add(pos_10, _24)\n                                srcPtr_4 := add(srcPtr_4, 1)\n                            }\n                            finalize_allocation(pos_11, sub(pos_10, pos_11))\n                            let memPos_3 := mload(64)\n                            return(memPos_3, sub(abi_encode_array_address_dyn(memPos_3, pos_11), memPos_3))\n                        }\n                        case 0x5ebb6a75 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let ret := fun_deployRewardDistributor()\n                            let memPos_4 := mload(64)\n                            mstore(memPos_4, and(ret, sub(shl(160, 1), 1)))\n                            return(memPos_4, 32)\n                        }\n                        case 0x66bea26e {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let _25 := sub(shl(160, 1), 1)\n                            let value_4 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:1931:1944  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _25)\n                            /// @src 84:1931:1950  \"rewardTracker.gov()\"\n                            let _26 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:1931:1950  \"rewardTracker.gov()\"\n                            mstore(_26, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x12d43a51))\n                            /// @src 84:1931:1950  \"rewardTracker.gov()\"\n                            let _27 := 32\n                            let _28 := staticcall(gas(), value_4, _26, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:1931:1950  \"rewardTracker.gov()\" */ _26, _27)\n                            if iszero(_28)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_12 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_12, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_12, returndatasize())\n                            }\n                            /// @src 84:1931:1950  \"rewardTracker.gov()\"\n                            let expr_1 := _1\n                            if _28\n                            {\n                                let _29 := _27\n                                if gt(_27, returndatasize()) { _29 := returndatasize() }\n                                finalize_allocation(_26, _29)\n                                expr_1 := abi_decode_address_fromMemory(_26, add(_26, _29))\n                            }\n                            /// @src 84:1976:1992  \"DEPLOYER_ADDRESS\"\n                            fun_assertEq(expr_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 84:1976:1992  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _25))\n                            /// @src 84:2013:2042  \"rewardTracker.isInitialized()\"\n                            let _30 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2013:2042  \"rewardTracker.isInitialized()\"\n                            mstore(_30, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x392e53cd))\n                            /// @src 84:2013:2042  \"rewardTracker.isInitialized()\"\n                            let _31 := staticcall(gas(), value_4, _30, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:2013:2042  \"rewardTracker.isInitialized()\" */ _30, /** @src 84:1931:1950  \"rewardTracker.gov()\" */ _27)\n                            /// @src 84:2013:2042  \"rewardTracker.isInitialized()\"\n                            if iszero(_31)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_13 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_13, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_13, returndatasize())\n                            }\n                            /// @src 84:2013:2042  \"rewardTracker.isInitialized()\"\n                            let expr_2 := _1\n                            if _31\n                            {\n                                let _32 := /** @src 84:1931:1950  \"rewardTracker.gov()\" */ _27\n                                /// @src 84:2013:2042  \"rewardTracker.isInitialized()\"\n                                if gt(/** @src 84:1931:1950  \"rewardTracker.gov()\" */ _27, /** @src 84:2013:2042  \"rewardTracker.isInitialized()\" */ returndatasize()) { _32 := returndatasize() }\n                                finalize_allocation(_30, _32)\n                                expr_2 := abi_decode_bool_fromMemory(_30, add(_30, _32))\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _33 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _33))\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            let _34 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            mstore(_34, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xf7fe3477))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 2:2099:2123  \"vm.assertEq(left, right)\" */ add(_34, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), iszero(iszero(expr_2)))\n                            mstore(add(/** @src 2:2099:2123  \"vm.assertEq(left, right)\" */ _34, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), /** @src 84:2044:2048  \"true\" */ 0x01)\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            let _35 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _33, /** @src 2:2099:2123  \"vm.assertEq(left, right)\" */ _34, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 68, /** @src 2:2099:2123  \"vm.assertEq(left, right)\" */ _34, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            if iszero(_35)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_14 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_14, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_14, returndatasize())\n                            }\n                            /// @src 2:2099:2123  \"vm.assertEq(left, right)\"\n                            if _35\n                            {\n                                finalize_allocation_37026(_34)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 84:2068:2095  \"rewardTracker.distributor()\"\n                            let _36 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2068:2095  \"rewardTracker.distributor()\"\n                            mstore(_36, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x17fc2125))\n                            /// @src 84:2068:2095  \"rewardTracker.distributor()\"\n                            let _37 := staticcall(gas(), value_4, _36, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:2068:2095  \"rewardTracker.distributor()\" */ _36, /** @src 84:1931:1950  \"rewardTracker.gov()\" */ _27)\n                            /// @src 84:2068:2095  \"rewardTracker.distributor()\"\n                            if iszero(_37)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_15 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_15, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_15, returndatasize())\n                            }\n                            /// @src 84:2068:2095  \"rewardTracker.distributor()\"\n                            let expr_3 := _1\n                            if _37\n                            {\n                                let _38 := /** @src 84:1931:1950  \"rewardTracker.gov()\" */ _27\n                                /// @src 84:2068:2095  \"rewardTracker.distributor()\"\n                                if gt(/** @src 84:1931:1950  \"rewardTracker.gov()\" */ _27, /** @src 84:2068:2095  \"rewardTracker.distributor()\" */ returndatasize()) { _38 := returndatasize() }\n                                finalize_allocation(_36, _38)\n                                expr_3 := abi_decode_address_fromMemory(_36, add(_36, _38))\n                            }\n                            /// @src 84:2097:2108  \"DISTRIBUTOR\"\n                            fun_assertEq(expr_3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 84:2097:2108  \"DISTRIBUTOR\" */ 0x25), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _25))\n                            return(_1, _1)\n                        }\n                        case 0x66d9a9a0 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let length_7 := sload(/** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _39 := array_allocation_size_array_string_dyn(length_7)\n                            let memPtr_4 := mload(64)\n                            finalize_allocation(memPtr_4, _39)\n                            mstore(memPtr_4, length_7)\n                            let mpos_3 := memPtr_4\n                            mpos_3 := add(memPtr_4, 0x20)\n                            mstore(_1, /** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let spos_2 := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                            let i_7 := _1\n                            for { } lt(i_7, length_7) { i_7 := add(i_7, 1) }\n                            {\n                                let memPtr_5 := mload(64)\n                                finalize_allocation_37029(memPtr_5)\n                                mstore(memPtr_5, and(sload(spos_2), sub(shl(160, 1), 1)))\n                                let _40 := add(spos_2, 1)\n                                let pos_16 := mload(64)\n                                let pos_17 := pos_16\n                                let length_8 := sload(_40)\n                                mstore(pos_16, length_8)\n                                pos_16 := add(pos_16, 0x20)\n                                mstore(_1, _40)\n                                let srcPtr_5 := keccak256(_1, 0x20)\n                                let itemCounter := _1\n                                for { }\n                                lt(add(itemCounter, 7), length_8)\n                                {\n                                    itemCounter := add(itemCounter, 8)\n                                }\n                                {\n                                    let data := sload(srcPtr_5)\n                                    let _41 := shl(224, 0xffffffff)\n                                    mstore(pos_16, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 224, data), _41))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _42 := 192\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(add(pos_16, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_42, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data), _41))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _43 := 160\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(add(pos_16, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_43, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data), _41))\n                                    let _44 := 96\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _45 := 128\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(add(pos_16, _44), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_45, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data), _41))\n                                    mstore(add(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _45), and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _44, data), _41))\n                                    mstore(add(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _43), and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64, data), _41))\n                                    mstore(add(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _42), and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, data), _41))\n                                    mstore(add(pos_16, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data, _41))\n                                    pos_16 := add(pos_16, 256)\n                                    srcPtr_5 := add(srcPtr_5, 1)\n                                }\n                                let data_1 := sload(srcPtr_5)\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 224, data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 96, data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64, data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                    itemCounter := add(itemCounter, 1)\n                                }\n                                if lt(itemCounter, length_8)\n                                {\n                                    mstore(pos_16, and(data_1, shl(224, 0xffffffff)))\n                                    pos_16 := add(pos_16, 0x20)\n                                }\n                                finalize_allocation(pos_17, sub(pos_16, pos_17))\n                                mstore(add(memPtr_5, 0x20), pos_17)\n                                mstore(mpos_3, memPtr_5)\n                                mpos_3 := add(mpos_3, 0x20)\n                                spos_2 := add(spos_2, 2)\n                            }\n                            let memPos_5 := mload(64)\n                            return(memPos_5, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_5, memPtr_4), memPos_5))\n                        }\n                        case 0x85226c81 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let length_9 := sload(/** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _46 := array_allocation_size_array_string_dyn(length_9)\n                            let memPtr_6 := mload(64)\n                            finalize_allocation(memPtr_6, _46)\n                            mstore(memPtr_6, length_9)\n                            let mpos_4 := memPtr_6\n                            let _47 := 0x20\n                            mpos_4 := add(memPtr_6, _47)\n                            mstore(0, /** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let spos_3 := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                            let i_8 := 0\n                            for { } lt(i_8, length_9) { i_8 := add(i_8, 1) }\n                            {\n                                let memPtr_7 := mload(64)\n                                finalize_allocation(memPtr_7, sub(abi_encode_string_storage(spos_3, memPtr_7), memPtr_7))\n                                mstore(mpos_4, memPtr_7)\n                                mpos_4 := add(mpos_4, _47)\n                                spos_3 := add(spos_3, 1)\n                            }\n                            let memPos_6 := mload(64)\n                            return(memPos_6, sub(abi_encode_array_string_dyn(memPos_6, memPtr_6), memPos_6))\n                        }\n                        case 0x916a17c6 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let length_10 := sload(/** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _48 := array_allocation_size_array_string_dyn(length_10)\n                            let memPtr_8 := mload(64)\n                            finalize_allocation(memPtr_8, _48)\n                            mstore(memPtr_8, length_10)\n                            let mpos_5 := memPtr_8\n                            mpos_5 := add(memPtr_8, 0x20)\n                            mstore(_1, /** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let spos_4 := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                            let i_9 := _1\n                            for { } lt(i_9, length_10) { i_9 := add(i_9, 1) }\n                            {\n                                let memPtr_9 := mload(64)\n                                finalize_allocation_37029(memPtr_9)\n                                mstore(memPtr_9, and(sload(spos_4), sub(shl(160, 1), 1)))\n                                let _49 := add(spos_4, 1)\n                                let pos_18 := mload(64)\n                                let pos_19 := pos_18\n                                let length_11 := sload(_49)\n                                mstore(pos_18, length_11)\n                                pos_18 := add(pos_18, 0x20)\n                                mstore(_1, _49)\n                                let srcPtr_6 := keccak256(_1, 0x20)\n                                let itemCounter_1 := _1\n                                for { }\n                                lt(add(itemCounter_1, 7), length_11)\n                                {\n                                    itemCounter_1 := add(itemCounter_1, 8)\n                                }\n                                {\n                                    let data_2 := sload(srcPtr_6)\n                                    let _50 := shl(224, 0xffffffff)\n                                    mstore(pos_18, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 224, data_2), _50))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _51 := 192\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(add(pos_18, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_51, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_2), _50))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _52 := 160\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(add(pos_18, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_52, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_2), _50))\n                                    let _53 := 96\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _54 := 128\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(add(pos_18, _53), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_54, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_2), _50))\n                                    mstore(add(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _54), and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _53, data_2), _50))\n                                    mstore(add(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _52), and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64, data_2), _50))\n                                    mstore(add(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _51), and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, data_2), _50))\n                                    mstore(add(pos_18, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_2, _50))\n                                    pos_18 := add(pos_18, 256)\n                                    srcPtr_6 := add(srcPtr_6, 1)\n                                }\n                                let data_3 := sload(srcPtr_6)\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 224, data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 96, data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64, data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, data_3), shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                    itemCounter_1 := add(itemCounter_1, 1)\n                                }\n                                if lt(itemCounter_1, length_11)\n                                {\n                                    mstore(pos_18, and(data_3, shl(224, 0xffffffff)))\n                                    pos_18 := add(pos_18, 0x20)\n                                }\n                                finalize_allocation(pos_19, sub(pos_18, pos_19))\n                                mstore(add(memPtr_9, 0x20), pos_19)\n                                mstore(mpos_5, memPtr_9)\n                                mpos_5 := add(mpos_5, 0x20)\n                                spos_4 := add(spos_4, 2)\n                            }\n                            let memPos_7 := mload(64)\n                            return(memPos_7, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_7, memPtr_8), memPos_7))\n                        }\n                        case 0x91da21b4 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let _55 := sload(/** @src 84:2471:2483  \"TEAM_ADDRESS\" */ 0x1e)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let value_5 := and(sload(/** @src 84:2327:2343  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _56 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            mstore(_56, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_56, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_5)\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _57 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _56, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _56, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(_57)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_20 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_20, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_20, returndatasize())\n                            }\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if _57\n                            {\n                                finalize_allocation_37026(_56)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_6 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:2358:2371  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            if iszero(extcodesize(value_6))\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            let _58 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            mstore(_58, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\" */ add(_58, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), and(shr(8, _55), sub(shl(160, 1), 1)))\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            let _59 := call(gas(), value_6, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\" */ _58, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\" */ _58, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            if iszero(_59)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_21 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_21, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_21, returndatasize())\n                            }\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            if _59\n                            {\n                                finalize_allocation_37026(_58)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            let _60 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            mstore(_60, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            let _61 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 84:2397:2411  \"vm.stopPrank()\" */ _60, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:2397:2411  \"vm.stopPrank()\" */ _60, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            if iszero(_61)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_22 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_22, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_22, returndatasize())\n                            }\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            if _61\n                            {\n                                finalize_allocation_37026(_60)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_7 := and(sload(/** @src 84:2508:2516  \"zfiToken\" */ 0x21), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            let value_8 := and(sload(32), sub(shl(160, 1), 1))\n                            /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                            let expr_mpos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                            let _62 := add(expr_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                            mstore(_62, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\" */ add(expr_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), value_8)\n                            /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                            mstore(expr_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36)\n                            /// @src 4:27501:27539  \"abi.encodeWithSelector(0x70a08231, to)\"\n                            finalize_allocation_83336(expr_mpos)\n                            /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                            pop(staticcall(gas(), value_7, _62, mload(expr_mpos), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, _1))\n                            /// @src 4:27484:27540  \"token.staticcall(abi.encodeWithSelector(0x70a08231, to))\"\n                            let expr_component_mpos := extract_returndata()\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ add(expr_component_mpos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 4:27568:27598  \"abi.decode(balData, (uint256))\" */ expr_component_mpos)), expr_component_mpos), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(0, 0)\n                            }\n                            sstore(/** @src 9:6854:6866  \"self._target\" */ 17, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(160, 0xffffffffffffffffffffffff)), value_7))\n                            sstore(/** @src 9:7009:7018  \"self._sig\" */ 15, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ or(and(sload(/** @src 9:7009:7018  \"self._sig\" */ 15), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(0xffffffff)), /** @src 4:27524:27534  \"0x70a08231\" */ 0x70a08231))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let oldLen := sload(/** @src 9:7505:7515  \"self._keys\" */ 14)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            if iszero(lt(oldLen, 18446744073709551616))\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                                revert(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, 36)\n                            }\n                            let _63 := add(oldLen, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            sstore(/** @src 9:7505:7515  \"self._keys\" */ 14, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _63)\n                            if iszero(lt(oldLen, _63))\n                            {\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                mstore(4, 0x32)\n                                revert(_1, 36)\n                            }\n                            mstore(_1, /** @src 9:7505:7515  \"self._keys\" */ 14)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            sstore(add(84800337471693920904250232874319843718400766719524250287777680170677855896573, oldLen), value_8)\n                            let value_9 := and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            let value_10 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 224, sload(/** @src 9:7009:7018  \"self._sig\" */ 15))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _64 := sload(/** @src 9:15610:15621  \"self._depth\" */ 16)\n                            /// @src 9:15653:15687  \"stdStorageSafe.getCallParams(self)\"\n                            let expr_mpos_1 := fun_getCallParams_37039()\n                            /// @src 9:15703:15718  \"self.finds[who]\"\n                            let _65 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_9)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _66 := and(value_10, shl(224, 0xffffffff))\n                            mstore(_1, _66)\n                            mstore(32, _65)\n                            let dataSlot := keccak256(_1, 64)\n                            /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                            let expr_mpos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                            let _67 := add(expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            let length_12 := mload(expr_mpos_1)\n                            let _68 := add(expr_mpos_1, 32)\n                            copy_memory_to_memory_with_cleanup(_68, _67, length_12)\n                            let _69 := add(/** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_12)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_69, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _64)\n                            /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                            let _70 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _69, /** @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2)\n                            mstore(expr_mpos_2, add(_70, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32))\n                            /// @src 9:15735:15772  \"abi.encodePacked(params, field_depth)\"\n                            finalize_allocation(expr_mpos_2, add(_70, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64))\n                            mstore(_1, /** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _67, mload(/** @src 9:15725:15773  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_2)))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(32, dataSlot)\n                            /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                            if /** @src 9:15702:15780  \"!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:15703:15780  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ keccak256(_1, 64), /** @src 9:15610:15621  \"self._depth\" */ 3)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff))\n                            /// @src 9:15698:15824  \"if (!self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                            {\n                                /// @src 9:13208:13241  \"stdStorageSafe.find(self, _clear)\"\n                                pop(fun_find())\n                            }\n                            /// @src 9:15857:15872  \"self.finds[who]\"\n                            let _71 := mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(value_9)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(_1, _66)\n                            mstore(32, _71)\n                            let dataSlot_1 := keccak256(_1, 64)\n                            /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                            let expr_mpos_3 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                            let _72 := add(expr_mpos_3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            let length_13 := mload(expr_mpos_1)\n                            copy_memory_to_memory_with_cleanup(_68, _72, length_13)\n                            let _73 := add(/** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_13)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_73, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _64)\n                            /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                            let _74 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _73, /** @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3)\n                            mstore(expr_mpos_3, add(_74, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32))\n                            /// @src 9:15889:15926  \"abi.encodePacked(params, field_depth)\"\n                            finalize_allocation(expr_mpos_3, add(_74, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64))\n                            mstore(_1, /** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _72, mload(/** @src 9:15879:15927  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_3)))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(32, dataSlot_1)\n                            let dataSlot_2 := keccak256(_1, 64)\n                            let _75 := sload(/** @src 9:15943:15958  \"data.offsetLeft\" */ add(dataSlot_2, /** @src 9:7505:7515  \"self._keys\" */ 1))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _76 := sload(/** @src 9:15961:15977  \"data.offsetRight\" */ add(dataSlot_2, /** @src 9:7009:7018  \"self._sig\" */ 2))\n                            /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                            if /** @src 9:15942:15982  \"(data.offsetLeft + data.offsetRight) > 0\" */ iszero(iszero(/** @src 9:15943:15977  \"data.offsetLeft + data.offsetRight\" */ checked_add_uint256(_75, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _76)))\n                            /// @src 9:15938:16398  \"if ((data.offsetLeft + data.offsetRight) > 0) {...\"\n                            {\n                                /// @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\"\n                                let _77 := checked_add_uint256(_75, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _76)\n                                /// @src 9:16021:16024  \"256\"\n                                let _78 := 0x0100\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if gt(sub(/** @src 9:16021:16024  \"256\" */ _78, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _77), /** @src 9:16021:16024  \"256\" */ _78)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                {\n                                    mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(_1, 36)\n                                }\n                                if gt(sub(/** @src 9:16021:16024  \"256\" */ _78, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _77), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff)\n                                {\n                                    mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(_1, 36)\n                                }\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                let _79 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                mstore(_79, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x348051d7))\n                                mstore(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_79, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), shl(sub(/** @src 9:16021:16024  \"256\" */ _78, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _77), /** @src 9:7505:7515  \"self._keys\" */ 1))\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                let _80 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _79, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _79, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                if iszero(_80)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_23 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_23, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_23, returndatasize())\n                                }\n                                /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                let expr_mpos_4 := _1\n                                if _80\n                                {\n                                    let _81 := returndatasize()\n                                    returndatacopy(_79, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ _81)\n                                    finalize_allocation(_79, _81)\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    if slt(sub(/** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_79, _81), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _79), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    {\n                                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                        revert(_1, _1)\n                                    }\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let offset := mload(_79)\n                                    if gt(offset, 0xffffffffffffffff)\n                                    {\n                                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                        revert(_1, _1)\n                                    }\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    if iszero(slt(add(add(_79, offset), /** @src 84:2327:2343  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_79, _81)))\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    {\n                                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                        revert(_1, _1)\n                                    }\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let _82 := mload(add(_79, offset))\n                                    let _83 := array_allocation_size_bytes(_82)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    let memPtr_10 := mload(64)\n                                    finalize_allocation(memPtr_10, _83)\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    mstore(memPtr_10, _82)\n                                    if gt(add(add(add(_79, offset), _82), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), /** @src 9:16314:16333  \"vm.toString(maxVal)\" */ add(_79, _81))\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    {\n                                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                        revert(_1, _1)\n                                    }\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    copy_memory_to_memory_with_cleanup(add(add(_79, offset), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _82)\n                                    /// @src 9:16314:16333  \"vm.toString(maxVal)\"\n                                    expr_mpos_4 := memPtr_10\n                                }\n                                /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                                let expr_mpos_5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ add(expr_mpos_5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Pac\")\n                                mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"ked slot. We can't fit value gre\")\n                                mstore(add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96), \"ater than \")\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let length_14 := mload(expr_mpos_4)\n                                copy_memory_to_memory_with_cleanup(add(expr_mpos_4, 32), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_14)\n                                /// @src 9:16170:16355  \"abi.encodePacked(...\"\n                                let _84 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_14), /** @src 9:16170:16355  \"abi.encodePacked(...\" */ expr_mpos_5)\n                                mstore(expr_mpos_5, add(_84, 74))\n                                finalize_allocation(expr_mpos_5, add(_84, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 106))\n                                if iszero(/** @src 9:16103:16124  \"uint256(set) < maxVal\" */ lt(/** @src 84:2526:2533  \"2 ether\" */ 0x1bc16d674ec80000, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(sub(/** @src 9:16021:16024  \"256\" */ _78, /** @src 9:16028:16062  \"data.offsetLeft + data.offsetRight\" */ _77), /** @src 9:7505:7515  \"self._keys\" */ 1)))\n                                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    let memPtr_11 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    mstore(memPtr_11, shl(229, 4594637))\n                                    mstore(add(memPtr_11, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), 32)\n                                    /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    revert(memPtr_11, sub(abi_encode_string(expr_mpos_5, add(memPtr_11, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36)), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_11))\n                                }\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _85 := sload(/** @src 9:16445:16454  \"data.slot\" */ dataSlot_2)\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            let _86 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            mstore(_86, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            let _87 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ _86, sub(abi_encode_address_bytes32(add(_86, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ value_9, _85), _86), _86, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            if iszero(_87)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_24 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_24, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_24, returndatasize())\n                            }\n                            /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                            let expr_4 := _1\n                            if _87\n                            {\n                                let _88 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                                /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                                if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32, /** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ returndatasize()) { _88 := returndatasize() }\n                                finalize_allocation(_86, _88)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\" */ add(_86, _88), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _86), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 9:16424:16456  \"vm.load(who, bytes32(data.slot))\"\n                                expr_4 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_86)\n                            }\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            let _89 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            mstore(_89, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            let _90 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _89, sub(abi_encode_address_bytes32_bytes32(add(_89, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ value_9, _85, /** @src 9:12656:12748  \"(uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)) | (varValue << offsetRight)\" */ or(/** @src 9:12657:12719  \"uint256(curValue) & ~getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr_4, /** @src 9:12677:12719  \"~getMaskByOffsets(offsetLeft, offsetRight)\" */ not(/** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _76, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:12678:12719  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ _76, _75)), /** @src 9:7505:7515  \"self._keys\" */ 1), /** @src 9:12275:12388  \"assembly {...\" */ not(0))))), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(_76, /** @src 84:2526:2533  \"2 ether\" */ 0x1bc16d674ec80000))), /** @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\" */ _89), _89, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            if iszero(_90)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_25 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_25, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_25, returndatasize())\n                            }\n                            /// @src 9:16587:16630  \"vm.store(who, bytes32(data.slot), valToSet)\"\n                            if _90\n                            {\n                                finalize_allocation_37026(_89)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_11 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 224, sload(/** @src 9:7009:7018  \"self._sig\" */ 15))\n                            /// @src 9:1392:1411  \"getCallParams(self)\"\n                            let expr_mpos_6 := fun_getCallParams_83337()\n                            /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                            let expr_mpos_7 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                            let _91 := add(expr_mpos_7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            mstore(_91, and(value_11, shl(224, 0xffffffff)))\n                            let length_15 := mload(expr_mpos_6)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos_6, 32), add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), length_15)\n                            /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                            let _92 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_15), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_7)\n                            mstore(expr_mpos_7, add(_92, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4))\n                            /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                            finalize_allocation(expr_mpos_7, add(_92, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36))\n                            let value_12 := and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                            let expr_component := staticcall(gas(), value_12, _91, mload(expr_mpos_7), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0, 0)\n                            /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                            let expr_component_mpos_1 := extract_returndata()\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _93 := sload(/** @src 9:15610:15621  \"self._depth\" */ 16)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            if iszero(eq(_93, and(_93, sub(shl(251, 1), 1))))\n                            {\n                                mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(0, 36)\n                            }\n                            /// @src 9:10974:10985  \"bytes32 out\"\n                            let var_out := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0\n                            /// @src 9:11010:11018  \"b.length\"\n                            let expr_5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos_1)\n                            /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                            let expr_6 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_out\n                            /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                            switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr_5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_6 := expr_5 }\n                            default {\n                                expr_6 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                            }\n                            /// @src 9:11054:11067  \"uint256 i = 0\"\n                            let var_i := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_out\n                            /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                            for { }\n                            /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_6)\n                            /// @src 9:11054:11067  \"uint256 i = 0\"\n                            {\n                                /// @src 9:11078:11081  \"i++\"\n                                var_i := increment_uint256(var_i)\n                            }\n                            {\n                                /// @src 9:11114:11124  \"offset + i\"\n                                let _94 := checked_add_uint256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(5, _93), /** @src 9:11114:11124  \"offset + i\" */ var_i)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if iszero(lt(_94, mload(expr_component_mpos_1)))\n                                {\n                                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(4, 0x32)\n                                    revert(0, 36)\n                                }\n                                let cleaned := and(mload(add(add(expr_component_mpos_1, _94), 32)), shl(248, 255))\n                                let product := shl(/** @src 9:15610:15621  \"self._depth\" */ 3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_i)\n                                if iszero(or(iszero(var_i), eq(8, div(product, var_i))))\n                                {\n                                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    mstore(4, /** @src 9:6854:6866  \"self._target\" */ 17)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(0, 36)\n                                }\n                                /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                                var_out := or(var_out, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shr(product, cleaned))\n                            }\n                            /// @src 9:16724:16753  \"!success || callResult != set\"\n                            let expr_7 := /** @src 9:16724:16732  \"!success\" */ iszero(expr_component)\n                            /// @src 9:16724:16753  \"!success || callResult != set\"\n                            if /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ iszero(/** @src 9:16724:16732  \"!success\" */ expr_7)\n                            /// @src 9:16724:16753  \"!success || callResult != set\"\n                            {\n                                expr_7 := /** @src 9:16736:16753  \"callResult != set\" */ iszero(eq(var_out, /** @src 84:2526:2533  \"2 ether\" */ 0x1bc16d674ec80000))\n                            }\n                            /// @src 9:16720:16896  \"if (!success || callResult != set) {...\"\n                            if expr_7\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let _95 := sload(/** @src 9:16791:16800  \"data.slot\" */ dataSlot_2)\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                {\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(_1, _1)\n                                }\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                let _96 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                mstore(_96, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                let _97 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ _96, sub(abi_encode_address_bytes32_bytes32(add(_96, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), /** @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\" */ value_9, _95, expr_4), _96), _96, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                if iszero(_97)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_26 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_26, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_26, returndatasize())\n                                }\n                                /// @src 9:16769:16810  \"vm.store(who, bytes32(data.slot), curVal)\"\n                                if _97\n                                {\n                                    finalize_allocation_37026(_96)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    if _1 { revert(_1, _1) }\n                                }\n                                /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                                let _98 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                                mstore(_98, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                                mstore(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ add(_98, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), 32)\n                                mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _98, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 51)\n                                mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _98, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 68), /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Fai\")\n                                mstore(add(/** @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\" */ _98, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"led to write value.\")\n                                /// @src 9:16824:16885  \"revert(\\\"stdStorage find(StdStorage): Failed to write value.\\\")\"\n                                revert(_98, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            sstore(/** @src 9:6854:6866  \"self._target\" */ 17, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:6854:6866  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(160, 0xffffffffffffffffffffffff)))\n                            sstore(/** @src 9:7009:7018  \"self._sig\" */ 15, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:7009:7018  \"self._sig\" */ 15), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(0xffffffff)))\n                            let oldLen_1 := sload(/** @src 9:7505:7515  \"self._keys\" */ 14)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            sstore(/** @src 9:7505:7515  \"self._keys\" */ 14, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                            if iszero(iszero(oldLen_1))\n                            {\n                                mstore(0, /** @src 9:7505:7515  \"self._keys\" */ 14)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let _99 := add(84800337471693920904250232874319843718400766719524250287777680170677855896573, oldLen_1)\n                                let start := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                                for { }\n                                lt(start, _99)\n                                {\n                                    start := add(start, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                                }\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                { sstore(start, 0) }\n                            }\n                            sstore(/** @src 9:15610:15621  \"self._depth\" */ 16, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                            sstore(/** @src 9:11762:11787  \"self._enable_packed_slots\" */ 19, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:11762:11787  \"self._enable_packed_slots\" */ 19), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(255)))\n                            let oldLen_2 := extract_byte_array_length(sload(/** @src 9:11804:11818  \"self._calldata\" */ 20))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            if iszero(iszero(oldLen_2))\n                            {\n                                switch gt(oldLen_2, /** @src 84:2327:2343  \"DEPLOYER_ADDRESS\" */ 0x1f)\n                                case /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 1 {\n                                    mstore(0, /** @src 9:11804:11818  \"self._calldata\" */ 20)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    let _100 := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                                    let _101 := add(_100, shr(5, add(oldLen_2, /** @src 84:2327:2343  \"DEPLOYER_ADDRESS\" */ 0x1f)))\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    let start_1 := 0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed\n                                    for { }\n                                    lt(start_1, _101)\n                                    {\n                                        start_1 := add(start_1, /** @src 9:7505:7515  \"self._keys\" */ 1)\n                                    }\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    { sstore(start_1, 0) }\n                                    sstore(/** @src 9:11804:11818  \"self._calldata\" */ 20, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                                    sstore(_100, 0)\n                                }\n                                default {\n                                    sstore(/** @src 9:11804:11818  \"self._calldata\" */ 20, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                                }\n                            }\n                            let value_13 := and(sload(32), sub(shl(160, 1), 1))\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            let _102 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            mstore(_102, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2706:2726  \"vm.startPrank(USER1)\" */ add(_102, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_13)\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            let _103 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 84:2706:2726  \"vm.startPrank(USER1)\" */ _102, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2706:2726  \"vm.startPrank(USER1)\" */ _102, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            if iszero(_103)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_27 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_27, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_27, returndatasize())\n                            }\n                            /// @src 84:2706:2726  \"vm.startPrank(USER1)\"\n                            if _103\n                            {\n                                finalize_allocation_37026(_102)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_14 := and(sload(/** @src 84:2508:2516  \"zfiToken\" */ 0x21), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            let value_15 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:2358:2371  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\"\n                            let _104 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\"\n                            mstore(_104, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x095ea7b3))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\" */ add(_104, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_15)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\" */ _104, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), /** @src 84:2526:2533  \"2 ether\" */ 0x1bc16d674ec80000)\n                            /// @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\"\n                            let _105 := call(gas(), value_14, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\" */ _104, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 68, /** @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\" */ _104, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            /// @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\"\n                            if iszero(_105)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_28 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_28, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_28, returndatasize())\n                            }\n                            /// @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\"\n                            if _105\n                            {\n                                let _106 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                                /// @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\"\n                                if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32, /** @src 84:2740:2789  \"zfiToken.approve(address(rewardTracker), 2 ether)\" */ returndatasize()) { _106 := returndatasize() }\n                                finalize_allocation(_104, _106)\n                                pop(abi_decode_bool_fromMemory(_104, add(_104, _106)))\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let value_16 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:2358:2371  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 84:2803:2831  \"rewardTracker.stake(2 ether)\"\n                            if iszero(extcodesize(value_16))\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2803:2831  \"rewardTracker.stake(2 ether)\"\n                            let _107 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2803:2831  \"rewardTracker.stake(2 ether)\"\n                            mstore(_107, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x534a7e1d))\n                            mstore(/** @src 84:2803:2831  \"rewardTracker.stake(2 ether)\" */ add(_107, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), /** @src 84:2526:2533  \"2 ether\" */ 0x1bc16d674ec80000)\n                            /// @src 84:2803:2831  \"rewardTracker.stake(2 ether)\"\n                            let _108 := call(gas(), value_16, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 84:2803:2831  \"rewardTracker.stake(2 ether)\" */ _107, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2803:2831  \"rewardTracker.stake(2 ether)\" */ _107, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2803:2831  \"rewardTracker.stake(2 ether)\"\n                            if iszero(_108)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_29 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_29, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_29, returndatasize())\n                            }\n                            /// @src 84:2803:2831  \"rewardTracker.stake(2 ether)\"\n                            if _108\n                            {\n                                finalize_allocation_37026(_107)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            let _109 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            mstore(_109, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            let _110 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _1, /** @src 84:2841:2855  \"vm.stopPrank()\" */ _109, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:2841:2855  \"vm.stopPrank()\" */ _109, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            if iszero(_110)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_30 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_30, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_30, returndatasize())\n                            }\n                            /// @src 84:2841:2855  \"vm.stopPrank()\"\n                            if _110\n                            {\n                                finalize_allocation_37026(_109)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_17 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:2358:2371  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            let value_18 := and(sload(32), sub(shl(160, 1), 1))\n                            /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                            let _111 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                            mstore(_111, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\" */ add(_111, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_18)\n                            /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                            let _112 := staticcall(gas(), value_17, _111, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\" */ _111, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                            if iszero(_112)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_31 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_31, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_31, returndatasize())\n                            }\n                            /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                            let expr_8 := _1\n                            if _112\n                            {\n                                let _113 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                                /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                                if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32, /** @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\" */ returndatasize()) { _113 := returndatasize() }\n                                finalize_allocation(_111, _113)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\" */ add(_111, _113), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _111), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 84:2883:2913  \"rewardTracker.balanceOf(USER1)\"\n                                expr_8 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_111)\n                            }\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            let _114 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            mstore(_114, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                            mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_114, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_8)\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _114, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), /** @src 84:2526:2533  \"2 ether\" */ 0x1bc16d674ec80000)\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            let _115 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _114, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _114, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            if iszero(_115)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_32 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_32, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_32, returndatasize())\n                            }\n                            /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                            if _115\n                            {\n                                finalize_allocation_37026(_114)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            return(_1, _1)\n                        }\n                        case 0xb5508aa9 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let length_16 := sload(/** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _116 := array_allocation_size_array_string_dyn(length_16)\n                            let memPtr_12 := mload(64)\n                            finalize_allocation(memPtr_12, _116)\n                            mstore(memPtr_12, length_16)\n                            let mpos_6 := memPtr_12\n                            let _117 := 0x20\n                            mpos_6 := add(memPtr_12, _117)\n                            mstore(0, /** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let spos_5 := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                            let i_10 := 0\n                            for { } lt(i_10, length_16) { i_10 := add(i_10, 1) }\n                            {\n                                let memPtr_13 := mload(64)\n                                finalize_allocation(memPtr_13, sub(abi_encode_string_storage(spos_5, memPtr_13), memPtr_13))\n                                mstore(mpos_6, memPtr_13)\n                                mpos_6 := add(mpos_6, _117)\n                                spos_5 := add(spos_5, 1)\n                            }\n                            let memPos_8 := mload(64)\n                            return(memPos_8, sub(abi_encode_array_string_dyn(memPos_8, memPtr_12), memPos_8))\n                        }\n                        case 0xba414fa6 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let ret_1 := fun_failed()\n                            let memPos_9 := mload(64)\n                            mstore(memPos_9, iszero(iszero(ret_1)))\n                            return(memPos_9, 32)\n                        }\n                        case 0xcba6b10b {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                            let value_19 := calldataload(4)\n                            let _118 := sub(shl(160, 1), 1)\n                            if iszero(eq(value_19, and(value_19, _118))) { revert(_1, _1) }\n                            let ret_2 := fun_deployRewardTracker(value_19)\n                            let memPos_10 := mload(64)\n                            mstore(memPos_10, and(ret_2, _118))\n                            return(memPos_10, 32)\n                        }\n                        case 0xd895c947 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let _119 := sub(shl(160, 1), 1)\n                            let _120 := sload(/** @src 84:2159:2171  \"TEAM_ADDRESS\" */ 0x1e)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let value_20 := and(sload(/** @src 84:2327:2343  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _119)\n                            let _121 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _121))\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _122 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            mstore(_122, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_122, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), value_20)\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            let _123 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _121, _1, /** @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _122, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _122, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if iszero(_123)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_33 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_33, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_33, returndatasize())\n                            }\n                            /// @src 84:2313:2344  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                            if _123\n                            {\n                                finalize_allocation_37026(_122)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_21 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:2358:2371  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _119)\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            if iszero(extcodesize(value_21))\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            let _124 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            mstore(_124, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x67d6abd1))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\" */ add(_124, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4), and(shr(8, _120), _119))\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            let _125 := call(gas(), value_21, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\" */ _124, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\" */ _124, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            if iszero(_125)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_34 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_34, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_34, returndatasize())\n                            }\n                            /// @src 84:2358:2387  \"rewardTracker.setGov(_newGov)\"\n                            if _125\n                            {\n                                finalize_allocation_37026(_124)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _121))\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            let _126 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            mstore(_126, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            let _127 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _121, _1, /** @src 84:2397:2411  \"vm.stopPrank()\" */ _126, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:2397:2411  \"vm.stopPrank()\" */ _126, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            if iszero(_127)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_35 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_35, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_35, returndatasize())\n                            }\n                            /// @src 84:2397:2411  \"vm.stopPrank()\"\n                            if _127\n                            {\n                                finalize_allocation_37026(_126)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            let value_22 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:2358:2371  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _119)\n                            /// @src 84:2199:2218  \"rewardTracker.gov()\"\n                            let _128 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 84:2199:2218  \"rewardTracker.gov()\"\n                            mstore(_128, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x12d43a51))\n                            /// @src 84:2199:2218  \"rewardTracker.gov()\"\n                            let _129 := staticcall(gas(), value_22, _128, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 4, /** @src 84:2199:2218  \"rewardTracker.gov()\" */ _128, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32)\n                            /// @src 84:2199:2218  \"rewardTracker.gov()\"\n                            if iszero(_129)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_36 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_36, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_36, returndatasize())\n                            }\n                            /// @src 84:2199:2218  \"rewardTracker.gov()\"\n                            let expr_9 := _1\n                            if _129\n                            {\n                                let _130 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 32\n                                /// @src 84:2199:2218  \"rewardTracker.gov()\"\n                                if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _130, /** @src 84:2199:2218  \"rewardTracker.gov()\" */ returndatasize()) { _130 := returndatasize() }\n                                finalize_allocation(_128, _130)\n                                expr_9 := abi_decode_address_fromMemory(_128, add(_128, _130))\n                            }\n                            /// @src 84:2244:2256  \"TEAM_ADDRESS\"\n                            fun_assertEq(expr_9, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(shr(8, sload(/** @src 84:2159:2171  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _119))\n                            return(_1, _1)\n                        }\n                        case 0xe20c9f71 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let pos_37 := mload(64)\n                            let pos_38 := pos_37\n                            let length_17 := sload(/** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(pos_37, length_17)\n                            let _131 := 0x20\n                            pos_37 := add(pos_37, _131)\n                            mstore(_1, /** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let srcPtr_7 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                            let i_11 := _1\n                            for { } lt(i_11, length_17) { i_11 := add(i_11, 1) }\n                            {\n                                mstore(pos_37, and(sload(srcPtr_7), sub(shl(160, 1), 1)))\n                                pos_37 := add(pos_37, _131)\n                                srcPtr_7 := add(srcPtr_7, 1)\n                            }\n                            finalize_allocation(pos_38, sub(pos_37, pos_38))\n                            let memPos_11 := mload(64)\n                            return(memPos_11, sub(abi_encode_array_address_dyn(memPos_11, pos_38), memPos_11))\n                        }\n                        case 0xfa7626d4 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                            let value_23 := and(sload(/** @src 13:1016:1042  \"bool public IS_TEST = true\" */ 30), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff)\n                            let memPos_12 := mload(64)\n                            mstore(memPos_12, iszero(iszero(value_23)))\n                            return(memPos_12, 32)\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_encode_array_address_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, _1)\n                    mstore(headStart, _1)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    pos := add(headStart, 64)\n                    let srcPtr := add(value0, _1)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, _1)\n                    }\n                    tail := pos\n                }\n                function copy_memory_to_memory_with_cleanup(src, dst, length)\n                {\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 32) }\n                    {\n                        mstore(add(dst, i), mload(add(src, i)))\n                    }\n                    mstore(add(dst, length), 0)\n                }\n                function abi_encode_string(value, pos) -> end\n                {\n                    let length := mload(value)\n                    mstore(pos, length)\n                    copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                    end := add(add(pos, and(add(length, 31), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31))), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                }\n                function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, _1)\n                    mstore(headStart, _1)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    let _2 := 64\n                    pos := add(headStart, _2)\n                    let tail_2 := add(add(headStart, shl(5, length)), _2)\n                    let srcPtr := add(value0, _1)\n                    let i := 0\n                    let i_1 := i\n                    for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                    {\n                        mstore(pos, add(sub(tail_2, headStart), not(63)))\n                        let _3 := mload(srcPtr)\n                        let tail_3 := add(tail_2, _2)\n                        mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n                        let memberValue0 := mload(add(_3, _1))\n                        mstore(add(tail_2, _1), _2)\n                        let pos_1 := tail_3\n                        let length_1 := mload(memberValue0)\n                        mstore(tail_3, length_1)\n                        pos_1 := add(tail_2, 96)\n                        let srcPtr_1 := add(memberValue0, _1)\n                        let i_2 := i\n                        for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                            pos_1 := add(pos_1, _1)\n                            srcPtr_1 := add(srcPtr_1, _1)\n                        }\n                        tail_2 := pos_1\n                        srcPtr := add(srcPtr, _1)\n                        pos := add(pos, _1)\n                    }\n                    tail := tail_2\n                }\n                function abi_encode_array_string_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, _1)\n                    mstore(headStart, _1)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    pos := add(headStart, 64)\n                    let tail_2 := add(add(headStart, shl(5, length)), 64)\n                    let srcPtr := add(value0, _1)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, add(sub(tail_2, headStart), not(63)))\n                        tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                        srcPtr := add(srcPtr, _1)\n                        pos := add(pos, _1)\n                    }\n                    tail := tail_2\n                }\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                function finalize_allocation_37026(memPtr)\n                {\n                    if gt(memPtr, 0xffffffffffffffff)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, memPtr)\n                }\n                function finalize_allocation_37029(memPtr)\n                {\n                    let newFreePtr := add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                }\n                function finalize_allocation_83336(memPtr)\n                {\n                    let newFreePtr := add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 96)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ size, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 31), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_encode_address_bytes32(headStart, value0, value1) -> tail\n                {\n                    tail := add(headStart, 64)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(add(headStart, 32), value1)\n                }\n                /// @ast-id 286 @src 2:1243:1447  \"function failed() public view returns (bool) {...\"\n                function fun_failed() -> var\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value := and(sload(/** @src 2:1302:1309  \"_failed\" */ 0x08), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff)\n                    /// @src 2:1298:1441  \"if (_failed) {...\"\n                    switch /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ value\n                    case /** @src 2:1298:1441  \"if (_failed) {...\" */ 0 {\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        let _1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        mstore(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        let _3 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_1, _4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ 32)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_1)\n                        }\n                        /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                        var := /** @src 2:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                        /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                        leave\n                    }\n                    default /// @src 2:1298:1441  \"if (_failed) {...\"\n                    {\n                        /// @src 2:1325:1339  \"return _failed\"\n                        var := value\n                        leave\n                    }\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                function array_allocation_size_array_string_dyn(length) -> size\n                {\n                    if gt(length, 0xffffffffffffffff)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    size := add(shl(5, length), 0x20)\n                }\n                function extract_byte_array_length(data) -> length\n                {\n                    length := shr(1, data)\n                    let outOfPlaceEncoding := and(data, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(4, 0x22)\n                        revert(0, 0x24)\n                    }\n                }\n                function abi_encode_string_storage(value, pos) -> ret\n                {\n                    let slotValue := sload(value)\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, _2)\n                    case 0 {\n                        mstore(add(pos, _1), and(slotValue, not(255)))\n                        ret := add(add(pos, shl(5, iszero(iszero(length)))), _1)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ value)\n                        let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(pos, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(pos, i), _1)\n                    }\n                }\n                function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                {\n                    if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                    let value := mload(headStart)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    value0 := value\n                }\n                /// @ast-id 5871 @src 4:26720:26811  \"function deal(address to, uint256 give) internal virtual {...\"\n                function fun_deal(var_to)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1))\n                    /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                    let _2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                    /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                    mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ add(_2, 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(add(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 84:706:713  \"2 ether\" */ 0x1bc16d674ec80000)\n                    /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                    let _3 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ 0, _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _2, 0)\n                    if iszero(_3)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                    if _3 { finalize_allocation_37026(_2) }\n                }\n                /// @ast-id 62387 @src 84:1225:1538  \"function deployRewardTracker(address zfiTokenAddress) public returns(address rewardTrackerAddress){...\"\n                function fun_deployRewardTracker(var_zfiTokenAddress) -> var_rewardTrackerAddress\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 84:1347:1363  \"DEPLOYER_ADDRESS\" */ 0x1f)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _2 := sub(shl(160, 1), 1)\n                    let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ value, value)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _4 := 64\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_5, 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(_1, _2))\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _6 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3, /** @src -1:-1:-1 */ value, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src -1:-1:-1 */ value)\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if iszero(_6)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src -1:-1:-1 */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if _6\n                    {\n                        finalize_allocation_37026(_5)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        value := /** @src -1:-1:-1 */ value\n                    }\n                    /// @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\"\n                    let _7 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                    /// @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\"\n                    let _8 := datasize(\"RewardTracker_60417\")\n                    let _9 := add(_7, _8)\n                    if or(gt(_9, 0xffffffffffffffff), lt(_9, _7))\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                        revert(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36)\n                    }\n                    /// @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\"\n                    datacopy(_7, dataoffset(\"RewardTracker_60417\"), _8)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(_9, 96)\n                    mstore(add(_9, 96), 10)\n                    mstore(add(_9, 128), \"staked ZFI\")\n                    mstore(add(_9, 32), 160)\n                    mstore(add(_9, 160), 5)\n                    mstore(add(_9, 192), \"stZFY\")\n                    mstore(add(_9, _4), and(var_zfiTokenAddress, _2))\n                    /// @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\"\n                    let expr_address := create(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\" */ _7, add(sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _9, /** @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\" */ _7), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 224))\n                    /// @src 84:1405:1462  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress)\"\n                    if iszero(expr_address)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_1, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 84:1374:1463  \"rewardTrackerAddress = address(new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress))\"\n                    var_rewardTrackerAddress := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 84:1397:1463  \"address(new RewardTracker(\\\"staked ZFI\\\", \\\"stZFY\\\", zfiTokenAddress))\" */ expr_address, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                    /// @src 84:1486:1506  \"rewardTrackerAddress\"\n                    fun_log(var_rewardTrackerAddress)\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    let _10 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    let _11 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 84:1517:1531  \"vm.stopPrank()\" */ _10, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ 4, /** @src 84:1517:1531  \"vm.stopPrank()\" */ _10, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    if iszero(_11)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_2, /** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_2, returndatasize())\n                    }\n                    /// @src 84:1517:1531  \"vm.stopPrank()\"\n                    if _11\n                    {\n                        finalize_allocation_37026(_10)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 84:1333:1364  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                }\n                /// @ast-id 24443 @src 16:6841:6957  \"function log(address p0) internal pure {...\"\n                function fun_log(var_p0)\n                {\n                    /// @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                    let expr_mpos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                    /// @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                    let _1 := add(expr_mpos, 0x20)\n                    mstore(_1, shl(225, 0x161765e1))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(/** @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\" */ add(expr_mpos, 36), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(var_p0, sub(shl(160, 1), 1)))\n                    /// @src 16:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                    mstore(expr_mpos, 36)\n                    finalize_allocation_83336(expr_mpos)\n                    /// @src 16:1222:1381  \"assembly {...\"\n                    pop(staticcall(gas(), /** @src 16:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 16:1222:1381  \"assembly {...\" */ _1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 16:1105:1119  \"payload.length\" */ expr_mpos), /** @src -1:-1:-1 */ 0, 0))\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                function abi_encode_address_address(headStart, value0, value1) -> tail\n                {\n                    tail := add(headStart, 64)\n                    let _1 := sub(shl(160, 1), 1)\n                    mstore(headStart, and(value0, _1))\n                    mstore(add(headStart, 32), and(value1, _1))\n                }\n                /// @ast-id 62428 @src 84:1544:1857  \"function deployRewardDistributor() public returns(address rewardDistributorAddress){...\"\n                function fun_deployRewardDistributor() -> var_rewardDistributorAddress\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 84:1651:1667  \"DEPLOYER_ADDRESS\" */ 0x1f)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _2 := sub(shl(160, 1), 1)\n                    let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ value, value)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _4 := 64\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_5, 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(_1, _2))\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    let _6 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3, /** @src -1:-1:-1 */ value, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src -1:-1:-1 */ value)\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if iszero(_6)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src -1:-1:-1 */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                    if _6\n                    {\n                        finalize_allocation_37026(_5)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        value := /** @src -1:-1:-1 */ value\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value_1 := and(sload(/** @src 84:1743:1751  \"zfiToken\" */ 0x21), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                    let value_2 := and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 84:1762:1775  \"rewardTracker\" */ 0x22), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                    /// @src 84:1713:1777  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\"\n                    let _7 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                    /// @src 84:1713:1777  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\"\n                    let _8 := datasize(\"RewardDistributor_58666\")\n                    let _9 := add(_7, _8)\n                    if or(gt(_9, 0xffffffffffffffff), lt(_9, _7))\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                        revert(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36)\n                    }\n                    /// @src 84:1713:1777  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\"\n                    datacopy(_7, dataoffset(\"RewardDistributor_58666\"), _8)\n                    let expr_62412_address := create(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 84:1713:1777  \"new RewardDistributor(address(zfiToken), address(rewardTracker))\" */ _7, sub(abi_encode_address_address(_9, value_1, value_2), _7))\n                    if iszero(expr_62412_address)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_1, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 84:1678:1778  \"rewardDistributorAddress = address(new RewardDistributor(address(zfiToken), address(rewardTracker)))\"\n                    var_rewardDistributorAddress := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(/** @src 84:1705:1778  \"address(new RewardDistributor(address(zfiToken), address(rewardTracker)))\" */ expr_62412_address, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2)\n                    /// @src 84:1801:1825  \"rewardDistributorAddress\"\n                    fun_log(var_rewardDistributorAddress)\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                    }\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    let _10 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    let _11 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 84:1836:1850  \"vm.stopPrank()\" */ _10, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ 4, /** @src 84:1836:1850  \"vm.stopPrank()\" */ _10, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    if iszero(_11)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_2, /** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_2, returndatasize())\n                    }\n                    /// @src 84:1836:1850  \"vm.stopPrank()\"\n                    if _11\n                    {\n                        finalize_allocation_37026(_10)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        if value\n                        {\n                            revert(/** @src 84:1637:1668  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                    }\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                {\n                    if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                    let value := mload(headStart)\n                    if iszero(eq(value, iszero(iszero(value))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    value0 := value\n                }\n                /// @ast-id 560 @src 2:3454:3564  \"function assertEq(address left, address right) internal pure virtual {...\"\n                function fun_assertEq(var_left, var_right)\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1))\n                    /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                    let _2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                    /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                    mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x28a9b0fb))\n                    /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                    let _3 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _1, /** @src 2:3533:3557  \"vm.assertEq(left, right)\" */ _2, sub(abi_encode_address_address(add(_2, 4), var_left, var_right), _2), _2, 0)\n                    if iszero(_3)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 2:3533:3557  \"vm.assertEq(left, right)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 2:3533:3557  \"vm.assertEq(left, right)\"\n                    if _3 { finalize_allocation_37026(_2) }\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                function array_allocation_size_bytes(length) -> size\n                {\n                    if gt(length, 0xffffffffffffffff)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    size := add(and(add(length, 31), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                }\n                function extract_returndata() -> data\n                {\n                    switch returndatasize()\n                    case 0 { data := 96 }\n                    default {\n                        let _1 := returndatasize()\n                        let _2 := array_allocation_size_bytes(_1)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _2)\n                        mstore(memPtr, _1)\n                        data := memPtr\n                        returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ returndatasize())\n                    }\n                }\n                function checked_add_uint256(x, y) -> sum\n                {\n                    sum := add(x, y)\n                    if gt(x, sum)\n                    {\n                        mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function mapping_index_access_mapping_address_mapping_bytes4_mapping_bytes32_struct_FindData_storage_of_address(key) -> dataSlot\n                {\n                    mstore(0, and(key, sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    dataSlot := keccak256(0, 0x40)\n                }\n                /// @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                function abi_encode_address_bytes32_bytes32(headStart, value0, value1, value2) -> tail\n                {\n                    tail := add(headStart, 96)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(headStart, 32), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value1)\n                    mstore(/** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(headStart, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value2)\n                }\n                /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n                function fun_getCallParams_37039() -> var_mpos\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)\n                    /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ extract_byte_array_length(_1))\n                    case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let length := extract_byte_array_length(_1)\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        let _3 := 1\n                        switch and(_1, _3)\n                        case 0 {\n                            mstore(add(memPtr, _2), and(_1, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1052:1066  \"self._calldata\" */ 20)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let dataPos := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        /// @src 9:1151:1172  \"return self._calldata\"\n                        var_mpos := memPtr\n                        leave\n                    }\n                    default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length_1 := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(pos, length_1)\n                        let _4 := 0x20\n                        pos := add(pos, _4)\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                        let i_1 := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        for { }\n                        lt(i_1, length_1)\n                        {\n                            i_1 := add(i_1, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(pos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(srcPtr))\n                            pos := add(pos, _4)\n                            srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        /// @src 9:11302:11310  \"b.length\"\n                        let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _5 := 5\n                        let product := shl(_5, expr)\n                        if iszero(or(iszero(expr), eq(_4, div(product, expr))))\n                        {\n                            mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(4, 0x11)\n                            revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x24)\n                        }\n                        let _6 := array_allocation_size_bytes(product)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _6)\n                        mstore(memPtr_1, product)\n                        calldatacopy(add(memPtr_1, _4), calldatasize(), add(array_allocation_size_bytes(product), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31)))\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                        for { }\n                        /** @src 9:1109:1119  \"self._keys\" */ 1\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        {\n                            /// @src 9:11360:11363  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            if iszero(lt(var_i, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            { break }\n                            /// @src 9:11456:11540  \"assembly {...\"\n                            mstore(add(add(memPtr_1, shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _5, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _4), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                        }\n                        /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                        var_mpos := memPtr_1\n                        leave\n                    }\n                }\n                /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n                function fun_getCallParams_83337() -> var_mpos\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)\n                    /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ extract_byte_array_length(_1))\n                    case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let length := extract_byte_array_length(_1)\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        let _3 := 1\n                        switch and(_1, _3)\n                        case 0 {\n                            mstore(add(memPtr, _2), and(_1, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1052:1066  \"self._calldata\" */ 20)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let dataPos := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        /// @src 9:1151:1172  \"return self._calldata\"\n                        var_mpos := memPtr\n                        leave\n                    }\n                    default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length_1 := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(pos, length_1)\n                        let _4 := 0x20\n                        pos := add(pos, _4)\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                        let i_1 := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        for { }\n                        lt(i_1, length_1)\n                        {\n                            i_1 := add(i_1, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(pos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(srcPtr))\n                            pos := add(pos, _4)\n                            srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        /// @src 9:11302:11310  \"b.length\"\n                        let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _5 := 5\n                        let product := shl(_5, expr)\n                        if iszero(or(iszero(expr), eq(_4, div(product, expr))))\n                        {\n                            mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(4, 0x11)\n                            revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x24)\n                        }\n                        let _6 := array_allocation_size_bytes(product)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _6)\n                        mstore(memPtr_1, product)\n                        calldatacopy(add(memPtr_1, _4), calldatasize(), add(array_allocation_size_bytes(product), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31)))\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                        for { }\n                        /** @src 9:1109:1119  \"self._keys\" */ 1\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        {\n                            /// @src 9:11360:11363  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            if iszero(lt(var_i, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            { break }\n                            /// @src 9:11456:11540  \"assembly {...\"\n                            mstore(add(add(memPtr_1, shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _5, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _4), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                        }\n                        /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                        var_mpos := memPtr_1\n                        leave\n                    }\n                }\n                /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n                function fun_getCallParams() -> var_mpos\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)\n                    /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ extract_byte_array_length(_1))\n                    case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let length := extract_byte_array_length(_1)\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        let _3 := 1\n                        switch and(_1, _3)\n                        case 0 {\n                            mstore(add(memPtr, _2), and(_1, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1052:1066  \"self._calldata\" */ 20)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let dataPos := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        /// @src 9:1151:1172  \"return self._calldata\"\n                        var_mpos := memPtr\n                        leave\n                    }\n                    default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length_1 := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(pos, length_1)\n                        let _4 := 0x20\n                        pos := add(pos, _4)\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                        let i_1 := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        for { }\n                        lt(i_1, length_1)\n                        {\n                            i_1 := add(i_1, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(pos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(srcPtr))\n                            pos := add(pos, _4)\n                            srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        /// @src 9:11302:11310  \"b.length\"\n                        let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _5 := 5\n                        let product := shl(_5, expr)\n                        if iszero(or(iszero(expr), eq(_4, div(product, expr))))\n                        {\n                            mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(4, 0x11)\n                            revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x24)\n                        }\n                        let _6 := array_allocation_size_bytes(product)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _6)\n                        mstore(memPtr_1, product)\n                        calldatacopy(add(memPtr_1, _4), calldatasize(), add(array_allocation_size_bytes(product), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31)))\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                        for { }\n                        /** @src 9:1109:1119  \"self._keys\" */ 1\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        {\n                            /// @src 9:11360:11363  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            if iszero(lt(var_i, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            { break }\n                            /// @src 9:11456:11540  \"assembly {...\"\n                            mstore(add(add(memPtr_1, shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _5, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _4), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                        }\n                        /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                        var_mpos := memPtr_1\n                        leave\n                    }\n                }\n                /// @ast-id 7545 @src 9:953:1189  \"function getCallParams(StdStorage storage self) internal view returns (bytes memory) {...\"\n                function fun_getCallParams_99286() -> var_mpos\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 9:1052:1066  \"self._calldata\" */ 20)\n                    /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    switch /** @src 9:1052:1078  \"self._calldata.length == 0\" */ iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ extract_byte_array_length(_1))\n                    case /** @src 9:1048:1183  \"if (self._calldata.length == 0) {...\" */ 0 {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let length := extract_byte_array_length(_1)\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        let _3 := 1\n                        switch and(_1, _3)\n                        case 0 {\n                            mstore(add(memPtr, _2), and(_1, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1052:1066  \"self._calldata\" */ 20)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let dataPos := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        /// @src 9:1151:1172  \"return self._calldata\"\n                        var_mpos := memPtr\n                        leave\n                    }\n                    default /// @src 9:1048:1183  \"if (self._calldata.length == 0) {...\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length_1 := sload(/** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(pos, length_1)\n                        let _4 := 0x20\n                        pos := add(pos, _4)\n                        mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 9:1109:1119  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let srcPtr := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                        let i_1 := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        for { }\n                        lt(i_1, length_1)\n                        {\n                            i_1 := add(i_1, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(pos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(srcPtr))\n                            pos := add(pos, _4)\n                            srcPtr := add(srcPtr, /** @src 9:1109:1119  \"self._keys\" */ 1)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        /// @src 9:11302:11310  \"b.length\"\n                        let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11302:11310  \"b.length\" */ pos_1)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _5 := 5\n                        let product := shl(_5, expr)\n                        if iszero(or(iszero(expr), eq(_4, div(product, expr))))\n                        {\n                            mstore(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(4, 0x11)\n                            revert(/** @src 9:1077:1078  \"0\" */ 0x00, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x24)\n                        }\n                        let _6 := array_allocation_size_bytes(product)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _6)\n                        mstore(memPtr_1, product)\n                        calldatacopy(add(memPtr_1, _4), calldatasize(), add(array_allocation_size_bytes(product), not(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 31)))\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        let var_i := /** @src 9:1077:1078  \"0\" */ 0x00\n                        /// @src 9:11326:11550  \"for (uint256 i = 0; i < b.length; i++) {...\"\n                        for { }\n                        /** @src 9:1109:1119  \"self._keys\" */ 1\n                        /// @src 9:11331:11344  \"uint256 i = 0\"\n                        {\n                            /// @src 9:11360:11363  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            if iszero(lt(var_i, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11350:11358  \"b.length\" */ pos_1)))\n                            /// @src 9:11346:11358  \"i < b.length\"\n                            { break }\n                            /// @src 9:11456:11540  \"assembly {...\"\n                            mstore(add(add(memPtr_1, shl(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _5, /** @src 9:11456:11540  \"assembly {...\" */ var_i)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _4), mload(/** @src 9:11391:11395  \"b[i]\" */ memory_array_index_access_bytes32_dyn(pos_1, var_i)))\n                        }\n                        /// @src 9:1094:1120  \"return flatten(self._keys)\"\n                        var_mpos := memPtr_1\n                        leave\n                    }\n                }\n                /// @ast-id 7591 @src 9:1251:1594  \"function callTarget(StdStorage storage self) internal view returns (bool, bytes32) {...\"\n                function fun_callTarget() -> var, var_1\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(/** @src 9:1381:1390  \"self._sig\" */ 15))\n                    /// @src 9:1392:1411  \"getCallParams(self)\"\n                    let expr_mpos := fun_getCallParams()\n                    /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                    let expr_mpos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                    /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                    let _1 := 0x20\n                    let _2 := add(expr_mpos_1, _1)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(_2, and(value, shl(224, 0xffffffff)))\n                    let _3 := 36\n                    let length := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3), length)\n                    /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                    let _4 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1)\n                    let _5 := 4\n                    mstore(expr_mpos_1, add(_4, _5))\n                    finalize_allocation(expr_mpos_1, add(_4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                    /// @src 9:1458:1470  \"self._target\"\n                    let _6 := 17\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value_1 := and(sload(/** @src 9:1458:1470  \"self._target\" */ _6), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                    /// @src -1:-1:-1\n                    let _7 := 0\n                    /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                    let expr_component := staticcall(gas(), value_1, _2, mload(expr_mpos_1), /** @src -1:-1:-1 */ _7, _7)\n                    /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                    let expr_component_mpos := extract_returndata()\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _8 := sload(/** @src 9:1540:1551  \"self._depth\" */ 16)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let product := shl(5, _8)\n                    if iszero(eq(_8, and(_8, sub(shl(251, 1), 1))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3)\n                    }\n                    /// @src 9:10974:10985  \"bytes32 out\"\n                    let var_out := /** @src -1:-1:-1 */ _7\n                    /// @src 9:11010:11018  \"b.length\"\n                    let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos)\n                    /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                    let expr_1 := /** @src -1:-1:-1 */ _7\n                    /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                    switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)\n                    case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_1 := expr }\n                    default {\n                        expr_1 := /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1\n                    }\n                    /// @src 9:11054:11067  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ _7\n                    /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                    for { }\n                    /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_1)\n                    /// @src 9:11054:11067  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11078:11081  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11114:11124  \"offset + i\"\n                        let _9 := checked_add_uint256(product, var_i)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        if iszero(lt(_9, mload(expr_component_mpos)))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x32)\n                            revert(/** @src -1:-1:-1 */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3)\n                        }\n                        let cleaned := and(mload(add(add(expr_component_mpos, _9), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(248, 255))\n                        let product_1 := shl(/** @src 9:1540:1551  \"self._depth\" */ 3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_i)\n                        if iszero(or(iszero(var_i), eq(/** @src 9:11142:11143  \"8\" */ 0x08, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ div(product_1, var_i))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src -1:-1:-1 */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3)\n                        }\n                        /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                        var_out := or(var_out, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shr(product_1, cleaned))\n                    }\n                    /// @src 9:1563:1587  \"return (success, result)\"\n                    var := expr_component\n                    var_1 := var_out\n                }\n                /// @ast-id 7591 @src 9:1251:1594  \"function callTarget(StdStorage storage self) internal view returns (bool, bytes32) {...\"\n                function fun_callTarget_91548() -> var, var_1\n                {\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(/** @src 9:1381:1390  \"self._sig\" */ 15))\n                    /// @src 9:1392:1411  \"getCallParams(self)\"\n                    let expr_mpos := fun_getCallParams_99286()\n                    /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                    let expr_mpos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(64)\n                    /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                    let _1 := 0x20\n                    let _2 := add(expr_mpos_1, _1)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(_2, and(value, shl(224, 0xffffffff)))\n                    let _3 := 36\n                    let length := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3), length)\n                    /// @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\"\n                    let _4 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ expr_mpos_1)\n                    let _5 := 4\n                    mstore(expr_mpos_1, add(_4, _5))\n                    finalize_allocation(expr_mpos_1, add(_4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                    /// @src 9:1458:1470  \"self._target\"\n                    let _6 := 17\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let value_1 := and(sload(/** @src 9:1458:1470  \"self._target\" */ _6), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                    /// @src -1:-1:-1\n                    let _7 := 0\n                    /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                    let expr_component := staticcall(gas(), value_1, _2, mload(expr_mpos_1), /** @src -1:-1:-1 */ _7, _7)\n                    /// @src 9:1458:1487  \"self._target.staticcall(cald)\"\n                    let expr_component_mpos := extract_returndata()\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _8 := sload(/** @src 9:1540:1551  \"self._depth\" */ 16)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let product := shl(5, _8)\n                    if iszero(eq(_8, and(_8, sub(shl(251, 1), 1))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3)\n                    }\n                    /// @src 9:10974:10985  \"bytes32 out\"\n                    let var_out := /** @src -1:-1:-1 */ _7\n                    /// @src 9:11010:11018  \"b.length\"\n                    let expr := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:11010:11018  \"b.length\" */ expr_component_mpos)\n                    /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                    let expr_1 := /** @src -1:-1:-1 */ _7\n                    /// @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\"\n                    switch /** @src 9:11010:11023  \"b.length > 32\" */ gt(expr, /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)\n                    case /** @src 9:11010:11039  \"b.length > 32 ? 32 : b.length\" */ 0 { expr_1 := expr }\n                    default {\n                        expr_1 := /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1\n                    }\n                    /// @src 9:11054:11067  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ _7\n                    /// @src 9:11049:11155  \"for (uint256 i = 0; i < max; i++) {...\"\n                    for { }\n                    /** @src 9:11069:11076  \"i < max\" */ lt(var_i, expr_1)\n                    /// @src 9:11054:11067  \"uint256 i = 0\"\n                    {\n                        /// @src 9:11078:11081  \"i++\"\n                        var_i := increment_uint256(var_i)\n                    }\n                    {\n                        /// @src 9:11114:11124  \"offset + i\"\n                        let _9 := checked_add_uint256(product, var_i)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        if iszero(lt(_9, mload(expr_component_mpos)))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x32)\n                            revert(/** @src -1:-1:-1 */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3)\n                        }\n                        let cleaned := and(mload(add(add(expr_component_mpos, _9), /** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _1)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(248, 255))\n                        let product_1 := shl(/** @src 9:1540:1551  \"self._depth\" */ 3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_i)\n                        if iszero(or(iszero(var_i), eq(/** @src 9:11142:11143  \"8\" */ 0x08, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ div(product_1, var_i))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _7, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 9:1364:1412  \"abi.encodePacked(self._sig, getCallParams(self))\" */ _5, /** @src 9:1458:1470  \"self._target\" */ _6)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src -1:-1:-1 */ _7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3)\n                        }\n                        /// @src 9:11097:11144  \"out |= bytes32(b[offset + i] & 0xFF) >> (i * 8)\"\n                        var_out := or(var_out, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shr(product_1, cleaned))\n                    }\n                    /// @src 9:1563:1587  \"return (success, result)\"\n                    var := expr_component\n                    var_1 := var_out\n                }\n                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                function increment_uint256(value) -> ret\n                {\n                    if eq(value, /** @src 9:12275:12388  \"assembly {...\" */ not(0))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    {\n                        mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                    ret := add(value, 1)\n                }\n                function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n                {\n                    if iszero(lt(index, mload(baseRef)))\n                    {\n                        mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(4, 0x32)\n                        revert(0, 0x24)\n                    }\n                    addr := add(add(baseRef, shl(5, index)), 32)\n                }\n                /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                function abi_decode_array_bytes32_dyn_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end))\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _1 := mload(offset)\n                    let _2 := 0x20\n                    let _3 := array_allocation_size_array_string_dyn(_1)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _3)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let dst := memPtr\n                    mstore(memPtr, _1)\n                    dst := add(memPtr, _2)\n                    let srcEnd := add(add(offset, shl(5, _1)), _2)\n                    if gt(srcEnd, end)\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let src := add(offset, _2)\n                    for { } lt(src, srcEnd) { src := add(src, _2) }\n                    {\n                        mstore(dst, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(src))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        dst := add(dst, _2)\n                    }\n                    array := memPtr\n                }\n                /// @ast-id 8129 @src 9:4249:6742  \"function find(StdStorage storage self, bool _clear) internal returns (FindData storage) {...\"\n                function fun_find() -> var_slot\n                {\n                    /// @ast-id 8129\n                    let /// @ast-id 8129\n                    var_clear := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0\n                    let value := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                    let value_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sload(/** @src 9:4397:4406  \"self._sig\" */ 15))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let _1 := sload(/** @src 9:4438:4449  \"self._depth\" */ 16)\n                    /// @src 9:4481:4500  \"getCallParams(self)\"\n                    let expr_mpos := fun_getCallParams_83337()\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(var_clear, value)\n                    mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let dataSlot := keccak256(var_clear, 0x40)\n                    mstore(var_clear, and(value_1, shl(224, 0xffffffff)))\n                    mstore(0x20, dataSlot)\n                    let dataSlot_1 := keccak256(var_clear, 0x40)\n                    /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                    let expr_mpos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                    let _2 := add(expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                    let length := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _2, length)\n                    let _3 := add(/** @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_3, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                    /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                    let _4 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3, /** @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_1)\n                    mstore(expr_mpos_1, add(_4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                    /// @src 9:4583:4620  \"abi.encodePacked(params, field_depth)\"\n                    finalize_allocation(expr_mpos_1, add(_4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40))\n                    mstore(var_clear, /** @src 9:4573:4621  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2, mload(/** @src 9:4573:4621  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_1)))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(0x20, dataSlot_1)\n                    /// @src 9:4547:4802  \"if (self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                    if /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:4551:4628  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ keccak256(var_clear, 0x40), /** @src 9:4438:4449  \"self._depth\" */ 3)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff)\n                    /// @src 9:4547:4802  \"if (self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found) {...\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(var_clear, value)\n                        mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let dataSlot_2 := keccak256(var_clear, 0x40)\n                        mstore(var_clear, and(value_1, shl(224, 0xffffffff)))\n                        mstore(0x20, dataSlot_2)\n                        let dataSlot_3 := keccak256(var_clear, 0x40)\n                        /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                        let expr_mpos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                        let _5 := add(expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                        let length_1 := mload(expr_mpos)\n                        copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _5, length_1)\n                        let _6 := add(/** @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_1)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_6, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                        /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                        let _7 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _6, /** @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_2)\n                        mstore(expr_mpos_2, add(_7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                        /// @src 9:4752:4789  \"abi.encodePacked(params, field_depth)\"\n                        finalize_allocation(expr_mpos_2, add(_7, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40))\n                        mstore(var_clear, /** @src 9:4742:4790  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _5, mload(/** @src 9:4742:4790  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_2)))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        mstore(0x20, dataSlot_3)\n                        /// @src 9:4713:4791  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                        var_slot := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ keccak256(var_clear, 0x40)\n                        /// @src 9:4713:4791  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                        leave\n                    }\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        revert(var_clear, var_clear)\n                    }\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    let _8 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x266cf109))\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    let _9 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, var_clear, /** @src 9:4811:4822  \"vm.record()\" */ _8, /** @src 9:4361:4373  \"self._target\" */ 4, /** @src 9:4811:4822  \"vm.record()\" */ _8, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_clear)\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    if iszero(_9)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 9:4811:4822  \"vm.record()\"\n                    if _9\n                    {\n                        finalize_allocation_37026(_8)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        var_clear := var_clear\n                    }\n                    /// @src 9:4857:4873  \"callTarget(self)\"\n                    let expr_component, expr_component_1 := fun_callTarget()\n                    /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                    let _10 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                    mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x65bc9481))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(/** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ value)\n                    /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                    let _11 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _10, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                    /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                    if iszero(_11)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_1, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 9:4911:4936  \"vm.accesses(address(who))\"\n                    let expr_component_mpos := var_clear\n                    if _11\n                    {\n                        let _12 := returndatasize()\n                        returndatacopy(_10, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ _12)\n                        finalize_allocation(_10, _12)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let offset := mload(_10)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let value0 := abi_decode_array_bytes32_dyn_fromMemory(add(_10, offset), /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let offset_1 := mload(add(_10, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if gt(offset_1, 0xffffffffffffffff)\n                        {\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                        }\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        pop(abi_decode_array_bytes32_dyn_fromMemory(add(_10, offset_1), /** @src 9:4911:4936  \"vm.accesses(address(who))\" */ add(_10, _12)))\n                        expr_component_mpos := value0\n                    }\n                    /// @src 9:4947:6408  \"if (reads.length == 0) {...\"\n                    switch /** @src 9:4951:4968  \"reads.length == 0\" */ iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:4951:4963  \"reads.length\" */ expr_component_mpos))\n                    case /** @src 9:4947:6408  \"if (reads.length == 0) {...\" */ 0 {\n                        /// @src 9:5094:5107  \"uint256 i = 0\"\n                        let var_i := var_clear\n                        /// @src 9:5089:6398  \"for (uint256 i = 0; i < reads.length; i++) {...\"\n                        for { }\n                        /** @src 9:12275:12388  \"assembly {...\" */ 1\n                        /// @src 9:5094:5107  \"uint256 i = 0\"\n                        {\n                            /// @src 9:5127:5130  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 9:5109:5125  \"i < reads.length\"\n                            if iszero(lt(var_i, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(/** @src 9:5113:5125  \"reads.length\" */ expr_component_mpos)))\n                            /// @src 9:5109:5125  \"i < reads.length\"\n                            { break }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _13 := mload(/** @src 9:5178:5186  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            let _14 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            mstore(_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            let _15 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ _14, sub(abi_encode_address_bytes32(add(_14, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ value, _13), _14), _14, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            if iszero(_15)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_2 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_2, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                            let expr := var_clear\n                            if _15\n                            {\n                                let _16 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20\n                                /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                                if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, /** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ returndatasize()) { _16 := returndatasize() }\n                                finalize_allocation(_14, _16)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:5165:5187  \"vm.load(who, reads[i])\" */ add(_14, _16), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 9:5165:5187  \"vm.load(who, reads[i])\"\n                                expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_14)\n                            }\n                            /// @src 9:5205:5319  \"if (prev == bytes32(0)) {...\"\n                            if /** @src 9:5209:5227  \"prev == bytes32(0)\" */ iszero(expr)\n                            /// @src 9:5205:5319  \"if (prev == bytes32(0)) {...\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let _17 := mload(/** @src 9:5290:5298  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                                /// @src 9:5256:5300  \"WARNING_UninitedSlot(who, uint256(reads[i]))\"\n                                let _18 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 9:5256:5300  \"WARNING_UninitedSlot(who, uint256(reads[i]))\"\n                                log1(_18, sub(abi_encode_address_bytes32(_18, value, _17), _18), 0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5)\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _19 := mload(/** @src 9:5369:5377  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let value_2 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            let _20 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            mstore(_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            let _21 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ _20, sub(abi_encode_address_bytes32(add(_20, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ value_2, _19), _20), _20, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            if iszero(_21)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_3 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_3, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                            let expr_1 := var_clear\n                            if _21\n                            {\n                                let _22 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20\n                                /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                                if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, /** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ returndatasize()) { _22 := returndatasize() }\n                                finalize_allocation(_20, _22)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 9:1978:2005  \"vm.load(self._target, slot)\" */ add(_20, _22), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 9:1978:2005  \"vm.load(self._target, slot)\"\n                                expr_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_20)\n                            }\n                            /// @src 9:2057:2073  \"callTarget(self)\"\n                            let expr_component_2, expr_component_3 := fun_callTarget()\n                            /// @src 9:2102:2167  \"prevReturnValue == bytes32(0) ? bytes32(UINT256_MAX) : bytes32(0)\"\n                            let expr_2 := var_clear\n                            switch /** @src 9:2102:2131  \"prevReturnValue == bytes32(0)\" */ iszero(expr_component_3)\n                            case /** @src 9:2102:2167  \"prevReturnValue == bytes32(0) ? bytes32(UINT256_MAX) : bytes32(0)\" */ 0 { expr_2 := var_clear }\n                            default {\n                                expr_2 := /** @src 9:12275:12388  \"assembly {...\" */ not(0)\n                            }\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            let _23 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            mstore(_23, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            let _24 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\" */ _23, sub(abi_encode_address_bytes32_bytes32(add(_23, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\" */ value_2, _19, expr_2), _23), _23, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            if iszero(_24)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_4 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_4, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_4, returndatasize())\n                            }\n                            /// @src 9:2177:2214  \"vm.store(self._target, slot, testVal)\"\n                            if _24\n                            {\n                                finalize_allocation_37026(_23)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if var_clear\n                                {\n                                    revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                                }\n                            }\n                            /// @src 9:2254:2270  \"callTarget(self)\"\n                            let expr_component_4, expr_component_5 := fun_callTarget()\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let value_3 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                            }\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            let _25 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            mstore(_25, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            let _26 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\" */ _25, sub(abi_encode_address_bytes32_bytes32(add(_25, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\" */ value_3, _19, expr_1), _25), _25, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if iszero(_26)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos_5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos_5, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos_5, returndatasize())\n                            }\n                            /// @src 9:2281:2324  \"vm.store(self._target, slot, prevSlotValue)\"\n                            if _26\n                            {\n                                finalize_allocation_37026(_25)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                if var_clear\n                                {\n                                    revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                                }\n                            }\n                            /// @src 9:2343:2389  \"success && (prevReturnValue != newReturnValue)\"\n                            let expr_3 := expr_component_2\n                            if expr_component_2\n                            {\n                                expr_3 := /** @src 9:2355:2388  \"prevReturnValue != newReturnValue\" */ iszero(eq(expr_component_3, expr_component_5))\n                            }\n                            /// @src 9:5337:5429  \"if (!checkSlotMutatesCall(self, reads[i])) {...\"\n                            if /** @src 9:5341:5378  \"!checkSlotMutatesCall(self, reads[i])\" */ iszero(/** @src 9:5342:5378  \"checkSlotMutatesCall(self, reads[i])\" */ expr_3)\n                            /// @src 9:5337:5429  \"if (!checkSlotMutatesCall(self, reads[i])) {...\"\n                            {\n                                /// @src 9:5402:5410  \"continue\"\n                                continue\n                            }\n                            /// @src 9:5447:5497  \"(uint256 offsetLeft, uint256 offsetRight) = (0, 0)\"\n                            let var_offsetLeft := var_clear\n                            let var_offsetRight := var_clear\n                            /// @src 9:5516:5772  \"if (self._enable_packed_slots) {...\"\n                            if /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:5520:5545  \"self._enable_packed_slots\" */ 19), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff)\n                            /// @src 9:5516:5772  \"if (self._enable_packed_slots) {...\"\n                            {\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let _27 := mload(/** @src 9:5654:5662  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let value_4 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                let _28 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                mstore(_28, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                let _29 := staticcall(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ _28, sub(abi_encode_address_bytes32(add(_28, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ value_4, _27), _28), _28, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                if iszero(_29)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_6 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_6, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_6, returndatasize())\n                                }\n                                /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                let expr_4 := var_clear\n                                if _29\n                                {\n                                    let _30 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20\n                                    /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                    if gt(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20, /** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ returndatasize()) { _30 := returndatasize() }\n                                    finalize_allocation(_28, _30)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    if slt(sub(/** @src 9:3216:3243  \"vm.load(self._target, slot)\" */ add(_28, _30), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _28), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    {\n                                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 9:3216:3243  \"vm.load(self._target, slot)\"\n                                    expr_4 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_28)\n                                }\n                                /// @src 9:3293:3321  \"findOffset(self, slot, true)\"\n                                let expr_component_6, expr_component_7 := fun_findOffset(_27)\n                                /// @src 9:3372:3401  \"findOffset(self, slot, false)\"\n                                let expr_component_8, expr_component_9 := fun_findOffset_83347(_27)\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                let value_5 := and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                {\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                                }\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                let _31 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                mstore(_31, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                let _32 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\" */ _31, sub(abi_encode_address_bytes32_bytes32(add(_31, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\" */ value_5, _27, expr_4), _31), _31, /** @src 9:4551:4561  \"self.finds\" */ var_clear)\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                if iszero(_32)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_7 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_7, /** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_7, returndatasize())\n                                }\n                                /// @src 9:3497:3540  \"vm.store(self._target, slot, prevSlotValue)\"\n                                if _32\n                                {\n                                    finalize_allocation_37026(_31)\n                                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                    if var_clear\n                                    {\n                                        revert(/** @src 9:4551:4561  \"self.finds\" */ var_clear, var_clear)\n                                    }\n                                }\n                                /// @src 9:3558:3581  \"foundLeft && foundRight\"\n                                let expr_5 := expr_component_6\n                                if expr_component_6 { expr_5 := expr_component_8 }\n                                /// @src 9:5601:5663  \"(found, offsetLeft, offsetRight) = findOffsets(self, reads[i])\"\n                                var_offsetRight := expr_component_9\n                                var_offsetLeft := expr_component_7\n                                /// @src 9:5685:5754  \"if (!found) {...\"\n                                if /** @src 9:5689:5695  \"!found\" */ iszero(expr_5)\n                                /// @src 9:5685:5754  \"if (!found) {...\"\n                                {\n                                    /// @src 9:5723:5731  \"continue\"\n                                    continue\n                                }\n                            }\n                            /// @src 9:5994:6078  \"if (uint256(callResult) != curVal) {...\"\n                            if /** @src 9:5998:6027  \"uint256(callResult) != curVal\" */ iszero(eq(expr_component_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shr(var_offsetRight, /** @src 9:5902:5959  \"uint256(prev) & getMaskByOffsets(offsetLeft, offsetRight)\" */ and(expr, /** @src 9:12275:12388  \"assembly {...\" */ shl(/** @src 9:5918:5959  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ var_offsetRight, /** @src 9:12275:12388  \"assembly {...\" */ add(shl(sub(256, add(/** @src 9:5918:5959  \"getMaskByOffsets(offsetLeft, offsetRight)\" */ var_offsetRight, var_offsetLeft)), /** @src 9:12275:12388  \"assembly {...\" */ 1), not(0)))))))\n                            /// @src 9:5994:6078  \"if (uint256(callResult) != curVal) {...\"\n                            {\n                                /// @src 9:6051:6059  \"continue\"\n                                continue\n                            }\n                            /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                            let expr_mpos_3 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                            let _33 := add(expr_mpos_3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                            let length_2 := mload(expr_mpos)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _33, length_2)\n                            let _34 := add(/** @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_2)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_34, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                            /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                            let _35 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _34, /** @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_3)\n                            mstore(expr_mpos_3, add(_35, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                            /// @src 9:6132:6169  \"abi.encodePacked(params, field_depth)\"\n                            finalize_allocation(expr_mpos_3, add(_35, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40))\n                            /// @src 9:6122:6170  \"keccak256(abi.encodePacked(params, field_depth))\"\n                            let expr_6 := keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _33, mload(/** @src 9:6122:6170  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_3))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _36 := mload(/** @src 9:6180:6188  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\"\n                            let _37 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            mstore(_37, value)\n                            mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_37, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20), and(value_1, shl(224, 0xffffffff)))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_37, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_6)\n                            mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_37, 96), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _36)\n                            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let _38 := 128\n                            /// @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\"\n                            log1(_37, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _38, /** @src 9:6101:6190  \"SlotFound(who, fsig, keccak256(abi.encodePacked(params, field_depth)), uint256(reads[i]))\" */ 0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _39 := mload(/** @src 9:6319:6327  \"reads[i]\" */ memory_array_index_access_bytes32_dyn(expr_component_mpos, var_i))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let memPtr := mload(0x40)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if or(gt(add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _38), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xffffffffffffffff), lt(add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _38), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr))\n                            {\n                                mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 9:4361:4373  \"self._target\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                                revert(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0, 36)\n                            }\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _38))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(memPtr, _39)\n                            mstore(/** @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\" */ add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20), var_offsetLeft)\n                            mstore(/** @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\" */ add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40), var_offsetRight)\n                            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\" */ add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96), /** @src 9:12275:12388  \"assembly {...\" */ 1)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(0, value)\n                            mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let dataSlot_4 := keccak256(0, 0x40)\n                            mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                            mstore(0x20, dataSlot_4)\n                            let dataSlot_5 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)\n                            /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                            let expr_mpos_4 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                            /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                            let _40 := add(expr_mpos_4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                            let length_3 := mload(expr_mpos)\n                            copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _40, length_3)\n                            let _41 := add(/** @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_4, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_3)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_41, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                            /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                            let _42 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _41, /** @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_4)\n                            mstore(expr_mpos_4, add(_42, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                            /// @src 9:6240:6277  \"abi.encodePacked(params, field_depth)\"\n                            finalize_allocation(expr_mpos_4, add(_42, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40))\n                            mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6230:6278  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _40, mload(/** @src 9:6230:6278  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_4)))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(0x20, dataSlot_5)\n                            let dataSlot_6 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)\n                            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            sstore(dataSlot_6, mload(memPtr))\n                            sstore(add(dataSlot_6, /** @src 9:12275:12388  \"assembly {...\" */ 1), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\" */ add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)))\n                            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            sstore(add(dataSlot_6, /** @src 9:4397:4406  \"self._sig\" */ 2), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\" */ add(memPtr, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)))\n                            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let memberSlot := add(dataSlot_6, /** @src 9:4438:4449  \"self._depth\" */ 3)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let cleaned := iszero(iszero(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 9:6302:6360  \"FindData(uint256(reads[i]), offsetLeft, offsetRight, true)\" */ add(memPtr, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 96))))\n                            let value_6 := and(sload(memberSlot), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(255))\n                            /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            sstore(memberSlot, or(value_6, and(cleaned, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff)))\n                            /// @src 9:6378:6383  \"break\"\n                            break\n                        }\n                    }\n                    default /// @src 9:4947:6408  \"if (reads.length == 0) {...\"\n                    {\n                        /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                        let _43 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                        mstore(_43, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ add(_43, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _43, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), 0x40)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _43, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 68), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): No \")\n                        mstore(add(/** @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\" */ _43, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"storage use detected for target.\")\n                        /// @src 9:4984:5058  \"revert(\\\"stdStorage find(StdStorage): No storage use detected for target.\\\")\"\n                        revert(_43, /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                    }\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(0, value)\n                    mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let dataSlot_7 := keccak256(0, 0x40)\n                    mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                    mstore(0x20, dataSlot_7)\n                    let dataSlot_8 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)\n                    /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                    let expr_mpos_5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                    let _44 := add(expr_mpos_5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                    let length_4 := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _44, length_4)\n                    let _45 := add(/** @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_5, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_4)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_45, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                    /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                    let _46 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _45, /** @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_5)\n                    mstore(expr_mpos_5, add(_46, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                    /// @src 9:6471:6508  \"abi.encodePacked(params, field_depth)\"\n                    finalize_allocation(expr_mpos_5, add(_46, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40))\n                    mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6461:6509  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _44, mload(/** @src 9:6461:6509  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_5)))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(0x20, dataSlot_8)\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if iszero(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:6439:6516  \"self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))].found\" */ add(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40), /** @src 9:4438:4449  \"self._depth\" */ 3)), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0xff))\n                    /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        let memPtr_1 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(memPtr_1, /** @src 9:12810:12869  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(229, 4594637))\n                        /// @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(memPtr_1, /** @src 9:4361:4373  \"self._target\" */ 4), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                        mstore(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(memPtr_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 36), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 47)\n                        mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(/** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 68), /** @src 9:643:702  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ \"stdStorage find(StdStorage): Slo\")\n                        mstore(add(memPtr_1, 100), \"t(s) not found.\")\n                        revert(memPtr_1, 132)\n                    }\n                    /// @src 9:6600:6648  \"if (_clear) {...\"\n                    if var_clear\n                    {\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        sstore(/** @src 9:4361:4373  \"self._target\" */ 17, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:4361:4373  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(160, 0xffffffffffffffffffffffff)))\n                        sstore(/** @src 9:4397:4406  \"self._sig\" */ 15, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:4397:4406  \"self._sig\" */ 15), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(0xffffffff)))\n                        let oldLen := sload(/** @src 9:11707:11717  \"self._keys\" */ 14)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        sstore(/** @src 9:11707:11717  \"self._keys\" */ 14, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                        if iszero(iszero(oldLen))\n                        {\n                            mstore(0, /** @src 9:11707:11717  \"self._keys\" */ 14)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            let _47 := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                            let _48 := add(_47, oldLen)\n                            let start := _47\n                            for { }\n                            lt(start, _48)\n                            {\n                                start := add(start, /** @src 9:11707:11717  \"self._keys\" */ 1)\n                            }\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            { sstore(start, 0) }\n                        }\n                        sstore(/** @src 9:4438:4449  \"self._depth\" */ 16, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                        sstore(/** @src 9:11762:11787  \"self._enable_packed_slots\" */ 19, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(sload(/** @src 9:11762:11787  \"self._enable_packed_slots\" */ 19), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ not(255)))\n                        let oldLen_1 := extract_byte_array_length(sload(/** @src 9:11804:11818  \"self._calldata\" */ 20))\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        if iszero(iszero(oldLen_1))\n                        {\n                            switch gt(oldLen_1, 31)\n                            case 1 {\n                                let _49 := 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                                let _50 := add(_49, shr(5, add(oldLen_1, 31)))\n                                let start_1 := 0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed\n                                for { }\n                                lt(start_1, _50)\n                                {\n                                    start_1 := add(start_1, /** @src 9:11707:11717  \"self._keys\" */ 1)\n                                }\n                                /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                                { sstore(start_1, 0) }\n                                sstore(/** @src 9:11804:11818  \"self._calldata\" */ 20, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                                sstore(_49, 0)\n                            }\n                            default {\n                                sstore(/** @src 9:11804:11818  \"self._calldata\" */ 20, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0)\n                            }\n                        }\n                    }\n                    mstore(0, value)\n                    mstore(0x20, /** @src 4:27635:27643  \"stdstore\" */ 0x0d)\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    let dataSlot_9 := keccak256(0, 0x40)\n                    mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ and(value_1, shl(224, 0xffffffff)))\n                    mstore(0x20, dataSlot_9)\n                    let dataSlot_10 := keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)\n                    /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                    let expr_mpos_6 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(0x40)\n                    /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                    let _51 := add(expr_mpos_6, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20)\n                    let length_5 := mload(expr_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), _51, length_5)\n                    let _52 := add(/** @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_6, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ length_5)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ add(_52, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                    /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                    let _53 := sub(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _52, /** @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\" */ expr_mpos_6)\n                    mstore(expr_mpos_6, add(_53, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x20))\n                    /// @src 9:6696:6733  \"abi.encodePacked(params, field_depth)\"\n                    finalize_allocation(expr_mpos_6, add(_53, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40))\n                    mstore(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 9:6686:6734  \"keccak256(abi.encodePacked(params, field_depth))\" */ keccak256(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _51, mload(/** @src 9:6686:6734  \"keccak256(abi.encodePacked(params, field_depth))\" */ expr_mpos_6)))\n                    /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                    mstore(0x20, dataSlot_10)\n                    /// @src 9:6657:6735  \"return self.finds[who][fsig][keccak256(abi.encodePacked(params, field_depth))]\"\n                    var_slot := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ keccak256(/** @src 9:4551:4561  \"self.finds\" */ var_clear, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x40)\n                }\n                /// @ast-id 7751 @src 9:2560:3074  \"function findOffset(StdStorage storage self, bytes32 slot, bool left) internal returns (bool, uint256) {...\"\n                function fun_findOffset(var_slot) -> var, var_1\n                {\n                    /// @src 9:2678:2696  \"uint256 offset = 0\"\n                    let var_offset := /** @src 9:2695:2696  \"0\" */ 0x00\n                    /// @src 9:2673:3041  \"for (uint256 offset = 0; offset < 256; offset++) {...\"\n                    for { }\n                    /** @src 9:2698:2710  \"offset < 256\" */ lt(var_offset, /** @src 9:2707:2710  \"256\" */ 0x0100)\n                    /// @src 9:2678:2696  \"uint256 offset = 0\"\n                    {\n                        /// @src 9:2712:2720  \"offset++\"\n                        var_offset := increment_uint256(var_offset)\n                    }\n                    {\n                        /// @src 9:2771:2774  \"255\"\n                        let _1 := 0xff\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let diff := sub(/** @src 9:2771:2774  \"255\" */ _1, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ var_offset)\n                        if gt(diff, /** @src 9:2771:2774  \"255\" */ _1)\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        {\n                            mstore(/** @src 9:2695:2696  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            mstore(/** @src 9:2824:2836  \"self._target\" */ 4, 17)\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src 9:2695:2696  \"0\" */ 0x00, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ 0x24)\n                        }\n                        /// @src 9:3316:3320  \"true\"\n                        let _2 := 0x01\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let value := and(sload(/** @src 9:2824:2836  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3))\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        {\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src 9:2695:2696  \"0\" */ 0x00, 0x00)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _4 := 64\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        let _5 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        let _6 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _3, /** @src 9:2695:2696  \"0\" */ 0x00, /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _5, sub(abi_encode_address_bytes32_bytes32(add(_5, /** @src 9:2824:2836  \"self._target\" */ 4), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ value, var_slot, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(diff, /** @src 9:3316:3320  \"true\" */ _2)), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _5), _5, /** @src 9:2695:2696  \"0\" */ 0x00)\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        if iszero(_6)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src 9:2695:2696  \"0\" */ 0x00, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        if _6 { finalize_allocation_37026(_5) }\n                        /// @src 9:2910:2926  \"callTarget(self)\"\n                        let expr_component, expr_component_1 := fun_callTarget_91548()\n                        /// @src 9:2945:2975  \"success && (uint256(data) > 0)\"\n                        let expr := expr_component\n                        if expr_component\n                        {\n                            expr := /** @src 9:2957:2974  \"uint256(data) > 0\" */ iszero(iszero(/** @src 9:2957:2970  \"uint256(data)\" */ expr_component_1))\n                        }\n                        /// @src 9:2941:3031  \"if (success && (uint256(data) > 0)) {...\"\n                        if expr\n                        {\n                            /// @src 9:2995:3016  \"return (true, offset)\"\n                            var := /** @src 9:3316:3320  \"true\" */ _2\n                            /// @src 9:2995:3016  \"return (true, offset)\"\n                            var_1 := var_offset\n                            leave\n                        }\n                    }\n                    /// @src 9:3050:3067  \"return (false, 0)\"\n                    var := /** @src 9:2695:2696  \"0\" */ 0x00\n                    /// @src 9:3050:3067  \"return (false, 0)\"\n                    var_1 := /** @src 9:2695:2696  \"0\" */ 0x00\n                }\n                /// @ast-id 7751 @src 9:2560:3074  \"function findOffset(StdStorage storage self, bytes32 slot, bool left) internal returns (bool, uint256) {...\"\n                function fun_findOffset_83347(var_slot) -> var, var_1\n                {\n                    /// @src 9:2678:2696  \"uint256 offset = 0\"\n                    let var_offset := /** @src 9:4551:4561  \"self.finds\" */ 0\n                    /// @src 9:2673:3041  \"for (uint256 offset = 0; offset < 256; offset++) {...\"\n                    for { }\n                    /** @src 9:2698:2710  \"offset < 256\" */ lt(var_offset, /** @src 9:2707:2710  \"256\" */ 0x0100)\n                    /// @src 9:2678:2696  \"uint256 offset = 0\"\n                    {\n                        /// @src 9:2712:2720  \"offset++\"\n                        var_offset := increment_uint256(var_offset)\n                    }\n                    {\n                        /// @src 9:2789:2790  \"1\"\n                        let _1 := 0x01\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let value := and(sload(/** @src 9:2824:2836  \"self._target\" */ 17), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ sub(shl(160, 1), 1))\n                        let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        if iszero(extcodesize(/** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2))\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        {\n                            /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                            revert(/** @src 9:4551:4561  \"self.finds\" */ 0, 0)\n                        }\n                        /// @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\"\n                        let _3 := 64\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        let _4 := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_3)\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        mstore(_4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70ca10bb))\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        let _5 := call(gas(), /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ _2, /** @src 9:4551:4561  \"self.finds\" */ 0, /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _4, sub(abi_encode_address_bytes32_bytes32(add(_4, /** @src 9:2824:2836  \"self._target\" */ 4), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ value, var_slot, /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ shl(var_offset, /** @src 9:2789:2790  \"1\" */ _1)), /** @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\" */ _4), _4, /** @src 9:4551:4561  \"self.finds\" */ 0)\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        if iszero(_5)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 84:298:3221  \"contract RewardTracker_Tester is Test {...\" */ mload(_3)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src 9:4551:4561  \"self.finds\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 9:2815:2864  \"vm.store(self._target, slot, bytes32(valueToPut))\"\n                        if _5 { finalize_allocation_37026(_4) }\n                        /// @src 9:2910:2926  \"callTarget(self)\"\n                        let expr_component, expr_component_1 := fun_callTarget_91548()\n                        /// @src 9:2945:2975  \"success && (uint256(data) > 0)\"\n                        let expr := expr_component\n                        if expr_component\n                        {\n                            expr := /** @src 9:2957:2974  \"uint256(data) > 0\" */ iszero(iszero(/** @src 9:2957:2970  \"uint256(data)\" */ expr_component_1))\n                        }\n                        /// @src 9:2941:3031  \"if (success && (uint256(data) > 0)) {...\"\n                        if expr\n                        {\n                            /// @src 9:2995:3016  \"return (true, offset)\"\n                            var := /** @src 9:2789:2790  \"1\" */ _1\n                            /// @src 9:2995:3016  \"return (true, offset)\"\n                            var_1 := var_offset\n                            leave\n                        }\n                    }\n                    /// @src 9:3050:3067  \"return (false, 0)\"\n                    var := /** @src 9:4551:4561  \"self.finds\" */ 0\n                    /// @src 9:3050:3067  \"return (false, 0)\"\n                    var_1 := /** @src 9:4551:4561  \"self.finds\" */ 0\n                }\n            }\n            /// @use-src 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 73:\"src/access/Governable.sol\", 74:\"src/staking/RewardDistributor.sol\", 78:\"src/staking/interfaces/IRewardDistributor.sol\"\n            object \"RewardDistributor_58666\" {\n                code {\n                    {\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        if callvalue() { revert(0, 0) }\n                        let programSize := datasize(\"RewardDistributor_58666\")\n                        let argSize := sub(codesize(), programSize)\n                        let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        codecopy(_1, programSize, argSize)\n                        if slt(sub(add(_1, argSize), _1), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let value0 := abi_decode_address_fromMemory(_1)\n                        let value1 := abi_decode_address_fromMemory(add(_1, 32))\n                        /// @src 55:1713:1714  \"1\"\n                        sstore(/** @src -1:-1:-1 */ 0, /** @src 55:1713:1714  \"1\" */ 0x01)\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _2 := not(sub(shl(160, 1), 1))\n                        sstore(/** @src 55:1713:1714  \"1\" */ 0x01, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 55:1713:1714  \"1\" */ 0x01), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 73:204:214  \"msg.sender\" */ caller()))\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _3 := sub(shl(160, 1), 1)\n                        let _4 := and(/** @src 74:989:1015  \"_rewardToken == address(0)\" */ value0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                        /// @src 74:989:1047  \"_rewardToken == address(0) || _rewardTracker == address(0)\"\n                        let expr := /** @src 74:989:1015  \"_rewardToken == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                        /// @src 74:989:1047  \"_rewardToken == address(0) || _rewardTracker == address(0)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 74:1019:1047  \"_rewardTracker == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(/** @src 74:1019:1047  \"_rewardTracker == address(0)\" */ value1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3))\n                        }\n                        /// @src 74:985:1099  \"if (_rewardToken == address(0) || _rewardTracker == address(0)) {...\"\n                        if expr\n                        {\n                            /// @src 74:1070:1088  \"ZeroAddressError()\"\n                            let _5 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 74:1070:1088  \"ZeroAddressError()\"\n                            mstore(_5, shl(224, 0x3efa09af))\n                            revert(_5, 4)\n                        }\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        sstore(/** @src 74:1108:1134  \"rewardToken = _rewardToken\" */ 0x02, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1108:1134  \"rewardToken = _rewardToken\" */ 0x02), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), _4))\n                        sstore(/** @src 74:1144:1174  \"rewardTracker = _rewardTracker\" */ 0x05, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1144:1174  \"rewardTracker = _rewardTracker\" */ 0x05), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), and(value1, _3)))\n                        sstore(/** @src 74:1184:1202  \"admin = msg.sender\" */ 0x06, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1184:1202  \"admin = msg.sender\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 73:204:214  \"msg.sender\" */ caller()))\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _6 := mload(64)\n                        let _7 := datasize(\"RewardDistributor_58666_deployed\")\n                        codecopy(_6, dataoffset(\"RewardDistributor_58666_deployed\"), _7)\n                        return(_6, _7)\n                    }\n                    function abi_decode_address_fromMemory(offset) -> value\n                    {\n                        value := mload(offset)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                }\n                /// @use-src 52:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 73:\"src/access/Governable.sol\", 74:\"src/staking/RewardDistributor.sol\"\n                object \"RewardDistributor_58666_deployed\" {\n                    code {\n                        {\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let _1 := memoryguard(0x80)\n                            let _2 := 64\n                            mstore(_2, _1)\n                            let _3 := 4\n                            if iszero(lt(calldatasize(), _3))\n                            {\n                                let _4 := 0\n                                switch shr(224, calldataload(_4))\n                                case 0x12d43a51 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    mstore(_1, and(sload(/** @src 73:149:167  \"address public gov\" */ 1), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                    return(_1, 32)\n                                }\n                                case 0x18e20a03 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value := calldataload(_3)\n                                    let _5 := sub(shl(160, 1), 1)\n                                    /// @src 74:833:893  \"require(msg.sender == admin, \\\"RewardDistributor: forbidden\\\")\"\n                                    require_helper_stringliteral_3ae3(/** @src 74:841:860  \"msg.sender == admin\" */ eq(/** @src 74:841:851  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 74:855:860  \"admin\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _5)))\n                                    if /** @src 74:1932:1957  \"lastDistributionTime != 0\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sload(_3))\n                                    {\n                                        let memPtr := mload(_2)\n                                        mstore(memPtr, shl(229, 4594637))\n                                        mstore(add(memPtr, _3), 32)\n                                        mstore(add(memPtr, 36), 47)\n                                        mstore(add(memPtr, 68), \"RewardDistributor: invalid lastD\")\n                                        mstore(add(memPtr, 100), \"istributionTime\")\n                                        revert(memPtr, 132)\n                                    }\n                                    let cleaned := and(sload(/** @src 74:2055:2068  \"rewardTracker\" */ 0x05), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _5)\n                                    /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                    if iszero(extcodesize(cleaned))\n                                    {\n                                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                        revert(_4, _4)\n                                    }\n                                    /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                    let _6 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                    mstore(_6, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(226, 0x0f8562c3))\n                                    /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                    let _7 := call(gas(), cleaned, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4, /** @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\" */ _6, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3, /** @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\" */ _6, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                                    /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                    if iszero(_7)\n                                    {\n                                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                        let pos := mload(_2)\n                                        returndatacopy(pos, _4, returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 74:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                    if _7\n                                    {\n                                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                        if gt(_6, 0xffffffffffffffff)\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_2, _6)\n                                        _4 := _4\n                                    }\n                                    sstore(/** @src 74:2095:2122  \"tokensPerInterval = _amount\" */ 0x03, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ value)\n                                    /// @src 74:2137:2169  \"TokensPerIntervalChange(_amount)\"\n                                    let _8 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    mstore(_8, value)\n                                    /// @src 74:2137:2169  \"TokensPerIntervalChange(_amount)\"\n                                    log1(_8, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 74:2137:2169  \"TokensPerIntervalChange(_amount)\" */ 0x98dc76c39aa5a5dcb749f8750a65db3dfa1e14bcc1591a9c16a7420e5da748f8)\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x3ae6d6eb {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    /// @src 74:833:893  \"require(msg.sender == admin, \\\"RewardDistributor: forbidden\\\")\"\n                                    require_helper_stringliteral_3ae3(/** @src 74:841:860  \"msg.sender == admin\" */ eq(/** @src 74:841:851  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 74:855:860  \"admin\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))))\n                                    sstore(_3, /** @src 74:1770:1785  \"block.timestamp\" */ timestamp())\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x6bcb411a {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_1 := and(sload(/** @src 74:612:640  \"address public rewardTracker\" */ 5), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                    let memPos := mload(_2)\n                                    mstore(memPos, value_1)\n                                    return(memPos, 32)\n                                }\n                                case 0x6ccae054 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                    let value0 := abi_decode_address()\n                                    let value_2 := calldataload(36)\n                                    let _9 := sub(shl(160, 1), 1)\n                                    if iszero(eq(value_2, and(value_2, _9))) { revert(0, 0) }\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(1), _9)))\n                                    /// @src 74:1659:1666  \"_amount\"\n                                    fun_safeTransfer(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(/** @src 74:1621:1635  \"IERC20(_token)\" */ value0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _9), /** @src 74:1659:1666  \"_amount\" */ value_2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ calldataload(68))\n                                    return(_4, _4)\n                                }\n                                case 0x704b6c02 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_1 := abi_decode_address()\n                                    let _10 := sub(shl(160, 1), 1)\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _10)))\n                                    let _11 := and(/** @src 74:1280:1300  \"_admin == address(0)\" */ value0_1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _10)\n                                    /// @src 74:1276:1352  \"if (_admin == address(0)) {...\"\n                                    if /** @src 74:1280:1300  \"_admin == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _11)\n                                    /// @src 74:1276:1352  \"if (_admin == address(0)) {...\"\n                                    {\n                                        /// @src 74:1323:1341  \"ZeroAddressError()\"\n                                        let _12 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                        /// @src 74:1323:1341  \"ZeroAddressError()\"\n                                        mstore(_12, shl(224, 0x3efa09af))\n                                        revert(_12, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                                    }\n                                    sstore(/** @src 74:1361:1375  \"admin = _admin\" */ 0x06, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 74:1361:1375  \"admin = _admin\" */ 0x06), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _11))\n                                    /// @src 74:1390:1406  \"AdminSet(_admin)\"\n                                    let _13 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    mstore(_13, _11)\n                                    /// @src 74:1390:1406  \"AdminSet(_admin)\"\n                                    log1(_13, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 74:1390:1406  \"AdminSet(_admin)\" */ 0x8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c)\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x75b17350 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _14 := sload(_3)\n                                    let memPos_1 := mload(_2)\n                                    mstore(memPos_1, _14)\n                                    return(memPos_1, 32)\n                                }\n                                case 0xa8d93627 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _15 := sload(/** @src 74:524:565  \"uint256 public override tokensPerInterval\" */ 3)\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    let memPos_2 := mload(_2)\n                                    mstore(memPos_2, _15)\n                                    return(memPos_2, 32)\n                                }\n                                case 0xcfad57a2 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_2 := abi_decode_address()\n                                    let _16 := sload(/** @src 73:278:281  \"gov\" */ 0x01)\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    let _17 := sub(shl(160, 1), 1)\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(_16, _17)))\n                                    let _18 := and(/** @src 73:392:410  \"_gov == address(0)\" */ value0_2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _17)\n                                    /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                    if /** @src 73:392:410  \"_gov == address(0)\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _18)\n                                    /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                    {\n                                        /// @src 73:433:451  \"ZeroAddressError()\"\n                                        let _19 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                        /// @src 73:433:451  \"ZeroAddressError()\"\n                                        mstore(_19, /** @src 74:1323:1341  \"ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                                        /// @src 73:433:451  \"ZeroAddressError()\"\n                                        revert(_19, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                                    }\n                                    sstore(/** @src 73:278:281  \"gov\" */ 0x01, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(_16, shl(160, 0xffffffffffffffffffffffff)), _18))\n                                    /// @src 73:496:508  \"GovSet(_gov)\"\n                                    let _20 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    mstore(_20, _18)\n                                    /// @src 73:496:508  \"GovSet(_gov)\"\n                                    log1(_20, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 73:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0xe4fc6b6d {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let ret := fun_distribute()\n                                    let memPos_3 := mload(_2)\n                                    mstore(memPos_3, ret)\n                                    return(memPos_3, 32)\n                                }\n                                case 0xeded3fda {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let ret_1 := fun_pendingRewards()\n                                    let memPos_4 := mload(_2)\n                                    mstore(memPos_4, ret_1)\n                                    return(memPos_4, 32)\n                                }\n                                case 0xf7c618c1 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_3 := and(sload(/** @src 74:483:518  \"address public override rewardToken\" */ 2), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                    let memPos_5 := mload(_2)\n                                    mstore(memPos_5, value_3)\n                                    return(memPos_5, 32)\n                                }\n                                case 0xf851a440 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_4 := and(sload(/** @src 74:647:667  \"address public admin\" */ 6), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                    let memPos_6 := mload(_2)\n                                    mstore(memPos_6, value_4)\n                                    return(memPos_6, 32)\n                                }\n                            }\n                            revert(0, 0)\n                        }\n                        function abi_decode_address() -> value\n                        {\n                            value := calldataload(4)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        }\n                        function require_helper_stringliteral_7c37(condition)\n                        {\n                            if iszero(condition)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 21)\n                                mstore(add(memPtr, 68), \"Governable: forbidden\")\n                                revert(memPtr, 100)\n                            }\n                        }\n                        function finalize_allocation(memPtr, size)\n                        {\n                            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        /// @ast-id 50320 @src 52:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                        function fun_safeTransfer(var_token_address, var_to, var_value)\n                        {\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            let expr_mpos := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            mstore(_1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                            let _2 := sub(shl(160, 1), 1)\n                            mstore(/** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, 36), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(var_to, _2))\n                            mstore(add(/** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 68), var_value)\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            mstore(expr_mpos, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 68)\n                            let newFreePtr := add(expr_mpos, 128)\n                            let _3 := 0xffffffffffffffff\n                            if or(gt(newFreePtr, _3), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                            }\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            mstore(64, newFreePtr)\n                            let _4 := and(/** @src 52:4504:4518  \"address(token)\" */ var_token_address, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2)\n                            /// @src -1:-1:-1\n                            let _5 := 0\n                            /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                            let expr_component := call(gas(), _4, /** @src -1:-1:-1 */ _5, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_mpos), /** @src -1:-1:-1 */ _5, _5)\n                            /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                            let data := /** @src -1:-1:-1 */ _5\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            switch returndatasize()\n                            case 0 { data := 96 }\n                            default {\n                                let _6 := returndatasize()\n                                if gt(_6, _3)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ _5, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src -1:-1:-1 */ _5, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                }\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, add(and(add(_6, 31), not(31)), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                mstore(memPtr, _6)\n                                data := memPtr\n                                returndatacopy(add(memPtr, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ _5, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            }\n                            /// @src 53:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                            let var_mpos := /** @src 53:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_4, expr_component, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ data)\n                            /// @src 52:4551:4568  \"returndata.length\"\n                            let expr := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 52:4551:4568  \"returndata.length\" */ var_mpos)\n                            /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            let expr_1 := /** @src 52:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                            /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            if expr_1\n                            {\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                if slt(sub(/** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                {\n                                    revert(/** @src -1:-1:-1 */ _5, _5)\n                                }\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let value := mload(/** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let _7 := iszero(value)\n                                if iszero(eq(value, iszero(_7)))\n                                {\n                                    revert(/** @src -1:-1:-1 */ _5, _5)\n                                }\n                                /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                expr_1 := _7\n                            }\n                            /// @src 52:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                            if expr_1\n                            {\n                                /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                let _8 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                mstore(_8, shl(224, 0x5274afe7))\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                mstore(/** @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_8, 4), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                                /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                revert(_8, /** @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                            }\n                        }\n                        /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                        {\n                            /// @src 53:4793:5201  \"if (!success) {...\"\n                            switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                            case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                if expr\n                                {\n                                    expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                }\n                                /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                if expr\n                                {\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    let _1 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    mstore(_1, shl(224, 0x9996b315))\n                                    /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    revert(_1, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 36)\n                                }\n                                /// @src 53:5173:5190  \"return returndata\"\n                                var_mpos := var_returndata_mpos\n                                leave\n                            }\n                            default /// @src 53:4793:5201  \"if (!success) {...\"\n                            {\n                                /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    let _2 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    mstore(_2, shl(225, 0x0a12f521))\n                                    revert(_2, 4)\n                                }\n                                default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                {\n                                    /// @src 53:6046:6188  \"assembly {...\"\n                                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                }\n                            }\n                        }\n                        /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        function require_helper_stringliteral_3ae3(condition)\n                        {\n                            if iszero(condition)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 28)\n                                mstore(add(memPtr, 68), \"RewardDistributor: forbidden\")\n                                revert(memPtr, 100)\n                            }\n                        }\n                        /// @ast-id 58592 @src 74:2182:2454  \"function pendingRewards() public view override returns (uint256) {...\"\n                        function fun_pendingRewards() -> var_\n                        {\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let _1 := sload(/** @src 74:2280:2300  \"lastDistributionTime\" */ 0x04)\n                            /// @src 74:2257:2335  \"if (block.timestamp == lastDistributionTime) {...\"\n                            if /** @src 74:2261:2300  \"block.timestamp == lastDistributionTime\" */ eq(/** @src 74:2261:2276  \"block.timestamp\" */ timestamp(), /** @src 74:2261:2300  \"block.timestamp == lastDistributionTime\" */ _1)\n                            /// @src 74:2257:2335  \"if (block.timestamp == lastDistributionTime) {...\"\n                            {\n                                /// @src 74:2316:2324  \"return 0\"\n                                var_ := /** @src -1:-1:-1 */ 0\n                                /// @src 74:2316:2324  \"return 0\"\n                                leave\n                            }\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let diff := sub(/** @src 74:2261:2276  \"block.timestamp\" */ timestamp(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)\n                            if gt(diff, /** @src 74:2261:2276  \"block.timestamp\" */ timestamp())\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 74:2280:2300  \"lastDistributionTime\" */ 0x04, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                            }\n                            let _2 := sload(/** @src 74:2419:2436  \"tokensPerInterval\" */ 0x03)\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let product := mul(_2, diff)\n                            if iszero(or(iszero(_2), eq(diff, div(product, _2))))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 74:2280:2300  \"lastDistributionTime\" */ 0x04, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                            }\n                            /// @src 74:2412:2447  \"return tokensPerInterval * timeDiff\"\n                            var_ := product\n                        }\n                        /// @ast-id 58665 @src 74:2460:3106  \"function distribute() external override returns (uint256) {...\"\n                        function fun_distribute() -> var\n                        {\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            if iszero(/** @src 74:2549:2576  \"msg.sender == rewardTracker\" */ eq(/** @src 74:2549:2559  \"msg.sender\" */ caller(), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 74:2563:2576  \"rewardTracker\" */ 0x05), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)))\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 37)\n                                mstore(add(memPtr, 68), \"RewardDistributor: invalid msg.s\")\n                                mstore(add(memPtr, 100), \"ender\")\n                                revert(memPtr, 132)\n                            }\n                            /// @src 74:2649:2682  \"uint256 amount = pendingRewards()\"\n                            let var_amount := /** @src 74:2666:2682  \"pendingRewards()\" */ fun_pendingRewards()\n                            /// @src 74:2692:2742  \"if (amount == 0) {...\"\n                            if /** @src 74:2696:2707  \"amount == 0\" */ iszero(var_amount)\n                            /// @src 74:2692:2742  \"if (amount == 0) {...\"\n                            {\n                                /// @src 74:2723:2731  \"return 0\"\n                                var := /** @src -1:-1:-1 */ 0\n                                /// @src 74:2723:2731  \"return 0\"\n                                leave\n                            }\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            sstore(/** @src 74:2752:2790  \"lastDistributionTime = block.timestamp\" */ 0x04, /** @src 74:2775:2790  \"block.timestamp\" */ timestamp())\n                            /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let cleaned := and(sload(/** @src 74:2826:2837  \"rewardToken\" */ 0x02), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)\n                            /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            let _2 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            mstore(_2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x70a08231))\n                            mstore(/** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ add(_2, /** @src 74:2752:2790  \"lastDistributionTime = block.timestamp\" */ 0x04), /** @src 74:2857:2861  \"this\" */ address())\n                            /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            let _3 := staticcall(gas(), cleaned, _2, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 36, /** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ _2, 32)\n                            if iszero(_3)\n                            {\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            if _3\n                            {\n                                let _4 := 32\n                                if gt(_4, returndatasize()) { _4 := returndatasize() }\n                                finalize_allocation(_2, _4)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                if slt(sub(/** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ add(_2, _4), /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ 32)\n                                /// @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                {\n                                    revert(/** @src -1:-1:-1 */ expr, expr)\n                                }\n                                /// @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                                expr := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                            }\n                            /// @src 74:2873:2936  \"if (amount > balance) {...\"\n                            if /** @src 74:2877:2893  \"amount > balance\" */ gt(var_amount, expr)\n                            /// @src 74:2873:2936  \"if (amount > balance) {...\"\n                            {\n                                /// @src 74:2909:2925  \"amount = balance\"\n                                var_amount := expr\n                            }\n                            /// @src 74:2946:3077  \"if (amount != 0) {...\"\n                            if /** @src 74:2950:2961  \"amount != 0\" */ iszero(iszero(var_amount))\n                            /// @src 74:2946:3077  \"if (amount != 0) {...\"\n                            {\n                                /// @src 74:3022:3028  \"amount\"\n                                fun_safeTransfer(/** @src 74:2977:2996  \"IERC20(rewardToken)\" */ cleaned, /** @src 74:2549:2559  \"msg.sender\" */ caller(), /** @src 74:3022:3028  \"amount\" */ var_amount)\n                                /// @src 74:3048:3066  \"Distribute(amount)\"\n                                let _5 := /** @src 74:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                mstore(_5, var_amount)\n                                /// @src 74:3048:3066  \"Distribute(amount)\"\n                                log1(_5, /** @src 74:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ 32, /** @src 74:3048:3066  \"Distribute(amount)\" */ 0x4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead)\n                            }\n                            /// @src 74:3086:3099  \"return amount\"\n                            var := var_amount\n                        }\n                    }\n                    data \".metadata\" hex\"a164736f6c6343000815000a\"\n                }\n            }\n            /// @use-src 49:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 73:\"src/access/Governable.sol\", 76:\"src/staking/RewardTracker.sol\", 79:\"src/staking/interfaces/IRewardTracker.sol\"\n            object \"RewardTracker_60417\" {\n                code {\n                    {\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(64, memoryguard(0xa0))\n                        if callvalue() { revert(0, 0) }\n                        let programSize := datasize(\"RewardTracker_60417\")\n                        let argSize := sub(codesize(), programSize)\n                        let memoryDataOffset := allocate_memory(argSize)\n                        codecopy(memoryDataOffset, programSize, argSize)\n                        let _1 := add(memoryDataOffset, argSize)\n                        if slt(sub(_1, memoryDataOffset), 96)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let offset := mload(memoryDataOffset)\n                        let _2 := sub(shl(64, 1), 1)\n                        if gt(offset, _2)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n                        let _3 := 32\n                        let offset_1 := mload(add(memoryDataOffset, _3))\n                        if gt(offset_1, _2)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n                        let value := mload(add(memoryDataOffset, 64))\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 55:1713:1714  \"1\"\n                        let _4 := 0x01\n                        /// @src -1:-1:-1\n                        let _5 := 0\n                        /// @src 55:1713:1714  \"1\"\n                        sstore(/** @src -1:-1:-1 */ _5, /** @src 55:1713:1714  \"1\" */ _4)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        sstore(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(sload(/** @src 55:1713:1714  \"1\" */ _4), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(sub(shl(160, 1), 1))), /** @src 73:204:214  \"msg.sender\" */ caller()))\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let newLen := mload(value0)\n                        if gt(newLen, _2)\n                        {\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        let _6 := sload(/** @src 76:2309:2321  \"name = _name\" */ 0x02)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let length := /** @src -1:-1:-1 */ _5\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        length := shr(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)\n                        let outOfPlaceEncoding := and(_6, /** @src 55:1713:1714  \"1\" */ _4)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, _3))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        let _7 := 31\n                        if gt(length, _7)\n                        {\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:2309:2321  \"name = _name\" */ 0x02)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let data := keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            let deleteStart := add(data, shr(5, add(newLen, _7)))\n                            if lt(newLen, _3) { deleteStart := data }\n                            let _8 := add(data, shr(5, add(length, _7)))\n                            let start := deleteStart\n                            for { }\n                            lt(start, _8)\n                            {\n                                start := add(start, /** @src 55:1713:1714  \"1\" */ _4)\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ _5)\n                            }\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let srcOffset := /** @src -1:-1:-1 */ _5\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        srcOffset := _3\n                        switch gt(newLen, _7)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:2309:2321  \"name = _name\" */ 0x02)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            let i := /** @src -1:-1:-1 */ _5\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            for { } lt(i, loopEnd) { i := add(i, _3) }\n                            {\n                                sstore(dstPtr, mload(add(value0, srcOffset)))\n                                dstPtr := add(dstPtr, /** @src 55:1713:1714  \"1\" */ _4)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                srcOffset := add(srcOffset, _3)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(value0, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(/** @src 76:2309:2321  \"name = _name\" */ 0x02, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ add(shl(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen), /** @src 55:1713:1714  \"1\" */ _4))\n                        }\n                        default /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        {\n                            let value_1 := /** @src -1:-1:-1 */ _5\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if newLen\n                            {\n                                value_1 := mload(add(value0, srcOffset))\n                            }\n                            sstore(/** @src 76:2309:2321  \"name = _name\" */ 0x02, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen)))\n                        }\n                        let newLen_1 := mload(value1)\n                        if gt(newLen_1, _2)\n                        {\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        /// @src 76:2331:2347  \"symbol = _symbol\"\n                        let _9 := 0x03\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _10 := sload(/** @src 76:2331:2347  \"symbol = _symbol\" */ _9)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let length_1 := /** @src -1:-1:-1 */ _5\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        length_1 := shr(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _10)\n                        let outOfPlaceEncoding_1 := and(_10, /** @src 55:1713:1714  \"1\" */ _4)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        if gt(length_1, _7)\n                        {\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:2331:2347  \"symbol = _symbol\" */ _9)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let data_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                            if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                            let _11 := add(data_1, shr(5, add(length_1, _7)))\n                            let start_1 := deleteStart_1\n                            for { }\n                            lt(start_1, _11)\n                            {\n                                start_1 := add(start_1, /** @src 55:1713:1714  \"1\" */ _4)\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            {\n                                sstore(start_1, /** @src -1:-1:-1 */ _5)\n                            }\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let srcOffset_1 := /** @src -1:-1:-1 */ _5\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        srcOffset_1 := _3\n                        switch gt(newLen_1, _7)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 76:2331:2347  \"symbol = _symbol\" */ _9)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            let i_1 := /** @src -1:-1:-1 */ _5\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                            {\n                                sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, /** @src 55:1713:1714  \"1\" */ _4)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                srcOffset_1 := add(srcOffset_1, _3)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(value1, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 76:2331:2347  \"symbol = _symbol\" */ _9, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1), 248), not(0)))))\n                            }\n                            sstore(/** @src 76:2331:2347  \"symbol = _symbol\" */ _9, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ add(shl(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1), /** @src 55:1713:1714  \"1\" */ _4))\n                        }\n                        default /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        {\n                            let value_2 := /** @src -1:-1:-1 */ _5\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if newLen_1\n                            {\n                                value_2 := mload(add(value1, srcOffset_1))\n                            }\n                            sstore(/** @src 76:2331:2347  \"symbol = _symbol\" */ _9, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(value_2, not(shr(shl(/** @src 76:2331:2347  \"symbol = _symbol\" */ _9, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1), not(0)))), shl(/** @src 55:1713:1714  \"1\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1)))\n                        }\n                        /// @src 76:2357:2385  \"depositToken = _depositToken\"\n                        mstore(128, value)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _12 := mload(64)\n                        let _13 := datasize(\"RewardTracker_60417_deployed\")\n                        codecopy(_12, dataoffset(\"RewardTracker_60417_deployed\"), _13)\n                        setimmutable(_12, \"59157\", mload(/** @src 76:2357:2385  \"depositToken = _depositToken\" */ 128))\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        return(_12, _13)\n                    }\n                    function allocate_memory(size) -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_decode_string_fromMemory(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := mload(offset)\n                        if gt(_1, sub(shl(64, 1), 1))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        let _2 := 0x20\n                        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n                        mstore(array_1, _1)\n                        if gt(add(add(offset, _1), _2), end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        for { } lt(i, _1) { i := add(i, _2) }\n                        {\n                            mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n                        }\n                        mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        array := array_1\n                    }\n                }\n                /// @use-src 52:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 61:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\", 73:\"src/access/Governable.sol\", 76:\"src/staking/RewardTracker.sol\"\n                object \"RewardTracker_60417_deployed\" {\n                    code {\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := memoryguard(0x80)\n                            let _2 := 64\n                            mstore(_2, _1)\n                            let _3 := 4\n                            if iszero(lt(calldatasize(), _3))\n                            {\n                                let _4 := 0\n                                switch shr(224, calldataload(_4))\n                                case 0x06fdde03 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let ret := _4\n                                    let slotValue := sload(/** @src 76:1154:1172  \"string public name\" */ 2)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let length := _4\n                                    let _5 := 1\n                                    length := shr(_5, slotValue)\n                                    let outOfPlaceEncoding := and(slotValue, _5)\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    let _6 := 32\n                                    if eq(outOfPlaceEncoding, lt(length, _6))\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x22)\n                                        revert(_4, 0x24)\n                                    }\n                                    mstore(_1, length)\n                                    switch outOfPlaceEncoding\n                                    case 0 {\n                                        mstore(add(_1, _6), and(slotValue, not(255)))\n                                        ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                    }\n                                    case 1 {\n                                        mstore(_4, /** @src 76:1154:1172  \"string public name\" */ 2)\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        let dataPos := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                                        let i := _4\n                                        for { } lt(i, length) { i := add(i, _6) }\n                                        {\n                                            mstore(add(add(_1, i), _6), sload(dataPos))\n                                            dataPos := add(dataPos, _5)\n                                        }\n                                        ret := add(add(_1, i), _6)\n                                    }\n                                    finalize_allocation(_1, sub(ret, _1))\n                                    let memPos := mload(_2)\n                                    return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                                }\n                                case 0x095ea7b3 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0 := abi_decode_address_20793()\n                                    /// @src 76:5681:5688  \"_amount\"\n                                    fun_approve(/** @src 76:5659:5669  \"msg.sender\" */ caller(), /** @src 76:5681:5688  \"_amount\" */ value0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(36))\n                                    let memPos_1 := mload(_2)\n                                    mstore(memPos_1, 1)\n                                    return(memPos_1, 32)\n                                }\n                                case 0x10c1c103 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1714:1771  \"mapping(address => uint256) public override stakedAmounts\" */ 13)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _7 := sload(keccak256(_4, _2))\n                                    let memPos_2 := mload(_2)\n                                    mstore(memPos_2, _7)\n                                    return(memPos_2, 32)\n                                }\n                                case 0x126082cf {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let memPos_3 := mload(_2)\n                                    mstore(memPos_3, /** @src 76:1021:1027  \"100_00\" */ 0x2710)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(memPos_3, 32)\n                                }\n                                case 0x12d43a51 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value := and(sload(/** @src 73:149:167  \"address public gov\" */ 1), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))\n                                    let memPos_4 := mload(_2)\n                                    mstore(memPos_4, value)\n                                    return(memPos_4, 32)\n                                }\n                                case 0x13e82e7a {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0_1 := abi_decode_address_20793()\n                                    let value1 := abi_decode_address()\n                                    /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                    fun_nonReentrantBefore()\n                                    /// @src 76:6741:6953  \"function claimForAccount(...\"\n                                    fun_validateHandler()\n                                    /// @src 76:6912:6946  \"return _claim(_account, _receiver)\"\n                                    let var := /** @src 76:6919:6946  \"_claim(_account, _receiver)\" */ fun_claim(value0_1, value1)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_5 := mload(_2)\n                                    mstore(memPos_5, var)\n                                    return(memPos_5, 32)\n                                }\n                                case 0x18160ddd {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _8 := sload(/** @src 76:1386:1421  \"uint256 public override totalSupply\" */ 7)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_6 := mload(_2)\n                                    mstore(memPos_6, _8)\n                                    return(memPos_6, 32)\n                                }\n                                case 0x1d30d5bc {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_2 := abi_decode_bool()\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))))\n                                    let _9 := iszero(iszero(value0_2))\n                                    let _10 := sload(/** @src 76:2933:2977  \"inPrivateStakingMode = _inPrivateStakingMode\" */ 0x12)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    sstore(/** @src 76:2933:2977  \"inPrivateStakingMode = _inPrivateStakingMode\" */ 0x12, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_10, not(65280)), and(shl(8, _9), 65280)))\n                                    /// @src 76:2992:3036  \"PrivateStakingModeSet(_inPrivateStakingMode)\"\n                                    let _11 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    mstore(_11, _9)\n                                    /// @src 76:2992:3036  \"PrivateStakingModeSet(_inPrivateStakingMode)\"\n                                    log1(_11, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 76:2992:3036  \"PrivateStakingModeSet(_inPrivateStakingMode)\" */ 0x75a353166f2b3eb313e3eb5ce4f505362115d614f900c2f3a109b522c029a672)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x1e83409a {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_3 := abi_decode_address_20793()\n                                    /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                    fun_nonReentrantBefore()\n                                    /// @src 76:6603:6683  \"if (inPrivateClaimingMode) { ...\"\n                                    if /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(shr(16, sload(/** @src 76:6607:6628  \"inPrivateClaimingMode\" */ 0x12)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                    /// @src 76:6603:6683  \"if (inPrivateClaimingMode) { ...\"\n                                    {\n                                        /// @src 76:6652:6672  \"AuthorizationError()\"\n                                        let _12 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                        /// @src 76:6652:6672  \"AuthorizationError()\"\n                                        mstore(_12, shl(234, 1443823))\n                                        revert(_12, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                                    }\n                                    /// @src 76:6692:6728  \"return _claim(msg.sender, _receiver)\"\n                                    let var_1 := /** @src 76:6699:6728  \"_claim(msg.sender, _receiver)\" */ fun_claim(/** @src 76:6706:6716  \"msg.sender\" */ caller(), /** @src 76:6699:6728  \"_claim(msg.sender, _receiver)\" */ value0_3)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_7 := mload(_2)\n                                    mstore(memPos_7, var_1)\n                                    return(memPos_7, 32)\n                                }\n                                case 0x1eb903cf {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1280:1340  \"mapping (address => uint256) public override depositBalances\" */ 5)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _13 := sload(keccak256(_4, _2))\n                                    let memPos_8 := mload(_2)\n                                    mstore(memPos_8, _13)\n                                    return(memPos_8, 32)\n                                }\n                                case 0x23b872dd {\n                                    if callvalue() { revert(_4, _4) }\n                                    let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                    let ret_1 := fun_transferFrom(param, param_1, param_2)\n                                    let memPos_9 := mload(_2)\n                                    mstore(memPos_9, iszero(iszero(ret_1)))\n                                    return(memPos_9, 32)\n                                }\n                                case 0x27e235e3 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1475:1518  \"mapping(address => uint256) public balances\" */ 9)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _14 := sload(keccak256(_4, _2))\n                                    let memPos_10 := mload(_2)\n                                    mstore(memPos_10, _14)\n                                    return(memPos_10, 32)\n                                }\n                                case 0x313ce567 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let memPos_11 := mload(_2)\n                                    mstore(memPos_11, /** @src 76:1113:1115  \"18\" */ 0x12)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(memPos_11, 32)\n                                }\n                                case 0x33080b6e {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                    let value0_4 := abi_decode_address_20793()\n                                    let _15 := 36\n                                    let value_1 := calldataload(_15)\n                                    let value_2 := calldataload(68)\n                                    let _16 := sub(shl(160, 1), 1)\n                                    if iszero(eq(value_2, and(value_2, _16))) { revert(_4, _4) }\n                                    /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                    fun_nonReentrantBefore()\n                                    /// @src 76:4962:5157  \"function unstakeForAccount(address _account, uint256 _amount, address _receiver) external override nonReentrant {...\"\n                                    fun_validateHandler()\n                                    /// @src 76:12350:12404  \"require(_amount > 0, \\\"RewardTracker: invalid _amount\\\")\"\n                                    require_helper_stringliteral(/** @src 76:12358:12369  \"_amount > 0\" */ iszero(iszero(value_1)))\n                                    /// @src 76:12430:12438  \"_account\"\n                                    fun_updateRewards(value0_4)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _17 := and(value0_4, _16)\n                                    mstore(_4, _17)\n                                    let _18 := 32\n                                    mstore(_18, /** @src 76:12473:12486  \"stakedAmounts\" */ 0x0d)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _19 := sload(keccak256(_4, _2))\n                                    if /** @src 76:12527:12561  \"stakedAmounts[_account] >= _amount\" */ lt(_19, value_1)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    {\n                                        let memPtr := mload(_2)\n                                        mstore(memPtr, shl(229, 4594637))\n                                        mstore(add(memPtr, _3), _18)\n                                        mstore(add(memPtr, _15), 43)\n                                        mstore(add(memPtr, 68), \"RewardTracker: _amount exceeds s\")\n                                        mstore(add(memPtr, 100), \"takedAmount\")\n                                        revert(memPtr, 132)\n                                    }\n                                    /// @src 76:12667:12689  \"stakedAmount - _amount\"\n                                    let _20 := checked_sub_uint256(_19, value_1)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_4, _17)\n                                    mstore(_18, /** @src 76:12473:12486  \"stakedAmounts\" */ 0x0d)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ _20)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_18, /** @src 76:12732:12752  \"boostedStakedAmounts\" */ 0x0e)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _21 := sload(keccak256(_4, _2))\n                                    mstore(_18, /** @src 76:12809:12832  \"rewardBoostsBasisPoints\" */ 0x0c)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _22 := sload(keccak256(_4, _2))\n                                    /// @src 76:1021:1027  \"100_00\"\n                                    let _23 := 0x2710\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let sum := add(/** @src 76:1021:1027  \"100_00\" */ _23, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _22)\n                                    if gt(/** @src 76:1021:1027  \"100_00\" */ _23, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x11)\n                                        revert(_4, _15)\n                                    }\n                                    /// @src 76:12732:12865  \"boostedStakedAmounts[_account] - Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\"\n                                    let _24 := checked_sub_uint256(_21, /** @src 76:12765:12865  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(value_1, /** @src 76:12786:12842  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum))\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_4, _17)\n                                    mstore(_18, /** @src 76:12732:12752  \"boostedStakedAmounts\" */ 0x0e)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ _24)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_18, /** @src 76:12902:12917  \"depositBalances\" */ 0x05)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _25 := sload(keccak256(_4, _2))\n                                    if /** @src 76:12945:12971  \"_depositBalance >= _amount\" */ lt(_25, value_1)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    {\n                                        let memPtr_1 := mload(_2)\n                                        mstore(memPtr_1, shl(229, 4594637))\n                                        mstore(add(memPtr_1, _3), _18)\n                                        mstore(add(memPtr_1, _15), 45)\n                                        mstore(add(memPtr_1, 68), \"RewardTracker: _amount exceeds d\")\n                                        mstore(add(memPtr_1, 100), \"epositBalance\")\n                                        revert(memPtr_1, 132)\n                                    }\n                                    /// @src 76:13059:13084  \"_depositBalance - _amount\"\n                                    let _26 := checked_sub_uint256(_25, value_1)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_4, _17)\n                                    mstore(_18, /** @src 76:12902:12917  \"depositBalances\" */ 0x05)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ _26)\n                                    sstore(/** @src 76:13115:13133  \"totalDepositSupply\" */ 0x06, /** @src 76:13115:13143  \"totalDepositSupply - _amount\" */ checked_sub_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:13115:13133  \"totalDepositSupply\" */ 0x06), /** @src 76:13115:13143  \"totalDepositSupply - _amount\" */ value_1))\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    if /** @src 76:9764:9786  \"_account != address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _17)\n                                    {\n                                        let memPtr_2 := mload(_2)\n                                        mstore(memPtr_2, shl(229, 4594637))\n                                        mstore(add(memPtr_2, _3), _18)\n                                        mstore(add(memPtr_2, _15), 41)\n                                        mstore(add(memPtr_2, 68), \"RewardTracker: burn from the zer\")\n                                        mstore(add(memPtr_2, 100), \"o address\")\n                                        revert(memPtr_2, 132)\n                                    }\n                                    mstore(_4, _17)\n                                    mstore(_18, /** @src 76:9885:9893  \"balances\" */ 0x09)\n                                    /// @src 76:9885:9913  \"balances[_account] - _amount\"\n                                    let _27 := checked_sub_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(_4, _2)), /** @src 76:9885:9913  \"balances[_account] - _amount\" */ value_1)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_4, _17)\n                                    mstore(_18, /** @src 76:9885:9893  \"balances\" */ 0x09)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 55:1755:1756  \"2\" */ _27)\n                                    sstore(/** @src 76:9985:9996  \"totalSupply\" */ 0x07, /** @src 76:9985:10006  \"totalSupply - _amount\" */ checked_sub_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:9985:9996  \"totalSupply\" */ 0x07), /** @src 76:9985:10006  \"totalSupply - _amount\" */ value_1))\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _28 := sload(/** @src 76:10037:10055  \"boostedTotalSupply\" */ 0x08)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(_4, _17)\n                                    mstore(_18, /** @src 76:12809:12832  \"rewardBoostsBasisPoints\" */ 0x0c)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let sum_1 := add(/** @src 76:1021:1027  \"100_00\" */ _23, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(_4, _2)))\n                                    if gt(/** @src 76:1021:1027  \"100_00\" */ _23, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum_1)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x11)\n                                        revert(_4, _15)\n                                    }\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:10037:10055  \"boostedTotalSupply\" */ 0x08, /** @src 76:10037:10158  \"boostedTotalSupply - Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ checked_sub_uint256(_28, /** @src 76:10058:10158  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(value_1, /** @src 76:10079:10135  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum_1)))\n                                    /// @src 76:10174:10213  \"Transfer(_account, address(0), _amount)\"\n                                    let _29 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    mstore(_29, value_1)\n                                    /// @src 76:10174:10213  \"Transfer(_account, address(0), _amount)\"\n                                    log3(_29, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _18, /** @src 76:10174:10213  \"Transfer(_account, address(0), _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _17, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4)\n                                    /// @src 76:13233:13240  \"_amount\"\n                                    fun_safeTransfer(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 76:13195:13207  \"depositToken\" */ loadimmutable(\"59157\"), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _16), /** @src 76:13233:13240  \"_amount\" */ value_2, value_1)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, 1)\n                                    return(_4, _4)\n                                }\n                                case 0x3792def3 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1975:2036  \"mapping(address => uint256) public override cumulativeRewards\" */ 17)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _30 := sload(keccak256(_4, _2))\n                                    let memPos_12 := mload(_2)\n                                    mstore(memPos_12, _30)\n                                    return(memPos_12, 32)\n                                }\n                                case 0x392e53cd {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_3 := and(shr(160, sload(/** @src 76:1122:1147  \"bool public isInitialized\" */ 1)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                    let memPos_13 := mload(_2)\n                                    mstore(memPos_13, iszero(iszero(value_3)))\n                                    return(memPos_13, 32)\n                                }\n                                case 0x3cd7f700 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_5 := abi_decode_bool()\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))))\n                                    let _31 := iszero(iszero(value0_5))\n                                    let _32 := sload(/** @src 76:3153:3199  \"inPrivateClaimingMode = _inPrivateClaimingMode\" */ 0x12)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    sstore(/** @src 76:3153:3199  \"inPrivateClaimingMode = _inPrivateClaimingMode\" */ 0x12, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_32, not(16711680)), and(shl(16, _31), 16711680)))\n                                    /// @src 76:3214:3260  \"PrivateClaimingModeSet(_inPrivateClaimingMode)\"\n                                    let _33 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    mstore(_33, _31)\n                                    /// @src 76:3214:3260  \"PrivateClaimingModeSet(_inPrivateClaimingMode)\"\n                                    log1(_33, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 76:3214:3260  \"PrivateClaimingModeSet(_inPrivateClaimingMode)\" */ 0x88e53329a0b82ff67f98d8907e6ea149976c6cec68e6d1b65f8ff4da16b901f1)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x3e158b0c {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                    fun_nonReentrantBefore()\n                                    /// @src 76:6486:6496  \"address(0)\"\n                                    fun_updateRewards_20808()\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x402914f5 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let ret_2 := fun_claimable(abi_decode_address_20793())\n                                    let memPos_14 := mload(_2)\n                                    mstore(memPos_14, ret_2)\n                                    return(memPos_14, 32)\n                                }\n                                case 0x44a08411 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1903:1969  \"mapping(address => uint256) public previousCumulatedRewardPerToken\" */ 16)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _34 := sload(keccak256(_4, _2))\n                                    let memPos_15 := mload(_2)\n                                    mstore(memPos_15, _34)\n                                    return(memPos_15, 32)\n                                }\n                                case 0x46ea87af {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:2159:2200  \"mapping(address => bool) public isHandler\" */ 19)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let value_4 := and(sload(keccak256(_4, _2)), 0xff)\n                                    let memPos_16 := mload(_2)\n                                    mstore(memPos_16, iszero(iszero(value_4)))\n                                    return(memPos_16, 32)\n                                }\n                                case 0x55b6ed5c {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0_6 := abi_decode_address_20793()\n                                    let value1_1 := abi_decode_address()\n                                    let _35 := sub(shl(160, 1), 1)\n                                    mstore(_4, and(value0_6, _35))\n                                    mstore(32, /** @src 76:1524:1589  \"mapping(address => mapping(address => uint256)) public allowances\" */ 10)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _36 := keccak256(_4, _2)\n                                    mstore(_4, and(value1_1, _35))\n                                    mstore(32, _36)\n                                    let _37 := sload(keccak256(_4, _2))\n                                    let memPos_17 := mload(_2)\n                                    mstore(memPos_17, _37)\n                                    return(memPos_17, 32)\n                                }\n                                case 0x5a47a1a7 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_7 := abi_decode_bool()\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))))\n                                    let _38 := iszero(iszero(value0_7))\n                                    let value_5 := and(sload(/** @src 76:2711:2757  \"inPrivateTransferMode = _inPrivateTransferMode\" */ 0x12), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(255))\n                                    sstore(/** @src 76:2711:2757  \"inPrivateTransferMode = _inPrivateTransferMode\" */ 0x12, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(value_5, and(_38, 255)))\n                                    /// @src 76:2772:2818  \"PrivateTransferModeSet(_inPrivateTransferMode)\"\n                                    let _39 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    mstore(_39, _38)\n                                    /// @src 76:2772:2818  \"PrivateTransferModeSet(_inPrivateTransferMode)\"\n                                    log1(_39, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 76:2772:2818  \"PrivateTransferModeSet(_inPrivateTransferMode)\" */ 0xcfea93b2060af4c4737eb6d7b0d85428b120e6613299f9b6d7703a689c81d0dc)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x65e6111d {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1777:1841  \"mapping(address => uint256) public override boostedStakedAmounts\" */ 14)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _40 := sload(keccak256(_4, _2))\n                                    let memPos_18 := mload(_2)\n                                    mstore(memPos_18, _40)\n                                    return(memPos_18, 32)\n                                }\n                                case 0x661bbcc3 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _41 := sload(/** @src 76:1346:1379  \"uint256 public totalDepositSupply\" */ 6)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_19 := mload(_2)\n                                    mstore(memPos_19, _41)\n                                    return(memPos_19, 32)\n                                }\n                                case 0x66ab7efa {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let offset := calldataload(_3)\n                                    let _42 := 0xffffffffffffffff\n                                    if gt(offset, _42) { revert(_4, _4) }\n                                    if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                    let _43 := calldataload(add(_3, offset))\n                                    let _44 := 36\n                                    let _45 := array_allocation_size_array_address_dyn(_43)\n                                    let memPtr_3 := mload(_2)\n                                    finalize_allocation(memPtr_3, _45)\n                                    let dst := memPtr_3\n                                    mstore(memPtr_3, _43)\n                                    let _46 := 0x20\n                                    dst := add(memPtr_3, _46)\n                                    let srcEnd := add(add(offset, shl(5, _43)), _44)\n                                    if gt(srcEnd, calldatasize()) { revert(_4, _4) }\n                                    let src := add(offset, _44)\n                                    for { } lt(src, srcEnd) { src := add(src, _46) }\n                                    {\n                                        let value_6 := calldataload(src)\n                                        if iszero(eq(value_6, and(value_6, sub(shl(160, 1), 1)))) { revert(_4, _4) }\n                                        mstore(dst, value_6)\n                                        dst := add(dst, _46)\n                                    }\n                                    let offset_1 := calldataload(_44)\n                                    if gt(offset_1, _42) { revert(_4, _4) }\n                                    if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_4, _4) }\n                                    let _47 := calldataload(add(_3, offset_1))\n                                    let _48 := array_allocation_size_array_address_dyn(_47)\n                                    let memPtr_4 := mload(_2)\n                                    finalize_allocation(memPtr_4, _48)\n                                    let dst_1 := memPtr_4\n                                    mstore(memPtr_4, _47)\n                                    dst_1 := add(memPtr_4, _46)\n                                    let srcEnd_1 := add(add(offset_1, shl(5, _47)), _44)\n                                    if gt(srcEnd_1, calldatasize()) { revert(_4, _4) }\n                                    let src_1 := add(offset_1, _44)\n                                    for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _46) }\n                                    {\n                                        mstore(dst_1, calldataload(src_1))\n                                        dst_1 := add(dst_1, _46)\n                                    }\n                                    let _49 := sub(shl(160, 1), 1)\n                                    /// @src 73:278:281  \"gov\"\n                                    let _50 := 0x01\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ _50), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _49)))\n                                    /// @src 76:3800:3816  \"_accounts.length\"\n                                    let expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 76:3800:3816  \"_accounts.length\" */ memPtr_3)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    if iszero(/** @src 76:3800:3850  \"_accounts.length == _rewardBoostBasisPoints.length\" */ eq(expr, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 76:3820:3850  \"_rewardBoostBasisPoints.length\" */ memPtr_4)))\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    {\n                                        let memPtr_5 := mload(_2)\n                                        mstore(memPtr_5, shl(229, 4594637))\n                                        mstore(add(memPtr_5, _3), _46)\n                                        mstore(add(memPtr_5, _44), _44)\n                                        mstore(add(memPtr_5, 68), \"RewardTracker: array length mism\")\n                                        mstore(add(memPtr_5, 100), \"atch\")\n                                        revert(memPtr_5, 132)\n                                    }\n                                    /// @src 76:3928:3941  \"uint256 i = 0\"\n                                    let var_i := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                    /// @src 76:3923:4052  \"for (uint256 i = 0; i < _accounts.length; i++) {...\"\n                                    for { }\n                                    /** @src 73:278:281  \"gov\" */ _50\n                                    /// @src 76:3928:3941  \"uint256 i = 0\"\n                                    {\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        if eq(var_i, not(0))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x11)\n                                            revert(_4, _44)\n                                        }\n                                        /// @src 76:3965:3968  \"i++\"\n                                        var_i := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ add(var_i, /** @src 73:278:281  \"gov\" */ _50)\n                                    }\n                                    /// @src 76:3965:3968  \"i++\"\n                                    {\n                                        /// @src 76:3943:3963  \"i < _accounts.length\"\n                                        if iszero(lt(var_i, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 76:3947:3963  \"_accounts.length\" */ memPtr_3)))\n                                        /// @src 76:3943:3963  \"i < _accounts.length\"\n                                        { break }\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        let cleaned := and(mload(/** @src 76:4000:4012  \"_accounts[i]\" */ memory_array_index_access_address_dyn(memPtr_3, var_i)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _49)\n                                        /// @src 76:4014:4040  \"_rewardBoostBasisPoints[i]\"\n                                        fun_setRewardBoost(cleaned, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 76:4014:4040  \"_rewardBoostBasisPoints[i]\" */ memory_array_index_access_address_dyn(memPtr_4, var_i)))\n                                    }\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x6ccae054 {\n                                    if callvalue() { revert(_4, _4) }\n                                    let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                    let _51 := sub(shl(160, 1), 1)\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _51)))\n                                    /// @src 76:4304:4311  \"_amount\"\n                                    fun_safeTransfer(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 76:4266:4280  \"IERC20(_token)\" */ param_3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _51), /** @src 76:4304:4311  \"_amount\" */ param_4, param_5)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0x70a08231 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:4434:4442  \"balances\" */ 0x09)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _52 := sload(keccak256(_4, _2))\n                                    let memPos_20 := mload(_2)\n                                    mstore(memPos_20, _52)\n                                    return(memPos_20, 32)\n                                }\n                                case 0x8112643c {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _53 := sload(/** @src 76:1427:1469  \"uint256 public override boostedTotalSupply\" */ 8)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_21 := mload(_2)\n                                    mstore(memPos_21, _53)\n                                    return(memPos_21, 32)\n                                }\n                                case 0x83b6ed16 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1641:1708  \"mapping(address => uint256) public override rewardBoostsBasisPoints\" */ 12)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _54 := sload(keccak256(_4, _2))\n                                    let memPos_22 := mload(_2)\n                                    mstore(memPos_22, _54)\n                                    return(memPos_22, 32)\n                                }\n                                case 0x95d89b41 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let memPtr_6 := mload(_2)\n                                    let ret_3 := _4\n                                    let slotValue_1 := sload(/** @src 76:1178:1198  \"string public symbol\" */ 3)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let length_1 := _4\n                                    let _55 := 1\n                                    length_1 := shr(_55, slotValue_1)\n                                    let outOfPlaceEncoding_1 := and(slotValue_1, _55)\n                                    if iszero(outOfPlaceEncoding_1)\n                                    {\n                                        length_1 := and(length_1, 0x7f)\n                                    }\n                                    let _56 := 32\n                                    if eq(outOfPlaceEncoding_1, lt(length_1, _56))\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x22)\n                                        revert(_4, 0x24)\n                                    }\n                                    mstore(memPtr_6, length_1)\n                                    switch outOfPlaceEncoding_1\n                                    case 0 {\n                                        mstore(add(memPtr_6, _56), and(slotValue_1, not(255)))\n                                        ret_3 := add(add(memPtr_6, shl(5, iszero(iszero(length_1)))), _56)\n                                    }\n                                    case 1 {\n                                        mstore(_4, /** @src 76:1178:1198  \"string public symbol\" */ 3)\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        let dataPos_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                        let i_1 := _4\n                                        for { } lt(i_1, length_1) { i_1 := add(i_1, _56) }\n                                        {\n                                            mstore(add(add(memPtr_6, i_1), _56), sload(dataPos_1))\n                                            dataPos_1 := add(dataPos_1, _55)\n                                        }\n                                        ret_3 := add(add(memPtr_6, i_1), _56)\n                                    }\n                                    finalize_allocation(memPtr_6, sub(ret_3, memPtr_6))\n                                    let memPos_23 := mload(_2)\n                                    return(memPos_23, sub(abi_encode_string(memPos_23, memPtr_6), memPos_23))\n                                }\n                                case 0x9cb7de4b {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0_8 := abi_decode_address_20793()\n                                    let value_7 := calldataload(36)\n                                    let _57 := iszero(iszero(value_7))\n                                    if iszero(eq(value_7, _57)) { revert(_4, _4) }\n                                    let _58 := sub(shl(160, 1), 1)\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 73:278:281  \"gov\" */ 0x01), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _58)))\n                                    let _59 := and(value0_8, _58)\n                                    mstore(_4, _59)\n                                    mstore(32, /** @src 76:3354:3363  \"isHandler\" */ 0x13)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _60 := keccak256(_4, _2)\n                                    let value_8 := and(sload(_60), not(255))\n                                    sstore(_60, or(value_8, and(_57, 255)))\n                                    /// @src 76:3400:3431  \"HandlerSet(_handler, _isActive)\"\n                                    let _61 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    mstore(_61, _59)\n                                    mstore(add(_61, 32), _57)\n                                    /// @src 76:3400:3431  \"HandlerSet(_handler, _isActive)\"\n                                    log1(_61, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2, /** @src 76:3400:3431  \"HandlerSet(_handler, _isActive)\" */ 0x6cc67219f62a9e5d66cc9f2a62e16634cffcf48facd698a829bafcc1ad2c5c83)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0xa694fc3a {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                    fun_nonReentrantBefore()\n                                    /// @src 76:4538:4617  \"if (inPrivateStakingMode) { ...\"\n                                    if /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(shr(8, sload(/** @src 76:4542:4562  \"inPrivateStakingMode\" */ 0x12)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                    /// @src 76:4538:4617  \"if (inPrivateStakingMode) { ...\"\n                                    {\n                                        /// @src 76:4586:4606  \"AuthorizationError()\"\n                                        let _62 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                        /// @src 76:4586:4606  \"AuthorizationError()\"\n                                        mstore(_62, /** @src 76:6652:6672  \"AuthorizationError()\" */ shl(234, 1443823))\n                                        /// @src 76:4586:4606  \"AuthorizationError()\"\n                                        revert(_62, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                                    }\n                                    /// @src 76:4657:4664  \"_amount\"\n                                    fun_stake(/** @src 76:4633:4643  \"msg.sender\" */ caller(), caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(_3))\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, 1)\n                                    return(_4, _4)\n                                }\n                                case 0xa8d93627 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let cleaned_1 := and(sload(_3), sub(shl(160, 1), 1))\n                                    /// @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                    let _63 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    /// @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                    mstore(_63, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xa8d93627))\n                                    /// @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                    let _64 := staticcall(gas(), cleaned_1, _63, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3, /** @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ _63, 32)\n                                    if iszero(_64)\n                                    {\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        let pos := mload(_2)\n                                        returndatacopy(pos, _4, returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                    let expr_1 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                    /// @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                    if _64\n                                    {\n                                        let _65 := 32\n                                        if gt(_65, returndatasize()) { _65 := returndatasize() }\n                                        finalize_allocation(_63, _65)\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        if slt(sub(/** @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ add(_63, _65), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _63), /** @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ 32)\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        { revert(_4, _4) }\n                                        /// @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                        expr_1 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_63)\n                                    }\n                                    let memPos_24 := mload(_2)\n                                    mstore(memPos_24, expr_1)\n                                    return(memPos_24, /** @src 76:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ 32)\n                                }\n                                case /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xa9059cbb {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0_9 := abi_decode_address_20793()\n                                    /// @src 76:5317:5324  \"_amount\"\n                                    fun_transfer(/** @src 76:5293:5303  \"msg.sender\" */ caller(), /** @src 76:5317:5324  \"_amount\" */ value0_9, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(36))\n                                    let memPos_25 := mload(_2)\n                                    mstore(memPos_25, 1)\n                                    return(memPos_25, 32)\n                                }\n                                case 0xaaf5eb68 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let memPos_26 := mload(_2)\n                                    mstore(memPos_26, /** @src 76:1069:1073  \"1e30\" */ 0x0c9f2c9cd04674edea40000000)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(memPos_26, 32)\n                                }\n                                case 0xb5f73e8d {\n                                    if callvalue() { revert(_4, _4) }\n                                    let param_6, param_7, param_8 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                    /// @src 55:2322:2425  \"modifier nonReentrant() {...\"\n                                    fun_nonReentrantBefore()\n                                    /// @src 76:4678:4881  \"function stakeForAccount(address _fundingAccount, address _account, uint256 _amount) external override nonReentrant {...\"\n                                    fun_validateHandler()\n                                    /// @src 76:4866:4873  \"_amount\"\n                                    fun_stake(param_6, param_7, param_8)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 55:1713:1714  \"1\" */ 0x01)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0xbfe10928 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_9 := and(sload(_3), sub(shl(160, 1), 1))\n                                    let memPos_27 := mload(_2)\n                                    mstore(memPos_27, value_9)\n                                    return(memPos_27, 32)\n                                }\n                                case 0xc4d66de8 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_10 := abi_decode_address_20793()\n                                    let _66 := sload(/** @src 73:278:281  \"gov\" */ 0x01)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _67 := sub(shl(160, 1), 1)\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(_66, _67)))\n                                    if iszero(/** @src 76:2489:2503  \"!isInitialized\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(shr(160, _66), 0xff)))\n                                    {\n                                        let memPtr_7 := mload(_2)\n                                        mstore(memPtr_7, shl(229, 4594637))\n                                        mstore(add(memPtr_7, _3), 32)\n                                        mstore(add(memPtr_7, 36), 34)\n                                        mstore(add(memPtr_7, 68), \"RewardTracker: already initializ\")\n                                        mstore(add(memPtr_7, 100), \"ed\")\n                                        revert(memPtr_7, 132)\n                                    }\n                                    sstore(/** @src 73:278:281  \"gov\" */ 0x01, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_66, not(shl(160, 255))), shl(160, 1)))\n                                    sstore(_3, or(and(sload(_3), shl(160, 0xffffffffffffffffffffffff)), and(value0_10, _67)))\n                                    return(_4, _4)\n                                }\n                                case 0xc5fa2730 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_10 := and(shr(8, sload(/** @src 76:2082:2114  \"bool public inPrivateStakingMode\" */ 18)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                    let memPos_28 := mload(_2)\n                                    mstore(memPos_28, iszero(iszero(value_10)))\n                                    return(memPos_28, 32)\n                                }\n                                case 0xc89039c5 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let memPos_29 := mload(_2)\n                                    mstore(memPos_29, and(/** @src 76:1204:1241  \"address immutable public depositToken\" */ loadimmutable(\"59157\"), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1)))\n                                    return(memPos_29, 32)\n                                }\n                                case 0xcfad57a2 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    let value0_11 := abi_decode_address_20793()\n                                    let _68 := sload(/** @src 73:278:281  \"gov\" */ 0x01)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _69 := sub(shl(160, 1), 1)\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(_68, _69)))\n                                    let _70 := and(/** @src 73:392:410  \"_gov == address(0)\" */ value0_11, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _69)\n                                    /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                    if /** @src 73:392:410  \"_gov == address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _70)\n                                    /// @src 73:388:462  \"if (_gov == address(0)) {...\"\n                                    {\n                                        /// @src 73:433:451  \"ZeroAddressError()\"\n                                        let _71 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                        /// @src 73:433:451  \"ZeroAddressError()\"\n                                        mstore(_71, shl(224, 0x3efa09af))\n                                        revert(_71, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                                    }\n                                    sstore(/** @src 73:278:281  \"gov\" */ 0x01, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_68, shl(160, 0xffffffffffffffffffffffff)), _70))\n                                    /// @src 73:496:508  \"GovSet(_gov)\"\n                                    let _72 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    mstore(_72, _70)\n                                    /// @src 73:496:508  \"GovSet(_gov)\"\n                                    log1(_72, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 73:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    return(_4, _4)\n                                }\n                                case 0xdafd83e2 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0_12 := abi_decode_address_20793()\n                                    /// @src 73:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                    require_helper_stringliteral_7c37(/** @src 73:264:281  \"msg.sender == gov\" */ eq(/** @src 73:264:274  \"msg.sender\" */ caller(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(1), sub(shl(160, 1), 1))))\n                                    /// @src 76:3594:3617  \"_rewardBoostBasisPoints\"\n                                    fun_setRewardBoost(value0_12, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(36))\n                                    return(_4, _4)\n                                }\n                                case 0xdd62ed3e {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                    let value0_13 := abi_decode_address_20793()\n                                    let value1_2 := abi_decode_address()\n                                    let _73 := sub(shl(160, 1), 1)\n                                    mstore(_4, and(value0_13, _73))\n                                    mstore(32, /** @src 76:5492:5502  \"allowances\" */ 0x0a)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _74 := keccak256(_4, _2)\n                                    mstore(_4, and(value1_2, _73))\n                                    mstore(32, _74)\n                                    let _75 := sload(keccak256(_4, _2))\n                                    let memPos_30 := mload(_2)\n                                    mstore(memPos_30, _75)\n                                    return(memPos_30, 32)\n                                }\n                                case 0xdfbaefb1 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_11 := and(sload(/** @src 76:2043:2076  \"bool public inPrivateTransferMode\" */ 18), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                    let memPos_31 := mload(_2)\n                                    mstore(memPos_31, iszero(iszero(value_11)))\n                                    return(memPos_31, 32)\n                                }\n                                case 0xe9503425 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                    mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 76:1847:1897  \"mapping(address => uint256) public claimableReward\" */ 15)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let _76 := sload(keccak256(_4, _2))\n                                    let memPos_32 := mload(_2)\n                                    mstore(memPos_32, _76)\n                                    return(memPos_32, 32)\n                                }\n                                case 0xf5fc5076 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _77 := sload(/** @src 76:1596:1635  \"uint256 public cumulativeRewardPerToken\" */ 11)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_33 := mload(_2)\n                                    mstore(memPos_33, _77)\n                                    return(memPos_33, 32)\n                                }\n                                case 0xf76033d3 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let value_12 := and(shr(16, sload(/** @src 76:2120:2153  \"bool public inPrivateClaimingMode\" */ 18)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                    let memPos_34 := mload(_2)\n                                    mstore(memPos_34, iszero(iszero(value_12)))\n                                    return(memPos_34, 32)\n                                }\n                                case 0xf7c618c1 {\n                                    if callvalue() { revert(_4, _4) }\n                                    if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                    let _78 := sub(shl(160, 1), 1)\n                                    let cleaned_2 := and(sload(_3), _78)\n                                    /// @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                    let _79 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    /// @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                    mstore(_79, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xf7c618c1))\n                                    /// @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                    let _80 := staticcall(gas(), cleaned_2, _79, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3, /** @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ _79, 32)\n                                    if iszero(_80)\n                                    {\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        let pos_1 := mload(_2)\n                                        returndatacopy(pos_1, _4, returndatasize())\n                                        revert(pos_1, returndatasize())\n                                    }\n                                    /// @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                    let expr_2 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                    /// @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                    if _80\n                                    {\n                                        let _81 := 32\n                                        if gt(_81, returndatasize()) { _81 := returndatasize() }\n                                        finalize_allocation(_79, _81)\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        if slt(sub(/** @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ add(_79, _81), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _79), /** @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ 32)\n                                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                        { revert(_4, _4) }\n                                        let value_13 := mload(_79)\n                                        if iszero(eq(value_13, and(value_13, _78))) { revert(_4, _4) }\n                                        /// @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                        expr_2 := value_13\n                                    }\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let memPos_35 := mload(_2)\n                                    mstore(memPos_35, and(expr_2, _78))\n                                    return(memPos_35, /** @src 76:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ 32)\n                                }\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            revert(0, 0)\n                        }\n                        function finalize_allocation(memPtr, size)\n                        {\n                            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        function abi_encode_string(headStart, value0) -> tail\n                        {\n                            let _1 := 32\n                            mstore(headStart, _1)\n                            let length := mload(value0)\n                            mstore(add(headStart, _1), length)\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, _1) }\n                            {\n                                mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                            }\n                            mstore(add(add(headStart, length), 64), 0)\n                            tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                        }\n                        function abi_decode_address_20793() -> value\n                        {\n                            value := calldataload(4)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        }\n                        function abi_decode_address() -> value\n                        {\n                            value := calldataload(36)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        }\n                        function abi_decode_bool() -> value\n                        {\n                            value := calldataload(4)\n                            if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n                        }\n                        function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n                        {\n                            if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                            let value := calldataload(4)\n                            let _1 := sub(shl(160, 1), 1)\n                            if iszero(eq(value, and(value, _1)))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            value0 := value\n                            let value_1 := calldataload(36)\n                            if iszero(eq(value_1, and(value_1, _1)))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            value1 := value_1\n                            value2 := calldataload(68)\n                        }\n                        function array_allocation_size_array_address_dyn(length) -> size\n                        {\n                            if gt(length, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            size := add(shl(5, length), 0x20)\n                        }\n                        function require_helper_stringliteral_7c37(condition)\n                        {\n                            if iszero(condition)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 21)\n                                mstore(add(memPtr, 68), \"Governable: forbidden\")\n                                revert(memPtr, 100)\n                            }\n                        }\n                        function memory_array_index_access_address_dyn(baseRef, index) -> addr\n                        {\n                            if iszero(lt(index, mload(baseRef)))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x32)\n                                revert(0, 0x24)\n                            }\n                            addr := add(add(baseRef, shl(5, index)), 32)\n                        }\n                        function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                        {\n                            tail := add(headStart, 64)\n                            mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                            mstore(add(headStart, 32), value1)\n                        }\n                        /// @ast-id 50320 @src 52:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                        function fun_safeTransfer(var_token_address, var_to, var_value)\n                        {\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            let expr_mpos := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            mstore(add(expr_mpos, 0x20), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xa9059cbb))\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            let _1 := sub(abi_encode_address_uint256(add(expr_mpos, 36), var_to, var_value), expr_mpos)\n                            mstore(expr_mpos, add(_1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(31)))\n                            /// @src 52:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                            finalize_allocation(expr_mpos, _1)\n                            fun_callOptionalReturn(var_token_address, expr_mpos)\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                        {\n                            if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                            let value := mload(headStart)\n                            if iszero(eq(value, iszero(iszero(value))))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            value0 := value\n                        }\n                        /// @ast-id 50510 @src 52:4059:4688  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n                        function fun_callOptionalReturn(var_token_50472_address, var_data_mpos)\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := and(/** @src 52:4504:4518  \"address(token)\" */ var_token_50472_address, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))\n                            /// @src 53:2847:2848  \"0\"\n                            let _2 := 0x00\n                            /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                            let expr_component := call(gas(), _1, /** @src 53:2847:2848  \"0\" */ _2, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src 53:2847:2848  \"0\" */ _2, _2)\n                            /// @src 53:3462:3493  \"target.call{value: value}(data)\"\n                            let data := /** @src 53:2847:2848  \"0\" */ _2\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            switch returndatasize()\n                            case 0 { data := 96 }\n                            default {\n                                let _3 := returndatasize()\n                                if gt(_3, 0xffffffffffffffff)\n                                {\n                                    mstore(/** @src 53:2847:2848  \"0\" */ _2, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src 53:2847:2848  \"0\" */ _2, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                                }\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, add(and(add(_3, 31), not(31)), /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ 0x20))\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(memPtr, _3)\n                                data := memPtr\n                                returndatacopy(add(memPtr, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ 0x20), /** @src 53:2847:2848  \"0\" */ _2, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                            }\n                            /// @src 53:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                            let var_mpos := /** @src 53:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_1, expr_component, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ data)\n                            /// @src 52:4551:4568  \"returndata.length\"\n                            let expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 52:4551:4568  \"returndata.length\" */ var_mpos)\n                            /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            let expr_1 := /** @src 52:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                            /// @src 52:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            if expr_1\n                            {\n                                expr_1 := /** @src 52:4577:4608  \"!abi.decode(returndata, (bool))\" */ iszero(/** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ 0x20), /** @src 52:4578:4608  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 53:3462:3493  \"target.call{value: value}(data)\" */ 0x20)))\n                            }\n                            /// @src 52:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                            if expr_1\n                            {\n                                /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                let _4 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                mstore(_4, shl(224, 0x5274afe7))\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_4, 4), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                                /// @src 52:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                revert(_4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 36)\n                            }\n                        }\n                        /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                        {\n                            /// @src 53:4793:5201  \"if (!success) {...\"\n                            switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                            case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                if expr\n                                {\n                                    expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                }\n                                /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                if expr\n                                {\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    let _1 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    mstore(_1, shl(224, 0x9996b315))\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    revert(_1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 36)\n                                }\n                                /// @src 53:5173:5190  \"return returndata\"\n                                var_mpos := var_returndata_mpos\n                                leave\n                            }\n                            default /// @src 53:4793:5201  \"if (!success) {...\"\n                            {\n                                /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    let _2 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    mstore(_2, shl(225, 0x0a12f521))\n                                    revert(_2, 4)\n                                }\n                                default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                {\n                                    /// @src 53:6046:6188  \"assembly {...\"\n                                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                }\n                            }\n                        }\n                        /// @ast-id 50892 @src 55:2431:2738  \"function _nonReentrantBefore() private {...\"\n                        function fun_nonReentrantBefore()\n                        {\n                            /// @src 55:2554:2640  \"if (_status == ENTERED) {...\"\n                            if /** @src 55:2558:2576  \"_status == ENTERED\" */ eq(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 55:2558:2565  \"_status\" */ 0x00), /** @src 55:1755:1756  \"2\" */ 0x02)\n                            /// @src 55:2554:2640  \"if (_status == ENTERED) {...\"\n                            {\n                                /// @src 55:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                let _1 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 55:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                mstore(_1, shl(224, 0x3ee5aeb5))\n                                revert(_1, 4)\n                            }\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 55:2558:2565  \"_status\" */ 0x00, /** @src 55:1755:1756  \"2\" */ 0x02)\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        function checked_sub_uint256(x, y) -> diff\n                        {\n                            diff := sub(x, y)\n                            if gt(diff, x)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                        }\n                        /// @ast-id 59605 @src 76:5723:6248  \"function transferFrom(...\"\n                        function fun_transferFrom(var_sender, var_recipient, var_amount) -> var\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 76:5886:5896  \"msg.sender\" */ caller())\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(0x20, /** @src 76:5876:5885  \"isHandler\" */ 0x13)\n                            /// @src 76:5872:5988  \"if (isHandler[msg.sender]) {...\"\n                            if /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), 0xff)\n                            /// @src 76:5872:5988  \"if (isHandler[msg.sender]) {...\"\n                            {\n                                /// @src 76:5944:5951  \"_amount\"\n                                fun_transfer(var_sender, var_recipient, var_amount)\n                                /// @src 76:5966:5977  \"return true\"\n                                var := /** @src 76:5973:5977  \"true\" */ 0x01\n                                /// @src 76:5966:5977  \"return true\"\n                                leave\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(var_sender, sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 76:6022:6032  \"allowances\" */ 0x0a)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _2 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 76:5886:5896  \"msg.sender\" */ caller())\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(0x20, _2)\n                            /// @src 76:6157:6170  \"nextAllowance\"\n                            fun_approve(var_sender, /** @src 76:5886:5896  \"msg.sender\" */ caller(), /** @src 76:6022:6063  \"allowances[_sender][msg.sender] - _amount\" */ checked_sub_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), /** @src 76:6022:6063  \"allowances[_sender][msg.sender] - _amount\" */ var_amount))\n                            /// @src 76:6212:6219  \"_amount\"\n                            fun_transfer(var_sender, var_recipient, var_amount)\n                            /// @src 76:6230:6241  \"return true\"\n                            var := /** @src 76:6237:6241  \"true\" */ 0x01\n                        }\n                        /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        function checked_add_uint256(x, y) -> sum\n                        {\n                            sum := add(x, y)\n                            if gt(x, sum)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                        }\n                        /// @ast-id 59738 @src 76:6959:7757  \"function claimable(...\"\n                        function fun_claimable(var_account) -> var\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(var_account, _1)\n                            /// @src -1:-1:-1\n                            let _3 := 0\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            let _4 := 0x20\n                            mstore(_4, /** @src 76:7089:7109  \"boostedStakedAmounts\" */ 0x0e)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _5 := 0x40\n                            let _6 := sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5))\n                            /// @src 76:7129:7216  \"if (boostedStakedAmount == 0) {...\"\n                            if /** @src 76:7133:7157  \"boostedStakedAmount == 0\" */ iszero(_6)\n                            /// @src 76:7129:7216  \"if (boostedStakedAmount == 0) {...\"\n                            {\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_4, /** @src 76:7180:7195  \"claimableReward\" */ 0x0f)\n                                /// @src 76:7173:7205  \"return claimableReward[_account]\"\n                                var := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5))\n                                /// @src 76:7173:7205  \"return claimableReward[_account]\"\n                                leave\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let cleaned := and(sload(/** @src 76:7294:7305  \"distributor\" */ 0x04), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            let _7 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_5)\n                            /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            mstore(_7, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(225, 0x76f69fed))\n                            /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            let _8 := staticcall(gas(), cleaned, _7, /** @src 76:7294:7305  \"distributor\" */ 0x04, /** @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\" */ _7, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4)\n                            /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            if iszero(_8)\n                            {\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let pos := mload(_5)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            let expr := /** @src -1:-1:-1 */ _3\n                            /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            if _8\n                            {\n                                let _9 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                                if gt(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\" */ returndatasize()) { _9 := returndatasize() }\n                                finalize_allocation(_7, _9)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                if slt(sub(/** @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\" */ add(_7, _9), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _7), _4)\n                                {\n                                    revert(/** @src -1:-1:-1 */ _3, _3)\n                                }\n                                /// @src 76:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                                expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_7)\n                            }\n                            /// @src 76:7437:7490  \"cumulativeRewardPerToken +...\"\n                            let expr_1 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:7437:7461  \"cumulativeRewardPerToken\" */ 0x0b), /** @src 76:7250:7388  \"Math.mulDiv(...\" */ fun_mulDiv(expr, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:7360:7378  \"boostedTotalSupply\" */ 0x08)))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            mstore(_4, /** @src 76:7624:7655  \"previousCumulatedRewardPerToken\" */ 0x10)\n                            /// @src 76:7519:7698  \"Math.mulDiv(...\"\n                            let _10 := fun_mulDiv_20878(_6, /** @src 76:7577:7665  \"nextCumulativeRewardPerToken -...\" */ checked_sub_uint256(expr_1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5))))\n                            mstore(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            mstore(_4, /** @src 76:7715:7730  \"claimableReward\" */ 0x0f)\n                            /// @src 76:7708:7750  \"return claimableReward[_account] + rewards\"\n                            var := /** @src 76:7715:7750  \"claimableReward[_account] + rewards\" */ checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5)), /** @src 76:7519:7698  \"Math.mulDiv(...\" */ _10)\n                        }\n                        /// @ast-id 52099 @src 61:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                        function fun_mulDiv_20804(var_x, var_y) -> var_result\n                        {\n                            /// @src 61:4248:4253  \"x * y\"\n                            let expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:4248:4253  \"x * y\" */ var_x, var_y)\n                            /// @src 61:4383:4514  \"assembly {...\"\n                            let usr$mm := mulmod(var_x, var_y, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(0))\n                            /// @src 61:4383:4514  \"assembly {...\"\n                            let _1 := lt(usr$mm, expr)\n                            let _2 := sub(usr$mm, expr)\n                            let var_prod1 := sub(_2, _1)\n                            /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                            if /** @src 61:4595:4605  \"prod1 == 0\" */ eq(/** @src 61:4383:4514  \"assembly {...\" */ _2, _1)\n                            /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                            {\n                                /// @src 61:4918:4944  \"return prod0 / denominator\"\n                                var_result := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ div(expr, /** @src 76:1021:1027  \"100_00\" */ 0x2710)\n                                /// @src 61:4918:4944  \"return prod0 / denominator\"\n                                leave\n                            }\n                            /// @src 76:1021:1027  \"100_00\"\n                            let _3 := 0x2710\n                            /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                            if /** @src 61:5065:5085  \"denominator <= prod1\" */ iszero(gt(/** @src 76:1021:1027  \"100_00\" */ _3, /** @src 61:5065:5085  \"denominator <= prod1\" */ var_prod1))\n                            /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                            {\n                                /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                                let _4 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                                mstore(_4, shl(224, 0x227bc153))\n                                revert(_4, 4)\n                            }\n                            /// @src 61:5435:5735  \"assembly {...\"\n                            let var_remainder := mulmod(var_x, var_y, /** @src 76:1021:1027  \"100_00\" */ _3)\n                            /// @src 61:7889:7902  \"return result\"\n                            var_result := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 61:5999:6370  \"assembly {...\" */ shr(4, /** @src 61:5435:5735  \"assembly {...\" */ sub(expr, var_remainder)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(252, /** @src 61:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)))), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xbc01a36e2eb1c432ca57a786c226809d495182a9930be0ded288ce703afb7e91)\n                        }\n                        /// @ast-id 52099 @src 61:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                        function fun_mulDiv(var_x, var_denominator) -> var_result\n                        {\n                            /// @src 76:1069:1073  \"1e30\"\n                            let _1 := 0x0c9f2c9cd04674edea40000000\n                            /// @src 61:4248:4253  \"x * y\"\n                            let expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:4248:4253  \"x * y\" */ var_x, /** @src 76:1069:1073  \"1e30\" */ _1)\n                            /// @src 61:4383:4514  \"assembly {...\"\n                            let usr$mm := mulmod(var_x, /** @src 76:1069:1073  \"1e30\" */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(0))\n                            /// @src 61:4383:4514  \"assembly {...\"\n                            let _2 := lt(usr$mm, expr)\n                            let _3 := sub(usr$mm, expr)\n                            let var_prod1 := sub(_3, _2)\n                            /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                            if /** @src 61:4595:4605  \"prod1 == 0\" */ eq(/** @src 61:4383:4514  \"assembly {...\" */ _3, _2)\n                            /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                            {\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                if iszero(var_denominator)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x12)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                                }\n                                /// @src 61:4918:4944  \"return prod0 / denominator\"\n                                var_result := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ div(expr, var_denominator)\n                                /// @src 61:4918:4944  \"return prod0 / denominator\"\n                                leave\n                            }\n                            /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                            if /** @src 61:5065:5085  \"denominator <= prod1\" */ iszero(gt(var_denominator, var_prod1))\n                            /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                            {\n                                /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                                let _4 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                                mstore(_4, shl(224, 0x227bc153))\n                                revert(_4, 4)\n                            }\n                            /// @src 61:5435:5735  \"assembly {...\"\n                            let var_remainder := mulmod(var_x, /** @src 76:1069:1073  \"1e30\" */ _1, /** @src 61:5435:5735  \"assembly {...\" */ var_denominator)\n                            /// @src 61:5954:5985  \"denominator & (0 - denominator)\"\n                            let expr_1 := and(var_denominator, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src -1:-1:-1 */ 0, /** @src 61:5969:5984  \"0 - denominator\" */ var_denominator))\n                            /// @src 61:5999:6370  \"assembly {...\"\n                            let var_denominator_1 := div(var_denominator, expr_1)\n                            /// @src 61:6813:6814  \"2\"\n                            let _5 := 0x02\n                            /// @src 61:6793:6814  \"(3 * denominator) ^ 2\"\n                            let expr_2 := xor(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:6794:6795  \"3\" */ 0x03, /** @src 61:6794:6809  \"3 * denominator\" */ var_denominator_1), /** @src 61:6813:6814  \"2\" */ _5)\n                            /// @src 61:7031:7067  \"inverse *= 2 - denominator * inverse\"\n                            let expr_3 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7031:7067  \"inverse *= 2 - denominator * inverse\" */ expr_2, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7046:7067  \"denominator * inverse\" */ var_denominator_1, expr_2)))\n                            /// @src 61:7100:7136  \"inverse *= 2 - denominator * inverse\"\n                            let expr_4 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7100:7136  \"inverse *= 2 - denominator * inverse\" */ expr_3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7115:7136  \"denominator * inverse\" */ var_denominator_1, expr_3)))\n                            /// @src 61:7170:7206  \"inverse *= 2 - denominator * inverse\"\n                            let expr_5 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7170:7206  \"inverse *= 2 - denominator * inverse\" */ expr_4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7185:7206  \"denominator * inverse\" */ var_denominator_1, expr_4)))\n                            /// @src 61:7240:7276  \"inverse *= 2 - denominator * inverse\"\n                            let expr_6 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7240:7276  \"inverse *= 2 - denominator * inverse\" */ expr_5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7255:7276  \"denominator * inverse\" */ var_denominator_1, expr_5)))\n                            /// @src 61:7310:7346  \"inverse *= 2 - denominator * inverse\"\n                            let expr_7 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7310:7346  \"inverse *= 2 - denominator * inverse\" */ expr_6, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7325:7346  \"denominator * inverse\" */ var_denominator_1, expr_6)))\n                            /// @src 61:7889:7902  \"return result\"\n                            var_result := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 61:5999:6370  \"assembly {...\" */ div(/** @src 61:5435:5735  \"assembly {...\" */ sub(expr, var_remainder), /** @src 61:5999:6370  \"assembly {...\" */ expr_1), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)), /** @src 61:5999:6370  \"assembly {...\" */ add(div(sub(/** @src -1:-1:-1 */ 0, /** @src 61:5999:6370  \"assembly {...\" */ expr_1), expr_1), 1))), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7381:7417  \"inverse *= 2 - denominator * inverse\" */ expr_7, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 61:6813:6814  \"2\" */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:7396:7417  \"denominator * inverse\" */ var_denominator_1, expr_7))))\n                        }\n                        /// @ast-id 52099 @src 61:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                        function fun_mulDiv_20878(var_x, var_y) -> var_result\n                        {\n                            /// @src 61:4248:4253  \"x * y\"\n                            let expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:4248:4253  \"x * y\" */ var_x, var_y)\n                            /// @src 61:4383:4514  \"assembly {...\"\n                            let usr$mm := mulmod(var_x, var_y, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(0))\n                            /// @src 61:4383:4514  \"assembly {...\"\n                            let _1 := lt(usr$mm, expr)\n                            let _2 := sub(usr$mm, expr)\n                            let var_prod1 := sub(_2, _1)\n                            /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                            if /** @src 61:4595:4605  \"prod1 == 0\" */ eq(/** @src 61:4383:4514  \"assembly {...\" */ _2, _1)\n                            /// @src 61:4591:4959  \"if (prod1 == 0) {...\"\n                            {\n                                /// @src 61:4918:4944  \"return prod0 / denominator\"\n                                var_result := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ div(expr, /** @src 76:1069:1073  \"1e30\" */ 0x0c9f2c9cd04674edea40000000)\n                                /// @src 61:4918:4944  \"return prod0 / denominator\"\n                                leave\n                            }\n                            /// @src 76:1069:1073  \"1e30\"\n                            let _3 := 0x0c9f2c9cd04674edea40000000\n                            /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                            if /** @src 61:5065:5085  \"denominator <= prod1\" */ iszero(gt(/** @src 76:1069:1073  \"1e30\" */ _3, /** @src 61:5065:5085  \"denominator <= prod1\" */ var_prod1))\n                            /// @src 61:5061:5149  \"if (denominator <= prod1) {...\"\n                            {\n                                /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                                let _4 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 61:5112:5134  \"MathOverflowedMulDiv()\"\n                                mstore(_4, shl(224, 0x227bc153))\n                                revert(_4, 4)\n                            }\n                            /// @src 61:5435:5735  \"assembly {...\"\n                            let var_remainder := mulmod(var_x, var_y, /** @src 76:1069:1073  \"1e30\" */ _3)\n                            /// @src 61:7889:7902  \"return result\"\n                            var_result := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 61:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 61:5999:6370  \"assembly {...\" */ shr(30, /** @src 61:5435:5735  \"assembly {...\" */ sub(expr, var_remainder)), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(226, /** @src 61:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)))), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x7d33c22789773a07feda8b6f0930e26fa397c439f1d5cf4b2eb27d7306d2dc99)\n                        }\n                        /// @ast-id 59809 @src 76:7891:8640  \"function _setRewardBoost(address _account, uint256 _rewardBoostBasisPoints) private {...\"\n                        function fun_setRewardBoost(var_account, var_rewardBoostBasisPoints)\n                        {\n                            /// @src 76:1021:1027  \"100_00\"\n                            let _1 := 0x2710\n                            /// @src 76:7985:8058  \"if (_rewardBoostBasisPoints > BASIS_POINTS_DIVISOR) revert BoostTooHigh()\"\n                            if /** @src 76:7989:8035  \"_rewardBoostBasisPoints > BASIS_POINTS_DIVISOR\" */ gt(var_rewardBoostBasisPoints, /** @src 76:1021:1027  \"100_00\" */ _1)\n                            /// @src 76:7985:8058  \"if (_rewardBoostBasisPoints > BASIS_POINTS_DIVISOR) revert BoostTooHigh()\"\n                            {\n                                /// @src 76:8044:8058  \"BoostTooHigh()\"\n                                let _2 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 76:8044:8058  \"BoostTooHigh()\"\n                                mstore(_2, shl(224, 0xc3293481))\n                                revert(_2, 4)\n                            }\n                            /// @src 76:8083:8091  \"_account\"\n                            fun_updateRewards(var_account)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _3 := and(var_account, sub(shl(160, 1), 1))\n                            /// @src -1:-1:-1\n                            let _4 := 0\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(0x20, /** @src 76:8103:8126  \"rewardBoostsBasisPoints\" */ 0x0c)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ var_rewardBoostBasisPoints)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(0x20, /** @src 76:8231:8244  \"stakedAmounts\" */ 0x0d)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _5 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40))\n                            let sum := add(/** @src 76:1021:1027  \"100_00\" */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ var_rewardBoostBasisPoints)\n                            if gt(/** @src 76:1021:1027  \"100_00\" */ _1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                            }\n                            /// @src 76:8206:8358  \"Math.mulDiv(...\"\n                            let expr := fun_mulDiv_20804(_5, /** @src 76:8268:8314  \"BASIS_POINTS_DIVISOR + _rewardBoostBasisPoints\" */ sum)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _6 := sload(/** @src 76:8401:8419  \"boostedTotalSupply\" */ 0x08)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(0x20, /** @src 76:8434:8454  \"boostedStakedAmounts\" */ 0x0e)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:8401:8419  \"boostedTotalSupply\" */ 0x08, /** @src 76:8401:8502  \"boostedTotalSupply -...\" */ checked_add_uint256(/** @src 76:8401:8464  \"boostedTotalSupply -...\" */ checked_sub_uint256(_6, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40))), /** @src 76:8401:8502  \"boostedTotalSupply -...\" */ expr))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(0x20, /** @src 76:8434:8454  \"boostedStakedAmounts\" */ 0x0e)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ expr)\n                            /// @src 76:8584:8633  \"RewardBoostSet(_account, _rewardBoostBasisPoints)\"\n                            let _7 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                            /// @src 76:8584:8633  \"RewardBoostSet(_account, _rewardBoostBasisPoints)\"\n                            log1(_7, sub(abi_encode_address_uint256(_7, var_account, var_rewardBoostBasisPoints), _7), 0x5b44f1c5168d75e6bd9462e548ac0b10b7105975916c926ab8d3952effcc844d)\n                        }\n                        /// @ast-id 59867 @src 76:8646:9166  \"function _claim(...\"\n                        function fun_claim(var_account, var_receiver) -> var\n                        {\n                            /// @src 76:8772:8780  \"_account\"\n                            fun_updateRewards(var_account)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(var_account, _1))\n                            mstore(0x20, /** @src 76:8814:8829  \"claimableReward\" */ 0x0f)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)\n                            let _2 := sload(dataSlot)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(dataSlot, /** @src -1:-1:-1 */ 0)\n                            /// @src 76:8889:9131  \"if (tokenAmount > 0) {...\"\n                            if /** @src 76:8893:8908  \"tokenAmount > 0\" */ iszero(iszero(_2))\n                            /// @src 76:8889:9131  \"if (tokenAmount > 0) {...\"\n                            {\n                                /// @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                let _3 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                                /// @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                mstore(_3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x095ea7b3))\n                                /// @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                let _4 := call(gas(), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 76:8965:8977  \"depositToken\" */ loadimmutable(\"59157\"), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1), /** @src -1:-1:-1 */ 0, /** @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\" */ _3, sub(abi_encode_address_uint256(add(_3, 4), /** @src 76:8995:8999  \"this\" */ address(), /** @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\" */ _2), _3), _3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20)\n                                /// @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                if iszero(_4)\n                                {\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let pos := mload(0x40)\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                if _4\n                                {\n                                    let _5 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20\n                                    /// @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                    if gt(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5, /** @src 76:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\" */ returndatasize()) { _5 := returndatasize() }\n                                    finalize_allocation(_3, _5)\n                                    pop(abi_decode_bool_fromMemory(_3, add(_3, _5)))\n                                }\n                                /// @src 76:9061:9072  \"tokenAmount\"\n                                fun_stake(/** @src 76:8995:8999  \"this\" */ address(), /** @src 76:9061:9072  \"tokenAmount\" */ var_receiver, _2)\n                                /// @src 76:9092:9120  \"Claim(_account, tokenAmount)\"\n                                let _6 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                                /// @src 76:9092:9120  \"Claim(_account, tokenAmount)\"\n                                log1(_6, sub(abi_encode_address_uint256(_6, var_account, _2), _6), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                            }\n                            /// @src 76:9141:9159  \"return tokenAmount\"\n                            var := _2\n                        }\n                        /// @ast-id 60045 @src 76:10226:10899  \"function _transfer(...\"\n                        function fun_transfer(var__sender, var_recipient, var__amount)\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(/** @src 76:10368:10389  \"_sender != address(0)\" */ var__sender, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            if /** @src 76:10368:10389  \"_sender != address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 45)\n                                mstore(add(memPtr, 68), \"RewardTracker: transfer from the\")\n                                mstore(add(memPtr, 100), \" zero address\")\n                                revert(memPtr, 132)\n                            }\n                            let _3 := and(/** @src 76:10491:10515  \"_recipient != address(0)\" */ var_recipient, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            if /** @src 76:10491:10515  \"_recipient != address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            {\n                                let memPtr_1 := mload(64)\n                                mstore(memPtr_1, shl(229, 4594637))\n                                mstore(add(memPtr_1, 4), 32)\n                                mstore(add(memPtr_1, 36), 43)\n                                mstore(add(memPtr_1, 68), \"RewardTracker: transfer to the z\")\n                                mstore(add(memPtr_1, 100), \"ero address\")\n                                revert(memPtr_1, 132)\n                            }\n                            /// @src 76:10595:10665  \"if (inPrivateTransferMode) {...\"\n                            if /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 76:10599:10620  \"inPrivateTransferMode\" */ 0x12), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                            /// @src 76:10595:10665  \"if (inPrivateTransferMode) {...\"\n                            { fun_validateHandler() }\n                            /// @src 76:10387:10388  \"0\"\n                            let _4 := 0x00\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            mstore(0x20, /** @src 76:10695:10703  \"balances\" */ 0x09)\n                            /// @src 76:10695:10722  \"balances[_sender] - _amount\"\n                            let _5 := checked_sub_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), /** @src 76:10695:10722  \"balances[_sender] - _amount\" */ var__amount)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            mstore(0x20, /** @src 76:10695:10703  \"balances\" */ 0x09)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ _5)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            /// @src 76:10808:10838  \"balances[_recipient] + _amount\"\n                            let _6 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), /** @src 76:10808:10838  \"balances[_recipient] + _amount\" */ var__amount)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(0x20, /** @src 76:10695:10703  \"balances\" */ 0x09)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:10387:10388  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ _6)\n                            /// @src 76:10854:10892  \"Transfer(_sender, _recipient, _amount)\"\n                            let _7 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                            mstore(_7, var__amount)\n                            /// @src 76:10854:10892  \"Transfer(_sender, _recipient, _amount)\"\n                            log3(_7, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20, /** @src 76:10854:10892  \"Transfer(_sender, _recipient, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n                        }\n                        /// @ast-id 60089 @src 76:10905:11361  \"function _approve(...\"\n                        function fun_approve(var_owner, var_spender, var_amount)\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(/** @src 76:11043:11063  \"_owner != address(0)\" */ var_owner, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            if /** @src 76:11043:11063  \"_owner != address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 44)\n                                mstore(add(memPtr, 68), \"RewardTracker: approve from the \")\n                                mstore(add(memPtr, 100), \"zero address\")\n                                revert(memPtr, 132)\n                            }\n                            let _3 := and(/** @src 76:11164:11186  \"_spender != address(0)\" */ var_spender, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            if /** @src 76:11164:11186  \"_spender != address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            {\n                                let memPtr_1 := mload(64)\n                                mstore(memPtr_1, shl(229, 4594637))\n                                mstore(add(memPtr_1, 4), 32)\n                                mstore(add(memPtr_1, 36), 42)\n                                mstore(add(memPtr_1, 68), \"RewardTracker: approve to the ze\")\n                                mstore(add(memPtr_1, 100), \"ro address\")\n                                revert(memPtr_1, 132)\n                            }\n                            mstore(/** @src 76:11061:11062  \"0\" */ 0x00, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            mstore(0x20, /** @src 76:11265:11275  \"allowances\" */ 0x0a)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _4 := keccak256(/** @src 76:11061:11062  \"0\" */ 0x00, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)\n                            mstore(/** @src 76:11061:11062  \"0\" */ 0x00, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(0x20, _4)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:11061:11062  \"0\" */ 0x00, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 55:1755:1756  \"2\" */ var_amount)\n                            /// @src 76:11319:11354  \"Approval(_owner, _spender, _amount)\"\n                            let _5 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                            mstore(_5, var_amount)\n                            /// @src 76:11319:11354  \"Approval(_owner, _spender, _amount)\"\n                            log3(_5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20, /** @src 76:11319:11354  \"Approval(_owner, _spender, _amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n                        }\n                        /// @ast-id 60101 @src 76:11367:11483  \"function _validateHandler() private view {...\"\n                        function fun_validateHandler()\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 76:11436:11446  \"msg.sender\" */ caller())\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(0x20, /** @src 76:11426:11435  \"isHandler\" */ 0x13)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if iszero(and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), 0xff))\n                            {\n                                let memPtr := mload(0x40)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 0x20)\n                                mstore(add(memPtr, 36), 24)\n                                mstore(add(memPtr, 68), \"RewardTracker: forbidden\")\n                                revert(memPtr, 100)\n                            }\n                        }\n                        function require_helper_stringliteral(condition)\n                        {\n                            if iszero(condition)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 30)\n                                mstore(add(memPtr, 68), \"RewardTracker: invalid _amount\")\n                                revert(memPtr, 100)\n                            }\n                        }\n                        /// @ast-id 60193 @src 76:11489:12254  \"function _stake(address _fundingAccount, address _account, uint256 _amount) private {...\"\n                        function fun_stake(var_fundingAccount, var_account, var_amount)\n                        {\n                            /// @src 76:11583:11637  \"require(_amount > 0, \\\"RewardTracker: invalid _amount\\\")\"\n                            require_helper_stringliteral(/** @src 76:11591:11602  \"_amount > 0\" */ iszero(iszero(var_amount)))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(/** @src 76:11652:11684  \"_fundingAccount != address(this)\" */ var_fundingAccount, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            /// @src 76:11648:11789  \"if (_fundingAccount != address(this)) {...\"\n                            if /** @src 76:11652:11684  \"_fundingAccount != address(this)\" */ iszero(eq(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2, /** @src 76:11679:11683  \"this\" */ address()))\n                            /// @src 76:11648:11789  \"if (_fundingAccount != address(this)) {...\"\n                            {\n                                /// @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos, 0x20), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x23b872dd))\n                                mstore(/** @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, 36), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                                mstore(add(/** @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 68), /** @src 76:11679:11683  \"this\" */ address())\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(add(/** @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 100), var_amount)\n                                /// @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 100)\n                                let newFreePtr := add(expr_mpos, 160)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, /** @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ 36)\n                                }\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(64, newFreePtr)\n                                /// @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                fun_callOptionalReturn(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 76:11707:11719  \"depositToken\" */ loadimmutable(\"59157\"), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1), /** @src 52:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos)\n                            }\n                            /// @src 76:11814:11822  \"_account\"\n                            fun_updateRewards(var_account)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _3 := and(var_account, _1)\n                            /// @src 76:11601:11602  \"0\"\n                            let _4 := 0x00\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            let _5 := 0x20\n                            mstore(_5, /** @src 76:11860:11873  \"stakedAmounts\" */ 0x0d)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _6 := 0x40\n                            /// @src 76:11860:11895  \"stakedAmounts[_account] + (_amount)\"\n                            let _7 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)), /** @src 76:11860:11895  \"stakedAmounts[_account] + (_amount)\" */ var_amount)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(_5, /** @src 76:11860:11873  \"stakedAmounts\" */ 0x0d)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 55:1755:1756  \"2\" */ _7)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(_5, /** @src 76:11938:11958  \"boostedStakedAmounts\" */ 0x0e)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _8 := sload(keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6))\n                            mstore(_5, /** @src 76:12015:12038  \"rewardBoostsBasisPoints\" */ 0x0c)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _9 := sload(keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6))\n                            /// @src 76:1021:1027  \"100_00\"\n                            let _10 := 0x2710\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let sum := add(/** @src 76:1021:1027  \"100_00\" */ _10, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                            if gt(/** @src 76:1021:1027  \"100_00\" */ _10, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum)\n                            {\n                                mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                            }\n                            /// @src 76:11938:12071  \"boostedStakedAmounts[_account] + Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\"\n                            let _11 := checked_add_uint256(_8, /** @src 76:11971:12071  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(var_amount, /** @src 76:11992:12048  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(_5, /** @src 76:11938:11958  \"boostedStakedAmounts\" */ 0x0e)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 55:1755:1756  \"2\" */ _11)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(_5, /** @src 76:12118:12133  \"depositBalances\" */ 0x05)\n                            /// @src 76:12118:12153  \"depositBalances[_account] + _amount\"\n                            let _12 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)), /** @src 76:12118:12153  \"depositBalances[_account] + _amount\" */ var_amount)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(_5, /** @src 76:12118:12133  \"depositBalances\" */ 0x05)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 55:1755:1756  \"2\" */ _12)\n                            sstore(/** @src 76:12184:12202  \"totalDepositSupply\" */ 0x06, /** @src 76:12184:12212  \"totalDepositSupply + _amount\" */ checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:12184:12202  \"totalDepositSupply\" */ 0x06), /** @src 76:12184:12212  \"totalDepositSupply + _amount\" */ var_amount))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if /** @src 76:9262:9284  \"_account != address(0)\" */ iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            {\n                                let memPtr := mload(_6)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), _5)\n                                mstore(add(memPtr, 36), 39)\n                                mstore(add(memPtr, 68), \"RewardTracker: mint to the zero \")\n                                mstore(add(memPtr, 100), \"address\")\n                                revert(memPtr, 132)\n                            }\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:9374:9385  \"totalSupply\" */ 0x07, /** @src 76:9374:9395  \"totalSupply + _amount\" */ checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:9374:9385  \"totalSupply\" */ 0x07), /** @src 76:9374:9395  \"totalSupply + _amount\" */ var_amount))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _13 := sload(/** @src 76:9426:9444  \"boostedTotalSupply\" */ 0x08)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(_5, /** @src 76:12015:12038  \"rewardBoostsBasisPoints\" */ 0x0c)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let sum_1 := add(/** @src 76:1021:1027  \"100_00\" */ _10, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)))\n                            if gt(/** @src 76:1021:1027  \"100_00\" */ _10, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum_1)\n                            {\n                                mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                            }\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:9426:9444  \"boostedTotalSupply\" */ 0x08, /** @src 76:9426:9547  \"boostedTotalSupply + Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ checked_add_uint256(_13, /** @src 76:9447:9547  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(var_amount, /** @src 76:9468:9524  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum_1)))\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(_5, /** @src 76:9578:9586  \"balances\" */ 0x09)\n                            /// @src 76:9578:9606  \"balances[_account] + _amount\"\n                            let _14 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)), /** @src 76:9578:9606  \"balances[_account] + _amount\" */ var_amount)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                            mstore(_5, /** @src 76:9578:9586  \"balances\" */ 0x09)\n                            /// @src 55:1755:1756  \"2\"\n                            sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 76:11601:11602  \"0\" */ _4, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 55:1755:1756  \"2\" */ _14)\n                            /// @src 76:9622:9661  \"Transfer(address(0), _account, _amount)\"\n                            let _15 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_6)\n                            mstore(_15, var_amount)\n                            /// @src 76:9622:9661  \"Transfer(address(0), _account, _amount)\"\n                            log3(_15, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5, /** @src 76:9622:9661  \"Transfer(address(0), _account, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 76:11601:11602  \"0\" */ _4, /** @src 76:9622:9661  \"Transfer(address(0), _account, _amount)\" */ _3)\n                        }\n                        /// @ast-id 60416 @src 76:13254:14767  \"function _updateRewards(address _account) private {...\"\n                        function fun_updateRewards_20808()\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let cleaned := and(sload(/** @src 76:13355:13366  \"distributor\" */ 0x04), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let _1 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            mstore(_1, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xe4fc6b6d))\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let _2 := call(gas(), cleaned, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0, /** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _1, /** @src 76:13355:13366  \"distributor\" */ 0x04, /** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _1, 32)\n                            if iszero(_2)\n                            {\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            if _2\n                            {\n                                let _3 := 32\n                                if gt(_3, returndatasize()) { _3 := returndatasize() }\n                                finalize_allocation(_1, _3)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                if slt(sub(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ add(_1, _3), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1), /** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ 32)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                { revert(expr, expr) }\n                                /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                                expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_1)\n                            }\n                            /// @src 76:13391:13451  \"uint256 _cumulativeRewardPerToken = cumulativeRewardPerToken\"\n                            let var_cumulativeRewardPerToken := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _4 := sload(/** @src 76:13465:13483  \"boostedTotalSupply\" */ 0x08)\n                            /// @src 76:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                            let expr_1 := /** @src 76:13465:13487  \"boostedTotalSupply > 0\" */ iszero(iszero(_4))\n                            /// @src 76:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                            if expr_1\n                            {\n                                expr_1 := /** @src 76:13491:13506  \"blockReward > 0\" */ iszero(iszero(expr))\n                            }\n                            /// @src 76:13461:13742  \"if (boostedTotalSupply > 0 && blockReward > 0) {...\"\n                            if expr_1\n                            {\n                                /// @src 76:13522:13665  \"_cumulativeRewardPerToken =...\"\n                                var_cumulativeRewardPerToken := /** @src 76:13566:13665  \"_cumulativeRewardPerToken +...\" */ checked_add_uint256(var_cumulativeRewardPerToken, /** @src 76:13610:13665  \"Math.mulDiv(blockReward, PRECISION, boostedTotalSupply)\" */ fun_mulDiv(expr, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 76:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b, /** @src 55:1755:1756  \"2\" */ var_cumulativeRewardPerToken)\n                            }\n                            /// @src 76:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                            if /** @src 76:13895:13925  \"_cumulativeRewardPerToken == 0\" */ iszero(var_cumulativeRewardPerToken)\n                            /// @src 76:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                            {\n                                /// @src 76:13941:13948  \"return;\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 60416 @src 76:13254:14767  \"function _updateRewards(address _account) private {...\"\n                        function fun_updateRewards(var_account)\n                        {\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let cleaned := and(sload(/** @src 76:13355:13366  \"distributor\" */ 0x04), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            let _2 := 64\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let _3 := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            mstore(_3, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xe4fc6b6d))\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let _4 := 32\n                            /// @src -1:-1:-1\n                            let _5 := 0\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let _6 := call(gas(), cleaned, /** @src -1:-1:-1 */ _5, /** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _3, /** @src 76:13355:13366  \"distributor\" */ 0x04, /** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _3, _4)\n                            if iszero(_6)\n                            {\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let pos := mload(_2)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            let expr := /** @src -1:-1:-1 */ _5\n                            /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            if _6\n                            {\n                                let _7 := _4\n                                if gt(_4, returndatasize()) { _7 := returndatasize() }\n                                finalize_allocation(_3, _7)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                if slt(sub(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ add(_3, _7), /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3), /** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                {\n                                    revert(/** @src -1:-1:-1 */ _5, _5)\n                                }\n                                /// @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                                expr := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_3)\n                            }\n                            /// @src 76:13391:13451  \"uint256 _cumulativeRewardPerToken = cumulativeRewardPerToken\"\n                            let var_cumulativeRewardPerToken := /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 76:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b)\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _8 := sload(/** @src 76:13465:13483  \"boostedTotalSupply\" */ 0x08)\n                            /// @src 76:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                            let expr_1 := /** @src 76:13465:13487  \"boostedTotalSupply > 0\" */ iszero(iszero(_8))\n                            /// @src 76:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                            if expr_1\n                            {\n                                expr_1 := /** @src 76:13491:13506  \"blockReward > 0\" */ iszero(iszero(expr))\n                            }\n                            /// @src 76:13461:13742  \"if (boostedTotalSupply > 0 && blockReward > 0) {...\"\n                            if expr_1\n                            {\n                                /// @src 76:13522:13665  \"_cumulativeRewardPerToken =...\"\n                                var_cumulativeRewardPerToken := /** @src 76:13566:13665  \"_cumulativeRewardPerToken +...\" */ checked_add_uint256(var_cumulativeRewardPerToken, /** @src 76:13610:13665  \"Math.mulDiv(blockReward, PRECISION, boostedTotalSupply)\" */ fun_mulDiv(expr, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _8))\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 76:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b, /** @src 55:1755:1756  \"2\" */ var_cumulativeRewardPerToken)\n                            }\n                            /// @src 76:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                            if /** @src 76:13895:13925  \"_cumulativeRewardPerToken == 0\" */ iszero(var_cumulativeRewardPerToken)\n                            /// @src 76:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                            {\n                                /// @src 76:13941:13948  \"return;\"\n                                leave\n                            }\n                            /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _9 := and(/** @src 76:13972:13994  \"_account != address(0)\" */ var_account, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            /// @src 76:13968:14761  \"if (_account != address(0)) {...\"\n                            if /** @src 76:13972:13994  \"_account != address(0)\" */ iszero(iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9))\n                            /// @src 76:13968:14761  \"if (_account != address(0)) {...\"\n                            {\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                                mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14040:14060  \"boostedStakedAmounts\" */ 0x0e)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _10 := sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2))\n                                mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14169:14200  \"previousCumulatedRewardPerToken\" */ 0x10)\n                                /// @src 76:14108:14222  \"Math.mulDiv(boostedStakedAmount, _cumulativeRewardPerToken - previousCumulatedRewardPerToken[_account], PRECISION)\"\n                                let expr_2 := fun_mulDiv_20878(_10, /** @src 76:14141:14210  \"_cumulativeRewardPerToken - previousCumulatedRewardPerToken[_account]\" */ checked_sub_uint256(var_cumulativeRewardPerToken, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2))))\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                                mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14263:14278  \"claimableReward\" */ 0x0f)\n                                /// @src 76:14263:14304  \"claimableReward[_account] + accountReward\"\n                                let expr_3 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)), /** @src 76:14263:14304  \"claimableReward[_account] + accountReward\" */ expr_2)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                                mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14263:14278  \"claimableReward\" */ 0x0f)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2), /** @src 55:1755:1756  \"2\" */ expr_3)\n                                /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14169:14200  \"previousCumulatedRewardPerToken\" */ 0x10)\n                                /// @src 55:1755:1756  \"2\"\n                                sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2), /** @src 55:1755:1756  \"2\" */ var_cumulativeRewardPerToken)\n                                /// @src 76:14495:14553  \"_claimableReward > 0 && boostedStakedAmounts[_account] > 0\"\n                                let expr_4 := /** @src 76:14495:14515  \"_claimableReward > 0\" */ iszero(iszero(expr_3))\n                                /// @src 76:14495:14553  \"_claimableReward > 0 && boostedStakedAmounts[_account] > 0\"\n                                if expr_4\n                                {\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14040:14060  \"boostedStakedAmounts\" */ 0x0e)\n                                    /// @src 76:14495:14553  \"_claimableReward > 0 && boostedStakedAmounts[_account] > 0\"\n                                    expr_4 := /** @src 76:14519:14553  \"boostedStakedAmounts[_account] > 0\" */ iszero(iszero(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2))))\n                                }\n                                /// @src 76:14491:14751  \"if (_claimableReward > 0 && boostedStakedAmounts[_account] > 0) {...\"\n                                if expr_4\n                                {\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14604:14621  \"cumulativeRewards\" */ 0x11)\n                                    /// @src 76:14604:14667  \"cumulativeRewards[_account] +...\"\n                                    let _11 := checked_add_uint256(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)), /** @src 76:14604:14667  \"cumulativeRewards[_account] +...\" */ expr_2)\n                                    /// @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                                    mstore(/** @src 76:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 76:14604:14621  \"cumulativeRewards\" */ 0x11)\n                                    /// @src 55:1755:1756  \"2\"\n                                    sstore(/** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 76:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2), /** @src 55:1755:1756  \"2\" */ _11)\n                                }\n                            }\n                        }\n                    }\n                    data \".metadata\" hex\"a164736f6c6343000815000a\"\n                }\n            }\n            data \".metadata\" hex\"a164736f6c6343000815000a\"\n        }\n        /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 13:\"lib/forge-std/src/Test.sol\", 83:\"test/00_ZFI.t.sol\"\n        object \"ZFI_test_62240\" {\n            code {\n                {\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    let _2 := 0\n                    let _3 := not(255)\n                    /// @src 3:3166:3170  \"true\"\n                    let _4 := 0x0c\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    sstore(/** @src 3:3166:3170  \"true\" */ _4, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ _4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ or(and(sload(/** @src 13:1038:1042  \"true\" */ 0x1e), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3), /** @src 3:3166:3170  \"true\" */ 0x01))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    finalize_allocation_3703(_1)\n                    mstore(_1, /** @src 3:3166:3170  \"true\" */ _4)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _5 := add(_1, 32)\n                    mstore(_5, \"TEAM_ADDRESS\")\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    let expr_mpos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    let i := _2\n                    for { }\n                    lt(i, /** @src 3:3166:3170  \"true\" */ _4)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    { i := add(i, 32) }\n                    {\n                        mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ i), 32), mload(add(add(_1, i), 32)))\n                    }\n                    mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 44), _2)\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    mstore(expr_mpos, /** @src 3:3166:3170  \"true\" */ _4)\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    finalize_allocation_3703(expr_mpos)\n                    /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                    let _6 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let _7 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    mstore(_7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                    mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let _8 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _7, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if iszero(_8)\n                    {\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let expr := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if _8\n                    {\n                        let _9 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_7, _9)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_7, _9), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let value := mload(_7)\n                        if iszero(eq(value, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                        {\n                            revert(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, _2)\n                        }\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        expr := value\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(_2, _2)\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    let _10 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    mstore(_10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                    mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_10, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                    mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let length := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n                    mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length)\n                    copy_memory_to_memory_with_cleanup(_5, add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    let _11 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _10, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if iszero(_11)\n                    {\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if _11\n                    {\n                        finalize_allocation_2709(_10)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        _2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2\n                    }\n                    let _12 := sload(/** @src 13:1038:1042  \"true\" */ 0x1e)\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ or(and(_12, not(sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 256))), and(shl(8, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(168, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 256))))\n                    let memPtr := mload(64)\n                    finalize_allocation_3703(memPtr)\n                    let _13 := 16\n                    mstore(memPtr, _13)\n                    mstore(add(memPtr, 32), \"DEPLOYER_ADDRESS\")\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    let expr_mpos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    let i_1 := 0\n                    for { } lt(i_1, _13) { i_1 := add(i_1, 32) }\n                    {\n                        mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ i_1), 32), mload(add(add(memPtr, i_1), 32)))\n                    }\n                    mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 48), 0)\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    mstore(expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _13)\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    finalize_allocation_3703(expr_mpos_1)\n                    /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                    let _14 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_1))\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let _15 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    mstore(_15, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                    mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_15, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _14)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let _16 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _15, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _15, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if iszero(_16)\n                    {\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_2, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_2, returndatasize())\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let expr_1 := _2\n                    if _16\n                    {\n                        let _17 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _17 := returndatasize() }\n                        finalize_allocation(_15, _17)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_15, _17), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _15), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let value_1 := mload(_15)\n                        if iszero(eq(value_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        expr_1 := value_1\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    let _18 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    mstore(_18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                    mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_18, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                    mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let length_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr)\n                    mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_1)\n                    copy_memory_to_memory_with_cleanup(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(memPtr, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_1)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    let _19 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _18, /** @src -1:-1:-1 */ _2)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if iszero(_19)\n                    {\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_3 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_3, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_3, returndatasize())\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if _19\n                    {\n                        finalize_allocation_2709(_18)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if _2\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    sstore(31, or(and(sload(31), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_3703(memPtr_1)\n                    mstore(memPtr_1, 5)\n                    mstore(add(memPtr_1, 32), \"USER1\")\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    let expr_mpos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    let i_2 := 0\n                    for { } lt(i_2, 5) { i_2 := add(i_2, 32) }\n                    {\n                        mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ i_2), 32), mload(add(add(memPtr_1, i_2), 32)))\n                    }\n                    mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 37), 0)\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    mstore(expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 5)\n                    /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                    finalize_allocation_3703(expr_mpos_2)\n                    /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                    let _20 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_2))\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let _21 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    mstore(_21, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                    mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_21, 4), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _20)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let _22 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _21, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if iszero(_22)\n                    {\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_4 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_4, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_4, returndatasize())\n                    }\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    let expr_2 := _2\n                    if _22\n                    {\n                        let _23 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _23 := returndatasize() }\n                        finalize_allocation(_21, _23)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_21, _23), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let value_2 := mload(_21)\n                        if iszero(eq(value_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        expr_2 := value_2\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d))\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        revert(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    let _24 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    mstore(_24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                    mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_24, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                    mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                    /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let length_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_1)\n                    mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), length_2)\n                    copy_memory_to_memory_with_cleanup(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(memPtr_1, 32), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), length_2)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    let _25 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src -1:-1:-1 */ _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, add(sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31))), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _24, /** @src -1:-1:-1 */ _2)\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if iszero(_25)\n                    {\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos_5 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos_5, /** @src -1:-1:-1 */ _2, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos_5, returndatasize())\n                    }\n                    /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                    if _25\n                    {\n                        finalize_allocation_2709(_24)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if _2\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    sstore(32, or(and(sload(32), not(sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ sub(shl(160, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    let _26 := mload(64)\n                    let _27 := datasize(\"ZFI_test_62240_deployed\")\n                    codecopy(_26, dataoffset(\"ZFI_test_62240_deployed\"), _27)\n                    return(_26, _27)\n                }\n                function finalize_allocation_2709(memPtr)\n                {\n                    if gt(memPtr, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, memPtr)\n                }\n                function finalize_allocation_3703(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ not(31)))\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    if or(gt(newFreePtr, sub(shl(64, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function copy_memory_to_memory_with_cleanup(src, dst, length)\n                {\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 32) }\n                    {\n                        mstore(add(dst, i), mload(add(src, i)))\n                    }\n                    mstore(add(dst, length), 0)\n                }\n            }\n            /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 13:\"lib/forge-std/src/Test.sol\", 83:\"test/00_ZFI.t.sol\"\n            object \"ZFI_test_62240_deployed\" {\n                code {\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _2 := 0\n                            switch shr(224, calldataload(_2))\n                            case 0x0a9254e4 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let _3 := sub(shl(160, 1), 1)\n                                let value := and(sload(/** @src 83:569:585  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3)\n                                let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4))\n                                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                                mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ add(_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ _1, /** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 83:587:594  \"2 ether\" */ 0x1bc16d674ec80000)\n                                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                                let _5 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4, _2, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _1, /** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                                if iszero(_5)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                                if _5\n                                {\n                                    finalize_allocation_15050(_1)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    _2 := _2\n                                }\n                                let value_1 := and(sload(/** @src 83:569:585  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3)\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4))\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                let _6 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                mstore(_6, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_6, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_1)\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                let _7 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4, _2, /** @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _6, /** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _6, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if iszero(_7)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_1, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 83:605:636  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if _7\n                                {\n                                    finalize_allocation_15050(_6)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(/** @src 83:903:936  \"zfiToken = ZFIToken(deploy_ZFI())\" */ 0x21, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(sload(/** @src 83:903:936  \"zfiToken = ZFIToken(deploy_ZFI())\" */ 0x21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(160, 0xffffffffffffffffffffffff)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 83:923:935  \"deploy_ZFI()\" */ fun_deploy_ZFI(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3)))\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4))\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                let _8 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                let _9 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _4, _2, /** @src 83:946:960  \"vm.stopPrank()\" */ _8, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:946:960  \"vm.stopPrank()\" */ _8, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                if iszero(_9)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 83:946:960  \"vm.stopPrank()\"\n                                if _9\n                                {\n                                    finalize_allocation_15050(_8)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                return(_2, _2)\n                            }\n                            case 0x1ed7831c {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let pos_3 := mload(64)\n                                let pos_4 := pos_3\n                                let length := sload(/** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(pos_3, length)\n                                let _10 := 0x20\n                                pos_3 := add(pos_3, _10)\n                                mstore(_2, /** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                                let i := _2\n                                for { } lt(i, length) { i := add(i, 1) }\n                                {\n                                    mstore(pos_3, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                                    pos_3 := add(pos_3, _10)\n                                    srcPtr := add(srcPtr, 1)\n                                }\n                                finalize_allocation(pos_4, sub(pos_3, pos_4))\n                                let memPos := mload(64)\n                                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_4), memPos))\n                            }\n                            case 0x2ade3880 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let length_1 := sload(/** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _11 := array_allocation_size_array_string_dyn(length_1)\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, _11)\n                                mstore(memPtr, length_1)\n                                let mpos := memPtr\n                                mpos := add(memPtr, 0x20)\n                                let mpos_1 := mpos\n                                mstore(_2, /** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                                let i_1 := _2\n                                for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                                {\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation_15053(memPtr_1)\n                                    mstore(memPtr_1, and(sload(spos), sub(shl(160, 1), 1)))\n                                    let _12 := add(spos, 1)\n                                    let length_2 := sload(_12)\n                                    let _13 := array_allocation_size_array_string_dyn(length_2)\n                                    let memPtr_2 := mload(64)\n                                    finalize_allocation(memPtr_2, _13)\n                                    mstore(memPtr_2, length_2)\n                                    let mpos_2 := memPtr_2\n                                    mpos_2 := add(memPtr_2, 0x20)\n                                    mstore(0, _12)\n                                    let spos_1 := keccak256(0, 0x20)\n                                    let i_2 := 0\n                                    for { } lt(i_2, length_2) { i_2 := add(i_2, 1) }\n                                    {\n                                        let memPtr_3 := mload(64)\n                                        let ret := 0\n                                        let slotValue := sload(spos_1)\n                                        let length_3 := ret\n                                        length_3 := shr(1, slotValue)\n                                        if iszero(and(slotValue, 1))\n                                        {\n                                            length_3 := and(length_3, 0x7f)\n                                        }\n                                        if eq(and(slotValue, 1), lt(length_3, 0x20))\n                                        {\n                                            mstore(ret, shl(224, 0x4e487b71))\n                                            mstore(4, 0x22)\n                                            revert(ret, 0x24)\n                                        }\n                                        mstore(memPtr_3, length_3)\n                                        switch and(slotValue, 1)\n                                        case 0 {\n                                            mstore(add(memPtr_3, 0x20), and(slotValue, not(255)))\n                                            ret := add(add(memPtr_3, shl(5, iszero(iszero(length_3)))), 0x20)\n                                        }\n                                        case 1 {\n                                            mstore(0, spos_1)\n                                            let dataPos := keccak256(0, 0x20)\n                                            let i_3 := 0\n                                            for { } lt(i_3, length_3) { i_3 := add(i_3, 0x20) }\n                                            {\n                                                mstore(add(add(memPtr_3, i_3), 0x20), sload(dataPos))\n                                                dataPos := add(dataPos, 1)\n                                            }\n                                            ret := add(add(memPtr_3, i_3), 0x20)\n                                        }\n                                        finalize_allocation(memPtr_3, sub(ret, memPtr_3))\n                                        mstore(mpos_2, memPtr_3)\n                                        mpos_2 := add(mpos_2, 0x20)\n                                        spos_1 := add(spos_1, 1)\n                                    }\n                                    mstore(add(memPtr_1, 0x20), memPtr_2)\n                                    mstore(mpos, memPtr_1)\n                                    mpos := add(mpos, 0x20)\n                                    spos := add(spos, 2)\n                                }\n                                let memPos_1 := mload(64)\n                                let tail := add(memPos_1, 0x20)\n                                mstore(memPos_1, 0x20)\n                                let pos_5 := tail\n                                let length_4 := mload(memPtr)\n                                mstore(tail, length_4)\n                                pos_5 := add(memPos_1, 64)\n                                let _14 := 5\n                                let tail_1 := add(add(memPos_1, shl(_14, length_4)), 64)\n                                let srcPtr_1 := mpos_1\n                                let i_4 := _2\n                                for { } lt(i_4, length_4) { i_4 := add(i_4, 1) }\n                                {\n                                    mstore(pos_5, add(sub(tail_1, memPos_1), not(63)))\n                                    let _15 := mload(srcPtr_1)\n                                    let tail_2 := add(tail_1, 64)\n                                    mstore(tail_1, and(mload(_15), sub(shl(160, 1), 1)))\n                                    let memberValue0 := mload(add(_15, 0x20))\n                                    mstore(add(tail_1, 0x20), 64)\n                                    let pos_6 := tail_2\n                                    let length_5 := mload(memberValue0)\n                                    mstore(tail_2, length_5)\n                                    let _16 := 96\n                                    pos_6 := add(tail_1, _16)\n                                    let tail_3 := add(add(tail_1, shl(_14, length_5)), _16)\n                                    let srcPtr_2 := add(memberValue0, 0x20)\n                                    let i_5 := _2\n                                    for { } lt(i_5, length_5) { i_5 := add(i_5, 1) }\n                                    {\n                                        mstore(pos_6, add(sub(tail_3, tail_1), not(95)))\n                                        tail_3 := abi_encode_string(mload(srcPtr_2), tail_3)\n                                        srcPtr_2 := add(srcPtr_2, 0x20)\n                                        pos_6 := add(pos_6, 0x20)\n                                    }\n                                    tail_1 := tail_3\n                                    srcPtr_1 := add(srcPtr_1, 0x20)\n                                    pos_5 := add(pos_5, 0x20)\n                                }\n                                return(memPos_1, sub(tail_1, memPos_1))\n                            }\n                            case 0x3e5e3c23 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let pos_7 := mload(64)\n                                let pos_8 := pos_7\n                                let length_6 := sload(/** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(pos_7, length_6)\n                                let _17 := 0x20\n                                pos_7 := add(pos_7, _17)\n                                mstore(_2, /** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let srcPtr_3 := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                                let i_6 := _2\n                                for { } lt(i_6, length_6) { i_6 := add(i_6, 1) }\n                                {\n                                    mstore(pos_7, and(sload(srcPtr_3), sub(shl(160, 1), 1)))\n                                    pos_7 := add(pos_7, _17)\n                                    srcPtr_3 := add(srcPtr_3, 1)\n                                }\n                                finalize_allocation(pos_8, sub(pos_7, pos_8))\n                                let memPos_2 := mload(64)\n                                return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, pos_8), memPos_2))\n                            }\n                            case 0x3f7286f4 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let pos_9 := mload(64)\n                                let pos_10 := pos_9\n                                let length_7 := sload(/** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(pos_9, length_7)\n                                let _18 := 0x20\n                                pos_9 := add(pos_9, _18)\n                                mstore(_2, /** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let srcPtr_4 := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                                let i_7 := _2\n                                for { } lt(i_7, length_7) { i_7 := add(i_7, 1) }\n                                {\n                                    mstore(pos_9, and(sload(srcPtr_4), sub(shl(160, 1), 1)))\n                                    pos_9 := add(pos_9, _18)\n                                    srcPtr_4 := add(srcPtr_4, 1)\n                                }\n                                finalize_allocation(pos_10, sub(pos_9, pos_10))\n                                let memPos_3 := mload(64)\n                                return(memPos_3, sub(abi_encode_array_address_dyn(memPos_3, pos_10), memPos_3))\n                            }\n                            case 0x46091aeb {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                fun_test_GiveAdminRoleAway()\n                                return(_2, _2)\n                            }\n                            case 0x49a4986a {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                /// @src 83:2260:2507  \"function test_Upgrade() public {...\"\n                                fun_test_GiveAdminRoleAway()\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _19 := sub(shl(160, 1), 1)\n                                let value_2 := and(shr(8, sload(/** @src 83:2349:2361  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _19)\n                                let _20 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _20))\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                let _21 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                mstore(_21, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_2)\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                let _22 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _20, _2, /** @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\" */ _21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\" */ _21, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                if iszero(_22)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_11 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_11, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_11, returndatasize())\n                                }\n                                /// @src 83:2335:2362  \"vm.startPrank(TEAM_ADDRESS)\"\n                                if _22\n                                {\n                                    finalize_allocation_15050(_21)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                /// @src 83:2401:2415  \"new ZFIToken()\"\n                                let _23 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2401:2415  \"new ZFIToken()\"\n                                let _24 := datasize(\"ZFIToken_58326\")\n                                let _25 := add(_23, _24)\n                                let _26 := 0xffffffffffffffff\n                                if or(gt(_25, _26), lt(_25, _23))\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, shl(224, 0x4e487b71))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                                    revert(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, 36)\n                                }\n                                /// @src 83:2401:2415  \"new ZFIToken()\"\n                                datacopy(_23, dataoffset(\"ZFIToken_58326\"), _24)\n                                let expr_address := create(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2401:2415  \"new ZFIToken()\" */ _23, sub(_25, _23))\n                                if iszero(expr_address)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_12 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_12, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_12, returndatasize())\n                                }\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let memPtr_4 := mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let newFreePtr := add(memPtr_4, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if or(gt(newFreePtr, /** @src 83:2401:2415  \"new ZFIToken()\" */ _26), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ lt(newFreePtr, memPtr_4))\n                                {\n                                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0, shl(224, 0x4e487b71))\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0x41)\n                                    revert(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0, 36)\n                                }\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(memPtr_4, _2)\n                                let value_3 := and(sload(/** @src 83:2458:2466  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _19)\n                                /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                                if iszero(extcodesize(value_3))\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                                let _27 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                                mstore(_27, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x278f7943))\n                                /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                                let _28 := call(gas(), value_3, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\" */ _27, sub(abi_encode_address_bytes(add(_27, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), and(/** @src 83:2393:2416  \"address(new ZFIToken())\" */ expr_address, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _19), /** @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\" */ memPtr_4), _27), _27, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                                if iszero(_28)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_13 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_13, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_13, returndatasize())\n                                }\n                                /// @src 83:2458:2500  \"zfiToken.upgradeToAndCall(newImplem, data)\"\n                                if _28\n                                {\n                                    finalize_allocation_15050(_27)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                return(_2, _2)\n                            }\n                            case 0x66d9a9a0 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let length_8 := sload(/** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _29 := array_allocation_size_array_string_dyn(length_8)\n                                let memPtr_5 := mload(64)\n                                finalize_allocation(memPtr_5, _29)\n                                mstore(memPtr_5, length_8)\n                                let mpos_3 := memPtr_5\n                                mpos_3 := add(memPtr_5, 0x20)\n                                mstore(_2, /** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let spos_2 := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                                let i_8 := _2\n                                for { } lt(i_8, length_8) { i_8 := add(i_8, 1) }\n                                {\n                                    let memPtr_6 := mload(64)\n                                    finalize_allocation_15053(memPtr_6)\n                                    mstore(memPtr_6, and(sload(spos_2), sub(shl(160, 1), 1)))\n                                    let _30 := add(spos_2, 1)\n                                    let pos_14 := mload(64)\n                                    let pos_15 := pos_14\n                                    let length_9 := sload(_30)\n                                    mstore(pos_14, length_9)\n                                    pos_14 := add(pos_14, 0x20)\n                                    mstore(_2, _30)\n                                    let srcPtr_5 := keccak256(_2, 0x20)\n                                    let itemCounter := _2\n                                    for { }\n                                    lt(add(itemCounter, 7), length_9)\n                                    {\n                                        itemCounter := add(itemCounter, 8)\n                                    }\n                                    {\n                                        let data := sload(srcPtr_5)\n                                        let _31 := shl(224, 0xffffffff)\n                                        mstore(pos_14, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data), _31))\n                                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let _32 := 192\n                                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                        mstore(add(pos_14, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_32, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data), _31))\n                                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let _33 := 160\n                                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                        mstore(add(pos_14, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_33, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data), _31))\n                                        let _34 := 96\n                                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let _35 := 128\n                                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                        mstore(add(pos_14, _34), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_35, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data), _31))\n                                        mstore(add(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _35), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _34, data), _31))\n                                        mstore(add(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _33), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data), _31))\n                                        mstore(add(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _32), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data), _31))\n                                        mstore(add(pos_14, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data, _31))\n                                        pos_14 := add(pos_14, 256)\n                                        srcPtr_5 := add(srcPtr_5, 1)\n                                    }\n                                    let data_1 := sload(srcPtr_5)\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96, data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                        itemCounter := add(itemCounter, 1)\n                                    }\n                                    if lt(itemCounter, length_9)\n                                    {\n                                        mstore(pos_14, and(data_1, shl(224, 0xffffffff)))\n                                        pos_14 := add(pos_14, 0x20)\n                                    }\n                                    finalize_allocation(pos_15, sub(pos_14, pos_15))\n                                    mstore(add(memPtr_6, 0x20), pos_15)\n                                    mstore(mpos_3, memPtr_6)\n                                    mpos_3 := add(mpos_3, 0x20)\n                                    spos_2 := add(spos_2, 2)\n                                }\n                                let memPos_4 := mload(64)\n                                return(memPos_4, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_4, memPtr_5), memPos_4))\n                            }\n                            case 0x84d7db65 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                /// @src 83:1702:1935  \"function test_Mint() public {...\"\n                                fun_test_GiveAdminRoleAway()\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _36 := sub(shl(160, 1), 1)\n                                let value_4 := and(sload(/** @src 83:1788:1804  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _36)\n                                let _37 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37))\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                let _38 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                mstore(_38, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_38, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_4)\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                let _39 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37, _2, /** @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _38, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _38, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if iszero(_39)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_16 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_16, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_16, returndatasize())\n                                }\n                                /// @src 83:1774:1805  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if _39\n                                {\n                                    finalize_allocation_15050(_38)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                let value_5 := and(sload(/** @src 83:1815:1823  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _36)\n                                let _40 := 32\n                                let value_6 := and(sload(_40), _36)\n                                /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                                if iszero(extcodesize(value_5))\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                                let _41 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                                mstore(_41, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x40c10f19))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ add(_41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_6)\n                                /// @src 83:1836:1844  \"10 ether\"\n                                let _42 := 0x8ac7230489e80000\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ _41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:1836:1844  \"10 ether\" */ _42)\n                                /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                                let _43 := call(gas(), value_5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ _41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\" */ _41, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                                if iszero(_43)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_17 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_17, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_17, returndatasize())\n                                }\n                                /// @src 83:1815:1845  \"zfiToken.mint(USER1, 10 ether)\"\n                                if _43\n                                {\n                                    finalize_allocation_15050(_41)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37))\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                let _44 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                mstore(_44, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                let _45 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _37, _2, /** @src 83:1855:1869  \"vm.stopPrank()\" */ _44, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:1855:1869  \"vm.stopPrank()\" */ _44, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                if iszero(_45)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_18 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_18, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_18, returndatasize())\n                                }\n                                /// @src 83:1855:1869  \"vm.stopPrank()\"\n                                if _45\n                                {\n                                    finalize_allocation_15050(_44)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                let value_7 := and(sload(/** @src 83:1815:1823  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _36)\n                                let value_8 := and(sload(_40), _36)\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                let _46 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                mstore(_46, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x70a08231))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ add(_46, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_8)\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                let _47 := staticcall(gas(), value_7, _46, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ _46, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _40)\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                if iszero(_47)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_19 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_19, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_19, returndatasize())\n                                }\n                                /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                let expr := _2\n                                if _47\n                                {\n                                    let _48 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _40\n                                    /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                    if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _40, /** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ returndatasize()) { _48 := returndatasize() }\n                                    finalize_allocation(_46, _48)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if slt(sub(/** @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\" */ add(_46, _48), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _46), _40) { revert(_2, _2) }\n                                    /// @src 83:1890:1915  \"zfiToken.balanceOf(USER1)\"\n                                    expr := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_46)\n                                }\n                                /// @src 83:1890:1927  \"zfiToken.balanceOf(USER1) == 10 ether\"\n                                fun_assertTrue(eq(expr, /** @src 83:1836:1844  \"10 ether\" */ _42))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                return(_2, _2)\n                            }\n                            case 0x85226c81 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let length_10 := sload(/** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _49 := array_allocation_size_array_string_dyn(length_10)\n                                let memPtr_7 := mload(64)\n                                finalize_allocation(memPtr_7, _49)\n                                mstore(memPtr_7, length_10)\n                                let mpos_4 := memPtr_7\n                                let _50 := 0x20\n                                mpos_4 := add(memPtr_7, _50)\n                                mstore(0, /** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let spos_3 := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                                let i_9 := 0\n                                for { } lt(i_9, length_10) { i_9 := add(i_9, 1) }\n                                {\n                                    let memPtr_8 := mload(64)\n                                    let ret_1 := 0\n                                    let slotValue_1 := sload(spos_3)\n                                    let length_11 := ret_1\n                                    let _51 := 1\n                                    length_11 := shr(_51, slotValue_1)\n                                    let outOfPlaceEncoding := and(slotValue_1, _51)\n                                    if iszero(outOfPlaceEncoding)\n                                    {\n                                        length_11 := and(length_11, 0x7f)\n                                    }\n                                    if eq(outOfPlaceEncoding, lt(length_11, _50))\n                                    {\n                                        mstore(ret_1, shl(224, 0x4e487b71))\n                                        mstore(4, 0x22)\n                                        revert(ret_1, 0x24)\n                                    }\n                                    mstore(memPtr_8, length_11)\n                                    switch outOfPlaceEncoding\n                                    case 0 {\n                                        mstore(add(memPtr_8, _50), and(slotValue_1, not(255)))\n                                        ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_11)))), _50)\n                                    }\n                                    case 1 {\n                                        mstore(0, spos_3)\n                                        let dataPos_1 := keccak256(0, _50)\n                                        let i_10 := 0\n                                        for { } lt(i_10, length_11) { i_10 := add(i_10, _50) }\n                                        {\n                                            mstore(add(add(memPtr_8, i_10), _50), sload(dataPos_1))\n                                            dataPos_1 := add(dataPos_1, _51)\n                                        }\n                                        ret_1 := add(add(memPtr_8, i_10), _50)\n                                    }\n                                    finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                                    mstore(mpos_4, memPtr_8)\n                                    mpos_4 := add(mpos_4, _50)\n                                    spos_3 := add(spos_3, _51)\n                                }\n                                let memPos_5 := mload(64)\n                                return(memPos_5, sub(abi_encode_array_string_dyn(memPos_5, memPtr_7), memPos_5))\n                            }\n                            case 0x916a17c6 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let length_12 := sload(/** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _52 := array_allocation_size_array_string_dyn(length_12)\n                                let memPtr_9 := mload(64)\n                                finalize_allocation(memPtr_9, _52)\n                                mstore(memPtr_9, length_12)\n                                let mpos_5 := memPtr_9\n                                mpos_5 := add(memPtr_9, 0x20)\n                                mstore(_2, /** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let spos_4 := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                                let i_11 := _2\n                                for { } lt(i_11, length_12) { i_11 := add(i_11, 1) }\n                                {\n                                    let memPtr_10 := mload(64)\n                                    finalize_allocation_15053(memPtr_10)\n                                    mstore(memPtr_10, and(sload(spos_4), sub(shl(160, 1), 1)))\n                                    let _53 := add(spos_4, 1)\n                                    let pos_20 := mload(64)\n                                    let pos_21 := pos_20\n                                    let length_13 := sload(_53)\n                                    mstore(pos_20, length_13)\n                                    pos_20 := add(pos_20, 0x20)\n                                    mstore(_2, _53)\n                                    let srcPtr_6 := keccak256(_2, 0x20)\n                                    let itemCounter_1 := _2\n                                    for { }\n                                    lt(add(itemCounter_1, 7), length_13)\n                                    {\n                                        itemCounter_1 := add(itemCounter_1, 8)\n                                    }\n                                    {\n                                        let data_2 := sload(srcPtr_6)\n                                        let _54 := shl(224, 0xffffffff)\n                                        mstore(pos_20, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data_2), _54))\n                                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let _55 := 192\n                                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                        mstore(add(pos_20, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_55, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2), _54))\n                                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let _56 := 160\n                                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                        mstore(add(pos_20, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_56, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2), _54))\n                                        let _57 := 96\n                                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let _58 := 128\n                                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                        mstore(add(pos_20, _57), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_58, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2), _54))\n                                        mstore(add(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _58), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _57, data_2), _54))\n                                        mstore(add(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _56), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data_2), _54))\n                                        mstore(add(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _55), and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data_2), _54))\n                                        mstore(add(pos_20, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_2, _54))\n                                        pos_20 := add(pos_20, 256)\n                                        srcPtr_6 := add(srcPtr_6, 1)\n                                    }\n                                    let data_3 := sload(srcPtr_6)\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 224, data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96, data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0x20, data_3), shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                        itemCounter_1 := add(itemCounter_1, 1)\n                                    }\n                                    if lt(itemCounter_1, length_13)\n                                    {\n                                        mstore(pos_20, and(data_3, shl(224, 0xffffffff)))\n                                        pos_20 := add(pos_20, 0x20)\n                                    }\n                                    finalize_allocation(pos_21, sub(pos_20, pos_21))\n                                    mstore(add(memPtr_10, 0x20), pos_21)\n                                    mstore(mpos_5, memPtr_10)\n                                    mpos_5 := add(mpos_5, 0x20)\n                                    spos_4 := add(spos_4, 2)\n                                }\n                                let memPos_6 := mload(64)\n                                return(memPos_6, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_6, memPtr_9), memPos_6))\n                            }\n                            case 0xb5508aa9 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let length_14 := sload(/** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _59 := array_allocation_size_array_string_dyn(length_14)\n                                let memPtr_11 := mload(64)\n                                finalize_allocation(memPtr_11, _59)\n                                mstore(memPtr_11, length_14)\n                                let mpos_6 := memPtr_11\n                                let _60 := 0x20\n                                mpos_6 := add(memPtr_11, _60)\n                                mstore(0, /** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let spos_5 := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                                let i_12 := 0\n                                for { } lt(i_12, length_14) { i_12 := add(i_12, 1) }\n                                {\n                                    let memPtr_12 := mload(64)\n                                    let ret_2 := 0\n                                    let slotValue_2 := sload(spos_5)\n                                    let length_15 := ret_2\n                                    let _61 := 1\n                                    length_15 := shr(_61, slotValue_2)\n                                    let outOfPlaceEncoding_1 := and(slotValue_2, _61)\n                                    if iszero(outOfPlaceEncoding_1)\n                                    {\n                                        length_15 := and(length_15, 0x7f)\n                                    }\n                                    if eq(outOfPlaceEncoding_1, lt(length_15, _60))\n                                    {\n                                        mstore(ret_2, shl(224, 0x4e487b71))\n                                        mstore(4, 0x22)\n                                        revert(ret_2, 0x24)\n                                    }\n                                    mstore(memPtr_12, length_15)\n                                    switch outOfPlaceEncoding_1\n                                    case 0 {\n                                        mstore(add(memPtr_12, _60), and(slotValue_2, not(255)))\n                                        ret_2 := add(add(memPtr_12, shl(5, iszero(iszero(length_15)))), _60)\n                                    }\n                                    case 1 {\n                                        mstore(0, spos_5)\n                                        let dataPos_2 := keccak256(0, _60)\n                                        let i_13 := 0\n                                        for { } lt(i_13, length_15) { i_13 := add(i_13, _60) }\n                                        {\n                                            mstore(add(add(memPtr_12, i_13), _60), sload(dataPos_2))\n                                            dataPos_2 := add(dataPos_2, _61)\n                                        }\n                                        ret_2 := add(add(memPtr_12, i_13), _60)\n                                    }\n                                    finalize_allocation(memPtr_12, sub(ret_2, memPtr_12))\n                                    mstore(mpos_6, memPtr_12)\n                                    mpos_6 := add(mpos_6, _60)\n                                    spos_5 := add(spos_5, _61)\n                                }\n                                let memPos_7 := mload(64)\n                                return(memPos_7, sub(abi_encode_array_string_dyn(memPos_7, memPtr_11), memPos_7))\n                            }\n                            case 0xba414fa6 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let ret_3 := fun_failed()\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, iszero(iszero(ret_3)))\n                                return(memPos_8, 32)\n                            }\n                            case 0xca2925eb {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let ret_4 := fun_deploy_ZFI()\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, and(ret_4, sub(shl(160, 1), 1)))\n                                return(memPos_9, 32)\n                            }\n                            case 0xe1a7e93f {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                /// @src 83:1941:2254  \"function test_Pause() public {...\"\n                                fun_test_GiveAdminRoleAway()\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let _62 := sub(shl(160, 1), 1)\n                                let value_9 := and(sload(/** @src 83:2028:2044  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                                let _63 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                let _64 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _65 := shl(225, 0x03223eab)\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                mstore(_64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _65)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_64, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_9)\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                let _66 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _64, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _64, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if iszero(_66)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_22 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_22, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_22, returndatasize())\n                                }\n                                /// @src 83:2014:2045  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                                if _66\n                                {\n                                    finalize_allocation_15050(_64)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                let value_10 := and(sload(/** @src 83:2055:2063  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                                let value_11 := and(sload(32), _62)\n                                /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                                if iszero(extcodesize(value_10))\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                                let _67 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                                mstore(_67, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x40c10f19))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ add(_67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_11)\n                                /// @src 83:2076:2084  \"10 ether\"\n                                let _68 := 0x8ac7230489e80000\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ _67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:2076:2084  \"10 ether\" */ _68)\n                                /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                                let _69 := call(gas(), value_10, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ _67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\" */ _67, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                                if iszero(_69)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_23 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_23, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_23, returndatasize())\n                                }\n                                /// @src 83:2055:2085  \"zfiToken.mint(USER1, 10 ether)\"\n                                if _69\n                                {\n                                    finalize_allocation_15050(_67)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                let value_12 := and(sload(/** @src 83:2055:2063  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                                /// @src 83:2095:2111  \"zfiToken.pause()\"\n                                if iszero(extcodesize(value_12))\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2095:2111  \"zfiToken.pause()\"\n                                let _70 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2095:2111  \"zfiToken.pause()\"\n                                mstore(_70, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x8456cb59))\n                                /// @src 83:2095:2111  \"zfiToken.pause()\"\n                                let _71 := call(gas(), value_12, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2095:2111  \"zfiToken.pause()\" */ _70, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:2095:2111  \"zfiToken.pause()\" */ _70, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2095:2111  \"zfiToken.pause()\"\n                                if iszero(_71)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_24 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_24, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_24, returndatasize())\n                                }\n                                /// @src 83:2095:2111  \"zfiToken.pause()\"\n                                if _71\n                                {\n                                    finalize_allocation_15050(_70)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                let _72 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                mstore(_72, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                let _73 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2121:2135  \"vm.stopPrank()\" */ _72, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:2121:2135  \"vm.stopPrank()\" */ _72, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                if iszero(_73)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_25 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_25, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_25, returndatasize())\n                                }\n                                /// @src 83:2121:2135  \"vm.stopPrank()\"\n                                if _73\n                                {\n                                    finalize_allocation_15050(_72)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                let value_13 := and(sload(32), _62)\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                let _74 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                mstore(_74, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _65)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:2145:2165  \"vm.startPrank(USER1)\" */ add(_74, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_13)\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                let _75 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2145:2165  \"vm.startPrank(USER1)\" */ _74, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:2145:2165  \"vm.startPrank(USER1)\" */ _74, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                if iszero(_75)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_26 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_26, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_26, returndatasize())\n                                }\n                                /// @src 83:2145:2165  \"vm.startPrank(USER1)\"\n                                if _75\n                                {\n                                    finalize_allocation_15050(_74)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63))\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(_2, _2)\n                                }\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                let _76 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                mstore(_76, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x3d211205))\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                let _77 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _63, _2, /** @src 83:2175:2192  \"vm.expectRevert()\" */ _76, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4, /** @src 83:2175:2192  \"vm.expectRevert()\" */ _76, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                if iszero(_77)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_27 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_27, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_27, returndatasize())\n                                }\n                                /// @src 83:2175:2192  \"vm.expectRevert()\"\n                                if _77\n                                {\n                                    finalize_allocation_15050(_76)\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    if _2 { revert(_2, _2) }\n                                }\n                                let value_14 := and(sload(/** @src 83:2055:2063  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                                let value_15 := and(sload(/** @src 83:2028:2044  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _62)\n                                /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                let _78 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                mstore(_78, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xa9059cbb))\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(/** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ add(_78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 4), value_15)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ _78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:2076:2084  \"10 ether\" */ _68)\n                                /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                let _79 := call(gas(), value_14, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ _78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ _78, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32)\n                                /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                if iszero(_79)\n                                {\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    let pos_28 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    returndatacopy(pos_28, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                    revert(pos_28, returndatasize())\n                                }\n                                /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                if _79\n                                {\n                                    let _80 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 32\n                                    /// @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\"\n                                    if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _80, /** @src 83:2202:2247  \"zfiToken.transfer(DEPLOYER_ADDRESS, 10 ether)\" */ returndatasize()) { _80 := returndatasize() }\n                                    finalize_allocation(_78, _80)\n                                    pop(abi_decode_bool_fromMemory(_78, add(_78, _80)))\n                                }\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                return(_2, _2)\n                            }\n                            case 0xe20c9f71 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let pos_29 := mload(64)\n                                let pos_30 := pos_29\n                                let length_16 := sload(/** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                mstore(pos_29, length_16)\n                                let _81 := 0x20\n                                pos_29 := add(pos_29, _81)\n                                mstore(_2, /** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                let srcPtr_7 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                                let i_14 := _2\n                                for { } lt(i_14, length_16) { i_14 := add(i_14, 1) }\n                                {\n                                    mstore(pos_29, and(sload(srcPtr_7), sub(shl(160, 1), 1)))\n                                    pos_29 := add(pos_29, _81)\n                                    srcPtr_7 := add(srcPtr_7, 1)\n                                }\n                                finalize_allocation(pos_30, sub(pos_29, pos_30))\n                                let memPos_10 := mload(64)\n                                return(memPos_10, sub(abi_encode_array_address_dyn(memPos_10, pos_30), memPos_10))\n                            }\n                            case 0xfa7626d4 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let value_16 := and(sload(/** @src 13:1016:1042  \"bool public IS_TEST = true\" */ 30), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0xff)\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, iszero(iszero(value_16)))\n                                return(memPos_11, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_array_address_dyn(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        let tail_1 := add(headStart, _1)\n                        mstore(headStart, _1)\n                        let pos := tail_1\n                        let length := mload(value0)\n                        mstore(tail_1, length)\n                        pos := add(headStart, 64)\n                        let srcPtr := add(value0, _1)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                            pos := add(pos, _1)\n                            srcPtr := add(srcPtr, _1)\n                        }\n                        tail := pos\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            let _1 := 0x20\n                            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                        }\n                        mstore(add(add(pos, length), 0x20), 0)\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        let tail_1 := add(headStart, _1)\n                        mstore(headStart, _1)\n                        let pos := tail_1\n                        let length := mload(value0)\n                        mstore(tail_1, length)\n                        let _2 := 64\n                        pos := add(headStart, _2)\n                        let tail_2 := add(add(headStart, shl(5, length)), _2)\n                        let srcPtr := add(value0, _1)\n                        let i := 0\n                        let i_1 := i\n                        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos, add(sub(tail_2, headStart), not(63)))\n                            let _3 := mload(srcPtr)\n                            let tail_3 := add(tail_2, _2)\n                            mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n                            let memberValue0 := mload(add(_3, _1))\n                            mstore(add(tail_2, _1), _2)\n                            let pos_1 := tail_3\n                            let length_1 := mload(memberValue0)\n                            mstore(tail_3, length_1)\n                            pos_1 := add(tail_2, 96)\n                            let srcPtr_1 := add(memberValue0, _1)\n                            let i_2 := i\n                            for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                            {\n                                mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                                pos_1 := add(pos_1, _1)\n                                srcPtr_1 := add(srcPtr_1, _1)\n                            }\n                            tail_2 := pos_1\n                            srcPtr := add(srcPtr, _1)\n                            pos := add(pos, _1)\n                        }\n                        tail := tail_2\n                    }\n                    function abi_encode_array_string_dyn(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        let tail_1 := add(headStart, _1)\n                        mstore(headStart, _1)\n                        let pos := tail_1\n                        let length := mload(value0)\n                        mstore(tail_1, length)\n                        pos := add(headStart, 64)\n                        let tail_2 := add(add(headStart, shl(5, length)), 64)\n                        let srcPtr := add(value0, _1)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, add(sub(tail_2, headStart), not(63)))\n                            tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                            srcPtr := add(srcPtr, _1)\n                            pos := add(pos, _1)\n                        }\n                        tail := tail_2\n                    }\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    function finalize_allocation_15050(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation_15053(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ size, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 31), not(31)))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 286 @src 2:1243:1447  \"function failed() public view returns (bool) {...\"\n                    function fun_failed() -> var\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value := and(sload(/** @src 2:1302:1309  \"_failed\" */ 0x08), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 0xff)\n                        /// @src 2:1298:1441  \"if (_failed) {...\"\n                        switch /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value\n                        case /** @src 2:1298:1441  \"if (_failed) {...\" */ 0 {\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            let _1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            mstore(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(add(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            let _3 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                            if iszero(_3)\n                            {\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                            if _3\n                            {\n                                let _4 := 32\n                                if gt(_4, returndatasize()) { _4 := returndatasize() }\n                                finalize_allocation(_1, _4)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(sub(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ 32)\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                    revert(/** @src -1:-1:-1 */ expr, expr)\n                                }\n                                /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                                expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_1)\n                            }\n                            /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                            var := /** @src 2:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                            /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                            leave\n                        }\n                        default /// @src 2:1298:1441  \"if (_failed) {...\"\n                        {\n                            /// @src 2:1325:1339  \"return _failed\"\n                            var := value\n                            leave\n                        }\n                    }\n                    /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                    function array_allocation_size_array_string_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function abi_encode_address_bytes(headStart, value0, value1) -> tail\n                    {\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), 64)\n                        tail := abi_encode_string(value1, add(headStart, 64))\n                    }\n                    /// @ast-id 62062 @src 83:973:1242  \"function deploy_ZFI() public returns(address ZFY_proxy_address){...\"\n                    function fun_deploy_ZFI() -> var_ZFY_proxy_address\n                    {\n                        /// @src 83:1087:1101  \"new ZFIToken()\"\n                        let _1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 83:1087:1101  \"new ZFIToken()\"\n                        let _2 := datasize(\"ZFIToken_58326\")\n                        let _3 := add(_1, _2)\n                        let _4 := 0xffffffffffffffff\n                        if or(gt(_3, _4), lt(_3, _1))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(0, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 83:1087:1101  \"new ZFIToken()\"\n                        datacopy(_1, dataoffset(\"ZFIToken_58326\"), _2)\n                        let _5 := 0\n                        let expr_address := create(_5, _1, sub(_3, _1))\n                        if iszero(expr_address)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _6 := sub(shl(160, 1), 1)\n                        let value := and(shr(8, sload(/** @src 83:1219:1231  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _6)\n                        /// @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\"\n                        let expr_mpos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\"\n                        mstore(add(expr_mpos, 0x20), shl(224, 0x26dcff15))\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        mstore(/** @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\" */ add(expr_mpos, 36), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value)\n                        /// @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\"\n                        mstore(expr_mpos, 36)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let newFreePtr := add(expr_mpos, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if or(gt(newFreePtr, /** @src 83:1087:1101  \"new ZFIToken()\" */ _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\" */ 36)\n                        }\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                        /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                        let _7 := datasize(\"ERC1967Proxy_49452\")\n                        let _8 := add(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos, /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 96)\n                        /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                        if or(gt(_8, /** @src 83:1087:1101  \"new ZFIToken()\" */ _4), /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ lt(_8, newFreePtr))\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ shl(224, 0x4e487b71))\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(4, 0x41)\n                            revert(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:1181:1233  \"abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))\" */ 36)\n                        }\n                        /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                        datacopy(newFreePtr, dataoffset(\"ERC1967Proxy_49452\"), _7)\n                        let expr_62057_address := create(/** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ newFreePtr, add(sub(abi_encode_address_bytes(_8, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 83:1079:1102  \"address(new ZFIToken())\" */ expr_address, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _6), /** @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\" */ expr_mpos), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ not(95)))\n                        /// @src 83:1140:1234  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS)))\"\n                        if iszero(expr_62057_address)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_1, /** @src 83:1087:1101  \"new ZFIToken()\" */ _5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 83:1112:1235  \"ZFY_proxy_address = address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))))\"\n                        var_ZFY_proxy_address := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(/** @src 83:1132:1235  \"address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (TEAM_ADDRESS))))\" */ expr_62057_address, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _6)\n                    }\n                    function abi_encode_bytes32_address(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(headStart, value0)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                    }\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        value0 := value\n                    }\n                    /// @ast-id 62123 @src 83:1248:1696  \"function test_GiveAdminRoleAway() public {...\"\n                    function fun_test_GiveAdminRoleAway()\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _1 := sload(/** @src 83:1313:1329  \"DEPLOYER_ADDRESS\" */ 0x1f)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src -1:-1:-1 */ value, value)\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _4 := 64\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _5 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _6 := shl(225, 0x03223eab)\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_5, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _7 := 4\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        mstore(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_5, _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(_1, _2))\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _8 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src -1:-1:-1 */ value, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _5, /** @src -1:-1:-1 */ value)\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_8)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src -1:-1:-1 */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _8\n                        {\n                            finalize_allocation_15050(_5)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            value := /** @src -1:-1:-1 */ value\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_1 := and(sload(/** @src 83:1340:1348  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let _9 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _10 := shl(224, 0xa217fddf)\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        mstore(_9, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _11 := 32\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let _12 := staticcall(gas(), value_1, _9, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ _9, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        if iszero(_12)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_1 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_1, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let expr := value\n                        if _12\n                        {\n                            let _13 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                            /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                            if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ returndatasize()) { _13 := returndatasize() }\n                            finalize_allocation(_9, _13)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ add(_9, _13), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _9), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 83:1359:1388  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                            expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_9)\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _14 := sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)\n                        /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        if iszero(extcodesize(value_1))\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                        /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        let _15 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        mstore(_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x2f2ff15d))\n                        /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        let _16 := call(gas(), value_1, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ _15, sub(abi_encode_bytes32_address(add(_15, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ expr, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ and(shr(8, _14), _2)), /** @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ _15), _15, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                        /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        if iszero(_16)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_2, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 83:1340:1403  \"zfiToken.grantRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        if _16\n                        {\n                            finalize_allocation_15050(_15)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            if value\n                            {\n                                revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                            }\n                        }\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        let _17 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _18 := shl(224, 0x90c5013b)\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        mstore(_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _18)\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        let _19 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1413:1427  \"vm.stopPrank()\" */ _17, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1413:1427  \"vm.stopPrank()\" */ _17, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        if iszero(_19)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_3 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 83:1413:1427  \"vm.stopPrank()\"\n                        if _19\n                        {\n                            finalize_allocation_15050(_17)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            if value\n                            {\n                                revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                            }\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_2 := and(shr(8, sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        let _20 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        mstore(_20, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        mstore(/** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ add(_20, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value_2)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ add(/** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ _20, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36), /** @src 83:1459:1466  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        let _21 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ _20, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 68, /** @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\" */ _20, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        if iszero(_21)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_4 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_4, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 83:1437:1467  \"vm.deal(TEAM_ADDRESS, 2 ether)\"\n                        if _21\n                        {\n                            finalize_allocation_15050(_20)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            if value\n                            {\n                                revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                            }\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_3 := and(shr(8, sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _22 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        mstore(_22, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6)\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        mstore(/** @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\" */ add(_22, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ value_3)\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        let _23 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\" */ _22, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\" */ _22, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if iszero(_23)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_5 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_5, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 83:1477:1504  \"vm.startPrank(TEAM_ADDRESS)\"\n                        if _23\n                        {\n                            finalize_allocation_15050(_22)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            if value\n                            {\n                                revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                            }\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_4 := and(sload(/** @src 83:1340:1348  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let _24 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        mstore(_24, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10)\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let _25 := staticcall(gas(), value_4, _24, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ _24, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        if iszero(_25)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_6 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_6, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let expr_1 := value\n                        if _25\n                        {\n                            let _26 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                            /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                            if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ returndatasize()) { _26 := returndatasize() }\n                            finalize_allocation(_24, _26)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ add(_24, _26), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _24), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 83:1534:1563  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                            expr_1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_24)\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_5 := and(sload(/** @src 83:1313:1329  \"DEPLOYER_ADDRESS\" */ 0x1f), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(value_4))\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                        /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                        let _27 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                        mstore(_27, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xd547741f))\n                        /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                        let _28 := call(gas(), value_4, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\" */ _27, sub(abi_encode_bytes32_address(add(_27, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\" */ expr_1, value_5), _27), _27, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                        /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                        if iszero(_28)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_7 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_7, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 83:1514:1582  \"zfiToken.revokeRole(zfiToken.DEFAULT_ADMIN_ROLE(), DEPLOYER_ADDRESS)\"\n                        if _28\n                        {\n                            finalize_allocation_15050(_27)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            if value\n                            {\n                                revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                            }\n                        }\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3))\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                        }\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        let _29 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        mstore(_29, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _18)\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        let _30 := call(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _3, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 83:1592:1606  \"vm.stopPrank()\" */ _29, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1592:1606  \"vm.stopPrank()\" */ _29, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value)\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        if iszero(_30)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_8 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_8, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 83:1592:1606  \"vm.stopPrank()\"\n                        if _30\n                        {\n                            finalize_allocation_15050(_29)\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            if value\n                            {\n                                revert(/** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, value)\n                            }\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_6 := and(sload(/** @src 83:1340:1348  \"zfiToken\" */ 0x21), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let _31 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        mstore(_31, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _10)\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let _32 := staticcall(gas(), value_6, _31, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7, /** @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ _31, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        if iszero(_32)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_9 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_9, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                        let expr_2 := value\n                        if _32\n                        {\n                            let _33 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                            /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                            if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ returndatasize()) { _33 := returndatasize() }\n                            finalize_allocation(_31, _33)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\" */ add(_31, _33), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _31), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 83:1644:1673  \"zfiToken.DEFAULT_ADMIN_ROLE()\"\n                            expr_2 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_31)\n                        }\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let value_7 := and(shr(8, sload(/** @src 83:1390:1402  \"TEAM_ADDRESS\" */ 0x1e)), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _2)\n                        /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        let _34 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                        /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        mstore(_34, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x24745215))\n                        /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        let _35 := staticcall(gas(), value_6, _34, sub(abi_encode_bytes32_address(add(_34, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _7), /** @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ expr_2, value_7), _34), _34, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11)\n                        /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        if iszero(_35)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_10 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(_4)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_10, /** @src 83:1299:1330  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ value, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_10, returndatasize())\n                        }\n                        /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                        let expr_3 := value\n                        if _35\n                        {\n                            let _36 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11\n                            /// @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\"\n                            if gt(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _11, /** @src 83:1627:1688  \"zfiToken.hasRole(zfiToken.DEFAULT_ADMIN_ROLE(), TEAM_ADDRESS)\" */ returndatasize()) { _36 := returndatasize() }\n                            finalize_allocation(_34, _36)\n                            expr_3 := abi_decode_bool_fromMemory(_34, add(_34, _36))\n                        }\n                        fun_assertTrue(expr_3)\n                    }\n                    /// @ast-id 326 @src 2:1594:1683  \"function assertTrue(bool data) internal pure virtual {...\"\n                    function fun_assertTrue(var_data)\n                    {\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                        if iszero(extcodesize(/** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _1))\n                        /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                        {\n                            /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                        let _2 := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                        /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                        mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x0c9fd581))\n                        /// @src 83:321:2509  \"contract ZFI_test is Test {...\"\n                        mstore(/** @src 2:1657:1676  \"vm.assertTrue(data)\" */ add(_2, 4), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ iszero(iszero(var_data)))\n                        /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                        let _3 := staticcall(gas(), /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ _1, /** @src 2:1657:1676  \"vm.assertTrue(data)\" */ _2, /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ 36, /** @src 2:1657:1676  \"vm.assertTrue(data)\" */ _2, 0)\n                        if iszero(_3)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 83:321:2509  \"contract ZFI_test is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src 2:1657:1676  \"vm.assertTrue(data)\" */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 2:1657:1676  \"vm.assertTrue(data)\"\n                        if _3 { finalize_allocation_15050(_2) }\n                    }\n                }\n                /// @use-src 41:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 42:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 43:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\"\n                object \"ERC1967Proxy_49452\" {\n                    code {\n                        {\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            mstore(64, memoryguard(0x80))\n                            let programSize := datasize(\"ERC1967Proxy_49452\")\n                            let argSize := sub(codesize(), programSize)\n                            let memoryDataOffset := allocate_memory(argSize)\n                            codecopy(memoryDataOffset, programSize, argSize)\n                            let _1 := add(memoryDataOffset, argSize)\n                            if slt(sub(_1, memoryDataOffset), 64)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            let value := mload(memoryDataOffset)\n                            let _2 := and(value, sub(shl(160, 1), 1))\n                            if iszero(eq(value, _2))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            let _3 := 32\n                            let offset := mload(add(memoryDataOffset, _3))\n                            if gt(offset, sub(shl(64, 1), 1))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            let _4 := add(memoryDataOffset, offset)\n                            if iszero(slt(add(_4, 0x1f), _1))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            let _5 := mload(_4)\n                            let array := allocate_memory(array_allocation_size_bytes(_5))\n                            mstore(array, _5)\n                            if gt(add(add(_4, _5), _3), _1)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            for { } lt(i, _5) { i := add(i, _3) }\n                            {\n                                mstore(add(add(array, i), _3), mload(add(add(_4, i), _3)))\n                            }\n                            mstore(add(add(array, _5), _3), /** @src -1:-1:-1 */ 0)\n                            /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                            if /** @src 42:2263:2297  \"newImplementation.code.length == 0\" */ iszero(/** @src 42:2263:2292  \"newImplementation.code.length\" */ extcodesize(value))\n                            /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                            {\n                                /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                let _6 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                                /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                mstore(_6, shl(224, 0x4c9c8ce3))\n                                /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                                mstore(/** @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ add(_6, 4), /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ _2)\n                                /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                revert(_6, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                            }\n                            /// @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                            let _7 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                            sstore(_7, or(and(sload(_7), not(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ sub(shl(160, 1), 1))), /** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2))\n                            /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                            let _8 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                            /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                            log2(/** @src -1:-1:-1 */ 0, 0, /** @src 42:2922:2949  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _2)\n                            /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                            switch /** @src 42:2964:2979  \"data.length > 0\" */ iszero(iszero(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 42:2964:2975  \"data.length\" */ array)))\n                            case /** @src 42:2960:3108  \"if (data.length > 0) {...\" */ 0 {\n                                /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                                if /** @src 42:6648:6661  \"msg.value > 0\" */ iszero(iszero(/** @src 42:6648:6657  \"msg.value\" */ callvalue()))\n                                /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                                {\n                                    /// @src 42:6684:6703  \"ERC1967NonPayable()\"\n                                    mstore(_8, shl(224, 0xb398979f))\n                                    revert(_8, 4)\n                                }\n                            }\n                            default /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                            {\n                                /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                                let expr_component := delegatecall(gas(), value, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ add(array, _3), /** @src 53:4255:4280  \"target.delegatecall(data)\" */ mload(array), /** @src -1:-1:-1 */ 0, 0)\n                                /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                                let data := /** @src -1:-1:-1 */ 0\n                                /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _9 := returndatasize()\n                                    let memPtr := allocate_memory(array_allocation_size_bytes(_9))\n                                    mstore(memPtr, _9)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, _3), /** @src -1:-1:-1 */ 0, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ returndatasize())\n                                }\n                                /// @src 53:4297:4352  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                pop(fun_verifyCallResultFromTarget(value, expr_component, /** @src 53:4255:4280  \"target.delegatecall(data)\" */ data))\n                            }\n                            /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            let _10 := mload(64)\n                            let _11 := datasize(\"ERC1967Proxy_49452_deployed\")\n                            codecopy(_10, dataoffset(\"ERC1967Proxy_49452_deployed\"), _11)\n                            return(_10, _11)\n                        }\n                        function allocate_memory(size) -> memPtr\n                        {\n                            memPtr := mload(64)\n                            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        function array_allocation_size_bytes(length) -> size\n                        {\n                            if gt(length, sub(shl(64, 1), 1))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            size := add(and(add(length, 31), not(31)), 0x20)\n                        }\n                        /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                        {\n                            /// @src 53:4793:5201  \"if (!success) {...\"\n                            switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                            case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                if expr\n                                {\n                                    expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                }\n                                /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                if expr\n                                {\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    let _1 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    mstore(_1, shl(224, 0x9996b315))\n                                    /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                                    mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                    /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                    revert(_1, /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                                }\n                                /// @src 53:5173:5190  \"return returndata\"\n                                var_mpos := var_returndata_mpos\n                                leave\n                            }\n                            default /// @src 53:4793:5201  \"if (!success) {...\"\n                            {\n                                /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    let _2 := /** @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                                    /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                    mstore(_2, shl(225, 0x0a12f521))\n                                    revert(_2, 4)\n                                }\n                                default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                {\n                                    /// @src 53:6046:6188  \"assembly {...\"\n                                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                }\n                            }\n                        }\n                    }\n                    /// @use-src 41:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 42:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 43:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\"\n                    object \"ERC1967Proxy_49452_deployed\" {\n                        code {\n                            {\n                                /// @src 41:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                                mstore(64, 128)\n                                /// @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                                let value := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                                /// @src -1:-1:-1\n                                let _1 := 0\n                                /// @src 43:1019:1838  \"assembly {...\"\n                                calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 43:1019:1838  \"assembly {...\" */ calldatasize())\n                                let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ _1, /** @src 43:1019:1838  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                                /// @src 43:1019:1838  \"assembly {...\"\n                                returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 43:1019:1838  \"assembly {...\" */ returndatasize())\n                                switch usr$result\n                                case 0 {\n                                    revert(/** @src -1:-1:-1 */ _1, /** @src 43:1019:1838  \"assembly {...\" */ returndatasize())\n                                }\n                                default {\n                                    return(/** @src -1:-1:-1 */ _1, /** @src 43:1019:1838  \"assembly {...\" */ returndatasize())\n                                }\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000815000a\"\n                    }\n                }\n                /// @use-src 24:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 27:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\", 29:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 31:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\", 32:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 33:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\", 34:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 35:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 38:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 39:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 40:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 49:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 51:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\", 60:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 72:\"src/ZFI/ZFIToken.sol\", 81:\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\"\n                object \"ZFIToken_58326\" {\n                    code {\n                        {\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _1 := memoryguard(0xa0)\n                            mstore(64, _1)\n                            if callvalue() { revert(0, 0) }\n                            /// @src 26:1163:1176  \"address(this)\"\n                            mstore(128, /** @src 26:1171:1175  \"this\" */ address())\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := datasize(\"ZFIToken_58326_deployed\")\n                            codecopy(_1, dataoffset(\"ZFIToken_58326_deployed\"), _2)\n                            setimmutable(_1, \"47263\", mload(/** @src 26:1163:1176  \"address(this)\" */ 128))\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            return(_1, _2)\n                        }\n                    }\n                    /// @use-src 24:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 27:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\", 29:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 31:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\", 32:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 33:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\", 34:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 42:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 58:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 59:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 72:\"src/ZFI/ZFIToken.sol\", 81:\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\"\n                    object \"ZFIToken_58326_deployed\" {\n                        code {\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := memoryguard(0x80)\n                                mstore(64, _1)\n                                if iszero(lt(calldatasize(), 4))\n                                {\n                                    switch shr(224, calldataload(0))\n                                    case 0x01ffc9a7 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value := calldataload(4)\n                                        let _2 := and(value, shl(224, 0xffffffff))\n                                        if iszero(eq(value, _2)) { revert(0, 0) }\n                                        /// @src 24:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                        let expr := /** @src 24:3551:3598  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2, /** @src 24:3566:3598  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                                        /// @src 24:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                        if iszero(expr)\n                                        {\n                                            expr := /** @src 34:1133:1173  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 34:1148:1173  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(_1, iszero(iszero(expr)))\n                                        return(_1, 32)\n                                    }\n                                    case 0x06fdde03 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPtr := mload(64)\n                                        let ret := 0\n                                        /// @src 27:3141:3148  \"$._name\"\n                                        let _3 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let slotValue := sload(/** @src 27:3141:3148  \"$._name\" */ _3)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let length := extract_byte_array_length(slotValue)\n                                        mstore(memPtr, length)\n                                        let _4 := 0x20\n                                        let _5 := 1\n                                        switch and(slotValue, _5)\n                                        case 0 {\n                                            mstore(add(memPtr, _4), and(slotValue, not(255)))\n                                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _4)\n                                        }\n                                        case 1 {\n                                            mstore(0, /** @src 27:3141:3148  \"$._name\" */ _3)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dataPos := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                            let i := 0\n                                            for { } lt(i, length) { i := add(i, _4) }\n                                            {\n                                                mstore(add(add(memPtr, i), _4), sload(dataPos))\n                                                dataPos := add(dataPos, _5)\n                                            }\n                                            ret := add(add(memPtr, i), _4)\n                                        }\n                                        finalize_allocation(memPtr, sub(ret, memPtr))\n                                        let memPos := mload(64)\n                                        mstore(memPos, _4)\n                                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _4)), memPos))\n                                    }\n                                    case 0x095ea7b3 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0 := abi_decode_address()\n                                        /// @src 27:10380:10384  \"true\"\n                                        fun_approve(/** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 27:10380:10384  \"true\" */ value0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                        let memPos_1 := mload(64)\n                                        mstore(memPos_1, 1)\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x18160ddd {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let _6 := sload(/** @src 27:4322:4336  \"$._totalSupply\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let memPos_2 := mload(64)\n                                        mstore(memPos_2, _6)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x23b872dd {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                        let value0_1 := abi_decode_address()\n                                        let value1 := abi_decode_address_31541()\n                                        /// @src 32:2281:2353  \"modifier whenNotPaused() {...\"\n                                        fun_requireNotPaused()\n                                        /// @src 32:2345:2346  \"_\"\n                                        let _7 := fun_transferFrom_inner(value0_1, value1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(68))\n                                        let memPos_3 := mload(64)\n                                        mstore(memPos_3, iszero(iszero(_7)))\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x248a9ca3 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, calldataload(4))\n                                        mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _8 := sload(/** @src 24:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1))\n                                        let memPos_4 := mload(64)\n                                        mstore(memPos_4, _8)\n                                        return(memPos_4, 32)\n                                    }\n                                    case 0x26dcff15 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value0_2 := abi_decode_address()\n                                        let _9 := sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let value_1 := and(_9, 0xffffffffffffffff)\n                                        /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                        let expr_1 := /** @src 25:4726:4742  \"initialized == 0\" */ iszero(value_1)\n                                        /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                        if expr_1\n                                        {\n                                            expr_1 := /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                        }\n                                        /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                        let expr_2 := /** @src 25:4790:4806  \"initialized == 1\" */ eq(value_1, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                        if expr_2\n                                        {\n                                            expr_2 := /** @src 25:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 25:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 25:4818:4822  \"this\" */ address()))\n                                        }\n                                        /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                        let expr_3 := /** @src 25:4855:4868  \"!initialSetup\" */ iszero(expr_1)\n                                        /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                        if expr_3\n                                        {\n                                            expr_3 := /** @src 25:4872:4885  \"!construction\" */ iszero(expr_2)\n                                        }\n                                        /// @src 25:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                        if expr_3\n                                        {\n                                            /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                            let _10 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                            mstore(_10, shl(224, 0xf92ee8a9))\n                                            revert(_10, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        let _11 := not(0xffffffffffffffff)\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_9, _11), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                        /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                        if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                        /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_9, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                        }\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation_49957(memPtr_1)\n                                        mstore(memPtr_1, 10)\n                                        mstore(add(memPtr_1, 32), \"Zyfi Token\")\n                                        let memPtr_2 := mload(64)\n                                        finalize_allocation_49957(memPtr_2)\n                                        mstore(memPtr_2, 3)\n                                        mstore(add(memPtr_2, 32), \"ZFI\")\n                                        let _12 := sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let value_2 := and(_12, 0xffffffffffffffff)\n                                        /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                        let expr_4 := /** @src 25:4726:4742  \"initialized == 0\" */ iszero(value_2)\n                                        /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                        if expr_4\n                                        {\n                                            expr_4 := /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                        }\n                                        /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                        let expr_5 := /** @src 25:4790:4806  \"initialized == 1\" */ eq(value_2, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                        if expr_5\n                                        {\n                                            expr_5 := /** @src 25:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 25:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 25:4818:4822  \"this\" */ address()))\n                                        }\n                                        /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                        let expr_6 := /** @src 25:4855:4868  \"!initialSetup\" */ iszero(expr_4)\n                                        /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                        if expr_6\n                                        {\n                                            expr_6 := /** @src 25:4872:4885  \"!construction\" */ iszero(expr_5)\n                                        }\n                                        /// @src 25:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                        if expr_6\n                                        {\n                                            /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                            let _13 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                            mstore(_13, shl(224, 0xf92ee8a9))\n                                            revert(_13, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_12, _11), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                        /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                        if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                        /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_12, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                        }\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let newLen := mload(memPtr_1)\n                                        if gt(newLen, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        let _14 := extract_byte_array_length(sload(/** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_14, 31)\n                                        {\n                                            mstore(0, /** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let deleteStart := add(19393869656648957010684718629437485012893776189133053609402333970098045905584, shr(5, add(newLen, 31)))\n                                            if lt(newLen, 32)\n                                            {\n                                                deleteStart := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                            }\n                                            let start := deleteStart\n                                            for { }\n                                            lt(start, add(19393869656648957010684718629437485012893776189133053609402333970098045905584, shr(5, add(_14, 31))))\n                                            {\n                                                start := add(start, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start, 0) }\n                                        }\n                                        let srcOffset := 0\n                                        srcOffset := 32\n                                        switch gt(newLen, 31)\n                                        case 1 {\n                                            mstore(0, /** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                            let i_1 := 0\n                                            for { } lt(i_1, and(newLen, not(31))) { i_1 := add(i_1, 32) }\n                                            {\n                                                sstore(dstPtr, mload(add(memPtr_1, srcOffset)))\n                                                dstPtr := add(dstPtr, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset := add(srcOffset, 32)\n                                            }\n                                            if lt(and(newLen, not(31)), newLen)\n                                            {\n                                                let lastValue := mload(add(memPtr_1, srcOffset))\n                                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_3 := 0\n                                            if newLen\n                                            {\n                                                value_3 := mload(add(memPtr_1, srcOffset))\n                                            }\n                                            sstore(/** @src 27:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen)))\n                                        }\n                                        let newLen_1 := mload(memPtr_2)\n                                        if gt(newLen_1, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        let _15 := extract_byte_array_length(sload(/** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_15, 31)\n                                        {\n                                            mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let deleteStart_1 := add(31949013729812444881239907556254782105475912131904715391540824249639680385706, shr(5, add(newLen_1, 31)))\n                                            if lt(newLen_1, 32)\n                                            {\n                                                deleteStart_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                            }\n                                            let start_1 := deleteStart_1\n                                            for { }\n                                            lt(start_1, add(31949013729812444881239907556254782105475912131904715391540824249639680385706, shr(5, add(_15, 31))))\n                                            {\n                                                start_1 := add(start_1, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_1, 0) }\n                                        }\n                                        let srcOffset_1 := 0\n                                        srcOffset_1 := 32\n                                        switch gt(newLen_1, 31)\n                                        case 1 {\n                                            mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                            let i_2 := 0\n                                            for { } lt(i_2, and(newLen_1, not(31))) { i_2 := add(i_2, 32) }\n                                            {\n                                                sstore(dstPtr_1, mload(add(memPtr_2, srcOffset_1)))\n                                                dstPtr_1 := add(dstPtr_1, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_1 := add(srcOffset_1, 32)\n                                            }\n                                            if lt(and(newLen_1, not(31)), newLen_1)\n                                            {\n                                                let lastValue_1 := mload(add(memPtr_2, srcOffset_1))\n                                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_1), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_4 := 0\n                                            if newLen_1\n                                            {\n                                                value_4 := mload(add(memPtr_2, srcOffset_1))\n                                            }\n                                            sstore(/** @src 27:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_4, not(shr(shl(3, newLen_1), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_1)))\n                                        }\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        /// @src 32:1237:1303  \"assembly {...\"\n                                        let _16 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 32:1237:1303  \"assembly {...\" */ _16, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 32:1237:1303  \"assembly {...\" */ _16), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)))\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let memPtr_3 := mload(64)\n                                        finalize_allocation_49957(memPtr_3)\n                                        mstore(memPtr_3, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(add(memPtr_3, 32), \"1\")\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let newLen_2 := mload(memPtr_1)\n                                        if gt(newLen_2, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        let _17 := extract_byte_array_length(sload(/** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_17, 31)\n                                        {\n                                            mstore(0, /** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let deleteStart_2 := add(30158956085912968823615024008721865502849334730239338980345710057699140031869, shr(5, add(newLen_2, 31)))\n                                            if lt(newLen_2, 32)\n                                            {\n                                                deleteStart_2 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                            }\n                                            let start_2 := deleteStart_2\n                                            for { }\n                                            lt(start_2, add(30158956085912968823615024008721865502849334730239338980345710057699140031869, shr(5, add(_17, 31))))\n                                            {\n                                                start_2 := add(start_2, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_2, 0) }\n                                        }\n                                        let srcOffset_2 := 0\n                                        srcOffset_2 := 32\n                                        switch gt(newLen_2, 31)\n                                        case 1 {\n                                            mstore(0, /** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_2 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                            let i_3 := 0\n                                            for { } lt(i_3, and(newLen_2, not(31))) { i_3 := add(i_3, 32) }\n                                            {\n                                                sstore(dstPtr_2, mload(add(memPtr_1, srcOffset_2)))\n                                                dstPtr_2 := add(dstPtr_2, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_2 := add(srcOffset_2, 32)\n                                            }\n                                            if lt(and(newLen_2, not(31)), newLen_2)\n                                            {\n                                                let lastValue_2 := mload(add(memPtr_1, srcOffset_2))\n                                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_2), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_5 := 0\n                                            if newLen_2\n                                            {\n                                                value_5 := mload(add(memPtr_1, srcOffset_2))\n                                            }\n                                            sstore(/** @src 33:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_5, not(shr(shl(3, newLen_2), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_2)))\n                                        }\n                                        let newLen_3 := mload(memPtr_3)\n                                        if gt(newLen_3, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        let _18 := extract_byte_array_length(sload(/** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_18, 31)\n                                        {\n                                            mstore(0, /** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let deleteStart_3 := add(43246917397366557439122818263899697367203722805747902111665069041191356951413, shr(5, add(newLen_3, 31)))\n                                            if lt(newLen_3, 32)\n                                            {\n                                                deleteStart_3 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                            }\n                                            let _19 := add(43246917397366557439122818263899697367203722805747902111665069041191356951413, shr(5, add(_18, 31)))\n                                            let start_3 := deleteStart_3\n                                            for { }\n                                            lt(start_3, _19)\n                                            {\n                                                start_3 := add(start_3, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_3, 0) }\n                                        }\n                                        let srcOffset_3 := 0\n                                        srcOffset_3 := 32\n                                        switch gt(newLen_3, 31)\n                                        case 1 {\n                                            let loopEnd := and(newLen_3, not(31))\n                                            mstore(0, /** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_3 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                            let i_4 := 0\n                                            for { } lt(i_4, loopEnd) { i_4 := add(i_4, 32) }\n                                            {\n                                                sstore(dstPtr_3, mload(add(memPtr_3, srcOffset_3)))\n                                                dstPtr_3 := add(dstPtr_3, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_3 := add(srcOffset_3, 32)\n                                            }\n                                            if lt(loopEnd, newLen_3)\n                                            {\n                                                let lastValue_3 := mload(add(memPtr_3, srcOffset_3))\n                                                sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_3), /** @src 25:4805:4806  \"1\" */ 0x01))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_6 := 0\n                                            if newLen_3\n                                            {\n                                                value_6 := mload(add(memPtr_3, srcOffset_3))\n                                            }\n                                            sstore(/** @src 33:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_6, not(shr(shl(3, newLen_3), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ 0x01, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_3)))\n                                        }\n                                        sstore(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                        sstore(/** @src 33:3902:3918  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        /// @src 81:1407:1449  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n                                        pop(fun_grantRole_31547(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                        /// @src 81:1459:1494  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n                                        pop(fun_grantRole_31548(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                        /// @src 81:1504:1539  \"_grantRole(MINTER_ROLE, msg.sender)\"\n                                        pop(fun_grantRole_31549(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                        /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                        if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                        /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                            /// @src 25:5142:5156  \"Initialized(1)\"\n                                            let _20 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            mstore(_20, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            /// @src 25:5142:5156  \"Initialized(1)\"\n                                            log1(_20, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 25:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                        }\n                                        /// @src 72:432:474  \"_grantRole(DEFAULT_ADMIN_ROLE, _ONDEFYDAO)\"\n                                        pop(fun_grantRole_31547(value0_2))\n                                        /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                        if /** @src 25:4301:4317  \"!$._initializing\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                        /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            sstore(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                            /// @src 25:5142:5156  \"Initialized(1)\"\n                                            let _21 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            mstore(_21, /** @src 25:4805:4806  \"1\" */ 0x01)\n                                            /// @src 25:5142:5156  \"Initialized(1)\"\n                                            log1(_21, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 25:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x2f2ff15d {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value_7 := calldataload(4)\n                                        let value1_1 := abi_decode_address_31541()\n                                        mstore(0, value_7)\n                                        mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 24:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1)))\n                                        /// @src 24:5350:5375  \"_grantRole(role, account)\"\n                                        pop(fun_grantRole(value_7, value1_1))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x313ce567 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_5 := mload(64)\n                                        mstore(memPos_5, /** @src 27:4122:4124  \"18\" */ 0x12)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(memPos_5, 32)\n                                    }\n                                    case 0x3644e515 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 33:4087:4117  \"return _buildDomainSeparator()\"\n                                        let var := /** @src 33:4094:4117  \"_buildDomainSeparator()\" */ fun_buildDomainSeparator()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let memPos_6 := mload(64)\n                                        mstore(memPos_6, var)\n                                        return(memPos_6, 32)\n                                    }\n                                    case 0x36568abe {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value1_2 := abi_decode_address_31541()\n                                        /// @src 24:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                                        if /** @src 24:6441:6475  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 24:6441:6475  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)), /** @src 30:966:976  \"msg.sender\" */ caller()))\n                                        /// @src 24:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                                        {\n                                            /// @src 24:6498:6528  \"AccessControlBadConfirmation()\"\n                                            let _22 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 24:6498:6528  \"AccessControlBadConfirmation()\"\n                                            mstore(_22, shl(225, 0x334bd919))\n                                            revert(_22, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        /// @src 24:6549:6586  \"_revokeRole(role, callerConfirmation)\"\n                                        pop(fun_revokeRole(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(4), /** @src 24:6549:6586  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x3f4ba83a {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole_31553()\n                                        /// @src 32:1237:1303  \"assembly {...\"\n                                        let _23 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _24 := sload(/** @src 32:1237:1303  \"assembly {...\" */ _23)\n                                        /// @src 32:3163:3225  \"if (!paused()) {...\"\n                                        if /** @src 32:3167:3176  \"!paused()\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(_24, 0xff))\n                                        /// @src 32:3163:3225  \"if (!paused()) {...\"\n                                        {\n                                            /// @src 32:3199:3214  \"ExpectedPause()\"\n                                            let _25 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 32:3199:3214  \"ExpectedPause()\"\n                                            mstore(_25, shl(224, 0x8dfc202b))\n                                            revert(_25, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        sstore(/** @src 32:1237:1303  \"assembly {...\" */ _23, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(_24, not(255)))\n                                        /// @src 32:3823:3845  \"Unpaused(_msgSender())\"\n                                        let _26 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_26, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                        /// @src 32:3823:3845  \"Unpaused(_msgSender())\"\n                                        log1(_26, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 32:3823:3845  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x40c10f19 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_3 := abi_decode_address()\n                                        let value_8 := calldataload(36)\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole_31555()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _27 := and(/** @src 27:9066:9087  \"account == address(0)\" */ value0_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 27:9062:9153  \"if (account == address(0)) {...\"\n                                        if /** @src 27:9066:9087  \"account == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _27)\n                                        /// @src 27:9062:9153  \"if (account == address(0)) {...\"\n                                        {\n                                            /// @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                            let _28 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                            mstore(_28, shl(224, 0xec442f05))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\" */ add(_28, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), 0)\n                                            /// @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                            revert(_28, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                        /// @src 27:7761:7775  \"$._totalSupply\"\n                                        let _29 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _30 := sload(/** @src 27:7761:7775  \"$._totalSupply\" */ _29)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let sum := add(_30, value_8)\n                                        if gt(_30, sum)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 36)\n                                        }\n                                        sstore(/** @src 27:7761:7775  \"$._totalSupply\" */ _29, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sum)\n                                        mstore(0, _27)\n                                        mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ 37439836327923360225337895871394760624280537466773280374265222508165906222592)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dataSlot := keccak256(0, 64)\n                                        sstore(dataSlot, add(sload(/** @src 27:8557:8581  \"$._balances[to] += value\" */ dataSlot), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ value_8))\n                                        /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                        let _31 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_31, value_8)\n                                        /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                        log3(_31, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ _27)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x42966c68 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        /// @src 28:1005:1010  \"value\"\n                                        fun_burn(/** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(4))\n                                        return(0, 0)\n                                    }\n                                    case 0x4cd88b76 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let offset := calldataload(4)\n                                        let _32 := 0xffffffffffffffff\n                                        if gt(offset, _32) { revert(0, 0) }\n                                        let value0_4 := abi_decode_string(add(4, offset), calldatasize())\n                                        let offset_1 := calldataload(36)\n                                        if gt(offset_1, _32) { revert(0, 0) }\n                                        let value1_3 := abi_decode_string(add(4, offset_1), calldatasize())\n                                        /// @src 25:8837:8901  \"assembly {...\"\n                                        let _33 := 108904022758810753673719992590105913556127789646572562039383141376366747609600\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _34 := sload(/** @src 25:8837:8901  \"assembly {...\" */ _33)\n                                        /// @src 25:4301:4317  \"!$._initializing\"\n                                        let _35 := iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _34), 0xff))\n                                        let value_9 := and(_34, _32)\n                                        /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                        let expr_7 := /** @src 25:4726:4742  \"initialized == 0\" */ iszero(value_9)\n                                        /// @src 25:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                        if expr_7 { expr_7 := _35 }\n                                        /// @src 25:4805:4806  \"1\"\n                                        let _36 := 0x01\n                                        /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                        let expr_8 := /** @src 25:4790:4806  \"initialized == 1\" */ eq(value_9, /** @src 25:4805:4806  \"1\" */ _36)\n                                        /// @src 25:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                        if expr_8\n                                        {\n                                            expr_8 := /** @src 25:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 25:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 25:4818:4822  \"this\" */ address()))\n                                        }\n                                        /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                        let expr_9 := /** @src 25:4855:4868  \"!initialSetup\" */ iszero(expr_7)\n                                        /// @src 25:4855:4885  \"!initialSetup && !construction\"\n                                        if expr_9\n                                        {\n                                            expr_9 := /** @src 25:4872:4885  \"!construction\" */ iszero(expr_8)\n                                        }\n                                        /// @src 25:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                        if expr_9\n                                        {\n                                            /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                            let _37 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 25:4908:4931  \"InvalidInitialization()\"\n                                            mstore(_37, shl(224, 0xf92ee8a9))\n                                            revert(_37, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        sstore(/** @src 25:8837:8901  \"assembly {...\" */ _33, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_34, not(0xffffffffffffffff)), /** @src 25:4805:4806  \"1\" */ _36))\n                                        /// @src 25:4979:5046  \"if (isTopLevelCall) {...\"\n                                        if _35\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            sstore(/** @src 25:8837:8901  \"assembly {...\" */ _33, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_34, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                        }\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let newLen_4 := mload(value0_4)\n                                        if gt(newLen_4, _32)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 36)\n                                        }\n                                        /// @src 27:2895:2902  \"$._name\"\n                                        let _38 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _39 := extract_byte_array_length(sload(/** @src 27:2895:2902  \"$._name\" */ _38))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _40 := 31\n                                        if gt(_39, _40)\n                                        {\n                                            mstore(0, /** @src 27:2895:2902  \"$._name\" */ _38)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let _41 := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                            let deleteStart_4 := add(_41, shr(5, add(newLen_4, _40)))\n                                            if lt(newLen_4, 32) { deleteStart_4 := _41 }\n                                            let _42 := add(_41, shr(5, add(_39, _40)))\n                                            let start_4 := deleteStart_4\n                                            for { }\n                                            lt(start_4, _42)\n                                            {\n                                                start_4 := add(start_4, /** @src 25:4805:4806  \"1\" */ _36)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_4, 0) }\n                                        }\n                                        let srcOffset_4 := 0\n                                        srcOffset_4 := 32\n                                        switch gt(newLen_4, _40)\n                                        case 1 {\n                                            let loopEnd_1 := and(newLen_4, not(31))\n                                            mstore(0, /** @src 27:2895:2902  \"$._name\" */ _38)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_4 := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                            let i_5 := 0\n                                            for { } lt(i_5, loopEnd_1) { i_5 := add(i_5, 32) }\n                                            {\n                                                sstore(dstPtr_4, mload(add(value0_4, srcOffset_4)))\n                                                dstPtr_4 := add(dstPtr_4, /** @src 25:4805:4806  \"1\" */ _36)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_4 := add(srcOffset_4, 32)\n                                            }\n                                            if lt(loopEnd_1, newLen_4)\n                                            {\n                                                let lastValue_4 := mload(add(value0_4, srcOffset_4))\n                                                sstore(dstPtr_4, and(lastValue_4, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 27:2895:2902  \"$._name\" */ _38, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), /** @src 25:4805:4806  \"1\" */ _36))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_10 := 0\n                                            if newLen_4\n                                            {\n                                                value_10 := mload(add(value0_4, srcOffset_4))\n                                            }\n                                            sstore(/** @src 27:2895:2902  \"$._name\" */ _38, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_10, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4)))\n                                        }\n                                        let newLen_5 := mload(value1_3)\n                                        if gt(newLen_5, _32)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 36)\n                                        }\n                                        /// @src 27:2920:2929  \"$._symbol\"\n                                        let _43 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _44 := extract_byte_array_length(sload(/** @src 27:2920:2929  \"$._symbol\" */ _43))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_44, _40)\n                                        {\n                                            mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ _43)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let _45 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                            let deleteStart_5 := add(_45, shr(5, add(newLen_5, _40)))\n                                            if lt(newLen_5, 32) { deleteStart_5 := _45 }\n                                            let _46 := add(_45, shr(5, add(_44, _40)))\n                                            let start_5 := deleteStart_5\n                                            for { }\n                                            lt(start_5, _46)\n                                            {\n                                                start_5 := add(start_5, /** @src 25:4805:4806  \"1\" */ _36)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_5, 0) }\n                                        }\n                                        let srcOffset_5 := 0\n                                        srcOffset_5 := 32\n                                        switch gt(newLen_5, _40)\n                                        case 1 {\n                                            let loopEnd_2 := and(newLen_5, not(31))\n                                            mstore(0, /** @src 27:2920:2929  \"$._symbol\" */ _43)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_5 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                            let i_6 := 0\n                                            for { } lt(i_6, loopEnd_2) { i_6 := add(i_6, 32) }\n                                            {\n                                                sstore(dstPtr_5, mload(add(value1_3, srcOffset_5)))\n                                                dstPtr_5 := add(dstPtr_5, /** @src 25:4805:4806  \"1\" */ _36)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_5 := add(srcOffset_5, 32)\n                                            }\n                                            if lt(loopEnd_2, newLen_5)\n                                            {\n                                                let lastValue_5 := mload(add(value1_3, srcOffset_5))\n                                                sstore(dstPtr_5, and(lastValue_5, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 27:2920:2929  \"$._symbol\" */ _43, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), /** @src 25:4805:4806  \"1\" */ _36))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_11 := 0\n                                            if newLen_5\n                                            {\n                                                value_11 := mload(add(value1_3, srcOffset_5))\n                                            }\n                                            sstore(/** @src 27:2920:2929  \"$._symbol\" */ _43, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_11, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5)))\n                                        }\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        /// @src 32:1237:1303  \"assembly {...\"\n                                        let _47 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 32:1237:1303  \"assembly {...\" */ _47, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 32:1237:1303  \"assembly {...\" */ _47), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)))\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        fun_checkInitializing()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let memPtr_4 := mload(64)\n                                        finalize_allocation_49957(memPtr_4)\n                                        mstore(memPtr_4, /** @src 25:4805:4806  \"1\" */ _36)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(add(memPtr_4, 32), \"1\")\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let newLen_6 := mload(value0_4)\n                                        if gt(newLen_6, _32)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 36)\n                                        }\n                                        /// @src 33:3766:3773  \"$._name\"\n                                        let _48 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _49 := extract_byte_array_length(sload(/** @src 33:3766:3773  \"$._name\" */ _48))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_49, _40)\n                                        {\n                                            mstore(0, /** @src 33:3766:3773  \"$._name\" */ _48)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let _50 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                            let deleteStart_6 := add(_50, shr(5, add(newLen_6, _40)))\n                                            if lt(newLen_6, 32) { deleteStart_6 := _50 }\n                                            let _51 := add(_50, shr(5, add(_49, _40)))\n                                            let start_6 := deleteStart_6\n                                            for { }\n                                            lt(start_6, _51)\n                                            {\n                                                start_6 := add(start_6, /** @src 25:4805:4806  \"1\" */ _36)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_6, 0) }\n                                        }\n                                        let srcOffset_6 := 0\n                                        srcOffset_6 := 32\n                                        switch gt(newLen_6, _40)\n                                        case 1 {\n                                            let loopEnd_3 := and(newLen_6, not(31))\n                                            mstore(0, /** @src 33:3766:3773  \"$._name\" */ _48)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_6 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                            let i_7 := 0\n                                            for { } lt(i_7, loopEnd_3) { i_7 := add(i_7, 32) }\n                                            {\n                                                sstore(dstPtr_6, mload(add(value0_4, srcOffset_6)))\n                                                dstPtr_6 := add(dstPtr_6, /** @src 25:4805:4806  \"1\" */ _36)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_6 := add(srcOffset_6, 32)\n                                            }\n                                            if lt(loopEnd_3, newLen_6)\n                                            {\n                                                let lastValue_6 := mload(add(value0_4, srcOffset_6))\n                                                sstore(dstPtr_6, and(lastValue_6, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 33:3766:3773  \"$._name\" */ _48, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), /** @src 25:4805:4806  \"1\" */ _36))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_12 := 0\n                                            if newLen_6\n                                            {\n                                                value_12 := mload(add(value0_4, srcOffset_6))\n                                            }\n                                            sstore(/** @src 33:3766:3773  \"$._name\" */ _48, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_12, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6)))\n                                        }\n                                        let newLen_7 := mload(memPtr_4)\n                                        if gt(newLen_7, _32)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 36)\n                                        }\n                                        /// @src 33:3790:3800  \"$._version\"\n                                        let _52 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _53 := extract_byte_array_length(sload(/** @src 33:3790:3800  \"$._version\" */ _52))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if gt(_53, _40)\n                                        {\n                                            mstore(0, /** @src 33:3790:3800  \"$._version\" */ _52)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let _54 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                            let deleteStart_7 := add(_54, shr(5, add(newLen_7, _40)))\n                                            if lt(newLen_7, 32) { deleteStart_7 := _54 }\n                                            let _55 := add(_54, shr(5, add(_53, _40)))\n                                            let start_7 := deleteStart_7\n                                            for { }\n                                            lt(start_7, _55)\n                                            {\n                                                start_7 := add(start_7, /** @src 25:4805:4806  \"1\" */ _36)\n                                            }\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            { sstore(start_7, 0) }\n                                        }\n                                        let srcOffset_7 := 0\n                                        srcOffset_7 := 32\n                                        switch gt(newLen_7, _40)\n                                        case 1 {\n                                            let loopEnd_4 := and(newLen_7, not(31))\n                                            mstore(0, /** @src 33:3790:3800  \"$._version\" */ _52)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dstPtr_7 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                            let i_8 := 0\n                                            for { } lt(i_8, loopEnd_4) { i_8 := add(i_8, 32) }\n                                            {\n                                                sstore(dstPtr_7, mload(add(memPtr_4, srcOffset_7)))\n                                                dstPtr_7 := add(dstPtr_7, /** @src 25:4805:4806  \"1\" */ _36)\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                srcOffset_7 := add(srcOffset_7, 32)\n                                            }\n                                            if lt(loopEnd_4, newLen_7)\n                                            {\n                                                let lastValue_7 := mload(add(memPtr_4, srcOffset_7))\n                                                sstore(dstPtr_7, and(lastValue_7, not(shr(and(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), 248), not(0)))))\n                                            }\n                                            sstore(/** @src 33:3790:3800  \"$._version\" */ _52, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), /** @src 25:4805:4806  \"1\" */ _36))\n                                        }\n                                        default /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        {\n                                            let value_13 := 0\n                                            if newLen_7\n                                            {\n                                                value_13 := mload(add(memPtr_4, srcOffset_7))\n                                            }\n                                            sstore(/** @src 33:3790:3800  \"$._version\" */ _52, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_13, not(shr(shl(/** @src 27:2895:2902  \"$._name\" */ 3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), not(0)))), shl(/** @src 25:4805:4806  \"1\" */ _36, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7)))\n                                        }\n                                        sstore(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                        sstore(/** @src 33:3902:3918  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                        /// @src 25:6893:6969  \"modifier onlyInitializing() {...\"\n                                        fun_checkInitializing()\n                                        /// @src 81:1407:1449  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n                                        pop(fun_grantRole_31547(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                        /// @src 81:1459:1494  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n                                        pop(fun_grantRole_31548(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                        /// @src 81:1504:1539  \"_grantRole(MINTER_ROLE, msg.sender)\"\n                                        pop(fun_grantRole_31549(/** @src 81:1438:1448  \"msg.sender\" */ caller()))\n                                        /// @src 25:5066:5167  \"if (isTopLevelCall) {...\"\n                                        if _35\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            sstore(/** @src 25:8837:8901  \"assembly {...\" */ _33, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 25:8837:8901  \"assembly {...\" */ _33), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                            /// @src 25:5142:5156  \"Initialized(1)\"\n                                            let _56 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            mstore(_56, /** @src 25:4805:4806  \"1\" */ _36)\n                                            /// @src 25:5142:5156  \"Initialized(1)\"\n                                            log1(_56, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 25:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x4f1ef286 {\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_5 := abi_decode_address()\n                                        let offset_2 := calldataload(36)\n                                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                                        let array := abi_decode_available_length_string(add(offset_2, 36), calldataload(add(4, offset_2)), calldatasize())\n                                        let _57 := sub(shl(160, 1), 1)\n                                        /// @src 26:4671:4694  \"address(this) == __self\"\n                                        let _58 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 26:4688:4694  \"__self\" */ loadimmutable(\"47263\"), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57)\n                                        /// @src 26:4671:4791  \"address(this) == __self || // Must be called through delegatecall...\"\n                                        let expr_10 := /** @src 26:4671:4694  \"address(this) == __self\" */ eq(/** @src 26:4679:4683  \"this\" */ address(), /** @src 26:4671:4694  \"address(this) == __self\" */ _58)\n                                        /// @src 26:4671:4791  \"address(this) == __self || // Must be called through delegatecall...\"\n                                        if iszero(expr_10)\n                                        {\n                                            expr_10 := /** @src 26:4749:4791  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57), /** @src 26:4749:4791  \"ERC1967Utils.getImplementation() != __self\" */ _58))\n                                        }\n                                        /// @src 26:4654:4905  \"if (...\"\n                                        if expr_10\n                                        {\n                                            /// @src 26:4865:4894  \"UUPSUnauthorizedCallContext()\"\n                                            let _59 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 26:4865:4894  \"UUPSUnauthorizedCallContext()\"\n                                            mstore(_59, shl(225, 0x703e46dd))\n                                            revert(_59, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole_31562()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _60 := and(/** @src 26:6151:6187  \"IERC1822Proxiable(newImplementation)\" */ value0_5, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57)\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        let _61 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        mstore(_61, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(224, 0x52d1902d))\n                                        let _62 := 32\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        let trySuccessCondition := staticcall(gas(), _60, _61, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4, /** @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _61, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62)\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        let expr_11 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0\n                                        /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                        if trySuccessCondition\n                                        {\n                                            let _63 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62\n                                            /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                            if gt(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62, /** @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _63 := returndatasize() }\n                                            finalize_allocation(_61, _63)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            if slt(sub(/** @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_61, _63), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _61), _62) { revert(0, 0) }\n                                            /// @src 26:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                            expr_11 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_61)\n                                        }\n                                        /// @src 26:6147:6584  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                                        switch iszero(trySuccessCondition)\n                                        case 0 {\n                                            /// @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                                            let _64 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                                            /// @src 26:6241:6361  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                                            if /** @src 26:6245:6285  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_11, /** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64))\n                                            /// @src 26:6241:6361  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                                            {\n                                                /// @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                                let _65 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                                /// @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                                mstore(_65, shl(226, 0x2a875269))\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                mstore(/** @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\" */ add(_65, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), expr_11)\n                                                /// @src 26:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                                revert(_65, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                            }\n                                            /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                                            if /** @src 42:2263:2297  \"newImplementation.code.length == 0\" */ iszero(/** @src 42:2263:2292  \"newImplementation.code.length\" */ extcodesize(value0_5))\n                                            /// @src 42:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                                            {\n                                                /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                                let _66 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                                /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                                mstore(_66, shl(224, 0x4c9c8ce3))\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                mstore(/** @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ add(_66, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _60)\n                                                /// @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                                revert(_66, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                            }\n                                            sstore(/** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(sload(/** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _60))\n                                            /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                                            let _67 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 42:2922:2949  \"Upgraded(newImplementation)\"\n                                            log2(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, 0, /** @src 42:2922:2949  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _60)\n                                            /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                                            switch /** @src 42:2964:2979  \"data.length > 0\" */ iszero(iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 42:2964:2975  \"data.length\" */ array)))\n                                            case /** @src 42:2960:3108  \"if (data.length > 0) {...\" */ 0 {\n                                                /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                                                if /** @src 42:6648:6661  \"msg.value > 0\" */ iszero(iszero(/** @src 42:6648:6657  \"msg.value\" */ callvalue()))\n                                                /// @src 42:6644:6714  \"if (msg.value > 0) {...\"\n                                                {\n                                                    /// @src 42:6684:6703  \"ERC1967NonPayable()\"\n                                                    mstore(_67, shl(224, 0xb398979f))\n                                                    revert(_67, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                                }\n                                            }\n                                            default /// @src 42:2960:3108  \"if (data.length > 0) {...\"\n                                            {\n                                                /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                                                let expr_component := delegatecall(gas(), value0_5, add(array, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62), /** @src 53:4255:4280  \"target.delegatecall(data)\" */ mload(array), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, 0)\n                                                /// @src 53:4255:4280  \"target.delegatecall(data)\"\n                                                let data := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0\n                                                switch returndatasize()\n                                                case 0 { data := 96 }\n                                                default {\n                                                    let _68 := returndatasize()\n                                                    let _69 := array_allocation_size_string(_68)\n                                                    let memPtr_5 := mload(64)\n                                                    finalize_allocation(memPtr_5, _69)\n                                                    mstore(memPtr_5, _68)\n                                                    data := memPtr_5\n                                                    returndatacopy(add(memPtr_5, _62), 0, returndatasize())\n                                                }\n                                                /// @src 53:4297:4352  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                                pop(fun_verifyCallResultFromTarget(value0_5, expr_component, /** @src 53:4255:4280  \"target.delegatecall(data)\" */ data))\n                                            }\n                                        }\n                                        default /// @src 26:6147:6584  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                                        {\n                                            /// @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                            let _70 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                            mstore(_70, /** @src 42:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\" */ add(_70, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _60)\n                                            /// @src 26:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                            revert(_70, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                        return(0, 0)\n                                    }\n                                    case 0x52d1902d {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 26:5090:5235  \"if (address(this) != __self) {...\"\n                                        if /** @src 26:5094:5117  \"address(this) != __self\" */ iszero(eq(/** @src 26:5102:5106  \"this\" */ address(), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 26:5111:5117  \"__self\" */ loadimmutable(\"47263\"), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))))\n                                        /// @src 26:5090:5235  \"if (address(this) != __self) {...\"\n                                        {\n                                            /// @src 26:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                            let _71 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 26:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                            mstore(_71, /** @src 26:4865:4894  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                                            /// @src 26:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                            revert(_71, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                        let memPos_7 := mload(64)\n                                        mstore(memPos_7, /** @src 42:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(memPos_7, 32)\n                                    }\n                                    case 0x5a47a1a7 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value_14 := calldataload(4)\n                                        let _72 := iszero(iszero(value_14))\n                                        if iszero(eq(value_14, _72)) { revert(0, 0) }\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole_31562()\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let value_15 := and(sload(0), not(255))\n                                        sstore(0, or(value_15, and(_72, 255)))\n                                        /// @src 81:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\"\n                                        let _73 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_73, _72)\n                                        /// @src 81:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\"\n                                        log1(_73, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 81:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\" */ 0xcfea93b2060af4c4737eb6d7b0d85428b120e6613299f9b6d7703a689c81d0dc)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x5c975abb {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let value_16 := and(sload(/** @src 32:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff)\n                                        let memPos_8 := mload(64)\n                                        mstore(memPos_8, iszero(iszero(value_16)))\n                                        return(memPos_8, 32)\n                                    }\n                                    case 0x63ac5d97 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_9 := mload(64)\n                                        mstore(memPos_9, /** @src 81:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(memPos_9, 32)\n                                    }\n                                    case 0x70a08231 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 27:2326:2389  \"assembly {...\" */ 37439836327923360225337895871394760624280537466773280374265222508165906222592)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _74 := sload(keccak256(0, 64))\n                                        let memPos_10 := mload(64)\n                                        mstore(memPos_10, _74)\n                                        return(memPos_10, 32)\n                                    }\n                                    case 0x79cc6790 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_6 := abi_decode_address()\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole_31555()\n                                        /// @src 81:3752:3758  \"amount\"\n                                        fun_burn(value0_6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                        return(0, 0)\n                                    }\n                                    case 0x7ecebe00 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 31:972:1036  \"assembly {...\" */ 41026498920877473550552694860415970151284396403628511442111957027090812156672)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _75 := sload(keccak256(0, 64))\n                                        let memPos_11 := mload(64)\n                                        mstore(memPos_11, _75)\n                                        return(memPos_11, 32)\n                                    }\n                                    case 0x8456cb59 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole_31553()\n                                        /// @src 32:2281:2353  \"modifier whenNotPaused() {...\"\n                                        fun_requireNotPaused()\n                                        /// @src 32:1237:1303  \"assembly {...\"\n                                        let _76 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(/** @src 32:1237:1303  \"assembly {...\" */ _76, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(sload(/** @src 32:1237:1303  \"assembly {...\" */ _76), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)), /** @src 32:3496:3500  \"true\" */ 0x01))\n                                        /// @src 32:3515:3535  \"Paused(_msgSender())\"\n                                        let _77 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        mstore(_77, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                        /// @src 32:3515:3535  \"Paused(_msgSender())\"\n                                        log1(_77, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 32:3515:3535  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x84b0196e {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 33:5777:5820  \"$._hashedName == 0 && $._hashedVersion == 0\"\n                                        let expr_12 := /** @src 33:5777:5795  \"$._hashedName == 0\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600))\n                                        /// @src 33:5777:5820  \"$._hashedName == 0 && $._hashedVersion == 0\"\n                                        if expr_12\n                                        {\n                                            expr_12 := /** @src 33:5799:5820  \"$._hashedVersion == 0\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 33:5799:5815  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101))\n                                        }\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        if iszero(expr_12)\n                                        {\n                                            let memPtr_6 := mload(64)\n                                            mstore(memPtr_6, shl(229, 4594637))\n                                            mstore(add(memPtr_6, 4), 32)\n                                            mstore(add(memPtr_6, 36), 21)\n                                            mstore(add(memPtr_6, 68), \"EIP712: Uninitialized\")\n                                            revert(memPtr_6, 100)\n                                        }\n                                        let converted := copy_array_from_storage_to_memory_string()\n                                        let converted_1 := copy_array_from_storage_to_memory_string_31571()\n                                        let memPtr_7 := mload(64)\n                                        let _78 := 0x20\n                                        let newFreePtr := add(memPtr_7, _78)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_7))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                        mstore(memPtr_7, 0)\n                                        let memPos_12 := mload(64)\n                                        mstore(memPos_12, shl(248, 15))\n                                        mstore(add(memPos_12, _78), 224)\n                                        let tail := abi_encode_string(converted, add(memPos_12, 224))\n                                        mstore(add(memPos_12, 64), sub(tail, memPos_12))\n                                        let tail_1 := abi_encode_string(converted_1, tail)\n                                        mstore(add(memPos_12, 96), /** @src 33:5965:5978  \"block.chainid\" */ chainid())\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(add(memPos_12, 128), /** @src 33:6000:6004  \"this\" */ address())\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(add(memPos_12, 160), 0)\n                                        mstore(add(memPos_12, 192), sub(tail_1, memPos_12))\n                                        let pos := tail_1\n                                        let length_1 := mload(memPtr_7)\n                                        mstore(tail_1, length_1)\n                                        pos := add(tail_1, _78)\n                                        let srcPtr := newFreePtr\n                                        let i_9 := 0\n                                        for { } lt(i_9, length_1) { i_9 := add(i_9, 1) }\n                                        {\n                                            mstore(pos, mload(srcPtr))\n                                            pos := add(pos, _78)\n                                            srcPtr := add(srcPtr, _78)\n                                        }\n                                        return(memPos_12, sub(pos, memPos_12))\n                                    }\n                                    case 0x91d14854 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value1_4 := abi_decode_address_31541()\n                                        mstore(0, calldataload(4))\n                                        mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _79 := keccak256(0, 64)\n                                        mstore(0, and(value1_4, sub(shl(160, 1), 1)))\n                                        mstore(32, _79)\n                                        let value_17 := and(sload(keccak256(0, 64)), 0xff)\n                                        let memPos_13 := mload(64)\n                                        mstore(memPos_13, iszero(iszero(value_17)))\n                                        return(memPos_13, 32)\n                                    }\n                                    case 0x95d89b41 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPtr_8 := mload(64)\n                                        let ret_1 := 0\n                                        /// @src 27:3400:3409  \"$._symbol\"\n                                        let _80 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let slotValue_1 := sload(/** @src 27:3400:3409  \"$._symbol\" */ _80)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let length_2 := extract_byte_array_length(slotValue_1)\n                                        mstore(memPtr_8, length_2)\n                                        let _81 := 0x20\n                                        let _82 := 1\n                                        switch and(slotValue_1, _82)\n                                        case 0 {\n                                            mstore(add(memPtr_8, _81), and(slotValue_1, not(255)))\n                                            ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_2)))), _81)\n                                        }\n                                        case 1 {\n                                            mstore(0, /** @src 27:3400:3409  \"$._symbol\" */ _80)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let dataPos_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                            let i_10 := 0\n                                            for { } lt(i_10, length_2) { i_10 := add(i_10, _81) }\n                                            {\n                                                mstore(add(add(memPtr_8, i_10), _81), sload(dataPos_1))\n                                                dataPos_1 := add(dataPos_1, _82)\n                                            }\n                                            ret_1 := add(add(memPtr_8, i_10), _81)\n                                        }\n                                        finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                                        let memPos_14 := mload(64)\n                                        mstore(memPos_14, _81)\n                                        return(memPos_14, sub(abi_encode_string(memPtr_8, add(memPos_14, _81)), memPos_14))\n                                    }\n                                    case 0xa217fddf {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_15 := mload(64)\n                                        mstore(memPos_15, 0)\n                                        return(memPos_15, 32)\n                                    }\n                                    case 0xa9059cbb {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_7 := abi_decode_address()\n                                        /// @src 32:2281:2353  \"modifier whenNotPaused() {...\"\n                                        fun_requireNotPaused()\n                                        /// @src 81:2448:2686  \"if (_inPrivateTransferMode) {...\"\n                                        if /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(0), 0xff)\n                                        /// @src 81:2448:2686  \"if (_inPrivateTransferMode) {...\"\n                                        {\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(0, /** @src 81:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            let _83 := keccak256(0, 64)\n                                            mstore(0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(32, _83)\n                                            if iszero(and(sload(keccak256(0, 64)), 0xff))\n                                            {\n                                                let memPtr_9 := mload(64)\n                                                mstore(memPtr_9, shl(229, 4594637))\n                                                revert(memPtr_9, sub(abi_encode_stringliteral(add(memPtr_9, 4)), memPtr_9))\n                                            }\n                                        }\n                                        /// @src 27:4911:4916  \"value\"\n                                        fun_transfer(/** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 27:4911:4916  \"value\" */ value0_7, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                        let memPos_16 := mload(64)\n                                        mstore(memPos_16, 1)\n                                        return(memPos_16, 32)\n                                    }\n                                    case 0xad3cb1cc {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPtr_10 := mload(64)\n                                        finalize_allocation_49957(memPtr_10)\n                                        mstore(memPtr_10, 5)\n                                        mstore(add(memPtr_10, 32), \"5.0.0\")\n                                        let memPos_17 := mload(64)\n                                        mstore(memPos_17, 32)\n                                        return(memPos_17, sub(abi_encode_string(memPtr_10, add(memPos_17, 32)), memPos_17))\n                                    }\n                                    case 0xd505accf {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                                        let value0_8 := abi_decode_address()\n                                        let value1_5 := abi_decode_address_31541()\n                                        let value_18 := calldataload(68)\n                                        let value_19 := calldataload(100)\n                                        let value_20 := calldataload(132)\n                                        if iszero(eq(value_20, and(value_20, 0xff))) { revert(0, 0) }\n                                        /// @src 29:2294:2391  \"if (block.timestamp > deadline) {...\"\n                                        if /** @src 29:2298:2324  \"block.timestamp > deadline\" */ gt(/** @src 29:2298:2313  \"block.timestamp\" */ timestamp(), /** @src 29:2298:2324  \"block.timestamp > deadline\" */ value_19)\n                                        /// @src 29:2294:2391  \"if (block.timestamp > deadline) {...\"\n                                        {\n                                            /// @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                            let _84 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                            mstore(_84, shl(225, 0x313c8981))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\" */ add(_84, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), value_19)\n                                            /// @src 29:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                            revert(_84, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                        let _85 := sub(shl(160, 1), 1)\n                                        let _86 := and(value0_8, _85)\n                                        mstore(0, _86)\n                                        mstore(32, /** @src 31:972:1036  \"assembly {...\" */ 41026498920877473550552694860415970151284396403628511442111957027090812156672)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let dataSlot_1 := keccak256(0, 64)\n                                        let _87 := sload(/** @src 31:1954:1972  \"$._nonces[owner]++\" */ dataSlot_1)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        sstore(dataSlot_1, add(/** @src 31:1954:1972  \"$._nonces[owner]++\" */ _87, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1))\n                                        /// @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                        let expr_mpos := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                        let _88 := add(expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32)\n                                        mstore(_88, /** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64), _86)\n                                        mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 96), and(value1_5, _85))\n                                        mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 128), value_18)\n                                        mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 160), _87)\n                                        mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 192), value_19)\n                                        /// @src 29:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                        mstore(expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 192)\n                                        let newFreePtr_1 := add(expr_mpos, 224)\n                                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr_1)\n                                        /// @src 29:2422:2511  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                        let _89 := keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _88, mload(/** @src 29:2422:2511  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                                        /// @src 33:4094:4117  \"_buildDomainSeparator()\"\n                                        let _90 := fun_buildDomainSeparator()\n                                        /// @src 59:3515:3748  \"assembly {...\"\n                                        let usr$ptr := mload(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64)\n                                        /// @src 59:3515:3748  \"assembly {...\"\n                                        mstore(usr$ptr, \"\\x19\\x01\")\n                                        mstore(add(usr$ptr, 0x02), _90)\n                                        mstore(add(usr$ptr, 0x22), _89)\n                                        /// @src 58:6967:6992  \"tryRecover(hash, v, r, s)\"\n                                        let expr_component_1, expr_component_2, expr_component_3 := fun_tryRecover(/** @src 59:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 58:6967:6992  \"tryRecover(hash, v, r, s)\" */ value_20, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(164), calldataload(196))\n                                        /// @src 58:7021:7029  \"errorArg\"\n                                        fun_throwError(expr_component_2, expr_component_3)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        let _91 := and(/** @src 29:2635:2650  \"signer != owner\" */ expr_component_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _85)\n                                        /// @src 29:2631:2719  \"if (signer != owner) {...\"\n                                        if /** @src 29:2635:2650  \"signer != owner\" */ iszero(eq(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _91, _86))\n                                        /// @src 29:2631:2719  \"if (signer != owner) {...\"\n                                        {\n                                            /// @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                            let _92 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                            mstore(_92, shl(225, 0x25c00723))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\" */ add(_92, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _91)\n                                            mstore(/** @src 29:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\" */ _92, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), _86)\n                                            /// @src 29:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                            revert(_92, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                        }\n                                        /// @src 27:10380:10384  \"true\"\n                                        fun_approve(value0_8, value1_5, value_18)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0xd5391393 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_18 := mload(64)\n                                        mstore(memPos_18, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(memPos_18, 32)\n                                    }\n                                    case 0xd547741f {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value_21 := calldataload(4)\n                                        let value1_6 := abi_decode_address_31541()\n                                        mstore(0, value_21)\n                                        mstore(32, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                        /// @src 24:3202:3206  \"role\"\n                                        fun_checkRole(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 24:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1)))\n                                        /// @src 24:5767:5793  \"_revokeRole(role, account)\"\n                                        pop(fun_revokeRole(value_21, value1_6))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0xdd62ed3e {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_9 := abi_decode_address()\n                                        let _93 := abi_decode_address_31541()\n                                        /// @src 27:5162:5182  \"$._allowances[owner]\"\n                                        let _94 := mapping_index_access_mapping_address_bool_of_address(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ value0_9)\n                                        mstore(0, and(_93, sub(shl(160, 1), 1)))\n                                        mstore(0x20, _94)\n                                        let _95 := sload(keccak256(0, 64))\n                                        let memPos_19 := mload(64)\n                                        mstore(memPos_19, _95)\n                                        return(memPos_19, 0x20)\n                                    }\n                                    case 0xdfbaefb1 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let value_22 := and(sload(0), 0xff)\n                                        let memPos_20 := mload(64)\n                                        mstore(memPos_20, iszero(iszero(value_22)))\n                                        return(memPos_20, 32)\n                                    }\n                                    case 0xe63ab1e9 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_21 := mload(64)\n                                        mstore(memPos_21, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        return(memPos_21, 32)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_encode_string(value, pos) -> end\n                            {\n                                let length := mload(value)\n                                mstore(pos, length)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                for { } lt(i, length) { i := add(i, 0x20) }\n                                {\n                                    let _1 := 0x20\n                                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                                }\n                                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_address_31541() -> value\n                            {\n                                value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function finalize_allocation_49957(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 64)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation(memPtr, size)\n                            {\n                                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function array_allocation_size_string(length) -> size\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                size := add(and(add(length, 31), not(31)), 0x20)\n                            }\n                            function abi_decode_available_length_string(src, length, end) -> array\n                            {\n                                let _1 := array_allocation_size_string(length)\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, _1)\n                                array := memPtr\n                                mstore(memPtr, length)\n                                if gt(add(src, length), end)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                calldatacopy(add(memPtr, 0x20), src, length)\n                                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            function abi_decode_string(offset, end) -> array\n                            {\n                                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                                array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n                            }\n                            function mapping_index_access_mapping_address_bool_of_address(key) -> dataSlot\n                            {\n                                mstore(0, and(key, sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 27:5162:5175  \"$._allowances\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                dataSlot := keccak256(0, 0x40)\n                            }\n                            /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                            function fun_checkRole_31553()\n                            {\n                                /// @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\"\n                                let _1 := 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _2)\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    mstore(_3, shl(224, 0xe2517d3f))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                }\n                            }\n                            /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                            function fun_checkRole_31555()\n                            {\n                                /// @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                                let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _2)\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    mstore(_3, shl(224, 0xe2517d3f))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                }\n                            }\n                            /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                            function fun_checkRole_31562()\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := 0\n                                mstore(_1, _1)\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _2 := keccak256(_1, 0x40)\n                                mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _2)\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, 0x40)), 0xff))\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    mstore(_3, shl(224, 0xe2517d3f))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), _1)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                }\n                            }\n                            /// @ast-id 46756 @src 24:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                            function fun_checkRole(var_role)\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _1)\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                if /** @src 24:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                                /// @src 24:4464:4572  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    mstore(_2, shl(224, 0xe2517d3f))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(add(/** @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), var_role)\n                                    /// @src 24:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                                    revert(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                }\n                            }\n                            /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                            function fun_grantRole_31547(var_account) -> var\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := 0\n                                mstore(_1, _1)\n                                /// @src 24:2887:2958  \"assembly {...\"\n                                let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _3 := keccak256(_1, 0x40)\n                                let _4 := and(var_account, sub(shl(160, 1), 1))\n                                mstore(_1, _4)\n                                mstore(0x20, _3)\n                                /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, 0x40)), 0xff))\n                                case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                    /// @src 24:7628:7640  \"return false\"\n                                    var := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1\n                                    /// @src 24:7628:7640  \"return false\"\n                                    leave\n                                }\n                                default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(_1, _1)\n                                    mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _5 := keccak256(_1, 0x40)\n                                    mstore(_1, _4)\n                                    mstore(0x20, _5)\n                                    let dataSlot := keccak256(_1, 0x40)\n                                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                    /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                    log4(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, _1, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, _4, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 24:7586:7597  \"return true\"\n                                    var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                    /// @src 24:7586:7597  \"return true\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                            function fun_grantRole_31548(var_account) -> var\n                            {\n                                /// @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\"\n                                let _1 := 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n                                /// @src -1:-1:-1\n                                let _2 := 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                                /// @src 24:2887:2958  \"assembly {...\"\n                                let _3 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _4 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                let _5 := and(var_account, sub(shl(160, 1), 1))\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                                mstore(0x20, _4)\n                                /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                                case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                    /// @src 24:7628:7640  \"return false\"\n                                    var := /** @src -1:-1:-1 */ _2\n                                    /// @src 24:7628:7640  \"return false\"\n                                    leave\n                                }\n                                default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _2, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _6 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                                    mstore(0x20, _6)\n                                    let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                    /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                    log4(/** @src -1:-1:-1 */ _2, _2, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 81:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 24:7586:7597  \"return true\"\n                                    var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                    /// @src 24:7586:7597  \"return true\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                            function fun_grantRole_31549(var_account) -> var\n                            {\n                                /// @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                                let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                                /// @src -1:-1:-1\n                                let _2 := 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                                /// @src 24:2887:2958  \"assembly {...\"\n                                let _3 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _4 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                let _5 := and(var_account, sub(shl(160, 1), 1))\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                                mstore(0x20, _4)\n                                /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                                case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                    /// @src 24:7628:7640  \"return false\"\n                                    var := /** @src -1:-1:-1 */ _2\n                                    /// @src 24:7628:7640  \"return false\"\n                                    leave\n                                }\n                                default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _2, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _3)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _6 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    mstore(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                                    mstore(0x20, _6)\n                                    let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                    /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                    log4(/** @src -1:-1:-1 */ _2, _2, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 81:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 24:7586:7597  \"return true\"\n                                    var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                    /// @src 24:7586:7597  \"return true\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 46942 @src 24:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                            function fun_grantRole(var_role, var_account) -> var\n                            {\n                                /// @src -1:-1:-1\n                                let _1 := 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                /// @src 24:2887:2958  \"assembly {...\"\n                                let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                let _4 := and(var_account, sub(shl(160, 1), 1))\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                mstore(0x20, _3)\n                                /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                switch /** @src 24:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                                case /** @src 24:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                                    /// @src 24:7628:7640  \"return false\"\n                                    var := /** @src -1:-1:-1 */ _1\n                                    /// @src 24:7628:7640  \"return false\"\n                                    leave\n                                }\n                                default /// @src 24:7432:7651  \"if (!hasRole(role, account)) {...\"\n                                {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                    mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                    mstore(0x20, _5)\n                                    let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 24:7509:7513  \"true\" */ 0x01))\n                                    /// @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                                    log4(/** @src -1:-1:-1 */ _1, _1, /** @src 24:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 24:7586:7597  \"return true\"\n                                    var := /** @src 24:7509:7513  \"true\" */ 0x01\n                                    /// @src 24:7586:7597  \"return true\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 46988 @src 24:7892:8280  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                            function fun_revokeRole(var_role, var_account) -> var\n                            {\n                                /// @src -1:-1:-1\n                                let _1 := 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                /// @src 24:2887:2958  \"assembly {...\"\n                                let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                let _4 := and(var_account, sub(shl(160, 1), 1))\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                mstore(0x20, _3)\n                                /// @src 24:8055:8274  \"if (hasRole(role, account)) {...\"\n                                switch /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff)\n                                case /** @src 24:8055:8274  \"if (hasRole(role, account)) {...\" */ 0 {\n                                    /// @src 24:8251:8263  \"return false\"\n                                    var := /** @src -1:-1:-1 */ _1\n                                    /// @src 24:8251:8263  \"return false\"\n                                    leave\n                                }\n                                default /// @src 24:8055:8274  \"if (hasRole(role, account)) {...\"\n                                {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                                    mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ _2)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    mstore(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                    mstore(0x20, _5)\n                                    let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                    sstore(dataSlot, and(sload(dataSlot), not(255)))\n                                    /// @src 24:8155:8195  \"RoleRevoked(role, account, _msgSender())\"\n                                    log4(/** @src -1:-1:-1 */ _1, _1, /** @src 24:8155:8195  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 24:8209:8220  \"return true\"\n                                    var := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1\n                                    /// @src 24:8209:8220  \"return true\"\n                                    leave\n                                }\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            function extract_byte_array_length(data) -> length\n                            {\n                                length := shr(1, data)\n                                let outOfPlaceEncoding := and(data, 1)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                if eq(outOfPlaceEncoding, lt(length, 32))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(0, 0x24)\n                                }\n                            }\n                            function copy_array_from_storage_to_memory_string() -> memPtr\n                            {\n                                memPtr := mload(64)\n                                let ret := /** @src -1:-1:-1 */ 0\n                                /// @src 33:6441:6448  \"$._name\"\n                                let _1 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let slotValue := sload(/** @src 33:6441:6448  \"$._name\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let length := extract_byte_array_length(slotValue)\n                                mstore(memPtr, length)\n                                let _2 := 0x20\n                                let _3 := 1\n                                switch and(slotValue, _3)\n                                case 0 {\n                                    mstore(add(memPtr, _2), and(slotValue, not(255)))\n                                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                                }\n                                case 1 {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 33:6441:6448  \"$._name\" */ _1)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dataPos := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                    let i := /** @src -1:-1:-1 */ 0\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    for { } lt(i, length) { i := add(i, _2) }\n                                    {\n                                        mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                        dataPos := add(dataPos, _3)\n                                    }\n                                    ret := add(add(memPtr, i), _2)\n                                }\n                                finalize_allocation(memPtr, sub(ret, memPtr))\n                            }\n                            function copy_array_from_storage_to_memory_string_31571() -> memPtr\n                            {\n                                memPtr := mload(64)\n                                let ret := /** @src -1:-1:-1 */ 0\n                                /// @src 33:6826:6836  \"$._version\"\n                                let _1 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let slotValue := sload(/** @src 33:6826:6836  \"$._version\" */ _1)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let length := extract_byte_array_length(slotValue)\n                                mstore(memPtr, length)\n                                let _2 := 0x20\n                                let _3 := 1\n                                switch and(slotValue, _3)\n                                case 0 {\n                                    mstore(add(memPtr, _2), and(slotValue, not(255)))\n                                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                                }\n                                case 1 {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 33:6826:6836  \"$._version\" */ _1)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dataPos := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                    let i := /** @src -1:-1:-1 */ 0\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    for { } lt(i, length) { i := add(i, _2) }\n                                    {\n                                        mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                        dataPos := add(dataPos, _3)\n                                    }\n                                    ret := add(add(memPtr, i), _2)\n                                }\n                                finalize_allocation(memPtr, sub(ret, memPtr))\n                            }\n                            /// @ast-id 47993 @src 27:11224:11711  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                            function fun_approve(var_owner, var_spender, var_value)\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := sub(shl(160, 1), 1)\n                                let _2 := and(/** @src 27:11389:11408  \"owner == address(0)\" */ var_owner, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                                if /** @src 27:11389:11408  \"owner == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                                /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                    let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_3, shl(224, 0xe602df05))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\" */ add(_3, 4), /** @src 27:11406:11407  \"0\" */ 0x00)\n                                    /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                let _4 := and(/** @src 27:11487:11508  \"spender == address(0)\" */ var_spender, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                                if /** @src 27:11487:11508  \"spender == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                    let _5 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_5, shl(225, 0x4a1406b1))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\" */ add(_5, 4), /** @src 27:11406:11407  \"0\" */ 0x00)\n                                    /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_5, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                /// @src 27:11582:11602  \"$._allowances[owner]\"\n                                let _6 := mapping_index_access_mapping_address_bool_of_address(var_owner)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                mstore(0x20, _6)\n                                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), var_value)\n                                /// @src 27:11663:11694  \"Approval(owner, spender, value)\"\n                                let _7 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                mstore(_7, var_value)\n                                /// @src 27:11663:11694  \"Approval(owner, spender, value)\"\n                                log3(_7, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:11663:11694  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _4)\n                            }\n                            /// @ast-id 47907 @src 27:9522:9728  \"function _burn(address account, uint256 value) internal {...\"\n                            function fun_burn(var_account, var_value)\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := and(/** @src 27:9592:9613  \"account == address(0)\" */ var_account, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 27:9588:9677  \"if (account == address(0)) {...\"\n                                if /** @src 27:9592:9613  \"account == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 27:9588:9677  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 27:9636:9666  \"ERC20InvalidSender(address(0))\"\n                                    let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 27:9636:9666  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_2, shl(225, 0x4b637e8f))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:9636:9666  \"ERC20InvalidSender(address(0))\" */ add(_2, 4), /** @src 27:9611:9612  \"0\" */ 0x00)\n                                    /// @src 27:9636:9666  \"ERC20InvalidSender(address(0))\"\n                                    revert(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 27:2326:2389  \"assembly {...\"\n                                let _3 := 37439836327923360225337895871394760624280537466773280374265222508165906222592\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _3)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _4 := sload(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40))\n                                /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                                if /** @src 27:7872:7891  \"fromBalance < value\" */ lt(_4, var_value)\n                                /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _5 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                    /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_5, shl(226, 0x391434e3))\n                                    revert(_5, sub(abi_encode_address_uint256_uint256(add(_5, 4), var_account, _4, var_value), _5))\n                                }\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _3)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), sub(/** @src 27:8123:8142  \"fromBalance - value\" */ _4, var_value))\n                                /// @src 27:8344:8358  \"$._totalSupply\"\n                                let _6 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(/** @src 27:8344:8358  \"$._totalSupply\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(sload(/** @src 27:8344:8358  \"$._totalSupply\" */ _6), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_value))\n                                /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                let _7 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                mstore(_7, var_value)\n                                /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                log3(_7, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 27:7621:8167  \"if (from == address(0)) {...\" */ 0)\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                                mstore(add(headStart, 64), value2)\n                            }\n                            /// @ast-id 48736 @src 33:4130:4321  \"function _buildDomainSeparator() private view returns (bytes32) {...\"\n                            function fun_buildDomainSeparator() -> var\n                            {\n                                /// @src 33:4243:4260  \"_EIP712NameHash()\"\n                                let expr := fun_EIP712NameHash()\n                                /// @src 33:4262:4282  \"_EIP712VersionHash()\"\n                                let expr_1 := fun_EIP712VersionHash()\n                                /// @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                                let expr_mpos := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                                let _1 := add(expr_mpos, 0x20)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(_1, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64), expr)\n                                mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ expr_1)\n                                mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 33:4284:4297  \"block.chainid\" */ chainid())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 33:4307:4311  \"this\" */ address())\n                                /// @src 33:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                                mstore(expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let newFreePtr := add(expr_mpos, /** @src 33:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                                /// @src 33:4204:4314  \"return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\"\n                                var := /** @src 33:4211:4314  \"keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\" */ keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, mload(/** @src 33:4211:4314  \"keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\" */ expr_mpos))\n                            }\n                            /// @ast-id 48897 @src 33:7058:7745  \"function _EIP712NameHash() internal view returns (bytes32) {...\"\n                            function fun_EIP712NameHash() -> var\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := copy_array_from_storage_to_memory_string()\n                                /// @src 33:7230:7248  \"bytes(name).length\"\n                                let expr := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 33:7230:7248  \"bytes(name).length\" */ _1)\n                                /// @src 33:7226:7739  \"if (bytes(name).length > 0) {...\"\n                                switch /** @src 33:7230:7252  \"bytes(name).length > 0\" */ iszero(iszero(expr))\n                                case /** @src 33:7226:7739  \"if (bytes(name).length > 0) {...\" */ 0 {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _2 := sload(/** @src 33:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600)\n                                    /// @src 33:7599:7729  \"if (hashedName != 0) {...\"\n                                    switch /** @src 33:7603:7618  \"hashedName != 0\" */ iszero(iszero(_2))\n                                    case /** @src 33:7599:7729  \"if (hashedName != 0) {...\" */ 0 {\n                                        /// @src 33:7694:7714  \"return keccak256(\\\"\\\")\"\n                                        var := /** @src 33:7701:7714  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n                                        /// @src 33:7694:7714  \"return keccak256(\\\"\\\")\"\n                                        leave\n                                    }\n                                    default /// @src 33:7599:7729  \"if (hashedName != 0) {...\"\n                                    {\n                                        /// @src 33:7638:7655  \"return hashedName\"\n                                        var := _2\n                                        leave\n                                    }\n                                }\n                                default /// @src 33:7226:7739  \"if (bytes(name).length > 0) {...\"\n                                {\n                                    /// @src 33:7268:7297  \"return keccak256(bytes(name))\"\n                                    var := /** @src 33:7275:7297  \"keccak256(bytes(name))\" */ keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(/** @src 33:7275:7297  \"keccak256(bytes(name))\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20), expr)\n                                    /// @src 33:7268:7297  \"return keccak256(bytes(name))\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 48949 @src 33:7966:8689  \"function _EIP712VersionHash() internal view returns (bytes32) {...\"\n                            function fun_EIP712VersionHash() -> var\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := copy_array_from_storage_to_memory_string_31571()\n                                /// @src 33:8147:8168  \"bytes(version).length\"\n                                let expr := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 33:8147:8168  \"bytes(version).length\" */ _1)\n                                /// @src 33:8143:8683  \"if (bytes(version).length > 0) {...\"\n                                switch /** @src 33:8147:8172  \"bytes(version).length > 0\" */ iszero(iszero(expr))\n                                case /** @src 33:8143:8683  \"if (bytes(version).length > 0) {...\" */ 0 {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _2 := sload(/** @src 33:8507:8523  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101)\n                                    /// @src 33:8537:8673  \"if (hashedVersion != 0) {...\"\n                                    switch /** @src 33:8541:8559  \"hashedVersion != 0\" */ iszero(iszero(_2))\n                                    case /** @src 33:8537:8673  \"if (hashedVersion != 0) {...\" */ 0 {\n                                        /// @src 33:8638:8658  \"return keccak256(\\\"\\\")\"\n                                        var := /** @src 33:8645:8658  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n                                        /// @src 33:8638:8658  \"return keccak256(\\\"\\\")\"\n                                        leave\n                                    }\n                                    default /// @src 33:8537:8673  \"if (hashedVersion != 0) {...\"\n                                    {\n                                        /// @src 33:8579:8599  \"return hashedVersion\"\n                                        var := _2\n                                        leave\n                                    }\n                                }\n                                default /// @src 33:8143:8683  \"if (bytes(version).length > 0) {...\"\n                                {\n                                    /// @src 33:8188:8220  \"return keccak256(bytes(version))\"\n                                    var := /** @src 33:8195:8220  \"keccak256(bytes(version))\" */ keccak256(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(/** @src 33:8195:8220  \"keccak256(bytes(version))\" */ _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20), expr)\n                                    /// @src 33:8188:8220  \"return keccak256(bytes(version))\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 50772 @src 53:4625:5207  \"function verifyCallResultFromTarget(...\"\n                            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                            {\n                                /// @src 53:4793:5201  \"if (!success) {...\"\n                                switch /** @src 53:4797:4805  \"!success\" */ iszero(var_success)\n                                case /** @src 53:4793:5201  \"if (!success) {...\" */ 0 {\n                                    /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                    let expr := /** @src 53:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 53:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                    /// @src 53:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                    if expr\n                                    {\n                                        expr := /** @src 53:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 53:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                    }\n                                    /// @src 53:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                    if expr\n                                    {\n                                        /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                        let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                        mstore(_1, shl(224, 0x9996b315))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 53:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                        /// @src 53:5121:5145  \"AddressEmptyCode(target)\"\n                                        revert(_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    /// @src 53:5173:5190  \"return returndata\"\n                                    var_mpos := var_returndata_mpos\n                                    leave\n                                }\n                                default /// @src 53:4793:5201  \"if (!success) {...\"\n                                {\n                                    /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                    switch /** @src 53:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 53:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                    case /** @src 53:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                        /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                        let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 53:6225:6242  \"FailedInnerCall()\"\n                                        mstore(_2, shl(225, 0x0a12f521))\n                                        revert(_2, 4)\n                                    }\n                                    default /// @src 53:5870:6253  \"if (returndata.length > 0) {...\"\n                                    {\n                                        /// @src 53:6046:6188  \"assembly {...\"\n                                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                    }\n                                }\n                            }\n                            /// @ast-id 51539 @src 58:5140:6670  \"function tryRecover(...\"\n                            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                            {\n                                /// @src 58:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                if /** @src 58:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 58:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                                /// @src 58:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                {\n                                    /// @src 58:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var := /** @src 58:6297:6298  \"0\" */ 0x00\n                                    /// @src 58:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_1 := /** @src 58:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                                    /// @src 58:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_2 := var_s\n                                    leave\n                                }\n                                /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                mstore(_1, var_hash)\n                                mstore(add(_1, 32), and(var_v, 0xff))\n                                mstore(add(_1, 64), var_r)\n                                mstore(add(_1, 96), var_s)\n                                /// @src -1:-1:-1\n                                let _2 := 0\n                                /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                mstore(/** @src -1:-1:-1 */ _2, _2)\n                                /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                if iszero(staticcall(gas(), 1, _1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32))\n                                /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                {\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let pos := mload(64)\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 58:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                                /// @src 58:6491:6604  \"if (signer == address(0)) {...\"\n                                if /** @src 58:6495:6515  \"signer == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 58:6495:6515  \"signer == address(0)\" */ _3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 58:6491:6604  \"if (signer == address(0)) {...\"\n                                {\n                                    /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var := /** @src -1:-1:-1 */ _2\n                                    /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_1 := /** @src 58:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                                    /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_2 := /** @src -1:-1:-1 */ _2\n                                    /// @src 58:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    leave\n                                }\n                                /// @src 58:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var := _3\n                                var_1 := /** @src -1:-1:-1 */ _2\n                                /// @src 58:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var_2 := /** @src -1:-1:-1 */ _2\n                            }\n                            /// @ast-id 51624 @src 58:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                            function fun_throwError(var_error, var_errorArg)\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if iszero(lt(var_error, 4))\n                                {\n                                    mstore(/** @src 58:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x21)\n                                    revert(/** @src 58:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x24)\n                                }\n                                /// @src 58:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                                switch /** @src 58:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                                case /** @src 58:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                                    /// @src 58:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                                    switch /** @src 58:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1)\n                                    case /** @src 58:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                        /// @src 58:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                        switch /** @src 58:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 58:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                        case /** @src 58:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                            /// @src 58:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                            if /** @src 58:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 58:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                            /// @src 58:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                            {\n                                                /// @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                                let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                                /// @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                                mstore(_1, shl(226, 0x35e2f383))\n                                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                                mstore(/** @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), var_errorArg)\n                                                /// @src 58:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                                revert(_1, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                            }\n                                        }\n                                        default /// @src 58:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                        {\n                                            /// @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                            let _2 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                            /// @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                            mstore(_2, shl(224, 0xfce698f7))\n                                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                            mstore(/** @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), var_errorArg)\n                                            /// @src 58:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                            revert(_2, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                        }\n                                    }\n                                    default /// @src 58:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                                    {\n                                        /// @src 58:7439:7462  \"ECDSAInvalidSignature()\"\n                                        let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 58:7439:7462  \"ECDSAInvalidSignature()\"\n                                        mstore(_3, shl(224, 0xf645eedf))\n                                        revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                    }\n                                }\n                                default /// @src 58:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                                {\n                                    /// @src 58:7327:7334  \"return;\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 47165 @src 25:7084:7225  \"function _checkInitializing() internal view virtual {...\"\n                            function fun_checkInitializing()\n                            {\n                                /// @src 25:7146:7219  \"if (!_isInitializing()) {...\"\n                                if /** @src 25:7150:7168  \"!_isInitializing()\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, sload(/** @src 25:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff))\n                                /// @src 25:7146:7219  \"if (!_isInitializing()) {...\"\n                                {\n                                    /// @src 25:7191:7208  \"NotInitializing()\"\n                                    let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 25:7191:7208  \"NotInitializing()\"\n                                    mstore(_1, shl(227, 0x1afcd79f))\n                                    revert(_1, 4)\n                                }\n                            }\n                            /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            function abi_encode_stringliteral(headStart) -> tail\n                            {\n                                mstore(headStart, 32)\n                                mstore(add(headStart, 32), 87)\n                                mstore(add(headStart, 64), \"AccessControl: account is missin\")\n                                mstore(add(headStart, 96), \"g transferrer role to transfer i\")\n                                mstore(add(headStart, 128), \"n private transfer mode\")\n                                tail := add(headStart, 160)\n                            }\n                            /// @ast-id 47749 @src 27:6868:7168  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                            function fun_transfer(var_from, var_to, var_value)\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := sub(shl(160, 1), 1)\n                                let _2 := and(/** @src 27:6951:6969  \"from == address(0)\" */ var_from, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 27:6947:7033  \"if (from == address(0)) {...\"\n                                if /** @src 27:6951:6969  \"from == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                                /// @src 27:6947:7033  \"if (from == address(0)) {...\"\n                                {\n                                    /// @src 27:6992:7022  \"ERC20InvalidSender(address(0))\"\n                                    let _3 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 27:6992:7022  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_3, /** @src 27:9636:9666  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:6992:7022  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 27:6967:6968  \"0\" */ 0x00)\n                                    /// @src 27:6992:7022  \"ERC20InvalidSender(address(0))\"\n                                    revert(_3, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                let _4 := and(/** @src 27:7046:7062  \"to == address(0)\" */ var_to, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 27:7042:7128  \"if (to == address(0)) {...\"\n                                if /** @src 27:7046:7062  \"to == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                /// @src 27:7042:7128  \"if (to == address(0)) {...\"\n                                {\n                                    /// @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                                    let _5 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_5, /** @src 27:9110:9142  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 27:6967:6968  \"0\" */ 0x00)\n                                    /// @src 27:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_5, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                /// @src 27:7621:8167  \"if (from == address(0)) {...\"\n                                let _6 := 0\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                                /// @src 27:2326:2389  \"assembly {...\"\n                                let _7 := 37439836327923360225337895871394760624280537466773280374265222508165906222592\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _7)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _8 := sload(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40))\n                                /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                                if /** @src 27:7872:7891  \"fromBalance < value\" */ lt(_8, var_value)\n                                /// @src 27:7868:7983  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _9 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                    /// @src 27:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_9, shl(226, 0x391434e3))\n                                    revert(_9, sub(abi_encode_address_uint256_uint256(add(_9, 4), var_from, _8, var_value), _9))\n                                }\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                                mstore(0x20, /** @src 27:2326:2389  \"assembly {...\" */ _7)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), sub(/** @src 27:8123:8142  \"fromBalance - value\" */ _8, var_value))\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                                let dataSlot := keccak256(/** @src 27:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                                sstore(dataSlot, add(sload(/** @src 27:8557:8581  \"$._balances[to] += value\" */ dataSlot), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_value))\n                                /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                let _10 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                                mstore(_10, var_value)\n                                /// @src 27:8621:8646  \"Transfer(from, to, value)\"\n                                log3(_10, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 27:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                            }\n                            /// @ast-id 48544 @src 32:2905:3033  \"function _requireNotPaused() internal view virtual {...\"\n                            function fun_requireNotPaused()\n                            {\n                                /// @src 32:2966:3027  \"if (paused()) {...\"\n                                if /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 32:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff)\n                                /// @src 32:2966:3027  \"if (paused()) {...\"\n                                {\n                                    /// @src 32:3001:3016  \"EnforcedPause()\"\n                                    let _1 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 32:3001:3016  \"EnforcedPause()\"\n                                    mstore(_1, shl(224, 0xd93c0665))\n                                    revert(_1, 4)\n                                }\n                            }\n                            /// @src 81:2859:3476  \"function transferFrom(...\"\n                            function fun_transferFrom_inner(var_from, var_to, var_amount) -> var\n                            {\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _1 := 0\n                                mstore(_1, /** @src 81:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, /** @src 24:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _2 := 0x40\n                                let _3 := keccak256(_1, _2)\n                                mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _3)\n                                /// @src 81:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\"\n                                switch /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, _2)), 0xff)\n                                case /** @src 81:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\" */ 0 {\n                                    /// @src 81:3144:3324  \"if (_inPrivateTransferMode) {...\"\n                                    if /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(_1), 0xff)\n                                    /// @src 81:3144:3324  \"if (_inPrivateTransferMode) {...\"\n                                    {\n                                        /// @src 81:3186:3313  \"revert(...\"\n                                        let _4 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                        /// @src 81:3186:3313  \"revert(...\"\n                                        mstore(_4, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(229, 4594637))\n                                        /// @src 81:3186:3313  \"revert(...\"\n                                        revert(_4, sub(abi_encode_stringliteral(add(_4, 4)), _4))\n                                    }\n                                }\n                                default /// @src 81:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\"\n                                {\n                                    /// @src 81:3095:3101  \"amount\"\n                                    fun_transfer(var_from, var_to, var_amount)\n                                    /// @src 81:3116:3127  \"return true\"\n                                    var := /** @src 81:3123:3127  \"true\" */ 0x01\n                                    /// @src 81:3116:3127  \"return true\"\n                                    leave\n                                }\n                                /// @src 27:5162:5182  \"$._allowances[owner]\"\n                                let _5 := mapping_index_access_mapping_address_bool_of_address(/** @src 27:12119:12144  \"allowance(owner, spender)\" */ var_from)\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(0x20, _5)\n                                let _6 := sload(keccak256(_1, _2))\n                                /// @src 27:12154:12464  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 27:12158:12195  \"currentAllowance != type(uint256).max\" */ iszero(eq(_6, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0)))\n                                /// @src 27:12154:12464  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 27:12211:12341  \"if (currentAllowance < value) {...\"\n                                    if /** @src 27:12215:12239  \"currentAllowance < value\" */ lt(_6, var_amount)\n                                    /// @src 27:12211:12341  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 27:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _7 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                        /// @src 27:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_7, shl(225, 0x7dc7a0d9))\n                                        revert(_7, sub(abi_encode_address_uint256_uint256(add(_7, 4), /** @src 30:966:976  \"msg.sender\" */ caller(), /** @src 27:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _6, var_amount), _7))\n                                    }\n                                    /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                                    if /** @src 27:11389:11408  \"owner == address(0)\" */ iszero(/** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 27:11389:11408  \"owner == address(0)\" */ var_from, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                    /// @src 27:11385:11474  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                        let _8 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                        /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_8, shl(224, 0xe602df05))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\" */ add(_8, 4), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                        /// @src 27:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_8, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                                    if /** @src 27:11487:11508  \"spender == address(0)\" */ iszero(/** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 27:11483:11573  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                        let _9 := /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                        /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_9, shl(225, 0x4a1406b1))\n                                        /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\" */ add(_9, 4), /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                        /// @src 27:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_9, /** @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    /// @src 27:11582:11602  \"$._allowances[owner]\"\n                                    let _10 := mapping_index_access_mapping_address_bool_of_address(var_from)\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(_1, /** @src 30:966:976  \"msg.sender\" */ caller())\n                                    /// @src 72:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(0x20, _10)\n                                    sstore(keccak256(_1, _2), sub(/** @src 27:12407:12431  \"currentAllowance - value\" */ _6, var_amount))\n                                }\n                                /// @src 81:3441:3447  \"amount\"\n                                fun_transfer(var_from, var_to, var_amount)\n                                /// @src 81:3458:3469  \"return true\"\n                                var := /** @src 27:5162:5175  \"$._allowances\" */ 1\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000815000a\"\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n    }\n}\n","hash":"01001819939b46f463b1dce436df7798d54b299d3ed88bb72ed7bd43e3803aa9","factoryDependencies":{"0100016183c8b793948b6d1447a5b665197f37e9e877dcc6a999b49983117ec7":"src/staking/RewardDistributor.sol:RewardDistributor","010004b7cc874c62a0e1c4414396e50da009a276d1c3b0eec5a0b13519b71dd6":"src/staking/Vester.sol:Vester","010004c9447d24587c984553ea5ba04652f5cc0e40e5c55b488732f2fc34a45d":"test/00_ZFI.t.sol:ZFI_test","01000989790a40c5893cd9aca9148adfd344e6df9128e3a432fd272b5638afe7":"test/02_RewardTracker.t.sol:RewardTracker_Tester"},"id":86}