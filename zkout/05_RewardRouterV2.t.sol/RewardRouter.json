{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"05_RewardRouterV2.t.sol:RewardRouter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[14]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_14\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_248\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_16\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_37\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_159\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_248\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t29, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[1], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_165\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[1], r0, r2\n\tst.1\t128, r2\n\tst.1\t0, r1\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_201\n.BB0_11:\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r3\n\tadd\tr3, r2, r5\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_250\n\tadd\tr5, r0, r11\n.BB0_13:\n\tadd\tstack-[14], r0, r4\n\tsub\tr11, r4, r1\n\tjump\t@.BB0_186\n.BB0_14:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_71\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_162\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_248\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t25, r0, r5\n\tsload\tr5, r4\n\tsub.s!\t@CPI0_26[0], r4, r2\n\tjump.gt\t@.BB0_165\n\tshl.s\t5, r4, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_165\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r4\n\tst.1\t0, r5\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_144\n\tadd\t160, r0, r5\n\tadd\t@CPI0_29[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tr4, r0, stack-[8]\n.BB0_25:\n\tsload\tr6, r10\n\tand!\t1, r10, r3\n\tshr.s\t1, r10, r9\n\tand\t127, r9, r1\n\tadd.eq\tr1, r0, r9\n\tsub.s!\t31, r9, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr10, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_249\n\tld.1\t64, r8\n\tst.1.inc\tr8, r9, r2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_28\n\tsub.s\t256, r0, r3\n\tand\tr10, r3, r3\n\tst.1\tr2, r3\n\tsub!\tr1, r0, r1\n\tadd.ne\t32, r2, r2\n\tjump\t@.BB0_33\n.BB0_28:\n\tadd\tr10, r0, stack-[9]\n\tadd\tr9, r0, stack-[10]\n\tadd\tr8, r0, stack-[11]\n\tadd\tr7, r0, stack-[12]\n\tadd\tr5, r0, stack-[14]\n\tadd\tr6, r0, stack-[13]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\t@CPI0_20[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t2, r2, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r8\n\tadd\tstack-[10], r0, r6\n\tjump.lt\t@.BB0_32\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_31:\n\tadd\t32, r2, r2\n\tadd\tr2, r8, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_31\n.BB0_32:\n\tadd\tr8, r2, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[8], r0, r4\n\tadd\tstack-[13], r0, r6\n.BB0_33:\n\tsub\tr2, r8, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r1\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r1\n\tjump.lt\t@.BB0_25\n\tjump\t@.BB0_143\n.BB0_37:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_145\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_166\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_248\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t27, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_165\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t128, r2\n\tst.1\t0, r4\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_199\n\tadd\t160, r0, r5\n\tadd\t@CPI0_35[0], r0, r6\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, r7\n.BB0_45:\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.gt\t@.BB0_165\n\tadd\tr7, r0, stack-[10]\n\tadd\tr5, r0, stack-[12]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr6, r2\n\tand\t@CPI0_19[0], r2, r2\n\tadd\tr1, r0, stack-[14]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr6, r0, stack-[11]\n\tadd\t1, r6, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, stack-[13]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\t@CPI0_20[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tld\tr1, r2\n\tadd\tstack-[13], r0, r10\n\tsub.s!\t8, r10, r1\n\tjump.lt\t@.BB0_64\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n\tadd\tstack-[8], r0, r9\n.BB0_49:\n\tadd\t224, r9, r3\n\tsload\tr2, r4\n\tand\t@CPI0_33[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t192, r9, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t160, r9, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t128, r9, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t96, r9, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t64, r9, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t32, r9, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr9, r3\n\tadd\t1, r2, r2\n\tadd\t256, r9, r9\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r10, r3\n\tjump.lt\t@.BB0_49\n\tsload\tr2, r2\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_52\n.BB0_51:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr9, r3, r9\n\tor\t1, r1, r1\n.BB0_52:\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[12], r0, r5\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_54\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_66\n.BB0_55:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_56\n.BB0_67:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_68\n.BB0_57:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_58\n.BB0_69:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_70\n.BB0_59:\n\tsub!\tr1, r10, r1\n\tjump.ge\t@.BB0_61\n.BB0_60:\n\tand\t@CPI0_33[0], r2, r1\n\tst.1.inc\tr9, r1, r9\n.BB0_61:\n\tsub\tr9, r8, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r8\n\tst.1.inc\tr5, r4, r5\n\tadd\t2, r6, r6\n\tld.1\t64, r1\n\tadd\t1, r7, r7\n\tsub.s!\tstack-[6], r7, r2\n\tjump.lt\t@.BB0_45\n\tjump\t@.BB0_199\n.BB0_54:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_55\n.BB0_66:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_67\n.BB0_56:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_57\n.BB0_68:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_69\n.BB0_58:\n\tsub!\tr1, r10, r3\n\tjump.ge\t@.BB0_59\n.BB0_70:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr9, r3, r9\n\tadd\t1, r1, r1\n\tsub!\tr1, r10, r1\n\tjump.lt\t@.BB0_60\n\tjump\t@.BB0_61\n.BB0_64:\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n\tadd\tstack-[8], r0, r9\n\tsload\tr2, r2\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_51\n\tjump\t@.BB0_52\n.BB0_71:\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_148\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.eq\t@.BB0_169\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_248\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t30, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t12, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_42[0], r0, r2\n\tst.1\t160, r2\n\tst.1\t224, r2\n\tst.1\t236, r0\n\tst.1\t192, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_20[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[14]\n\tadd\t@CPI0_44[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_20[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_40[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_20[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_81\n\tadd\tr0, r0, r7\n.BB0_80:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_80\n.BB0_81:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_83\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_83:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_187\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r4\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_248\n\tld.1\tr10, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_248\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_258\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[14], r0, r3\n\tjump.eq\t@.BB0_248\n\tld.1\t64, r6\n\tadd\t36, r6, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr1, r2\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1.inc\tr6, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r6, r1\n\tst.1\tr1, r3\n\tadd\t68, r6, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t100, r6, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_93\n\tadd\tr0, r0, r3\n.BB0_92:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_92\n.BB0_93:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, stack-[10]\n\tand\tstack-[10], r1, r1\n\tadd\t@CPI0_20[0], r0, r2\n\tsub.s!\t@CPI0_20[0], r6, r3\n\tadd\tr6, r0, stack-[13]\n\tadd\tr2, r0, r3\n\tadd.lt\tr6, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_20[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_20[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_259\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[13], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tshl.s\t8, r1, r1\n\tand\t@CPI0_48[0], r1, r1\n\tadd\t30, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_49[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tsub.s!\t@CPI0_32[0], r4, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[13], r0, r3\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd\t16, r0, r2\n\tst.1\tr3, r2\n\tadd\t@CPI0_50[0], r0, r3\n\tadd\tstack-[12], r0, r1\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t48, r1, r2\n\tst.1\tr2, r0\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.gt\t@.BB0_165\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_51[0], r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_52[0], r2, r2\n\tld.1\tr1, r1\n\tadd\t@CPI0_20[0], r0, r4\n\tsub.s!\t@CPI0_20[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[14]\n\tadd\t@CPI0_44[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_20[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_40[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_20[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_101\n\tadd\tr0, r0, r7\n.BB0_100:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_100\n.BB0_101:\n\tadd\tr10, r0, r9\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_103\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_103:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_264\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r4\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_248\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_54[0], r1, r1\n\tjump.ge\t@.BB0_248\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_258\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_248\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[13]\n\tadd\t100, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[12], r0, r6\n\tjump.eq\t@.BB0_113\n\tadd\tr0, r0, r3\n.BB0_112:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_112\n.BB0_113:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[10], r1, r1\n\tadd\t@CPI0_20[0], r0, r2\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_20[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_20[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_20[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_269\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[13], r0, r1\n\tst.1\t64, r1\n\tadd\t31, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_55[0], r1, r1\n\tor\tstack-[14], r1, r1\n\tadd\tr3, r0, stack-[13]\n\tsstore\tr3, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_258\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_248\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_20[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_274\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_19[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_258\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_248\n\tld.1\t64, r4\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_20[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_40[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_279\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_258\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_248\n\tld.1\t64, r4\n\tadd\t@CPI0_60[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_20[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_284\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_128:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t26, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_26[0], r5, r2\n\tjump.gt\t@.BB0_165\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_165\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_144\n\tadd\t160, r0, r6\n\tadd\t@CPI0_34[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[7]\n.BB0_133:\n\tsload\tr7, r10\n\tand!\t1, r10, r2\n\tshr.s\t1, r10, r4\n\tand\t127, r4, r1\n\tadd.eq\tr1, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr10, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_249\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_136\n\tsub.s\t256, r0, r2\n\tand\tr10, r2, r2\n\tst.1\tr3, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_140\n.BB0_136:\n\tadd\tr10, r0, stack-[8]\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr9, r0, stack-[11]\n\tadd\tr8, r0, stack-[12]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\t@CPI0_20[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t2, r2, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[12], r0, r8\n\tadd\tstack-[11], r0, r9\n\tadd\tstack-[10], r0, r10\n\tadd\tstack-[9], r0, r11\n\tjump.lt\t@.BB0_140\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_139:\n\tadd\tr11, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r10, r3\n\tjump.lt\t@.BB0_139\n.BB0_140:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r1\n\tst.1.inc\tr6, r9, r6\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_133\n.BB0_143:\n\tld.1\t64, r1\n.BB0_144:\n\tadd\tr1, r0, stack-[14]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_200\n.BB0_145:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t24, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_172\n\tjump\t@.BB0_161\n.BB0_148:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_158\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\t132, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_20[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_153\n\tadd\tr0, r0, r7\n.BB0_152:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_152\n.BB0_153:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_155\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_155:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_191\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_248\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_158:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_159:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t22, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_161\n\tadd\t160, r0, r4\n\tadd\t@CPI0_41[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_176:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_19[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_176\n\tjump\t@.BB0_183\n.BB0_162:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t28, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.le\t@.BB0_198\n.BB0_165:\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_166:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t23, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_177\n\tjump\t@.BB0_161\n.BB0_169:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_248\n\tadd\t21, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_180\n.BB0_161:\n\tadd\t32, r0, r2\n\tjump\t@.BB0_184\n.BB0_172:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_173:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_19[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_173\n\tjump\t@.BB0_183\n.BB0_177:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_36[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_178:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_19[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_178\n\tjump\t@.BB0_183\n.BB0_180:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_18[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_181:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_19[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_181\n.BB0_183:\n\tsub.s\t96, r5, r2\n.BB0_184:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @abi_encode_array_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n.BB0_185:\n\tsub\tr1, r4, r1\n.BB0_186:\n\tadd\t@CPI0_20[0], r0, r2\n\tsub.s!\t@CPI0_20[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_20[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_187:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_190\n\tadd\tr0, r0, r6\n.BB0_189:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_189\n.BB0_190:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_196\n\tjump\t@.BB0_197\n.BB0_191:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_194\n\tadd\tr0, r0, r6\n.BB0_193:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_193\n.BB0_194:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n.BB0_196:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_197:\n\tadd\t@CPI0_20[0], r0, r1\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_198:\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t128, r2\n\tst.1\t0, r4\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_221\n.BB0_199:\n\tadd\tr1, r0, stack-[14]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_struct_FuzzSelector_dyn, @DEFAULT_UNWIND\n.BB0_200:\n\tadd\tstack-[14], r0, r4\n\tjump\t@.BB0_185\n.BB0_201:\n\tadd\t160, r0, stack-[4]\n\tadd\t@CPI0_38[0], r0, stack-[5]\n\tadd\tr0, r0, stack-[3]\n\tjump\t@.BB0_203\n.BB0_202:\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\tstack-[5], r0, r1\n\tadd\t2, r1, stack-[5]\n\tld.1\t64, r3\n\tadd\tstack-[3], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\tstack-[1], r2, r1\n\tjump.ge\t@.BB0_11\n.BB0_203:\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_32[0], r3, r1\n\tjump.gt\t@.BB0_165\n\tadd\tstack-[14], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[5], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_19[0], r1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t1, r3, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_26[0], r5, r2\n\tjump.gt\t@.BB0_165\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_27[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.gt\t@.BB0_165\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[7]\n\tadd\tstack-[6], r0, r2\n\tst.1\tr2, r5\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\t@CPI0_20[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[6], r0, r8\n.BB0_210:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_249\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_216\n\tadd\tr3, r0, stack-[8]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr9, r0, stack-[10]\n\tadd\tr8, r0, stack-[11]\n\tadd\tr7, r0, stack-[12]\n\tadd\tr6, r0, stack-[13]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\t@CPI0_20[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tadd\tstack-[9], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r8\n\tjump.eq\t@.BB0_217\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[10], r0, r9\n\tadd\tstack-[8], r0, r11\n.BB0_215:\n\tadd\tr11, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_215\n\tjump\t@.BB0_218\n.BB0_216:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_218\n.BB0_217:\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[10], r0, r9\n.BB0_218:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_210\n\tjump\t@.BB0_202\n.BB0_221:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_31[0], r0, r5\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, r6\n.BB0_222:\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.gt\t@.BB0_165\n\tadd\tr6, r0, stack-[10]\n\tadd\tr4, r0, stack-[12]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr5, r2\n\tand\t@CPI0_19[0], r2, r2\n\tadd\tr1, r0, stack-[14]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr5, r0, stack-[11]\n\tadd\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, stack-[13]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tadd.ge\t@CPI0_20[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_248\n\tld\tr1, r2\n\tadd\tstack-[13], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_241\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[9], r0, r7\n\tadd\tstack-[8], r0, r8\n.BB0_226:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_33[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_33[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_226\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_229\n.BB0_228:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_229:\n\tadd\tstack-[12], r0, r4\n\tadd\tstack-[11], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_231\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_243\n.BB0_232:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_233\n.BB0_244:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_245\n.BB0_234:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_235\n.BB0_246:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_247\n.BB0_236:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_238\n.BB0_237:\n\tand\t@CPI0_33[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_238:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tadd\tstack-[14], r0, r3\n\tjump.gt\t@.BB0_165\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_165\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr4, r3, r4\n\tadd\t2, r5, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[6], r6, r2\n\tjump.lt\t@.BB0_222\n\tjump\t@.BB0_199\n.BB0_231:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_232\n.BB0_243:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_244\n.BB0_233:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_234\n.BB0_245:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_246\n.BB0_235:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_236\n.BB0_247:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_33[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_237\n\tjump\t@.BB0_238\n.BB0_241:\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[9], r0, r7\n\tadd\tstack-[8], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_228\n\tjump\t@.BB0_229\n.BB0_248:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_249:\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_250:\n\tadd\t160, r0, r3\n\tadd\t64, r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_252\n.BB0_251:\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[13], r6, r1\n\tadd\tr11, r0, r5\n\tjump.ge\t@.BB0_13\n.BB0_252:\n\tsub.s\tstack-[14], r5, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tld.1.inc\tr3, r7, r3\n\tld.1.inc\tr7, r7, r8\n\tand\t@CPI0_19[0], r7, r7\n\tst.1.inc\tr5, r7, r9\n\tld.1\tr8, r7\n\tst.1\tr9, r4\n\tadd\t64, r5, r9\n\tld.1\tr7, r8\n\tst.1\tr9, r8\n\tadd\t96, r5, r9\n\tshl.s\t5, r8, r10\n\tadd\tr10, r9, r11\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB0_251\n\tadd\tr0, r0, r10\n\tjump\t@.BB0_255\n.BB0_254:\n\tadd\t31, r12, r1\n\tsub.s\t32, r0, r13\n\tand\tr1, r13, r1\n\tadd\tr11, r12, r12\n\tst.1\tr12, r0\n\tadd\tr11, r1, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r1\n\tjump.ge\t@.BB0_251\n.BB0_255:\n\tsub\tr11, r5, r12\n\tsub.s\t96, r12, r12\n\tst.1.inc\tr9, r12, r9\n\tadd\t32, r7, r7\n\tld.1\tr7, r12\n\tld.1.inc\tr12, r12, r13\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr12, r0, r14\n\tjump.eq\t@.BB0_254\n\tadd\tr0, r0, r14\n.BB0_257:\n\tadd\tr14, r11, r15\n\tadd\tr13, r14, r1\n\tld.1\tr1, r1\n\tst.1\tr15, r1\n\tadd\t32, r14, r14\n\tsub!\tr14, r12, r1\n\tjump.lt\t@.BB0_257\n\tjump\t@.BB0_254\n.BB0_258:\n\trevert\n.BB0_259:\n\tld.1\t64, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_20[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_262\n\tadd\tr0, r0, r6\n.BB0_261:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_261\n.BB0_262:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n\tjump\t@.BB0_196\n.BB0_264:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_267\n\tadd\tr0, r0, r6\n.BB0_266:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_266\n.BB0_267:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n\tjump\t@.BB0_196\n.BB0_269:\n\tld.1\t64, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_20[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_272\n\tadd\tr0, r0, r6\n.BB0_271:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_271\n.BB0_272:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n\tjump\t@.BB0_196\n.BB0_274:\n\tld.1\t64, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_20[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_277\n\tadd\tr0, r0, r6\n.BB0_276:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_276\n.BB0_277:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n\tjump\t@.BB0_196\n.BB0_279:\n\tld.1\t64, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_20[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_282\n\tadd\tr0, r0, r6\n.BB0_281:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_281\n.BB0_282:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n\tjump\t@.BB0_196\n.BB0_284:\n\tld.1\t64, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_20[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_287\n\tadd\tr0, r0, r6\n.BB0_286:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_286\n.BB0_287:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_197\n\tjump\t@.BB0_196\n.func_end0:\n\nabi_encode_array_address_dyn:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tand\t@CPI1_0[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tret\n.func_end1:\n\nabi_encode_array_struct_FuzzSelector_dyn:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_4\n\tadd\t64, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB2_2\n.BB2_6:\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB2_4\n.BB2_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tand\t@CPI2_0[0], r8, r8\n\tst.1.inc\tr3, r8, r10\n\tld.1\tr9, r8\n\tst.1\tr10, r6\n\tadd\t64, r3, r10\n\tld.1\tr8, r9\n\tst.1\tr10, r9\n\tadd\t96, r3, r3\n\tsub!\tr9, r0, r10\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r10\n.BB2_5:\n\tadd\t32, r8, r8\n\tld.1\tr8, r11\n\tand\t@CPI2_1[0], r11, r11\n\tst.1.inc\tr3, r11, r3\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB2_5\n\tjump\t@.BB2_6\n.BB2_4:\n\tadd\tr3, r0, r1\n\tret\n.func_end2:\n\nabi_encode_array_string_dyn:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_6\n\tsub.s\t32, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB3_2\n.BB3_5:\n\tadd\t31, r8, r9\n\tand\tr9, r6, r9\n\tadd\tr3, r8, r8\n\tst.1\tr8, r0\n\tadd\tr3, r9, r3\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB3_6\n.BB3_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tst.1.inc\tr3, r8, r3\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r10\n.BB3_4:\n\tadd\tr10, r3, r11\n\tadd\tr9, r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB3_4\n\tjump\t@.BB3_5\n.BB3_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__cxa_throw:\n.func_begin5:\n\trevert\n.func_end5:\n\n__farcall:\n.func_begin6:\n.tmp0:\n\tfar_call\tr1, r2, @.BB6_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n__staticcall:\n.func_begin7:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB7_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell 2233625728\nCPI0_3:\n\t.cell 3124842405\nCPI0_4:\n\t.cell 3124842406\nCPI0_5:\n\t.cell 3792478065\nCPI0_6:\n\t.cell 4202047188\nCPI0_7:\n\t.cell 2233625729\nCPI0_8:\n\t.cell 2439649222\nCPI0_9:\n\t.cell 3041954473\nCPI0_10:\n\t.cell 1046363170\nCPI0_11:\n\t.cell 1046363171\nCPI0_12:\n\t.cell 1064470260\nCPI0_13:\n\t.cell 1725540768\nCPI0_14:\n\t.cell 177362148\nCPI0_15:\n\t.cell 517440284\nCPI0_16:\n\t.cell 719206528\nCPI0_17:\n\t.cell 2535301202817642044428229017600\nCPI0_18:\n\t.cell 38878206584692966203415385907871375197469080758325516314230789535345649042549\nCPI0_19:\nCPI1_0:\nCPI2_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_20:\n\t.cell 4294967295\nCPI0_21:\n\t.cell 46361386726410499263322427381369506175992020241588171917386103515624534704128\nCPI0_22:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_23:\n\t.cell 46308022326495007027972728677917914892729792999299745830475596687180801507328\nCPI0_24:\n\t.cell 5387515053331158197795811229696\nCPI0_25:\n\t.cell 2535301200456458802993406410752\nCPI0_26:\nCPI4_0:\n\t.cell 18446744073709551615\nCPI0_27:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_28:\n\t.cell 18446744073709551487\nCPI0_29:\n\t.cell -48719757687822547800745197551118351534541568878739321821808546113428889233771\nCPI0_30:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_31:\n\t.cell 6454973039698199198119942482240540643982028891330163610098731264865829167633\nCPI0_32:\n\t.cell 18446744073709551551\nCPI0_33:\nCPI2_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_34:\n\t.cell 2481041784956016742021570618494952475758789857281704946240779902470294861374\nCPI0_35:\n\t.cell 26616959624788145501257665028759500958019551560565664426117466910078421933505\nCPI0_36:\n\t.cell -26169279673760072341673943167871893214131042372482409454972450661548556448747\nCPI0_37:\n\t.cell -35624623585156310935986566609950774337791491079595188565361216048441042957010\nCPI0_38:\n\t.cell 49422300655976383518971161772042036479724517635858811238160587340303074464591\nCPI0_39:\nCPI4_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_40:\nCPI4_2:\n\t.cell 2852213850513516153367582212096\nCPI0_41:\n\t.cell -18002263324862296164297574372220909754226456243825434961346737007256845270391\nCPI0_42:\n\t.cell 38116642427924036757562528596065906755891459166597288748235269706410704764928\nCPI0_43:\n\t.cell 904625697166532776746648320380374280103671756151054860861505098695288291328\nCPI0_44:\n\t.cell -166923669067369873766191994592930785159943346089370123761369690313261580288\nCPI0_45:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_46:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_47:\n\t.cell -26079055428631999755169999820041264995593315863804083392934812248473178472448\nCPI0_48:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_49:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_50:\n\t.cell 30879740348151907790678364878179638944126621834197393376857661914815177687040\nCPI0_51:\n\t.cell 4294967263\nCPI0_52:\n\t.cell 590295810358705651712\nCPI0_53:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_54:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI0_55:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_56:\n\t.cell 2000000000000000000\nCPI0_57:\n\t.cell -25085042922932715679007901429792258562186342537147911894151979128382061281280\nCPI0_58:\n\t.cell 5387515050969974956360988622848\nCPI0_59:\n\t.cell 2834887728753290660080060877037723411257078492004434445635685037311818465280\nCPI0_60:\n\t.cell -50310961677181293632432861013544852327003941767832756732232405034170119618560\nCPI0_61:\n\t.cell 316912650057057350374175801344\n","methodIdentifiers":{"IS_TEST()":"fa7626d4","excludeArtifacts()":"b5508aa9","excludeContracts()":"e20c9f71","excludeSenders()":"1ed7831c","failed()":"ba414fa6","setUp()":"0a9254e4","targetArtifactSelectors()":"66d9a9a0","targetArtifacts()":"85226c81","targetContracts()":"3f7286f4","targetInterfaces()":"2ade3880","targetSelectors()":"916a17c6","targetSenders()":"3e5e3c23"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.ec5dde33\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/05_RewardRouterV2.t.sol\":\"RewardRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c\",\"dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9cc29c28f49d0b7f7b2f1aa32d8273f8a087bf62eb3fb22d893df824052c25ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42dcb36cb10b878a0d5b20ce3a4a3ba4f51f44d7731a66ac1133c699bc80b31b\",\"dweb:/ipfs/QmY6q7SaHQMLBb3rS6xZdArPaXoskWeqF6oJwUeZ3gKLZj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://744ea187c195e31cb9201e63ca291fca9e623747f54f0ba390b366a6213b8964\",\"dweb:/ipfs/Qmc547qfV4sz65DC9B4okx1HvgxwUzJR7zTfKKbTzL3UQT\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223\",\"urls\":[\"bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669\",\"dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar\"]},\"lib/openzeppelin-foundry-upgrades/src/Defender.sol\":{\"keccak256\":\"0x4ab3fd0138ce11d5c16dffc7b017c965ba30de55898e91e0f64665f8e275d20e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6c5d6fba174dec5c09f86ab4ce1acdb51a0d0f780e56057a177d196e12511d\",\"dweb:/ipfs/QmaajQoYS8nD9GgEiJS6aebwf7pkFBL12Wi1DNHXLzEV9g\"]},\"lib/openzeppelin-foundry-upgrades/src/Options.sol\":{\"keccak256\":\"0x1b7a53fbaba7bd09f3265f97045d1d03670e3fc07fd989eb0243804cad8bdd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f451aa6d928f65e2e243862d72a75df605a3ba943ad6e59e8456effc8bd463c1\",\"dweb:/ipfs/Qmee7sbopLbd7N6docCLrGKwSrWGf7YXzXrTftp72oYEGy\"]},\"lib/openzeppelin-foundry-upgrades/src/Upgrades.sol\":{\"keccak256\":\"0xe4238478559e271b46ffcef23b4b22cc58943b8bbc549fd8eb221205704314b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c4d5f02c2263a8db048e11dca37d2dce3e4ea22c85c133c572aa6c3a6a879b\",\"dweb:/ipfs/QmVcEjehjoaKB5VtFnS3gd6swWr274j4KmFh3etJW6sJvx\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/DefenderDeploy.sol\":{\"keccak256\":\"0x2734b2a84b2e8c3f7d1040cdf6a1cb3d9a565201516892e297b8072f6ac44781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d0ce30498d61aa9150f2723f4cec7e0129a4b01cf04bbfe60aa4591d21918e8\",\"dweb:/ipfs/QmQtiYoNRuiGgiXJDCYr6jB4ybzeRRHrJ2nob4JfnjKwMf\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Utils.sol\":{\"keccak256\":\"0xc82c059c342414970ae59474124c23cc3d08485513ce269c0c1a781a1a0eb33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b93d1847db067a41fd9fb0cee1af8ea72a148d8e38b860b48d2dad8eb00c472b\",\"dweb:/ipfs/QmbGEVvqWv5U56YvwyfjE7z6i5mCvrTK4udS3mSz9udVRw\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Versions.sol\":{\"keccak256\":\"0x38354f4642f80aefbc2805e934eee0c779d6439be14c86465b8ca18d2a3dc543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09b1c891cda7ce69d2c1adad58a3167cf3591efcac68f1225a4e24ecd64b9369\",\"dweb:/ipfs/QmQLnanBWRJKxsBo7xp9qL7qbmsjeubkZkKJ1roSaB4P7v\"]},\"src/ZFI/ZFIToken.sol\":{\"keccak256\":\"0x8029f3aa6ccae93b9bedf6d11a3607cf695d5d29f23675b7fa7c0f0d4f04406c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c5f658cb2b399109827bc8d9ab3c67f1cb165ad2eba773fb20326c8560b134\",\"dweb:/ipfs/QmYzmBv1K3mWgWnbzVwqZ7TC4xJXVKvqzNar4XhECuWDeS\"]},\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\":{\"keccak256\":\"0x39aa813c4e998d1bf443b0bee432d17a7a2dbd0e0349cef31c0b426a0c6ba72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd8d3e1e03dd8313d984a3d18cfe39c15d7a92758d9789b2c828169ee8f8c4fe\",\"dweb:/ipfs/QmXPyofzX8pwiiUHAtHT6W15UoFtc4ajkYSPbGM87xeYj2\"]},\"test/00_ZFI.t.sol\":{\"keccak256\":\"0x030ba234d81f8f7456f7f25b870887d8e34551c425dd7cf9441229cd162eafa3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23a7c18e0a08a68f53a9245e7a1a9696d8e3103f4b621b3b67476d421f38c7c1\",\"dweb:/ipfs/QmRi7235JhXBJWHdgfeteRQipDdV88JB6Mio7w5jcMUnQp\"]},\"test/05_RewardRouterV2.t.sol\":{\"keccak256\":\"0x91a6febde01cadb7ce22e384a9e071ea9d8ba51f66af9694a02c6ead62b7cd64\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://65f9278852e87bc8fb957820f71162a3f78ca33c2552a506835f2b473b61949f\",\"dweb:/ipfs/Qmcm3EXYhgSSRkNeu6tQzX7XGfEQPiHEfpc2yMfDd91nGP\"]}},\"version\":1}","solc_version":"0.8.21","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 13:\"lib/forge-std/src/Test.sol\", 87:\"test/05_RewardRouterV2.t.sol\"\nobject \"RewardRouter_64682\" {\n    code {\n        {\n            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := not(255)\n            sstore(/** @src 3:3166:3170  \"true\" */ 0x0c, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ 0x0c), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2), /** @src 3:3166:3170  \"true\" */ 0x01))\n            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n            sstore(/** @src 13:1038:1042  \"true\" */ 0x1e, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ or(and(sload(/** @src 13:1038:1042  \"true\" */ 0x1e), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2), /** @src 3:3166:3170  \"true\" */ 0x01))\n            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n            let _3 := datasize(\"RewardRouter_64682_deployed\")\n            codecopy(_1, dataoffset(\"RewardRouter_64682_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 13:\"lib/forge-std/src/Test.sol\", 87:\"test/05_RewardRouterV2.t.sol\"\n    object \"RewardRouter_64682_deployed\" {\n        code {\n            {\n                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x0a9254e4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        finalize_allocation_12564(_1)\n                        let _3 := 12\n                        mstore(_1, _3)\n                        let _4 := 32\n                        mstore(add(_1, _4), \"TEAM_ADDRESS\")\n                        /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                        let expr_mpos := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        let i := _2\n                        for { } lt(i, _3) { i := add(i, _4) }\n                        {\n                            mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ i), _4), mload(add(add(_1, i), _4)))\n                        }\n                        mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 44), _2)\n                        /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                        mstore(expr_mpos, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _3)\n                        /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                        finalize_allocation_12564(expr_mpos)\n                        /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                        let _5 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        let _6 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _7 := shl(224, 0xffa18649)\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        mstore(_6, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7)\n                        mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_6, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _5)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _8 := 36\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _9 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        let _10 := staticcall(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _6, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _6, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4)\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        if iszero(_10)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        let expr := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        if _10\n                        {\n                            let _11 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4\n                            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                            if gt(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _11 := returndatasize() }\n                            finalize_allocation(_6, _11)\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_6, _11), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4)\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let value := mload(_6)\n                            if iszero(eq(value, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1))))\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                revert(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, _2)\n                            }\n                            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                            expr := value\n                        }\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        if iszero(extcodesize(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9))\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        {\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        let _12 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _13 := shl(227, 0x18caf8e3)\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        mstore(_12, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _13)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _14 := sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_12, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4), and(expr, _14))\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _12, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64)\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        let _15 := call(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _12, sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_encode_string(_1, add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _12, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68)), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _12), _12, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2)\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        if iszero(_15)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_1 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        if _15\n                        {\n                            finalize_allocation_12558(_12)\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            _2 := _2\n                        }\n                        let _16 := sload(/** @src 87:353:392  \"TEAM_ADDRESS = makeAddr(\\\"TEAM_ADDRESS\\\")\" */ 0x1e)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        sstore(/** @src 87:353:392  \"TEAM_ADDRESS = makeAddr(\\\"TEAM_ADDRESS\\\")\" */ 0x1e, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ or(and(_16, not(sub(shl(168, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 256))), and(shl(8, expr), sub(shl(168, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 256))))\n                        let memPtr := mload(64)\n                        finalize_allocation_12564(memPtr)\n                        let _17 := 16\n                        mstore(memPtr, _17)\n                        mstore(add(memPtr, _4), \"DEPLOYER_ADDRESS\")\n                        /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                        let expr_mpos_1 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        let i_1 := 0\n                        for { } lt(i_1, _17) { i_1 := add(i_1, _4) }\n                        {\n                            mstore(add(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ i_1), _4), mload(add(add(memPtr, i_1), _4)))\n                        }\n                        mstore(add(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 48), 0)\n                        /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                        mstore(expr_mpos_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _17)\n                        /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                        finalize_allocation_12564(expr_mpos_1)\n                        /// @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\"\n                        let _18 := keccak256(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4), mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos_1))\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        let _19 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        mstore(_19, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7)\n                        mstore(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_19, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _18)\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        let _20 := staticcall(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _19, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _19, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4)\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        if iszero(_20)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_2 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_2, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                        let expr_1 := _2\n                        if _20\n                        {\n                            let _21 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4\n                            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                            if gt(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _21 := returndatasize() }\n                            finalize_allocation(_19, _21)\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 4:20344:20363  \"vm.addr(privateKey)\" */ add(_19, _21), /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _19), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _4)\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                revert(_2, _2)\n                            }\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let value_1 := mload(_19)\n                            if iszero(eq(value_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ and(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value_1, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _14)))\n                            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                revert(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, _2)\n                            }\n                            /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                            expr_1 := value_1\n                        }\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        if iszero(extcodesize(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9))\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        {\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        let _22 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        mstore(_22, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _13)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _23 := and(expr_1, _14)\n                        mstore(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ add(_22, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4), _23)\n                        /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _22, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64)\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        let _24 := call(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, _2, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _22, sub(/** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_encode_string(memPtr, add(/** @src 4:20373:20393  \"vm.label(addr, name)\" */ _22, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68)), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _22), _22, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2)\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        if iszero(_24)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_3 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_3, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                        if _24\n                        {\n                            finalize_allocation_12558(_22)\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            if _2 { revert(_2, _2) }\n                        }\n                        let _25 := sload(/** @src 87:402:449  \"DEPLOYER_ADDRESS = makeAddr(\\\"DEPLOYER_ADDRESS\\\")\" */ 0x1f)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        sstore(/** @src 87:402:449  \"DEPLOYER_ADDRESS = makeAddr(\\\"DEPLOYER_ADDRESS\\\")\" */ 0x1f, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ or(and(_25, shl(160, 0xffffffffffffffffffffffff)), _23))\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        if iszero(extcodesize(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9))\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        {\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        let _26 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        mstore(_26, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xc88a5e6d))\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ add(_26, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4), or(and(_25, _2), _23))\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 4:24376:24435  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 4:26787:26804  \"vm.deal(to, give)\" */ _26, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8), /** @src 87:482:489  \"2 ether\" */ 0x1bc16d674ec80000)\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        let _27 := call(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, _2, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _26, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 4:26787:26804  \"vm.deal(to, give)\" */ _26, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2)\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        if iszero(_27)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_4 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_4, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 4:26787:26804  \"vm.deal(to, give)\"\n                        if _27\n                        {\n                            finalize_allocation_12558(_26)\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            if _2 { revert(_2, _2) }\n                        }\n                        let value_2 := and(sload(/** @src 87:402:449  \"DEPLOYER_ADDRESS = makeAddr(\\\"DEPLOYER_ADDRESS\\\")\" */ 0x1f), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _14)\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9))\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        {\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _28 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        mstore(_28, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(225, 0x03223eab))\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(/** @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ add(_28, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4), value_2)\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        let _29 := call(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, _2, /** @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _28, /** @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8, /** @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\" */ _28, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2)\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if iszero(_29)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_5 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_5, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 87:500:531  \"vm.startPrank(DEPLOYER_ADDRESS)\"\n                        if _29\n                        {\n                            finalize_allocation_12558(_28)\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        if iszero(extcodesize(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9))\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        {\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        let _30 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        mstore(_30, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x90c5013b))\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        let _31 := call(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _9, _2, /** @src 87:671:685  \"vm.stopPrank()\" */ _30, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 4, /** @src 87:671:685  \"vm.stopPrank()\" */ _30, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2)\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        if iszero(_31)\n                        {\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let pos_6 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            returndatacopy(pos_6, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 87:671:685  \"vm.stopPrank()\"\n                        if _31\n                        {\n                            finalize_allocation_12558(_30)\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            if _2 { revert(_2, _2) }\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x1ed7831c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_7 := mload(64)\n                        let pos_8 := pos_7\n                        let length := sload(/** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(pos_7, length)\n                        let _32 := 0x20\n                        pos_7 := add(pos_7, _32)\n                        mstore(_2, /** @src 6:2563:2579  \"_excludedSenders\" */ 0x16)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                        let i_2 := _2\n                        for { } lt(i_2, length) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_7, and(sload(srcPtr), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            pos_7 := add(pos_7, _32)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(pos_8, sub(pos_7, pos_8))\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_8), memPos))\n                    }\n                    case 0x2ade3880 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_1 := sload(/** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _33 := array_allocation_size_array_string_dyn(length_1)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _33)\n                        mstore(memPtr_1, length_1)\n                        let mpos := memPtr_1\n                        mpos := add(memPtr_1, 0x20)\n                        let mpos_1 := mpos\n                        mstore(_2, /** @src 6:3485:3504  \"_targetedInterfaces\" */ 0x1d)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                        let i_3 := _2\n                        for { } lt(i_3, length_1) { i_3 := add(i_3, 1) }\n                        {\n                            let memPtr_2 := mload(64)\n                            finalize_allocation_12564(memPtr_2)\n                            mstore(memPtr_2, and(sload(spos), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            let _34 := add(spos, 1)\n                            let length_2 := sload(_34)\n                            let _35 := array_allocation_size_array_string_dyn(length_2)\n                            let memPtr_3 := mload(64)\n                            finalize_allocation(memPtr_3, _35)\n                            mstore(memPtr_3, length_2)\n                            let mpos_2 := memPtr_3\n                            mpos_2 := add(memPtr_3, 0x20)\n                            mstore(0, _34)\n                            let spos_1 := keccak256(0, 0x20)\n                            let i_4 := 0\n                            for { } lt(i_4, length_2) { i_4 := add(i_4, 1) }\n                            {\n                                let memPtr_4 := mload(64)\n                                let ret := 0\n                                let slotValue := sload(spos_1)\n                                let length_3 := ret\n                                length_3 := shr(1, slotValue)\n                                if iszero(and(slotValue, 1))\n                                {\n                                    length_3 := and(length_3, 0x7f)\n                                }\n                                if eq(and(slotValue, 1), lt(length_3, 0x20))\n                                {\n                                    mstore(ret, shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(ret, 0x24)\n                                }\n                                mstore(memPtr_4, length_3)\n                                switch and(slotValue, 1)\n                                case 0 {\n                                    mstore(add(memPtr_4, 0x20), and(slotValue, not(255)))\n                                    ret := add(add(memPtr_4, shl(5, iszero(iszero(length_3)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, spos_1)\n                                    let dataPos := keccak256(0, 0x20)\n                                    let i_5 := 0\n                                    for { } lt(i_5, length_3) { i_5 := add(i_5, 0x20) }\n                                    {\n                                        mstore(add(add(memPtr_4, i_5), 0x20), sload(dataPos))\n                                        dataPos := add(dataPos, 1)\n                                    }\n                                    ret := add(add(memPtr_4, i_5), 0x20)\n                                }\n                                finalize_allocation(memPtr_4, sub(ret, memPtr_4))\n                                mstore(mpos_2, memPtr_4)\n                                mpos_2 := add(mpos_2, 0x20)\n                                spos_1 := add(spos_1, 1)\n                            }\n                            mstore(add(memPtr_2, 0x20), memPtr_3)\n                            mstore(mpos, memPtr_2)\n                            mpos := add(mpos, 0x20)\n                            spos := add(spos, 2)\n                        }\n                        let memPos_1 := mload(64)\n                        let tail := add(memPos_1, 0x20)\n                        mstore(memPos_1, 0x20)\n                        let pos_9 := tail\n                        let length_4 := mload(memPtr_1)\n                        mstore(tail, length_4)\n                        pos_9 := add(memPos_1, 64)\n                        let _36 := 5\n                        let tail_1 := add(add(memPos_1, shl(_36, length_4)), 64)\n                        let srcPtr_1 := mpos_1\n                        let i_6 := _2\n                        for { } lt(i_6, length_4) { i_6 := add(i_6, 1) }\n                        {\n                            mstore(pos_9, add(sub(tail_1, memPos_1), not(63)))\n                            let _37 := mload(srcPtr_1)\n                            let tail_2 := add(tail_1, 64)\n                            mstore(tail_1, and(mload(_37), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            let memberValue0 := mload(add(_37, 0x20))\n                            mstore(add(tail_1, 0x20), 64)\n                            let pos_10 := tail_2\n                            let length_5 := mload(memberValue0)\n                            mstore(tail_2, length_5)\n                            let _38 := 96\n                            pos_10 := add(tail_1, _38)\n                            let tail_3 := add(add(tail_1, shl(_36, length_5)), _38)\n                            let srcPtr_2 := add(memberValue0, 0x20)\n                            let i_7 := _2\n                            for { } lt(i_7, length_5) { i_7 := add(i_7, 1) }\n                            {\n                                mstore(pos_10, add(sub(tail_3, tail_1), not(95)))\n                                tail_3 := abi_encode_string(mload(srcPtr_2), tail_3)\n                                srcPtr_2 := add(srcPtr_2, 0x20)\n                                pos_10 := add(pos_10, 0x20)\n                            }\n                            tail_1 := tail_3\n                            srcPtr_1 := add(srcPtr_1, 0x20)\n                            pos_9 := add(pos_9, 0x20)\n                        }\n                        return(memPos_1, sub(tail_1, memPos_1))\n                    }\n                    case 0x3e5e3c23 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_11 := mload(64)\n                        let pos_12 := pos_11\n                        let length_6 := sload(/** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(pos_11, length_6)\n                        let _39 := 0x20\n                        pos_11 := add(pos_11, _39)\n                        mstore(_2, /** @src 6:3331:3347  \"_targetedSenders\" */ 0x18)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let srcPtr_3 := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                        let i_8 := _2\n                        for { } lt(i_8, length_6) { i_8 := add(i_8, 1) }\n                        {\n                            mstore(pos_11, and(sload(srcPtr_3), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            pos_11 := add(pos_11, _39)\n                            srcPtr_3 := add(srcPtr_3, 1)\n                        }\n                        finalize_allocation(pos_12, sub(pos_11, pos_12))\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, pos_12), memPos_2))\n                    }\n                    case 0x3f7286f4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_13 := mload(64)\n                        let pos_14 := pos_13\n                        let length_7 := sload(/** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(pos_13, length_7)\n                        let _40 := 0x20\n                        pos_13 := add(pos_13, _40)\n                        mstore(_2, /** @src 6:3038:3056  \"_targetedContracts\" */ 0x17)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let srcPtr_4 := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                        let i_9 := _2\n                        for { } lt(i_9, length_7) { i_9 := add(i_9, 1) }\n                        {\n                            mstore(pos_13, and(sload(srcPtr_4), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            pos_13 := add(pos_13, _40)\n                            srcPtr_4 := add(srcPtr_4, 1)\n                        }\n                        finalize_allocation(pos_14, sub(pos_13, pos_14))\n                        let memPos_3 := mload(64)\n                        return(memPos_3, sub(abi_encode_array_address_dyn(memPos_3, pos_14), memPos_3))\n                    }\n                    case 0x66d9a9a0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_8 := sload(/** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _41 := array_allocation_size_array_string_dyn(length_8)\n                        let memPtr_5 := mload(64)\n                        finalize_allocation(memPtr_5, _41)\n                        mstore(memPtr_5, length_8)\n                        let mpos_3 := memPtr_5\n                        mpos_3 := add(memPtr_5, 0x20)\n                        mstore(_2, /** @src 6:2883:2909  \"_targetedArtifactSelectors\" */ 0x1b)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let spos_2 := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                        let i_10 := _2\n                        for { } lt(i_10, length_8) { i_10 := add(i_10, 1) }\n                        {\n                            let memPtr_6 := mload(64)\n                            finalize_allocation_12564(memPtr_6)\n                            mstore(memPtr_6, and(sload(spos_2), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            let _42 := add(spos_2, 1)\n                            let pos_15 := mload(64)\n                            let pos_16 := pos_15\n                            let length_9 := sload(_42)\n                            mstore(pos_15, length_9)\n                            pos_15 := add(pos_15, 0x20)\n                            mstore(_2, _42)\n                            let srcPtr_5 := keccak256(_2, 0x20)\n                            let itemCounter := _2\n                            for { }\n                            lt(add(itemCounter, 7), length_9)\n                            {\n                                itemCounter := add(itemCounter, 8)\n                            }\n                            {\n                                let data := sload(srcPtr_5)\n                                let _43 := shl(224, 0xffffffff)\n                                mstore(pos_15, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 224, data), _43))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _44 := 192\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                mstore(add(pos_15, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_44, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data), _43))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _45 := 160\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                mstore(add(pos_15, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_45, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data), _43))\n                                let _46 := 96\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _47 := 128\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                mstore(add(pos_15, _46), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_47, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data), _43))\n                                mstore(add(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _47), and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _46, data), _43))\n                                mstore(add(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _45), and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64, data), _43))\n                                mstore(add(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _44), and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 0x20, data), _43))\n                                mstore(add(pos_15, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data, _43))\n                                pos_15 := add(pos_15, 256)\n                                srcPtr_5 := add(srcPtr_5, 1)\n                            }\n                            let data_1 := sload(srcPtr_5)\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 224, data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 96, data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64, data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                                itemCounter := add(itemCounter, 1)\n                            }\n                            if lt(itemCounter, length_9)\n                            {\n                                mstore(pos_15, and(data_1, shl(224, 0xffffffff)))\n                                pos_15 := add(pos_15, 0x20)\n                            }\n                            finalize_allocation(pos_16, sub(pos_15, pos_16))\n                            mstore(add(memPtr_6, 0x20), pos_16)\n                            mstore(mpos_3, memPtr_6)\n                            mpos_3 := add(mpos_3, 0x20)\n                            spos_2 := add(spos_2, 2)\n                        }\n                        let memPos_4 := mload(64)\n                        return(memPos_4, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_4, memPtr_5), memPos_4))\n                    }\n                    case 0x85226c81 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_10 := sload(/** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _48 := array_allocation_size_array_string_dyn(length_10)\n                        let memPtr_7 := mload(64)\n                        finalize_allocation(memPtr_7, _48)\n                        mstore(memPtr_7, length_10)\n                        let mpos_4 := memPtr_7\n                        let _49 := 0x20\n                        mpos_4 := add(memPtr_7, _49)\n                        mstore(0, /** @src 6:2707:2725  \"_targetedArtifacts\" */ 0x1a)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let spos_3 := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                        let i_11 := 0\n                        for { } lt(i_11, length_10) { i_11 := add(i_11, 1) }\n                        {\n                            let memPtr_8 := mload(64)\n                            let ret_1 := 0\n                            let slotValue_1 := sload(spos_3)\n                            let length_11 := ret_1\n                            let _50 := 1\n                            length_11 := shr(_50, slotValue_1)\n                            let outOfPlaceEncoding := and(slotValue_1, _50)\n                            if iszero(outOfPlaceEncoding)\n                            {\n                                length_11 := and(length_11, 0x7f)\n                            }\n                            if eq(outOfPlaceEncoding, lt(length_11, _49))\n                            {\n                                mstore(ret_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x22)\n                                revert(ret_1, 0x24)\n                            }\n                            mstore(memPtr_8, length_11)\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(add(memPtr_8, _49), and(slotValue_1, not(255)))\n                                ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_11)))), _49)\n                            }\n                            case 1 {\n                                mstore(0, spos_3)\n                                let dataPos_1 := keccak256(0, _49)\n                                let i_12 := 0\n                                for { } lt(i_12, length_11) { i_12 := add(i_12, _49) }\n                                {\n                                    mstore(add(add(memPtr_8, i_12), _49), sload(dataPos_1))\n                                    dataPos_1 := add(dataPos_1, _50)\n                                }\n                                ret_1 := add(add(memPtr_8, i_12), _49)\n                            }\n                            finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                            mstore(mpos_4, memPtr_8)\n                            mpos_4 := add(mpos_4, _49)\n                            spos_3 := add(spos_3, _50)\n                        }\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_array_string_dyn(memPos_5, memPtr_7), memPos_5))\n                    }\n                    case 0x916a17c6 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_12 := sload(/** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _51 := array_allocation_size_array_string_dyn(length_12)\n                        let memPtr_9 := mload(64)\n                        finalize_allocation(memPtr_9, _51)\n                        mstore(memPtr_9, length_12)\n                        let mpos_5 := memPtr_9\n                        mpos_5 := add(memPtr_9, 0x20)\n                        mstore(_2, /** @src 6:3190:3208  \"_targetedSelectors\" */ 0x1c)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let spos_4 := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                        let i_13 := _2\n                        for { } lt(i_13, length_12) { i_13 := add(i_13, 1) }\n                        {\n                            let memPtr_10 := mload(64)\n                            finalize_allocation_12564(memPtr_10)\n                            mstore(memPtr_10, and(sload(spos_4), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            let _52 := add(spos_4, 1)\n                            let pos_17 := mload(64)\n                            let pos_18 := pos_17\n                            let length_13 := sload(_52)\n                            mstore(pos_17, length_13)\n                            pos_17 := add(pos_17, 0x20)\n                            mstore(_2, _52)\n                            let srcPtr_6 := keccak256(_2, 0x20)\n                            let itemCounter_1 := _2\n                            for { }\n                            lt(add(itemCounter_1, 7), length_13)\n                            {\n                                itemCounter_1 := add(itemCounter_1, 8)\n                            }\n                            {\n                                let data_2 := sload(srcPtr_6)\n                                let _53 := shl(224, 0xffffffff)\n                                mstore(pos_17, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 224, data_2), _53))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _54 := 192\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                mstore(add(pos_17, 0x20), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_54, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_2), _53))\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _55 := 160\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                mstore(add(pos_17, 64), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_55, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_2), _53))\n                                let _56 := 96\n                                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _57 := 128\n                                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                                mstore(add(pos_17, _56), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_57, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_2), _53))\n                                mstore(add(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _57), and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _56, data_2), _53))\n                                mstore(add(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _55), and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64, data_2), _53))\n                                mstore(add(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _54), and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 0x20, data_2), _53))\n                                mstore(add(pos_17, 224), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_2, _53))\n                                pos_17 := add(pos_17, 256)\n                                srcPtr_6 := add(srcPtr_6, 1)\n                            }\n                            let data_3 := sload(srcPtr_6)\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, and(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 224, data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 96, data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64, data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 0x20, data_3), shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                                itemCounter_1 := add(itemCounter_1, 1)\n                            }\n                            if lt(itemCounter_1, length_13)\n                            {\n                                mstore(pos_17, and(data_3, shl(224, 0xffffffff)))\n                                pos_17 := add(pos_17, 0x20)\n                            }\n                            finalize_allocation(pos_18, sub(pos_17, pos_18))\n                            mstore(add(memPtr_10, 0x20), pos_18)\n                            mstore(mpos_5, memPtr_10)\n                            mpos_5 := add(mpos_5, 0x20)\n                            spos_4 := add(spos_4, 2)\n                        }\n                        let memPos_6 := mload(64)\n                        return(memPos_6, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos_6, memPtr_9), memPos_6))\n                    }\n                    case 0xb5508aa9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_14 := sload(/** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let _58 := array_allocation_size_array_string_dyn(length_14)\n                        let memPtr_11 := mload(64)\n                        finalize_allocation(memPtr_11, _58)\n                        mstore(memPtr_11, length_14)\n                        let mpos_6 := memPtr_11\n                        let _59 := 0x20\n                        mpos_6 := add(memPtr_11, _59)\n                        mstore(0, /** @src 6:2273:2291  \"_excludedArtifacts\" */ 0x19)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let spos_5 := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                        let i_14 := 0\n                        for { } lt(i_14, length_14) { i_14 := add(i_14, 1) }\n                        {\n                            let memPtr_12 := mload(64)\n                            let ret_2 := 0\n                            let slotValue_2 := sload(spos_5)\n                            let length_15 := ret_2\n                            let _60 := 1\n                            length_15 := shr(_60, slotValue_2)\n                            let outOfPlaceEncoding_1 := and(slotValue_2, _60)\n                            if iszero(outOfPlaceEncoding_1)\n                            {\n                                length_15 := and(length_15, 0x7f)\n                            }\n                            if eq(outOfPlaceEncoding_1, lt(length_15, _59))\n                            {\n                                mstore(ret_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x22)\n                                revert(ret_2, 0x24)\n                            }\n                            mstore(memPtr_12, length_15)\n                            switch outOfPlaceEncoding_1\n                            case 0 {\n                                mstore(add(memPtr_12, _59), and(slotValue_2, not(255)))\n                                ret_2 := add(add(memPtr_12, shl(5, iszero(iszero(length_15)))), _59)\n                            }\n                            case 1 {\n                                mstore(0, spos_5)\n                                let dataPos_2 := keccak256(0, _59)\n                                let i_15 := 0\n                                for { } lt(i_15, length_15) { i_15 := add(i_15, _59) }\n                                {\n                                    mstore(add(add(memPtr_12, i_15), _59), sload(dataPos_2))\n                                    dataPos_2 := add(dataPos_2, _60)\n                                }\n                                ret_2 := add(add(memPtr_12, i_15), _59)\n                            }\n                            finalize_allocation(memPtr_12, sub(ret_2, memPtr_12))\n                            mstore(mpos_6, memPtr_12)\n                            mpos_6 := add(mpos_6, _59)\n                            spos_5 := add(spos_5, _60)\n                        }\n                        let memPos_7 := mload(64)\n                        return(memPos_7, sub(abi_encode_array_string_dyn(memPos_7, memPtr_11), memPos_7))\n                    }\n                    case 0xba414fa6 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let ret_3 := fun_failed()\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, iszero(iszero(ret_3)))\n                        return(memPos_8, 32)\n                    }\n                    case 0xe20c9f71 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_19 := mload(64)\n                        let pos_20 := pos_19\n                        let length_16 := sload(/** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        mstore(pos_19, length_16)\n                        let _61 := 0x20\n                        pos_19 := add(pos_19, _61)\n                        mstore(_2, /** @src 6:2421:2439  \"_excludedContracts\" */ 0x15)\n                        /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                        let srcPtr_7 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                        let i_16 := _2\n                        for { } lt(i_16, length_16) { i_16 := add(i_16, 1) }\n                        {\n                            mstore(pos_19, and(sload(srcPtr_7), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            pos_19 := add(pos_19, _61)\n                            srcPtr_7 := add(srcPtr_7, 1)\n                        }\n                        finalize_allocation(pos_20, sub(pos_19, pos_20))\n                        let memPos_9 := mload(64)\n                        return(memPos_9, sub(abi_encode_array_address_dyn(memPos_9, pos_20), memPos_9))\n                    }\n                    case 0xfa7626d4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_3 := and(sload(/** @src 13:1016:1042  \"bool public IS_TEST = true\" */ 30), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 0xff)\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, iszero(iszero(value_3)))\n                        return(memPos_10, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                    /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, _2)\n                let tail_2 := add(add(headStart, shl(5, length)), _2)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                let i_1 := i\n                for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    let tail_3 := add(tail_2, _2)\n                    mstore(tail_2, and(mload(_3), sub(shl(160, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1), 1)))\n                    /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                    let memberValue0 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), _2)\n                    let pos_1 := tail_3\n                    let length_1 := mload(memberValue0)\n                    mstore(tail_3, length_1)\n                    pos_1 := add(tail_2, 96)\n                    let srcPtr_1 := add(memberValue0, _1)\n                    let i_2 := i\n                    for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                    {\n                        mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                        pos_1 := add(pos_1, _1)\n                        srcPtr_1 := add(srcPtr_1, _1)\n                    }\n                    tail_2 := pos_1\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function abi_encode_array_string_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function finalize_allocation_12558(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ shl(224, 0x4e487b71))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_12564(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ shl(224, 0x4e487b71))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ and(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ size, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 31), not(31)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ shl(224, 0x4e487b71))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 286 @src 2:1243:1447  \"function failed() public view returns (bool) {...\"\n            function fun_failed() -> var\n            {\n                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                let value := and(sload(/** @src 2:1302:1309  \"_failed\" */ 0x08), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ 0xff)\n                /// @src 2:1298:1441  \"if (_failed) {...\"\n                switch /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ value\n                case /** @src 2:1298:1441  \"if (_failed) {...\" */ 0 {\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _1 := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                    /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    mstore(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(add(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _3 := staticcall(gas(), /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ _2, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                    if iszero(_3)\n                    {\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let pos := /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ mload(64)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(sub(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, _4), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ 32)\n                        /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                            revert(/** @src -1:-1:-1 */ expr, expr)\n                        }\n                        /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                        expr := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_1)\n                    }\n                    /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    var := /** @src 2:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                    /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    leave\n                }\n                default /// @src 2:1298:1441  \"if (_failed) {...\"\n                {\n                    /// @src 2:1325:1339  \"return _failed\"\n                    var := value\n                    leave\n                }\n            }\n            /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(0, /** @src 87:168:907  \"contract RewardRouter is Test {...\" */ shl(224, 0x4e487b71))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 87:168:907  \"contract RewardRouter is Test {...\"\n                size := add(shl(5, length), 0x20)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000815000a\"\n    }\n}\n","hash":"01000215ce3ae040e1daaf47b63f03adce2953bada77449c40f8f13821fcb0f2","factoryDependencies":{},"id":87}