{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"01_completeDeployment.s.sol:ZfiStakingScript\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_11\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_16\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_deployRewardRouterV2, @DEFAULT_UNWIND\n\tjump\t@.BB0_53\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_14\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_123\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_transferAdminAndGovRights, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t16, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI0_18[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[7]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t@CPI0_19[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_61\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.ge\t@.BB0_66\n\tst.1\t64, r2\n\tnear_call\tr0, @fun_deployRewardTracker, @DEFAULT_UNWIND\n\tadd\t19, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_24[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tr3, r0, stack-[7]\n\tsstore\tr3, r1\n\tnear_call\tr0, @fun_deployRewardDistributor, @DEFAULT_UNWIND\n\tadd\t20, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_24[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t18, r0, r3\n\tsload\tr3, r1\n\tsub.s!\t@CPI0_25[0], r1, r4\n\tjump.le\t@.BB0_68\n.BB0_66:\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.eq\t@.BB0_127\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_15[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t132, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t164, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t@CPI0_19[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_136\n\tadd\tr0, r0, r7\n.BB0_19:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_19\n.BB0_136:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_21\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_21:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_22\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r5\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tshl.s\t24, r2, r2\n\tand\t@CPI0_38[0], r2, r2\n\tadd\t12, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_39[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t@CPI0_40[0], r0, r2\n\tst.1\tr5, r2\n\tor\t132, r1, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t196, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t164, r1, r1\n\tadd\t11, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r5, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t@CPI0_19[0], r0, r2\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_134\n\tadd\tr0, r0, r7\n.BB0_31:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_31\n.BB0_134:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_33\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_33:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_34\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r1\n\tadd\t16, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\tr4, r1\n\tor\t4, r4, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tadd\t@CPI0_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r4, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t@CPI0_19[0], r0, r2\n\tadd\tr4, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_132\n\tadd\tr0, r0, r7\n.BB0_41:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_41\n.BB0_132:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_43\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_43:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_44\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r1\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_24[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr3, r1\n\tadd\t15, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_24[0], r2, r2\n\tor\t@CPI0_43[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_44[0], r0, r1\n\tadd\t17, r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_123:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_deployVester, @DEFAULT_UNWIND\n\tjump\t@.BB0_53\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_deployRewardDistributor, @DEFAULT_UNWIND\n\tjump\t@.BB0_53\n.BB0_127:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_deployRewardTracker, @DEFAULT_UNWIND\n.BB0_53:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_135\n\tadd\tr0, r0, r6\n.BB0_24:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_24\n.BB0_135:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n.BB0_25:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_26:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_61:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_143\n\tadd\tr0, r0, r6\n.BB0_63:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_63\n.BB0_143:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_34:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_133\n\tadd\tr0, r0, r6\n.BB0_36:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_36\n.BB0_133:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_68:\n\tadd\t15, r0, r4\n\tadd\tr4, r0, stack-[4]\n\tsload\tr4, r4\n\tadd\t1, r1, r5\n\tsstore\tr3, r5\n\tst.1\t0, r3\n\tand\t@CPI0_26[0], r4, r3\n\tadd\t@CPI0_27[0], r1, r1\n\tsload\tr1, r4\n\tand\t@CPI0_24[0], r4, r4\n\tor\tr4, r3, r3\n\tsstore\tr1, r3\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_26[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI0_26[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_70\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_44:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_131\n\tadd\tr0, r0, r6\n.BB0_46:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_46\n.BB0_131:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_70:\n\tld.1\t64, r5\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_76\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_72\n.BB0_76:\n\tadd\tr5, r0, r2\n\tsub.s!\t@CPI0_25[0], r5, r1\n\tjump.gt\t@.BB0_66\n\tst.1\t64, r2\n\tnear_call\tr0, @fun_deployVester, @DEFAULT_UNWIND\n\tadd\t21, r0, r3\n\tadd\tr3, r0, stack-[6]\n\tsload\tr3, r2\n\tand\t@CPI0_24[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr3, r1\n\tnear_call\tr0, @fun_deployRewardRouterV2, @DEFAULT_UNWIND\n\tadd\t22, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_24[0], r2, r2\n\tadd\tr1, r0, r4\n\tor\tr2, r4, r1\n\tadd\tr3, r0, stack-[1]\n\tsstore\tr3, r1\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_18[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr4, r0, stack-[2]\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand\t@CPI0_26[0], r3, r5\n\tadd\tstack-[4], r0, r3\n\tand\t@CPI0_26[0], r3, r4\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI0_26[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t68, r2, r1\n\tst.1\tr1, r5\n\tadd\t36, r2, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[5]\n\tadd\t4, r2, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_85\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n.BB0_85:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tstack-[7], r0, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[5], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[6], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsload\tr1, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_26[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI0_26[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr1, r2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_94\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_32[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_90\n.BB0_94:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tstack-[7], r0, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[5], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[1], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsload\tr1, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_26[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI0_26[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_103\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_32[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_99\n.BB0_103:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[5], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_26[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI0_26[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_112\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_32[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_108\n.BB0_112:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd\tstack-[7], r0, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[5], r0, r2\n\tst.1\t64, r2\n\tsload\tr1, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_26[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[6]\n\tadd\t4, r2, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_121\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_117\n.BB0_121:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[6], r0, r1\n\tst.1\t64, r1\n\tnear_call\tr0, @fun_transferAdminAndGovRights, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_58:\n\trevert\n.BB0_72:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_142\n\tadd\tr0, r0, r6\n.BB0_74:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_74\n.BB0_142:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_81:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_141\n\tadd\tr0, r0, r6\n.BB0_83:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_83\n.BB0_141:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_90:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_140\n\tadd\tr0, r0, r6\n.BB0_92:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_92\n.BB0_140:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_99:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_139\n\tadd\tr0, r0, r6\n.BB0_101:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_101\n.BB0_139:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_108:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_138\n\tadd\tr0, r0, r6\n.BB0_110:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_110\n.BB0_138:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.BB0_117:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_137\n\tadd\tr0, r0, r6\n.BB0_119:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_119\n.BB0_137:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_26\n\tjump\t@.BB0_25\n.func_end0:\n\nfun_deployRewardTracker:\n.func_begin1:\n\tnop\tstack+=[1]\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tjump.ge\t@.BB1_1\n\tadd\t15, r0, r2\n\tsload\tr2, r2\n\tadd\t260, r1, r3\n\tadd\t@CPI1_1[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t228, r1, r3\n\tadd\t10, r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r1, r3\n\tadd\t@CPI1_2[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t324, r1, r3\n\tadd\t@CPI1_3[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t292, r1, r3\n\tadd\t5, r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r1, r3\n\tadd\t160, r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI1_4[0], r2, r2\n\tadd\t196, r1, r3\n\tst.1\tr3, r2\n\tadd\t132, r1, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr4\n\tadd\t224, r0, r5\n\tst.1\tr2, r5\n\tadd\t68, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI1_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI1_6[0], r0, r2\n\tsub.s!\t@CPI1_6[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI1_6[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_7[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB1_5\n\tand\t@CPI1_4[0], r1, stack-[1]\n\tld.1\t64, r4\n\tsub.s!\t@CPI1_8[0], r4, r1\n\tjump.gt\t@.BB1_1\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r3\n\tadd\t@CPI1_9[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t29, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI1_10[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\t32, r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_15\n\tadd\tr0, r0, r6\n.BB1_14:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB1_14\n.BB1_15:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_11[0], r3, r5\n\tjump.gt\t@.BB1_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_1\n\tst.1\t64, r3\n\tadd\t@CPI1_6[0], r0, r4\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_6[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI1_12[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_6[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI1_13[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI1_14[0], r1, r3\n\tjump.gt\t@.BB1_1\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd\t@CPI1_6[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_6[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI1_12[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_6[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[1], r0, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_6[0], r2, stack[@returndatasize]\n\tand\t@CPI1_6[0], r2, r2\n\tjump\t@.BB1_6\n.BB1_5:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB1_6:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB1_19\n\tadd\tr0, r0, r6\n.BB1_8:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_8\n.BB1_19:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_10:\n\tadd\t@CPI1_6[0], r0, r1\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_6[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_deployRewardDistributor:\n.func_begin2:\n\tnop\tstack+=[1]\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.ge\t@.BB2_1\n\tadd\t15, r0, r2\n\tsload\tr2, r2\n\tadd\t19, r0, r3\n\tsload\tr3, r3\n\tadd\t36, r1, r4\n\tadd\t@CPI2_1[0], r0, r5\n\tst.1\tr4, r5\n\tand\t@CPI2_2[0], r3, r3\n\tadd\t164, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI2_2[0], r2, r2\n\tadd\t132, r1, r3\n\tst.1\tr3, r2\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r1, r2\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI2_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI2_4[0], r0, r2\n\tsub.s!\t@CPI2_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_5[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB2_5\n\tand\t@CPI2_2[0], r1, stack-[1]\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_6[0], r4, r1\n\tjump.gt\t@.BB2_1\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI2_8[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t33, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI2_9[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\t32, r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_15\n\tadd\tr0, r0, r6\n.BB2_14:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB2_14\n.BB2_15:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI2_10[0], r3, r5\n\tjump.gt\t@.BB2_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB2_1\n\tst.1\t64, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tsub.s!\t@CPI2_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI2_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI2_4[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI2_12[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI2_6[0], r1, r3\n\tjump.gt\t@.BB2_1\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI2_4[0], r2, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI2_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_4[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI2_4[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[1], r0, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI2_4[0], r2, stack[@returndatasize]\n\tand\t@CPI2_4[0], r2, r2\n\tjump\t@.BB2_6\n.BB2_5:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB2_6:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB2_19\n\tadd\tr0, r0, r6\n.BB2_8:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_8\n.BB2_19:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB2_10:\n\tadd\t@CPI2_4[0], r0, r1\n\tsub.s!\t@CPI2_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI2_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_deployVester:\n.func_begin3:\n\tnop\tstack+=[1]\n\tld.1\t64, r1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t19, r0, r2\n\tsload\tr2, r2\n\tadd\t15, r0, r3\n\tsload\tr3, r3\n\tadd\t17, r0, r4\n\tsload\tr4, r5\n\tadd\t356, r1, r6\n\tadd\t@CPI3_1[0], r0, r7\n\tst.1\tr6, r7\n\tadd\t324, r1, r6\n\tst.1\tr6, r4\n\tadd\t132, r1, r4\n\tadd\t192, r0, r6\n\tst.1\tr4, r6\n\tadd\t36, r1, r4\n\tadd\t@CPI3_2[0], r0, r6\n\tst.1\tr4, r6\n\tadd\t420, r1, r4\n\tadd\t@CPI3_3[0], r0, r6\n\tst.1\tr4, r6\n\tadd\t388, r1, r4\n\tadd\t6, r0, r6\n\tst.1\tr4, r6\n\tadd\t164, r1, r4\n\tadd\t256, r0, r6\n\tst.1\tr4, r6\n\tadd\t196, r1, r4\n\tst.1\tr4, r5\n\tand\t@CPI3_4[0], r3, r3\n\tadd\t260, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI3_4[0], r2, r2\n\tadd\t292, r1, r3\n\tst.1\tr3, r2\n\tadd\t228, r1, r3\n\tst.1\tr3, r2\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t320, r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r1, r2\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI3_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI3_6[0], r0, r2\n\tsub.s!\t@CPI3_6[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_6[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_7[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB3_5\n\tand\t@CPI3_4[0], r1, stack-[1]\n\tld.1\t64, r4\n\tsub.s!\t@CPI3_8[0], r4, r1\n\tjump.gt\t@.BB3_1\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r3\n\tadd\t@CPI3_9[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t22, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI3_10[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\t32, r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_15\n\tadd\tr0, r0, r6\n.BB3_14:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB3_14\n.BB3_15:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_11[0], r3, r5\n\tjump.gt\t@.BB3_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_1\n\tst.1\t64, r3\n\tadd\t@CPI3_6[0], r0, r4\n\tsub.s!\t@CPI3_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_6[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI3_12[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI3_6[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI3_13[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI3_14[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI3_6[0], r2, r3\n\tadd\t@CPI3_6[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_6[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI3_12[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI3_6[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[1], r0, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI3_6[0], r2, stack[@returndatasize]\n\tand\t@CPI3_6[0], r2, r2\n\tjump\t@.BB3_6\n.BB3_5:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB3_6:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB3_19\n\tadd\tr0, r0, r6\n.BB3_8:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_8\n.BB3_19:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB3_10:\n\tadd\t@CPI3_6[0], r0, r1\n\tsub.s!\t@CPI3_6[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_6[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_deployRewardRouterV2:\n.func_begin4:\n\tnop\tstack+=[1]\n\tld.1\t64, r1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t36, r1, r2\n\tadd\t@CPI4_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI4_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI4_3[0], r0, r2\n\tsub.s!\t@CPI4_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI4_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_4[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_3\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB4_5\n\tand\t@CPI4_5[0], r1, stack-[1]\n\tld.1\t64, r4\n\tsub.s!\t@CPI4_6[0], r4, r1\n\tjump.gt\t@.BB4_1\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r3\n\tadd\t@CPI4_7[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t30, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI4_8[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\t32, r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_15\n\tadd\tr0, r0, r6\n.BB4_14:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB4_14\n.BB4_15:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI4_9[0], r3, r5\n\tjump.gt\t@.BB4_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB4_1\n\tst.1\t64, r3\n\tadd\t@CPI4_3[0], r0, r4\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI4_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI4_10[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI4_3[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI4_11[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI4_12[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd\t@CPI4_3[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI4_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI4_10[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI4_3[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[1], r0, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI4_3[0], r2, stack[@returndatasize]\n\tand\t@CPI4_3[0], r2, r2\n\tjump\t@.BB4_6\n.BB4_5:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB4_6:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB4_19\n\tadd\tr0, r0, r6\n.BB4_8:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_8\n.BB4_19:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB4_10:\n\tadd\t@CPI4_3[0], r0, r1\n\tsub.s!\t@CPI4_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI4_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_transferAdminAndGovRights:\n.func_begin5:\n\tnop\tstack+=[3]\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t20, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI5_1[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_3\n\tld.1\t64, r5\n\tadd\t@CPI5_4[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[2], r0, r1\n\tshr.s\t24, r1, r1\n\tand\t@CPI5_1[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB5_11\n\tadd\t@CPI5_2[0], r0, r4\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI5_2[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_2[0], r3, stack[@returndatasize]\n\tand\t@CPI5_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_6\n.BB5_11:\n\tsub.s!\t@CPI5_6[0], r5, r1\n\tjump.ge\t@.BB5_12\n\tst.1\t64, r5\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI5_1[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand\t@CPI5_1[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_3\n\tld.1\t64, r5\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB5_21\n\tadd\t@CPI5_2[0], r0, r4\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI5_2[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_2[0], r3, stack[@returndatasize]\n\tand\t@CPI5_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_17\n.BB5_21:\n\tsub.s!\t@CPI5_8[0], r5, r1\n\tjump.gt\t@.BB5_12\n\tst.1\t64, r5\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI5_1[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand\t@CPI5_1[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_3\n\tld.1\t64, r5\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB5_31\n\tadd\t@CPI5_2[0], r0, r4\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI5_2[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_2[0], r3, stack[@returndatasize]\n\tand\t@CPI5_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_26\n.BB5_31:\n\tsub.s!\t@CPI5_8[0], r5, r1\n\tjump.gt\t@.BB5_12\n\tst.1\t64, r5\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t21, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI5_1[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand\t@CPI5_1[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_3\n\tld.1\t64, r5\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB5_40\n\tadd\t@CPI5_2[0], r0, r4\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI5_2[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_2[0], r3, stack[@returndatasize]\n\tand\t@CPI5_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_36\n.BB5_40:\n\tsub.s!\t@CPI5_8[0], r5, r1\n\tjump.gt\t@.BB5_12\n\tst.1\t64, r5\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI5_1[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand\t@CPI5_1[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_3\n\tld.1\t64, r5\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB5_49\n\tadd\t@CPI5_2[0], r0, r4\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI5_2[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_2[0], r3, stack[@returndatasize]\n\tand\t@CPI5_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_45\n.BB5_49:\n\tsub.s!\t@CPI5_8[0], r5, r1\n\tjump.gt\t@.BB5_12\n\tst.1\t64, r5\n\tret\n.BB5_1:\n\trevert\n.BB5_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_12:\n\tadd\t@CPI5_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_6:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_55\n\tadd\tr0, r0, r6\n.BB5_8:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_8\n.BB5_55:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB5_9\n\tjump\t@.BB5_10\n.BB5_17:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_54\n\tadd\tr0, r0, r6\n.BB5_19:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_19\n.BB5_54:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB5_10\n.BB5_9:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB5_10:\n\tadd\t@CPI5_2[0], r0, r1\n\tsub.s!\t@CPI5_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_26:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_53\n\tadd\tr0, r0, r6\n.BB5_28:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_28\n.BB5_53:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB5_29\n\tjump\t@.BB5_30\n.BB5_36:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_52\n\tadd\tr0, r0, r6\n.BB5_38:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_38\n.BB5_52:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB5_30\n\tjump\t@.BB5_29\n.BB5_45:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_51\n\tadd\tr0, r0, r6\n.BB5_47:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_47\n.BB5_51:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB5_30\n.BB5_29:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB5_30:\n\tadd\t@CPI5_2[0], r0, r1\n\tsub.s!\t@CPI5_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\n__cxa_throw:\n.func_begin6:\n\trevert\n.func_end6:\n\n__farcall:\n.func_begin7:\n.tmp0:\n\tfar_call\tr1, r2, @.BB7_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n__staticcall:\n.func_begin8:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB8_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_6:\nCPI2_4:\nCPI3_6:\nCPI4_3:\nCPI5_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 3254238588\nCPI0_5:\n\t.cell 4123180263\nCPI0_6:\n\t.cell 4123180264\nCPI0_7:\n\t.cell 4174167879\nCPI0_8:\n\t.cell 3254238589\nCPI0_9:\n\t.cell 3365869025\nCPI0_10:\n\t.cell 1589340788\nCPI0_11:\n\t.cell 1589340789\nCPI0_12:\n\t.cell 3225444902\nCPI0_13:\n\t.cell 177362148\nCPI0_14:\n\t.cell 1345053765\nCPI0_15:\n\t.cell 16711680\nCPI0_16:\n\t.cell 2535301202817642044428229017600\nCPI0_17:\n\t.cell 2535301200456458802993406410752\nCPI0_18:\nCPI5_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_19:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_20:\nCPI5_3:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_21:\n\t.cell -22386854525357345651981107866072664707474714240452192519658830702694482575360\nCPI0_22:\nCPI1_16:\nCPI2_14:\nCPI3_16:\nCPI4_14:\nCPI5_5:\n\t.cell 2852213850513516153367582212096\nCPI0_23:\nCPI5_6:\n\t.cell 18446744073709551616\nCPI0_24:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_25:\nCPI1_11:\nCPI2_10:\nCPI3_11:\nCPI4_9:\nCPI5_8:\n\t.cell 18446744073709551615\nCPI0_26:\nCPI1_4:\nCPI2_2:\nCPI3_4:\nCPI4_5:\nCPI5_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_27:\n\t.cell -30965028173862571133595279324966194794306114244556548824848312908903192185788\nCPI0_28:\n\t.cell -26759907098073982105467361195115755456394437647382652138162519193600047185920\nCPI0_29:\n\t.cell -28599542487100659765762446535214650575469123587733211289168110117992607514624\nCPI0_30:\n\t.cell 7922816251426433759354395033600\nCPI0_31:\n\t.cell -44906417635787206963559877460555202890664413537909953542218682655106064711680\nCPI0_32:\n\t.cell 5387515050969974956360988622848\nCPI0_33:\n\t.cell 40834718197566166935926211244754935952665147466640067737659426428776678948864\nCPI0_34:\nCPI1_15:\nCPI2_13:\nCPI3_15:\nCPI4_13:\nCPI5_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_35:\n\t.cell 23996148686290874994328683527993613808391428263533972428742621687627873517568\nCPI0_36:\n\t.cell 29521014169115599316960941301759596795425628744317638057803945772856161337344\nCPI0_37:\n\t.cell 7922816253787617000789217640448\nCPI0_38:\n\t.cell 24519928653854221733733552434404946937899825954920857600\nCPI0_39:\n\t.cell -24519928653854221733733552434404946937899825954920857601\nCPI0_40:\n\t.cell -28227941571971002282588482234115560369178363731265210970646877447924712734720\nCPI0_41:\n\t.cell 36330415498891833702058586318043101064071415114476753346037725195458914025472\nCPI0_42:\n\t.cell 32254389285783545628479481261281405466089163324835865339242949501035462262784\nCPI0_43:\n\t.cell 911532830161952097562272169486578248587256046587\nCPI0_44:\n\t.cell 15724800\nCPI1_0:\nCPI2_0:\nCPI3_0:\nCPI4_0:\n\t.cell 18446744073709551484\nCPI1_1:\n\t.cell 52221604211377590376107045629355632089266742954246498428686638226834232180736\nCPI1_2:\n\t.cell 452365243476444560870621727464015919244253325936312384490120934572108505987\nCPI1_3:\n\t.cell 52221554898645202388254270315624376698369923369742740803112316311402230841344\nCPI1_5:\nCPI2_3:\nCPI3_5:\nCPI4_2:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI1_7:\n\t.cell 904625697166532776746648320380374280103671783405542761636366558363467644928\nCPI1_8:\nCPI3_8:\nCPI4_6:\n\t.cell 18446744073709551551\nCPI1_9:\n\t.cell 37268929072347430019525079602998766740563248143572581622730715337924414537728\nCPI1_10:\nCPI2_9:\nCPI3_10:\nCPI4_8:\n\t.cell 29485693692093900896535320720837539044516270774257971310649688876405881831424\nCPI1_12:\nCPI2_11:\nCPI3_12:\nCPI4_10:\n\t.cell 120209876281281145568259943\nCPI1_13:\nCPI2_12:\nCPI3_13:\nCPI4_11:\n\t.cell 19984446587381578679260064154243377531984041134390618977697125463137349271552\nCPI1_14:\nCPI2_6:\nCPI3_14:\nCPI4_12:\n\t.cell 18446744073709551519\nCPI2_1:\n\t.cell 452322379322920325034581741406471317301443348684201276200304769841811783367\nCPI2_5:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI2_7:\n\t.cell 14474011154664524427946373126085988481658748083205070504932198000989141204992\nCPI2_8:\n\t.cell 37268929072347404252465445457723270507059869810525570205961124432783097471034\nCPI3_1:\n\t.cell 53552164525229476168844999652715454333718875316855790696295797032225890893824\nCPI3_2:\n\t.cell 452345410778259664782959595580791703288917738669161318065267121479568793046\nCPI3_3:\n\t.cell 53576906581648266649881369145862490247594641069981755068199637614238873157632\nCPI3_7:\n\t.cell 904625697166532776746648320380374280103671791011446363005742967343686877184\nCPI3_9:\n\t.cell 39078153370570710944047485083180849206185727311969568324887536544941732790272\nCPI4_1:\n\t.cell 452325724223020817344521755193040608625052999207777359176017994534274636029\nCPI4_4:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI4_7:\n\t.cell 37268929072347426787309710502420977461094009742958535547095299094046115364864\nCPI5_4:\n\t.cell 50792298013709561037721375796823834667280805650526701435950915983382331523072\nCPI5_7:\n\t.cell -21857060218929861683821819821874182760907270912550306855719349237798668337152\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","deployRewardDistributor()":"5ebb6a75","deployRewardRouterV2()":"502be445","deployRewardTracker()":"f5c2bce8","deployVester()":"c1f7bd7d","run()":"c0406226","setUp()":"0a9254e4","transferAdminAndGovRights()":"c89f15e1"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.ec5dde33\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployRewardDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardDistributorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployRewardRouterV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardRouterV2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployRewardTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardTrackerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployVester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vesterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferAdminAndGovRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/01_completeDeployment.s.sol\":\"ZfiStakingScript\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9cc29c28f49d0b7f7b2f1aa32d8273f8a087bf62eb3fb22d893df824052c25ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42dcb36cb10b878a0d5b20ce3a4a3ba4f51f44d7731a66ac1133c699bc80b31b\",\"dweb:/ipfs/QmY6q7SaHQMLBb3rS6xZdArPaXoskWeqF6oJwUeZ3gKLZj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://744ea187c195e31cb9201e63ca291fca9e623747f54f0ba390b366a6213b8964\",\"dweb:/ipfs/Qmc547qfV4sz65DC9B4okx1HvgxwUzJR7zTfKKbTzL3UQT\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223\",\"urls\":[\"bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669\",\"dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar\"]},\"lib/openzeppelin-foundry-upgrades/src/Defender.sol\":{\"keccak256\":\"0x4ab3fd0138ce11d5c16dffc7b017c965ba30de55898e91e0f64665f8e275d20e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6c5d6fba174dec5c09f86ab4ce1acdb51a0d0f780e56057a177d196e12511d\",\"dweb:/ipfs/QmaajQoYS8nD9GgEiJS6aebwf7pkFBL12Wi1DNHXLzEV9g\"]},\"lib/openzeppelin-foundry-upgrades/src/Options.sol\":{\"keccak256\":\"0x1b7a53fbaba7bd09f3265f97045d1d03670e3fc07fd989eb0243804cad8bdd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f451aa6d928f65e2e243862d72a75df605a3ba943ad6e59e8456effc8bd463c1\",\"dweb:/ipfs/Qmee7sbopLbd7N6docCLrGKwSrWGf7YXzXrTftp72oYEGy\"]},\"lib/openzeppelin-foundry-upgrades/src/Upgrades.sol\":{\"keccak256\":\"0xe4238478559e271b46ffcef23b4b22cc58943b8bbc549fd8eb221205704314b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c4d5f02c2263a8db048e11dca37d2dce3e4ea22c85c133c572aa6c3a6a879b\",\"dweb:/ipfs/QmVcEjehjoaKB5VtFnS3gd6swWr274j4KmFh3etJW6sJvx\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/DefenderDeploy.sol\":{\"keccak256\":\"0x2734b2a84b2e8c3f7d1040cdf6a1cb3d9a565201516892e297b8072f6ac44781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d0ce30498d61aa9150f2723f4cec7e0129a4b01cf04bbfe60aa4591d21918e8\",\"dweb:/ipfs/QmQtiYoNRuiGgiXJDCYr6jB4ybzeRRHrJ2nob4JfnjKwMf\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Utils.sol\":{\"keccak256\":\"0xc82c059c342414970ae59474124c23cc3d08485513ce269c0c1a781a1a0eb33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b93d1847db067a41fd9fb0cee1af8ea72a148d8e38b860b48d2dad8eb00c472b\",\"dweb:/ipfs/QmbGEVvqWv5U56YvwyfjE7z6i5mCvrTK4udS3mSz9udVRw\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Versions.sol\":{\"keccak256\":\"0x38354f4642f80aefbc2805e934eee0c779d6439be14c86465b8ca18d2a3dc543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09b1c891cda7ce69d2c1adad58a3167cf3591efcac68f1225a4e24ecd64b9369\",\"dweb:/ipfs/QmQLnanBWRJKxsBo7xp9qL7qbmsjeubkZkKJ1roSaB4P7v\"]},\"script/01_completeDeployment.s.sol\":{\"keccak256\":\"0x9ba36e17dcf7dd76c20521a746083b818ed9dec8f47d7ea499931cf83d882d9d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://24bc11c534bce17e06180ef68bd18e5432f6d147a519c8843f760b9a5357ee74\",\"dweb:/ipfs/QmVwcJK1NFJvkJuCp6WNSFnJTvrpmK1x2GaE43LxGAdJzv\"]},\"src/ZFI/ZFIToken.sol\":{\"keccak256\":\"0x8029f3aa6ccae93b9bedf6d11a3607cf695d5d29f23675b7fa7c0f0d4f04406c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c5f658cb2b399109827bc8d9ab3c67f1cb165ad2eba773fb20326c8560b134\",\"dweb:/ipfs/QmYzmBv1K3mWgWnbzVwqZ7TC4xJXVKvqzNar4XhECuWDeS\"]},\"src/access/Governable.sol\":{\"keccak256\":\"0x991689725362212185778cd0c943d46b18da3ac6640c9b1b124b39198ee1b56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85617294b9f8080e9dbbe8a1f5e314bbc27923de97045a33db258d58aa8c61a1\",\"dweb:/ipfs/QmR4ZHPVFpw19gDhqwP4mhrR9GbTU6oK1juDes82M4ASJW\"]},\"src/staking/RewardDistributor.sol\":{\"keccak256\":\"0x764341579d633f44f7961e4e6c52cf4250db09f007e5ac01d8995b7654d055ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5299e887d660fae8017252087358d1622ae4141c6f94669f19ee2ecbb8081cc1\",\"dweb:/ipfs/QmSWPsUCUmQEHPNz8TiYjQG4CmXs77BYaGdbqNobAkZ6TD\"]},\"src/staking/RewardRouterV2.sol\":{\"keccak256\":\"0xc4ad88af1d4927118b2ba1031de15dd20398935932886e28a80e21afa62bb164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57b87c692ce7265b322c73694d7656d430cff5cc4cfc01219f073091967042ed\",\"dweb:/ipfs/QmX2bgobmDdgJNQjs5hQQTbaRmJMDo79rtXQT7jzizqYEc\"]},\"src/staking/RewardTracker.sol\":{\"keccak256\":\"0xd219a01df543a0ddd6fe146294e3bbc6aac4d28ce99bbf199929e40cf49f4850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9386baca055458160ad121aa1b3116f9eebb5ceac0fd0eb5a5e700d180569738\",\"dweb:/ipfs/QmZouoCdN39XDjLXzYL9u3uAuMy29VNdJ3z6eBgLXH6rrG\"]},\"src/staking/Vester.sol\":{\"keccak256\":\"0xd812fee776075e01a09d25d7f0180ae47a9ea216615273bd17e2c3b14a507a76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de0f168f0b272a217166cbeb780e52b847d0a7d294c391a4de47bc283fc63df6\",\"dweb:/ipfs/QmSbZyjbgkE5qp8U9VW7V9xZYiLYtCXPZ4i67hLePUJCka\"]},\"src/staking/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x93662d443c287968a361c4e318fdb382fc108aa5fe723a29310a774a7de28b54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77055fe8aeee23b6fd0208b53c6744cc7d4a95e45e76e0282bfda6d9730d6226\",\"dweb:/ipfs/Qma3Gkamjj6zCWHf3yECV3NcKovcLmWen5oGfWvdtLhtLi\"]},\"src/staking/interfaces/IRewardTracker.sol\":{\"keccak256\":\"0x1d89bd49a0edfa478ccea61db0f03f1176c0ac05610a7d076224f9f5897f8a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8794522f5994f886705352db4528c5f2bc340ee507ca4b729751eeeaeb232787\",\"dweb:/ipfs/QmU6yMWB3hFHy82ohASW2NMx6pVBovmnCaHKyWHMJNrKF3\"]},\"src/staking/interfaces/IVester.sol\":{\"keccak256\":\"0x5cb4141ced39055e319c16da6d37739bbf05670a9df4f1bee7ce900c094572f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4df83a0d55f4b648ef70d356db26e558859431b569742440e456d6d7d794e10\",\"dweb:/ipfs/QmQ6hbBYmmy6HRDGeLSnu6a4EBRKNGD1fgBWkQxV1PwwYH\"]},\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\":{\"keccak256\":\"0x39aa813c4e998d1bf443b0bee432d17a7a2dbd0e0349cef31c0b426a0c6ba72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd8d3e1e03dd8313d984a3d18cfe39c15d7a92758d9789b2c828169ee8f8c4fe\",\"dweb:/ipfs/QmXPyofzX8pwiiUHAtHT6W15UoFtc4ajkYSPbGM87xeYj2\"]},\"src/tokens/interfaces/IERC20Burnable.sol\":{\"keccak256\":\"0x63557caaac086a5bb8281bf9536122cc49f36ea1efb32a4f2e3aedcf4f57b405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b026929f2ced31b04d749c1df00532701a3a7634bafab93c9ff382039372d67d\",\"dweb:/ipfs/QmVqhXe5nDR2CyXvipvX8VpnTPHkYddEBoGbifNYmp6mFP\"]}},\"version\":1}","solc_version":"0.8.21","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 2:\"lib/forge-std/src/StdChains.sol\", 3:\"lib/forge-std/src/StdCheats.sol\", 8:\"lib/forge-std/src/StdUtils.sol\", 65:\"script/01_completeDeployment.s.sol\"\nobject \"ZfiStakingScript_54609\" {\n    code {\n        {\n            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 2:3166:3170  \"true\" */ 0x0c, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ or(and(sload(/** @src 2:3166:3170  \"true\" */ 0x0c), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ not(16711935)), 65537))\n            let _2 := datasize(\"ZfiStakingScript_54609_deployed\")\n            codecopy(_1, dataoffset(\"ZfiStakingScript_54609_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 11:\"lib/forge-std/src/console2.sol\", 65:\"script/01_completeDeployment.s.sol\"\n    object \"ZfiStakingScript_54609_deployed\" {\n        code {\n            {\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x0a9254e4 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _5 := shl(224, 0x350d56bf)\n                        /// @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\"\n                        mstore(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _5)\n                        /// @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\"\n                        let _6 := 32\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(/** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ add(_1, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(/** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 13)\n                        mstore(add(/** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68), \"ADMIN_ADDRESS\")\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        let _7 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\"\n                        let _8 := staticcall(gas(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _7, /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _1, _6)\n                        if iszero(_8)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\"\n                        let expr := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4\n                        /// @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\"\n                        if _8\n                        {\n                            let _9 := _6\n                            if gt(_6, returndatasize()) { _9 := returndatasize() }\n                            finalize_allocation(_1, _9)\n                            expr := abi_decode_address_fromMemory(_1, add(_1, _9))\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _10 := sload(/** @src 65:1027:1073  \"ADMIN_ADDRESS = vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ 0x0c)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:1027:1073  \"ADMIN_ADDRESS = vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ 0x0c, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(_10, not(sub(shl(184, 1), 16777216))), and(shl(24, expr), sub(shl(184, 1), 16777216))))\n                        /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        let _11 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        mstore(_11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xc1978d1f))\n                        mstore(/** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ add(_11, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(/** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 11)\n                        mstore(add(/** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68), \"PRIVATE_KEY\")\n                        /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        let _12 := staticcall(gas(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _7, /** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _11, /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6)\n                        /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        if iszero(_12)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_1 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_1, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        let expr_1 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4\n                        /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        if _12\n                        {\n                            let _13 := /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6\n                            /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                            if gt(/** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6, /** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ returndatasize()) { _13 := returndatasize() }\n                            finalize_allocation(_11, _13)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ add(_11, _13), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _11), /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                                revert(_4, _4)\n                            }\n                            /// @src 65:1104:1129  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                            expr_1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(_11)\n                        }\n                        sstore(/** @src 65:1083:1129  \"deployerPrivateKey = vm.envUint(\\\"PRIVATE_KEY\\\")\" */ 0x10, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr_1)\n                        /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        let _14 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        mstore(_14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _5)\n                        mstore(/** @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ add(_14, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(/** @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 11)\n                        mstore(add(/** @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68), \"GOV_ADDRESS\")\n                        /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        let _15 := staticcall(gas(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _7, /** @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _14, /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6)\n                        /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        if iszero(_15)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_2 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_2, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        let expr_2 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4\n                        /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        if _15\n                        {\n                            let _16 := /** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6\n                            /// @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                            if gt(/** @src 65:1043:1073  \"vm.envAddress(\\\"ADMIN_ADDRESS\\\")\" */ _6, /** @src 65:1153:1181  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ returndatasize()) { _16 := returndatasize() }\n                            finalize_allocation(_14, _16)\n                            expr_2 := abi_decode_address_fromMemory(_14, add(_14, _16))\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _17 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(13, or(and(sload(13), _17), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr_2, sub(shl(160, 1), 1))))\n                        sstore(/** @src 65:1191:1239  \"ZFI = 0x9fAA8Bb71C6Ecf8BC5Bf0B5d35B38BE922BCA3fB\" */ 0x0f, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(sload(/** @src 65:1191:1239  \"ZFI = 0x9fAA8Bb71C6Ecf8BC5Bf0B5d35B38BE922BCA3fB\" */ 0x0f), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17), /** @src 65:1197:1239  \"0x9fAA8Bb71C6Ecf8BC5Bf0B5d35B38BE922BCA3fB\" */ 0x9faa8bb71c6ecf8bc5bf0b5d35b38be922bca3fb))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:1307:1333  \"vestingDuration = 26 weeks\" */ 0x11, /** @src 65:1325:1333  \"26 weeks\" */ 0xeff100)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        return(_4, _4)\n                    }\n                    case 0x502be445 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := fun_deployRewardRouterV2()\n                        let memPos := mload(_2)\n                        mstore(memPos, and(ret, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x5ebb6a75 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret_1 := fun_deployRewardDistributor()\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, and(ret_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0xc0406226 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _18 := sload(/** @src 65:1396:1414  \"deployerPrivateKey\" */ 0x10)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        let _19 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        if iszero(extcodesize(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _19))\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        let _20 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        mstore(_20, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xce817d47))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\" */ add(_20, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), _18)\n                        let _21 := 36\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        let _22 := call(gas(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _19, _4, /** @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\" */ _20, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21, /** @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\" */ _20, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        if iszero(_22)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_3 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_3, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 65:1378:1415  \"vm.startBroadcast(deployerPrivateKey)\"\n                        if _22\n                        {\n                            finalize_allocation_6591(_20)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            _4 := _4\n                        }\n                        let _23 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        let _24 := and(/** @src 65:1474:1495  \"deployRewardTracker()\" */ fun_deployRewardTracker(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _25 := shl(160, 0xffffffffffffffffffffffff)\n                        /// @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\"\n                        let _26 := 0x13\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(sload(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _25), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _24))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:1544:1589  \"rewardDistributor = deployRewardDistributor()\" */ 0x14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(sload(/** @src 65:1544:1589  \"rewardDistributor = deployRewardDistributor()\" */ 0x14), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _25), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 65:1564:1589  \"deployRewardDistributor()\" */ fun_deployRewardDistributor(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)))\n                        let value := and(sload(/** @src 65:1667:1670  \"ZFI\" */ 0x0f), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let oldLen := sload(/** @src 65:1648:1661  \"depositTokens\" */ 0x12)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, _21)\n                        }\n                        let _27 := add(oldLen, 1)\n                        sstore(/** @src 65:1648:1661  \"depositTokens\" */ 0x12, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _27)\n                        if iszero(lt(oldLen, _27))\n                        {\n                            mstore(_4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            mstore(_3, 0x32)\n                            revert(_4, _21)\n                        }\n                        mstore(_4, /** @src 65:1648:1661  \"depositTokens\" */ 0x12)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        let slot := add(84827061063453624289975705683721713058963870421084015214609271099009937454148, oldLen)\n                        sstore(slot, or(and(sload(slot), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _25), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ value))\n                        let value_1 := and(sload(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let value_2 := and(sload(/** @src 65:1544:1589  \"rewardDistributor = deployRewardDistributor()\" */ 0x14), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\"\n                        if iszero(extcodesize(value_1))\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\"\n                        let _28 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\"\n                        mstore(_28, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(227, 0x189acdbd))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\" */ add(_28, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), value_2)\n                        /// @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\"\n                        let _29 := call(gas(), value_1, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\" */ _28, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21, /** @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\" */ _28, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\"\n                        if iszero(_29)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_4 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_4, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 65:1681:1739  \"RewardTracker(rewardTracker).initialize(rewardDistributor)\"\n                        if _29\n                        {\n                            finalize_allocation_6591(_28)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:1775:1798  \"vester = deployVester()\" */ 0x15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(sload(/** @src 65:1775:1798  \"vester = deployVester()\" */ 0x15), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _25), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 65:1784:1798  \"deployVester()\" */ fun_deployVester(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)))\n                        let _30 := and(/** @src 65:1863:1885  \"deployRewardRouterV2()\" */ fun_deployRewardRouterV2(), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _31 := sload(/** @src 65:1846:1885  \"rewardRouterV2 = deployRewardRouterV2()\" */ 0x16)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:1846:1885  \"rewardRouterV2 = deployRewardRouterV2()\" */ 0x16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(_31, _25), _30))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        let value_3 := or(and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _31, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4), _30)\n                        let value_4 := and(sload(/** @src 65:1667:1670  \"ZFI\" */ 0x0f), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let value_5 := and(sload(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let value_6 := and(sload(/** @src 65:1775:1798  \"vester = deployVester()\" */ 0x15), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\"\n                        if iszero(extcodesize(value_3))\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\"\n                        let _32 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\"\n                        mstore(_32, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xc0c53b8b))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\" */ add(_32, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), value_4)\n                        mstore(add(/** @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\" */ _32, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21), value_5)\n                        mstore(add(/** @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\" */ _32, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 68), value_6)\n                        /// @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\"\n                        let _33 := call(gas(), value_3, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\" */ _32, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 100, /** @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\" */ _32, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\"\n                        if iszero(_33)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_5 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_5, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 65:1933:2002  \"RewardRouterV2(rewardRouterV2).initialize(ZFI, rewardTracker, vester)\"\n                        if _33\n                        {\n                            finalize_allocation_6591(_32)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        let value_7 := and(sload(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let value_8 := and(sload(/** @src 65:1775:1798  \"vester = deployVester()\" */ 0x15), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\"\n                        if iszero(extcodesize(value_7))\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\"\n                        let _34 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _35 := shl(224, 0x9cb7de4b)\n                        /// @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\"\n                        mstore(_34, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _35)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\" */ add(_34, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), value_8)\n                        mstore(add(/** @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\" */ _34, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21), 1)\n                        /// @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\"\n                        let _36 := call(gas(), value_7, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\" */ _34, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 68, /** @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\" */ _34, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\"\n                        if iszero(_36)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_6 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_6, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 65:2071:2133  \"RewardTracker(rewardTracker).setHandler(address(vester), true)\"\n                        if _36\n                        {\n                            finalize_allocation_6591(_34)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        let value_9 := and(sload(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let value_10 := and(sload(/** @src 65:1846:1885  \"rewardRouterV2 = deployRewardRouterV2()\" */ 0x16), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\"\n                        if iszero(extcodesize(value_9))\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\"\n                        let _37 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\"\n                        mstore(_37, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _35)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\" */ add(_37, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), value_10)\n                        mstore(add(/** @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\" */ _37, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21), 1)\n                        /// @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\"\n                        let _38 := call(gas(), value_9, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\" */ _37, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 68, /** @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\" */ _37, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\"\n                        if iszero(_38)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_7 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_7, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 65:2210:2271  \"RewardTracker(rewardTracker).setHandler(rewardRouterV2, true)\"\n                        if _38\n                        {\n                            finalize_allocation_6591(_37)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        let value_11 := and(sload(/** @src 65:1775:1798  \"vester = deployVester()\" */ 0x15), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        let value_12 := and(sload(/** @src 65:1846:1885  \"rewardRouterV2 = deployRewardRouterV2()\" */ 0x16), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\"\n                        if iszero(extcodesize(value_11))\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\"\n                        let _39 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\"\n                        mstore(_39, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _35)\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\" */ add(_39, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), value_12)\n                        mstore(add(/** @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\" */ _39, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21), 1)\n                        /// @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\"\n                        let _40 := call(gas(), value_11, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\" */ _39, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 68, /** @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\" */ _39, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\"\n                        if iszero(_40)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_8 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_8, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 65:2341:2388  \"Vester(vester).setHandler(rewardRouterV2, true)\"\n                        if _40\n                        {\n                            finalize_allocation_6591(_39)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        let value_13 := and(sload(/** @src 65:1458:1495  \"rewardTracker = deployRewardTracker()\" */ _26), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _23)\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        if iszero(extcodesize(value_13))\n                        {\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        let _41 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        mstore(_41, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x5a47a1a7))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        mstore(/** @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\" */ add(_41, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _3), 1)\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        let _42 := call(gas(), value_13, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\" */ _41, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _21, /** @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\" */ _41, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4)\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        if iszero(_42)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_9 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_9, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        if _42\n                        {\n                            finalize_allocation_6591(_41)\n                            /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        /// @src 65:2634:2693  \"RewardTracker(rewardTracker).setInPrivateTransferMode(true)\"\n                        fun_transferAdminAndGovRights()\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        return(_4, _4)\n                    }\n                    case 0xc1f7bd7d {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret_2 := fun_deployVester()\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(ret_2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0xc89f15e1 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        fun_transferAdminAndGovRights()\n                        return(_4, _4)\n                    }\n                    case 0xf5c2bce8 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret_3 := fun_deployRewardTracker()\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, and(ret_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)))\n                        /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_14 := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 0xff)\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, iszero(iszero(value_14)))\n                        return(memPos_4, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function finalize_allocation_6591(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_8642(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 64, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newFreePtr)\n            }\n            function finalize_allocation_8643(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let value := mload(headStart)\n                if iszero(eq(value, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := value\n            }\n            /// @ast-id 54471 @src 65:2906:3174  \"function deployRewardTracker() public returns(address rewardTrackerAddress){...\"\n            function fun_deployRewardTracker() -> var_rewardTrackerAddress\n            {\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value := and(sload(/** @src 65:3063:3066  \"ZFI\" */ 0x0f), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _1)\n                /// @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\"\n                let _2 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                /// @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\"\n                let _3 := datasize(\"RewardTracker_56728\")\n                let _4 := add(_2, _3)\n                if or(gt(_4, 0xffffffffffffffff), lt(_4, _2))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\"\n                datacopy(_2, dataoffset(\"RewardTracker_56728\"), _3)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(_4, 96)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ add(_4, 96), 10)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 128), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ \"staked ZFI\")\n                mstore(add(_4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 160)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ add(_4, 160), 5)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 192), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ \"stZFI\")\n                mstore(add(_4, 64), value)\n                /// @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\"\n                let expr_54454_address := create(/** @src -1:-1:-1 */ 0, /** @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\" */ _2, add(sub(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\" */ _2), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 224))\n                /// @src 65:3022:3067  \"new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI)\"\n                if iszero(expr_54454_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 65:2991:3068  \"rewardTrackerAddress = address(new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI))\"\n                var_rewardTrackerAddress := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 65:3014:3068  \"address(new RewardTracker(\\\"staked ZFI\\\", \\\"stZFI\\\", ZFI))\" */ expr_54454_address, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _1)\n                let memPtr := mload(64)\n                finalize_allocation_8642(memPtr)\n                mstore(memPtr, 29)\n                mstore(add(memPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ \"RewardTracker is deploy at : \")\n                /// @src 65:3078:3123  \"console2.log(\\\"RewardTracker is deploy at : \\\")\"\n                fun_log_20825(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ memPtr)\n                /// @src 65:3146:3166  \"rewardTrackerAddress\"\n                fun_log(var_rewardTrackerAddress)\n            }\n            /// @ast-id 20825 @src 11:6598:6719  \"function log(string memory p0) internal pure {...\"\n            function fun_log_20825(var_p0_mpos)\n            {\n                /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                let expr_mpos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                let _1 := 0x20\n                let _2 := add(expr_mpos, _1)\n                mstore(_2, shl(226, 0x104c13eb))\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_mpos, 36), _1)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let length := mload(var_p0_mpos)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ add(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 68), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                for { }\n                lt(i, length)\n                {\n                    i := add(i, /** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                {\n                    mstore(add(add(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ i), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(add(add(var_p0_mpos, i), /** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)))\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(add(add(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ length), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100), /** @src -1:-1:-1 */ 0)\n                /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                let _3 := sub(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ add(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ and(add(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ length, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 31), not(31))), /** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos)\n                mstore(expr_mpos, add(_3, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 68))\n                /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                finalize_allocation(expr_mpos, add(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100))\n                /// @src 11:1222:1381  \"assembly {...\"\n                pop(staticcall(gas(), /** @src 11:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 11:1222:1381  \"assembly {...\" */ _2, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(/** @src 11:1105:1119  \"payload.length\" */ expr_mpos), /** @src -1:-1:-1 */ 0, 0))\n            }\n            /// @ast-id 20853 @src 11:6841:6957  \"function log(address p0) internal pure {...\"\n            function fun_log(var_p0)\n            {\n                /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                let expr_20849_mpos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                let _1 := add(expr_20849_mpos, 0x20)\n                mstore(_1, shl(225, 0x161765e1))\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\" */ add(expr_20849_mpos, 36), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(var_p0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)))\n                /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                mstore(expr_20849_mpos, 36)\n                finalize_allocation_8643(expr_20849_mpos)\n                /// @src 11:1222:1381  \"assembly {...\"\n                pop(staticcall(gas(), /** @src 11:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 11:1222:1381  \"assembly {...\" */ _1, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(/** @src 11:1105:1119  \"payload.length\" */ expr_20849_mpos), /** @src 11:1222:1381  \"assembly {...\" */ 0, 0))\n            }\n            /// @ast-id 54507 @src 65:3180:3482  \"function deployRewardDistributor() public returns(address rewardDistributorAddress){...\"\n            function fun_deployRewardDistributor() -> var_rewardDistributorAddress\n            {\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value := and(sload(/** @src 65:3338:3341  \"ZFI\" */ 0x0f), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _1)\n                let value_1 := and(sload(/** @src 65:3352:3365  \"rewardTracker\" */ 0x13), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _1)\n                /// @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\"\n                let _2 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                /// @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\"\n                let _3 := datasize(\"RewardDistributor_54977\")\n                let _4 := add(_2, _3)\n                if or(gt(_4, 0xffffffffffffffff), lt(_4, _2))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\"\n                datacopy(_2, dataoffset(\"RewardDistributor_54977\"), _3)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(_4, value)\n                mstore(add(_4, 32), value_1)\n                /// @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\"\n                let expr_54490_address := create(/** @src -1:-1:-1 */ 0, /** @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\" */ _2, add(sub(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _4, /** @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\" */ _2), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 64))\n                /// @src 65:3308:3367  \"new RewardDistributor(address(ZFI), address(rewardTracker))\"\n                if iszero(expr_54490_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 65:3273:3368  \"rewardDistributorAddress = address(new RewardDistributor(address(ZFI), address(rewardTracker)))\"\n                var_rewardDistributorAddress := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 65:3300:3368  \"address(new RewardDistributor(address(ZFI), address(rewardTracker)))\" */ expr_54490_address, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _1)\n                let memPtr := mload(64)\n                finalize_allocation_8643(memPtr)\n                mstore(memPtr, 33)\n                mstore(add(memPtr, 32), \"RewardDistributor is deploy at :\")\n                mstore(add(memPtr, 64), \" \")\n                /// @src 65:3378:3427  \"console2.log(\\\"RewardDistributor is deploy at : \\\")\"\n                fun_log_20825(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ memPtr)\n                /// @src 65:3450:3474  \"rewardDistributorAddress\"\n                fun_log(var_rewardDistributorAddress)\n            }\n            /// @ast-id 54541 @src 65:3488:3769  \"function deployVester() public returns(address vesterAddress){...\"\n            function fun_deployVester() -> var_vesterAddress\n            {\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _1 := sload(/** @src 65:3625:3640  \"vestingDuration\" */ 0x11)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _2 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value := and(sload(/** @src 65:3642:3655  \"rewardTracker\" */ 0x13), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                let value_1 := and(sload(/** @src 65:3657:3660  \"ZFI\" */ 0x0f), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                /// @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\"\n                let _3 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                /// @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\"\n                let _4 := datasize(\"Vester_57762\")\n                let _5 := add(_3, _4)\n                if or(gt(_5, 0xffffffffffffffff), lt(_5, _3))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\"\n                datacopy(_3, dataoffset(\"Vester_57762\"), _4)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(_5, 192)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ add(_5, 192), /** @src 65:3625:3640  \"vestingDuration\" */ 0x11)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 224), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ \"vested staked ZFI\")\n                let _6 := 256\n                mstore(add(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _6)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ add(_5, _6), 6)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 288), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ \"vstZFI\")\n                mstore(add(_5, 64), _1)\n                mstore(add(_5, 96), value)\n                mstore(add(_5, 128), value_1)\n                mstore(add(_5, 160), value)\n                /// @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\"\n                let expr_54524_address := create(/** @src -1:-1:-1 */ 0, /** @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\" */ _3, add(sub(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _5, /** @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\" */ _3), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 320))\n                /// @src 65:3583:3676  \"new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker)\"\n                if iszero(expr_54524_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 65:3559:3677  \"vesterAddress = address(new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker))\"\n                var_vesterAddress := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 65:3575:3677  \"address(new Vester(\\\"vested staked ZFI\\\", \\\"vstZFI\\\", vestingDuration, rewardTracker, ZFI, rewardTracker))\" */ expr_54524_address, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                let memPtr := mload(64)\n                finalize_allocation_8642(memPtr)\n                mstore(memPtr, 22)\n                mstore(add(memPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ \"Vester is deploy at : \")\n                /// @src 65:3687:3725  \"console2.log(\\\"Vester is deploy at : \\\")\"\n                fun_log_20825(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ memPtr)\n                /// @src 65:3748:3761  \"vesterAddress\"\n                fun_log(var_vesterAddress)\n            }\n            /// @ast-id 54569 @src 65:3775:4023  \"function deployRewardRouterV2() public returns(address rewardRouterV2Address){...\"\n            function fun_deployRewardRouterV2() -> var_rewardRouterV2Address\n            {\n                /// @src 65:3894:3914  \"new RewardRouterV2()\"\n                let _1 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                /// @src 65:3894:3914  \"new RewardRouterV2()\"\n                let _2 := datasize(\"RewardRouterV2_55390\")\n                let _3 := add(_1, _2)\n                if or(gt(_3, 0xffffffffffffffff), lt(_3, _1))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 65:3894:3914  \"new RewardRouterV2()\"\n                datacopy(_1, dataoffset(\"RewardRouterV2_55390\"), _2)\n                let expr_address := create(0, _1, sub(_3, _1))\n                if iszero(expr_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src 65:3894:3914  \"new RewardRouterV2()\" */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 65:3862:3915  \"rewardRouterV2Address = address(new RewardRouterV2())\"\n                var_rewardRouterV2Address := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ and(/** @src 65:3886:3915  \"address(new RewardRouterV2())\" */ expr_address, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1))\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let memPtr := mload(64)\n                finalize_allocation_8642(memPtr)\n                mstore(memPtr, 30)\n                mstore(add(memPtr, 32), \"RewardRouterV2 is deploy at : \")\n                /// @src 65:3925:3971  \"console2.log(\\\"RewardRouterV2 is deploy at : \\\")\"\n                fun_log_20825(/** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ memPtr)\n                /// @src 65:3994:4015  \"rewardRouterV2Address\"\n                fun_log(var_rewardRouterV2Address)\n            }\n            /// @ast-id 54608 @src 65:4029:4554  \"function transferAdminAndGovRights() public {...\"\n            function fun_transferAdminAndGovRights()\n            {\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _1 := sload(/** @src 65:4208:4225  \"rewardDistributor\" */ 0x14)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _2 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sub(shl(160, 1), 1)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value_1 := and(_1, _2)\n                let value_2 := and(shr(24, sload(/** @src 65:4236:4249  \"ADMIN_ADDRESS\" */ 0x0c)), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                /// @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\"\n                if iszero(extcodesize(value_1))\n                {\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    revert(/** @src -1:-1:-1 */ value, value)\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let _3 := 64\n                /// @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\"\n                let _4 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                /// @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\"\n                mstore(_4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3825b601))\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ add(_4, 4), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ value_2)\n                /// @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\"\n                let _5 := call(gas(), value_1, /** @src -1:-1:-1 */ value, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ _4, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 36, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ _4, /** @src -1:-1:-1 */ value)\n                /// @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\"\n                if iszero(_5)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src -1:-1:-1 */ value, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\"\n                if _5\n                {\n                    finalize_allocation_6591(_4)\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    value := /** @src -1:-1:-1 */ value\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value_3 := and(sload(/** @src 65:4208:4225  \"rewardDistributor\" */ 0x14), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                let value_4 := and(sload(/** @src 65:4304:4315  \"GOV_ADDRESS\" */ 0x0d), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                /// @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\"\n                if iszero(extcodesize(value_3))\n                {\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                }\n                /// @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\"\n                let _6 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _7 := shl(225, 0x67d6abd1)\n                /// @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\"\n                mstore(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _7)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\" */ add(_6, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ 4), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ value_4)\n                /// @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\"\n                let _8 := call(gas(), value_3, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\" */ _6, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 36, /** @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\" */ _6, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value)\n                /// @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\"\n                if iszero(_8)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_1 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_1, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 65:4260:4316  \"RewardDistributor(rewardDistributor).setGov(GOV_ADDRESS)\"\n                if _8\n                {\n                    finalize_allocation_6591(_6)\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    if value\n                    {\n                        revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                    }\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value_5 := and(sload(/** @src 65:4365:4378  \"rewardTracker\" */ 0x13), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                let value_6 := and(sload(/** @src 65:4304:4315  \"GOV_ADDRESS\" */ 0x0d), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                /// @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\"\n                if iszero(extcodesize(value_5))\n                {\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                }\n                /// @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\"\n                let _9 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                /// @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\"\n                mstore(_9, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _7)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\" */ add(_9, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ 4), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ value_6)\n                /// @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\"\n                let _10 := call(gas(), value_5, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\" */ _9, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 36, /** @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\" */ _9, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value)\n                /// @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\"\n                if iszero(_10)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_2 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_2, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 65:4351:4399  \"RewardTracker(rewardTracker).setGov(GOV_ADDRESS)\"\n                if _10\n                {\n                    finalize_allocation_6591(_9)\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    if value\n                    {\n                        revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                    }\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value_7 := and(sload(/** @src 65:4434:4440  \"vester\" */ 0x15), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                let value_8 := and(sload(/** @src 65:4304:4315  \"GOV_ADDRESS\" */ 0x0d), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                /// @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\"\n                if iszero(extcodesize(value_7))\n                {\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                }\n                /// @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\"\n                let _11 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                /// @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\"\n                mstore(_11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _7)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\" */ add(_11, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ 4), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ value_8)\n                /// @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\"\n                let _12 := call(gas(), value_7, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\" */ _11, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 36, /** @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\" */ _11, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value)\n                /// @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\"\n                if iszero(_12)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_3 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_3, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 65:4427:4461  \"Vester(vester).setGov(GOV_ADDRESS)\"\n                if _12\n                {\n                    finalize_allocation_6591(_11)\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    if value\n                    {\n                        revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                    }\n                }\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                let value_9 := and(sload(/** @src 65:4512:4526  \"rewardRouterV2\" */ 0x16), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                let value_10 := and(sload(/** @src 65:4304:4315  \"GOV_ADDRESS\" */ 0x0d), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ _2)\n                /// @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\"\n                if iszero(extcodesize(value_9))\n                {\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                }\n                /// @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\"\n                let _13 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                /// @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\"\n                mstore(_13, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _7)\n                /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                mstore(/** @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\" */ add(_13, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ 4), /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ value_10)\n                /// @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\"\n                let _14 := call(gas(), value_9, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\" */ _13, /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ 36, /** @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\" */ _13, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value)\n                /// @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\"\n                if iszero(_14)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_4 := /** @src 65:563:4556  \"contract ZfiStakingScript is Script {...\" */ mload(_3)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_4, /** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 65:4497:4547  \"RewardRouterV2(rewardRouterV2).setGov(GOV_ADDRESS)\"\n                if _14\n                {\n                    finalize_allocation_6591(_13)\n                    /// @src 65:563:4556  \"contract ZfiStakingScript is Script {...\"\n                    if value\n                    {\n                        revert(/** @src 65:4190:4250  \"RewardDistributor(rewardDistributor).setAdmin(ADMIN_ADDRESS)\" */ value, value)\n                    }\n                }\n            }\n        }\n        /// @use-src 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 67:\"src/access/Governable.sol\", 68:\"src/staking/RewardDistributor.sol\", 72:\"src/staking/interfaces/IRewardDistributor.sol\"\n        object \"RewardDistributor_54977\" {\n            code {\n                {\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"RewardDistributor_54977\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let value0 := abi_decode_address_fromMemory(_1)\n                    let value1 := abi_decode_address_fromMemory(add(_1, 32))\n                    /// @src 50:1713:1714  \"1\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 50:1713:1714  \"1\" */ 0x01)\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _2 := not(sub(shl(160, 1), 1))\n                    sstore(/** @src 50:1713:1714  \"1\" */ 0x01, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 50:1713:1714  \"1\" */ 0x01), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 67:204:214  \"msg.sender\" */ caller()))\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _3 := sub(shl(160, 1), 1)\n                    let _4 := and(/** @src 68:989:1015  \"_rewardToken == address(0)\" */ value0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                    /// @src 68:989:1047  \"_rewardToken == address(0) || _rewardTracker == address(0)\"\n                    let expr := /** @src 68:989:1015  \"_rewardToken == address(0)\" */ iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                    /// @src 68:989:1047  \"_rewardToken == address(0) || _rewardTracker == address(0)\"\n                    if iszero(expr)\n                    {\n                        expr := /** @src 68:1019:1047  \"_rewardTracker == address(0)\" */ iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(/** @src 68:1019:1047  \"_rewardTracker == address(0)\" */ value1, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3))\n                    }\n                    /// @src 68:985:1099  \"if (_rewardToken == address(0) || _rewardTracker == address(0)) {...\"\n                    if expr\n                    {\n                        /// @src 68:1070:1088  \"ZeroAddressError()\"\n                        let _5 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 68:1070:1088  \"ZeroAddressError()\"\n                        mstore(_5, shl(224, 0x3efa09af))\n                        revert(_5, 4)\n                    }\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    sstore(/** @src 68:1108:1134  \"rewardToken = _rewardToken\" */ 0x02, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 68:1108:1134  \"rewardToken = _rewardToken\" */ 0x02), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), _4))\n                    sstore(/** @src 68:1144:1174  \"rewardTracker = _rewardTracker\" */ 0x05, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 68:1144:1174  \"rewardTracker = _rewardTracker\" */ 0x05), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), and(value1, _3)))\n                    sstore(/** @src 68:1184:1202  \"admin = msg.sender\" */ 0x06, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 68:1184:1202  \"admin = msg.sender\" */ 0x06), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 67:204:214  \"msg.sender\" */ caller()))\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    let _6 := mload(64)\n                    let _7 := datasize(\"RewardDistributor_54977_deployed\")\n                    codecopy(_6, dataoffset(\"RewardDistributor_54977_deployed\"), _7)\n                    return(_6, _7)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 47:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 48:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 67:\"src/access/Governable.sol\", 68:\"src/staking/RewardDistributor.sol\"\n            object \"RewardDistributor_54977_deployed\" {\n                code {\n                    {\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x12d43a51 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                mstore(_1, and(sload(/** @src 67:149:167  \"address public gov\" */ 1), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(_1, 32)\n                            }\n                            case 0x18e20a03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value := calldataload(_3)\n                                let _5 := sub(shl(160, 1), 1)\n                                /// @src 68:833:893  \"require(msg.sender == admin, \\\"RewardDistributor: forbidden\\\")\"\n                                require_helper_stringliteral_3ae3(/** @src 68:841:860  \"msg.sender == admin\" */ eq(/** @src 68:841:851  \"msg.sender\" */ caller(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 68:855:860  \"admin\" */ 0x06), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _5)))\n                                if /** @src 68:1932:1957  \"lastDistributionTime != 0\" */ iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sload(_3))\n                                {\n                                    let memPtr := mload(_2)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, _3), 32)\n                                    mstore(add(memPtr, 36), 47)\n                                    mstore(add(memPtr, 68), \"RewardDistributor: invalid lastD\")\n                                    mstore(add(memPtr, 100), \"istributionTime\")\n                                    revert(memPtr, 132)\n                                }\n                                let cleaned := and(sload(/** @src 68:2055:2068  \"rewardTracker\" */ 0x05), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _5)\n                                /// @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                if iszero(extcodesize(cleaned))\n                                {\n                                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                let _6 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                mstore(_6, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(226, 0x0f8562c3))\n                                /// @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                let _7 := call(gas(), cleaned, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4, /** @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\" */ _6, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3, /** @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\" */ _6, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                                /// @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                if iszero(_7)\n                                {\n                                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    let pos := mload(_2)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 68:2040:2085  \"IRewardTracker(rewardTracker).updateRewards()\"\n                                if _7\n                                {\n                                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                    if gt(_6, 0xffffffffffffffff)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, 0x24)\n                                    }\n                                    mstore(_2, _6)\n                                    _4 := _4\n                                }\n                                sstore(/** @src 68:2095:2122  \"tokensPerInterval = _amount\" */ 0x03, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ value)\n                                /// @src 68:2137:2169  \"TokensPerIntervalChange(_amount)\"\n                                let _8 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_8, value)\n                                /// @src 68:2137:2169  \"TokensPerIntervalChange(_amount)\"\n                                log1(_8, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 68:2137:2169  \"TokensPerIntervalChange(_amount)\" */ 0x98dc76c39aa5a5dcb749f8750a65db3dfa1e14bcc1591a9c16a7420e5da748f8)\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x3ae6d6eb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 68:833:893  \"require(msg.sender == admin, \\\"RewardDistributor: forbidden\\\")\"\n                                require_helper_stringliteral_3ae3(/** @src 68:841:860  \"msg.sender == admin\" */ eq(/** @src 68:841:851  \"msg.sender\" */ caller(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 68:855:860  \"admin\" */ 0x06), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))))\n                                sstore(_3, /** @src 68:1770:1785  \"block.timestamp\" */ timestamp())\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x6bcb411a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_1 := and(sload(/** @src 68:612:640  \"address public rewardTracker\" */ 5), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos := mload(_2)\n                                mstore(memPos, value_1)\n                                return(memPos, 32)\n                            }\n                            case 0x6ccae054 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let value_2 := calldataload(36)\n                                let _9 := sub(shl(160, 1), 1)\n                                if iszero(eq(value_2, and(value_2, _9))) { revert(0, 0) }\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(1), _9)))\n                                /// @src 68:1659:1666  \"_amount\"\n                                fun_safeTransfer(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(/** @src 68:1621:1635  \"IERC20(_token)\" */ value0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _9), /** @src 68:1659:1666  \"_amount\" */ value_2, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ calldataload(68))\n                                return(_4, _4)\n                            }\n                            case 0x704b6c02 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                let _10 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _10)))\n                                let _11 := and(/** @src 68:1280:1300  \"_admin == address(0)\" */ value0_1, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _10)\n                                /// @src 68:1276:1352  \"if (_admin == address(0)) {...\"\n                                if /** @src 68:1280:1300  \"_admin == address(0)\" */ iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _11)\n                                /// @src 68:1276:1352  \"if (_admin == address(0)) {...\"\n                                {\n                                    /// @src 68:1323:1341  \"ZeroAddressError()\"\n                                    let _12 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 68:1323:1341  \"ZeroAddressError()\"\n                                    mstore(_12, shl(224, 0x3efa09af))\n                                    revert(_12, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 68:1361:1375  \"admin = _admin\" */ 0x06, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 68:1361:1375  \"admin = _admin\" */ 0x06), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _11))\n                                /// @src 68:1390:1406  \"AdminSet(_admin)\"\n                                let _13 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_13, _11)\n                                /// @src 68:1390:1406  \"AdminSet(_admin)\"\n                                log1(_13, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 68:1390:1406  \"AdminSet(_admin)\" */ 0x8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c)\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x75b17350 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _14 := sload(_3)\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _14)\n                                return(memPos_1, 32)\n                            }\n                            case 0xa8d93627 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _15 := sload(/** @src 68:524:565  \"uint256 public override tokensPerInterval\" */ 3)\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, _15)\n                                return(memPos_2, 32)\n                            }\n                            case 0xcfad57a2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address()\n                                let _16 := sload(/** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                let _17 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(_16, _17)))\n                                let _18 := and(/** @src 67:392:410  \"_gov == address(0)\" */ value0_2, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _17)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                if /** @src 67:392:410  \"_gov == address(0)\" */ iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _18)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                {\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    let _19 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    mstore(_19, /** @src 68:1323:1341  \"ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    revert(_19, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 67:278:281  \"gov\" */ 0x01, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ or(and(_16, shl(160, 0xffffffffffffffffffffffff)), _18))\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                let _20 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_20, _18)\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                log1(_20, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 32, /** @src 67:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xe4fc6b6d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := fun_distribute()\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, ret)\n                                return(memPos_3, 32)\n                            }\n                            case 0xeded3fda {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret_1 := fun_pendingRewards()\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, ret_1)\n                                return(memPos_4, 32)\n                            }\n                            case 0xf7c618c1 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_3 := and(sload(/** @src 68:483:518  \"address public override rewardToken\" */ 2), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, value_3)\n                                return(memPos_5, 32)\n                            }\n                            case 0xf851a440 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_4 := and(sload(/** @src 68:647:667  \"address public admin\" */ 6), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, value_4)\n                                return(memPos_6, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function require_helper_stringliteral_7c37(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"Governable: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 46730 @src 47:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := add(expr_mpos, 0x20)\n                        mstore(_1, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                        let _2 := sub(shl(160, 1), 1)\n                        mstore(/** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, 36), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(var_to, _2))\n                        mstore(add(/** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 68), var_value)\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_mpos, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 68)\n                        let newFreePtr := add(expr_mpos, 128)\n                        let _3 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _3), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        mstore(64, newFreePtr)\n                        let _4 := and(/** @src 47:4504:4518  \"address(token)\" */ var_token_address, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2)\n                        /// @src -1:-1:-1\n                        let _5 := 0\n                        /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), _4, /** @src -1:-1:-1 */ _5, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_mpos), /** @src -1:-1:-1 */ _5, _5)\n                        /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                        let data := /** @src -1:-1:-1 */ _5\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            if gt(_6, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _5, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                            }\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, add(and(add(_6, 31), not(31)), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ _5, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ returndatasize())\n                        }\n                        /// @src 48:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                        let var_mpos := /** @src 48:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_4, expr_component, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ data)\n                        /// @src 47:4551:4568  \"returndata.length\"\n                        let expr := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 47:4551:4568  \"returndata.length\" */ var_mpos)\n                        /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        let expr_1 := /** @src 47:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                        /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        if expr_1\n                        {\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            if slt(sub(/** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let value := mload(/** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let _7 := iszero(value)\n                            if iszero(eq(value, iszero(_7)))\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            expr_1 := _7\n                        }\n                        /// @src 47:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                        if expr_1\n                        {\n                            /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            let _8 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_8, shl(224, 0x5274afe7))\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            mstore(/** @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_8, 4), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _4)\n                            /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_8, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                    }\n                    /// @ast-id 47182 @src 48:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 48:4793:5201  \"if (!success) {...\"\n                        switch /** @src 48:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 48:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 48:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 48:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 48:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 48:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 48:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                                mstore(/** @src 48:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 36)\n                            }\n                            /// @src 48:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 48:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 48:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(/** @src 48:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 48:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 48:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                    function require_helper_stringliteral_3ae3(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 28)\n                            mstore(add(memPtr, 68), \"RewardDistributor: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 54903 @src 68:2182:2454  \"function pendingRewards() public view override returns (uint256) {...\"\n                    function fun_pendingRewards() -> var_\n                    {\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := sload(/** @src 68:2280:2300  \"lastDistributionTime\" */ 0x04)\n                        /// @src 68:2257:2335  \"if (block.timestamp == lastDistributionTime) {...\"\n                        if /** @src 68:2261:2300  \"block.timestamp == lastDistributionTime\" */ eq(/** @src 68:2261:2276  \"block.timestamp\" */ timestamp(), /** @src 68:2261:2300  \"block.timestamp == lastDistributionTime\" */ _1)\n                        /// @src 68:2257:2335  \"if (block.timestamp == lastDistributionTime) {...\"\n                        {\n                            /// @src 68:2316:2324  \"return 0\"\n                            var_ := /** @src -1:-1:-1 */ 0\n                            /// @src 68:2316:2324  \"return 0\"\n                            leave\n                        }\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let diff := sub(/** @src 68:2261:2276  \"block.timestamp\" */ timestamp(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)\n                        if gt(diff, /** @src 68:2261:2276  \"block.timestamp\" */ timestamp())\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 68:2280:2300  \"lastDistributionTime\" */ 0x04, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                        }\n                        let _2 := sload(/** @src 68:2419:2436  \"tokensPerInterval\" */ 0x03)\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let product := mul(_2, diff)\n                        if iszero(or(iszero(_2), eq(diff, div(product, _2))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 68:2280:2300  \"lastDistributionTime\" */ 0x04, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 0x24)\n                        }\n                        /// @src 68:2412:2447  \"return tokensPerInterval * timeDiff\"\n                        var_ := product\n                    }\n                    /// @ast-id 54976 @src 68:2460:3106  \"function distribute() external override returns (uint256) {...\"\n                    function fun_distribute() -> var\n                    {\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 68:2549:2576  \"msg.sender == rewardTracker\" */ eq(/** @src 68:2549:2559  \"msg.sender\" */ caller(), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 68:2563:2576  \"rewardTracker\" */ 0x05), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 37)\n                            mstore(add(memPtr, 68), \"RewardDistributor: invalid msg.s\")\n                            mstore(add(memPtr, 100), \"ender\")\n                            revert(memPtr, 132)\n                        }\n                        /// @src 68:2649:2682  \"uint256 amount = pendingRewards()\"\n                        let var_amount := /** @src 68:2666:2682  \"pendingRewards()\" */ fun_pendingRewards()\n                        /// @src 68:2692:2742  \"if (amount == 0) {...\"\n                        if /** @src 68:2696:2707  \"amount == 0\" */ iszero(var_amount)\n                        /// @src 68:2692:2742  \"if (amount == 0) {...\"\n                        {\n                            /// @src 68:2723:2731  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 68:2723:2731  \"return 0\"\n                            leave\n                        }\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        sstore(/** @src 68:2752:2790  \"lastDistributionTime = block.timestamp\" */ 0x04, /** @src 68:2775:2790  \"block.timestamp\" */ timestamp())\n                        /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                        let cleaned := and(sload(/** @src 68:2826:2837  \"rewardToken\" */ 0x02), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _1)\n                        /// @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        let _2 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        mstore(_2, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ add(_2, /** @src 68:2752:2790  \"lastDistributionTime = block.timestamp\" */ 0x04), /** @src 68:2857:2861  \"this\" */ address())\n                        /// @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        let _3 := staticcall(gas(), cleaned, _2, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ 36, /** @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ _2, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            if slt(sub(/** @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ add(_2, _4), /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ _2), /** @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ 32)\n                            /// @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\"\n                            expr := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(_2)\n                        }\n                        /// @src 68:2873:2936  \"if (amount > balance) {...\"\n                        if /** @src 68:2877:2893  \"amount > balance\" */ gt(var_amount, expr)\n                        /// @src 68:2873:2936  \"if (amount > balance) {...\"\n                        {\n                            /// @src 68:2909:2925  \"amount = balance\"\n                            var_amount := expr\n                        }\n                        /// @src 68:2946:3077  \"if (amount != 0) {...\"\n                        if /** @src 68:2950:2961  \"amount != 0\" */ iszero(iszero(var_amount))\n                        /// @src 68:2946:3077  \"if (amount != 0) {...\"\n                        {\n                            /// @src 68:3022:3028  \"amount\"\n                            fun_safeTransfer(/** @src 68:2977:2996  \"IERC20(rewardToken)\" */ cleaned, /** @src 68:2549:2559  \"msg.sender\" */ caller(), /** @src 68:3022:3028  \"amount\" */ var_amount)\n                            /// @src 68:3048:3066  \"Distribute(amount)\"\n                            let _5 := /** @src 68:366:3108  \"contract RewardDistributor is IRewardDistributor, ReentrancyGuard, Governable {...\" */ mload(64)\n                            mstore(_5, var_amount)\n                            /// @src 68:3048:3066  \"Distribute(amount)\"\n                            log1(_5, /** @src 68:2819:2863  \"IERC20(rewardToken).balanceOf(address(this))\" */ 32, /** @src 68:3048:3066  \"Distribute(amount)\" */ 0x4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead)\n                        }\n                        /// @src 68:3086:3099  \"return amount\"\n                        var := var_amount\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        /// @use-src 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 67:\"src/access/Governable.sol\", 69:\"src/staking/RewardRouterV2.sol\"\n        object \"RewardRouterV2_55390\" {\n            code {\n                {\n                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    /// @src 50:1713:1714  \"1\"\n                    sstore(/** @src 50:1917:1938  \"_status = NOT_ENTERED\" */ 0x00, /** @src 50:1713:1714  \"1\" */ 0x01)\n                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                    sstore(/** @src 50:1713:1714  \"1\" */ 0x01, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 50:1713:1714  \"1\" */ 0x01), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ not(sub(shl(160, 1), 1))), /** @src 67:204:214  \"msg.sender\" */ caller()))\n                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                    let _2 := datasize(\"RewardRouterV2_55390_deployed\")\n                    codecopy(_1, dataoffset(\"RewardRouterV2_55390_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 47:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 48:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 67:\"src/access/Governable.sol\", 69:\"src/staking/RewardRouterV2.sol\"\n            object \"RewardRouterV2_55390_deployed\" {\n                code {\n                    {\n                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x12d43a51 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                mstore(_1, and(sload(/** @src 67:149:167  \"address public gov\" */ 1), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(_1, 32)\n                            }\n                            case 0x1af276a6 {\n                                if callvalue() { revert(_4, _4) }\n                                let _5 := 32\n                                if slt(add(calldatasize(), not(3)), _5) { revert(_4, _4) }\n                                let offset := calldataload(_3)\n                                if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                                let value0 := abi_decode_array_address_dyn(add(_3, offset), calldatasize())\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let _6 := sub(shl(160, 1), 1)\n                                /// @src 67:278:281  \"gov\"\n                                let _7 := 0x01\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ _7), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _6)))\n                                /// @src 69:3256:3269  \"uint256 i = 0\"\n                                let var_i := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                /// @src 69:3251:3346  \"for (uint256 i = 0; i < _accounts.length; i++) {...\"\n                                for { }\n                                /** @src 67:278:281  \"gov\" */ _7\n                                /// @src 69:3256:3269  \"uint256 i = 0\"\n                                {\n                                    /// @src 69:3293:3296  \"i++\"\n                                    var_i := increment_uint256(var_i)\n                                }\n                                {\n                                    /// @src 69:3271:3291  \"i < _accounts.length\"\n                                    if iszero(lt(var_i, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(/** @src 69:3275:3291  \"_accounts.length\" */ value0)))\n                                    /// @src 69:3271:3291  \"i < _accounts.length\"\n                                    { break }\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let cleaned := and(mload(/** @src 69:3322:3334  \"_accounts[i]\" */ memory_array_index_access_address_dyn(value0, var_i)), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _6)\n                                    let cleaned_1 := and(sload(/** @src 69:3521:3537  \"stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _6)\n                                    /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                    let _8 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                    mstore(_8, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(225, 0x09f4173d))\n                                    /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                    let _9 := call(gas(), cleaned_1, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ _8, sub(abi_encode_address_address(add(_8, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ cleaned, cleaned), _8), _8, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _5)\n                                    /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                    if iszero(_9)\n                                    {\n                                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                        let pos := mload(_2)\n                                        returndatacopy(pos, _4, returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                    if _9\n                                    {\n                                        let _10 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _5\n                                        /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                        if gt(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _5, /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ returndatasize()) { _10 := returndatasize() }\n                                        finalize_allocation(_8, _10)\n                                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                        if slt(sub(/** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ add(_8, _10), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _8), _5) { revert(_4, _4) }\n                                    }\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 67:278:281  \"gov\" */ _7)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x21cb5ad1 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let offset_1 := calldataload(_3)\n                                let _11 := 0xffffffffffffffff\n                                if gt(offset_1, _11) { revert(_4, _4) }\n                                let value0_1 := abi_decode_array_address_dyn(add(_3, offset_1), calldatasize())\n                                let offset_2 := calldataload(36)\n                                if gt(offset_2, _11) { revert(_4, _4) }\n                                if iszero(slt(add(offset_2, 35), calldatasize())) { revert(_4, _4) }\n                                let _12 := calldataload(add(_3, offset_2))\n                                let _13 := array_allocation_size_array_address_dyn(_12)\n                                let memPtr := mload(_2)\n                                finalize_allocation(memPtr, _13)\n                                let dst := memPtr\n                                mstore(memPtr, _12)\n                                let _14 := 32\n                                dst := add(memPtr, _14)\n                                let srcEnd := add(add(offset_2, shl(5, _12)), 36)\n                                if gt(srcEnd, calldatasize()) { revert(_4, _4) }\n                                let src := add(offset_2, 36)\n                                for { } lt(src, srcEnd) { src := add(src, _14) }\n                                {\n                                    mstore(dst, calldataload(src))\n                                    dst := add(dst, _14)\n                                }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let _15 := sub(shl(160, 1), 1)\n                                /// @src 67:278:281  \"gov\"\n                                let _16 := 0x01\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ _16), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _15)))\n                                /// @src 69:1670:1683  \"uint256 i = 0\"\n                                let var_i_1 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                /// @src 69:1665:1785  \"for (uint256 i = 0; i < _accounts.length; i++) {...\"\n                                for { }\n                                /** @src 67:278:281  \"gov\" */ _16\n                                /// @src 69:1670:1683  \"uint256 i = 0\"\n                                {\n                                    /// @src 69:1707:1710  \"i++\"\n                                    var_i_1 := increment_uint256(var_i_1)\n                                }\n                                {\n                                    /// @src 69:1685:1705  \"i < _accounts.length\"\n                                    if iszero(lt(var_i_1, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(/** @src 69:1689:1705  \"_accounts.length\" */ value0_1)))\n                                    /// @src 69:1685:1705  \"i < _accounts.length\"\n                                    { break }\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let cleaned_2 := and(mload(/** @src 69:1748:1760  \"_accounts[i]\" */ memory_array_index_access_address_dyn(value0_1, var_i_1)), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _15)\n                                    /// @src 69:1762:1773  \"_amounts[i]\"\n                                    fun_stakeZfi(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:1762:1773  \"_amounts[i]\" */ cleaned_2, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(/** @src 69:1762:1773  \"_amounts[i]\" */ memory_array_index_access_address_dyn(memPtr, var_i_1)))\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 67:278:281  \"gov\" */ _16)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x2a9f4083 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address_10778()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let _17 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _17)))\n                                let cleaned_3 := and(sload(/** @src 69:3521:3537  \"stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _17)\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                let _18 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                mstore(_18, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(225, 0x09f4173d))\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                let _19 := call(gas(), cleaned_3, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ _18, sub(abi_encode_address_address(add(_18, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ value0_2, value0_2), _18), _18, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32)\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                if iszero(_19)\n                                {\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let pos_1 := mload(_2)\n                                    returndatacopy(pos_1, _4, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                if _19\n                                {\n                                    let _20 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32\n                                    /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                    if gt(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _20, /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ returndatasize()) { _20 := returndatasize() }\n                                    finalize_allocation(_18, _20)\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    if slt(sub(/** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ add(_18, _20), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _18), 32) { revert(_4, _4) }\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x392e53cd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value := and(shr(160, sload(/** @src 69:449:474  \"bool public isInitialized\" */ 1)), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 0xff)\n                                let memPos := mload(_2)\n                                mstore(memPos, iszero(iszero(value)))\n                                return(memPos, 32)\n                            }\n                            case 0x6ccae054 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_10778()\n                                let value1 := abi_decode_address()\n                                let _21 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(sload(1), _21)))\n                                let _22 := and(/** @src 69:1478:1492  \"IERC20(_token)\" */ value0_3, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _21)\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_mpos := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _23 := add(expr_mpos, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32)\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                mstore(_23, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _24 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 36), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ value1, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ calldataload(68)), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos)\n                                let _25 := not(31)\n                                mstore(expr_mpos, add(_24, _25))\n                                finalize_allocation(expr_mpos, _24)\n                                /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                                let expr_component := call(gas(), _22, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ _23, mload(expr_mpos), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, _4)\n                                /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                                let data := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _26 := returndatasize()\n                                    if gt(_26, 0xffffffffffffffff)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, 36)\n                                    }\n                                    let memPtr_1 := mload(_2)\n                                    finalize_allocation(memPtr_1, add(and(add(_26, 31), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _25), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32))\n                                    mstore(memPtr_1, _26)\n                                    data := memPtr_1\n                                    returndatacopy(add(memPtr_1, 32), _4, returndatasize())\n                                }\n                                /// @src 48:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                let var_mpos := /** @src 48:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_22, expr_component, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                /// @src 47:4551:4568  \"returndata.length\"\n                                let expr := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(/** @src 47:4551:4568  \"returndata.length\" */ var_mpos)\n                                /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                let expr_1 := /** @src 47:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                                /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                if expr_1\n                                {\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    if slt(sub(/** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32) { revert(_4, _4) }\n                                    let value_1 := mload(/** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32))\n                                    let _27 := iszero(value_1)\n                                    if iszero(eq(value_1, iszero(_27))) { revert(_4, _4) }\n                                    /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                    expr_1 := _27\n                                }\n                                /// @src 47:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                if expr_1\n                                {\n                                    /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    let _28 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_28, shl(224, 0x5274afe7))\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    mstore(/** @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_28, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), _22)\n                                    /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_28, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 36)\n                                }\n                                return(_4, _4)\n                            }\n                            case 0x856087ef {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_2 := and(sload(/** @src 69:506:537  \"address public stakedZfiTracker\" */ 3), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, value_2)\n                                return(memPos_1, 32)\n                            }\n                            case 0x86a60de1 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 69:2054:2061  \"_amount\"\n                                fun_stakeZfi(/** @src 69:2030:2040  \"msg.sender\" */ caller(), caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ calldataload(_3))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0x8ce65fce {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_3 := and(sload(/** @src 69:481:499  \"address public zfi\" */ 2), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, value_3)\n                                return(memPos_2, 32)\n                            }\n                            case 0x8e03b605 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_10778()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(sload(1), sub(shl(160, 1), 1))))\n                                /// @src 69:1932:1939  \"_amount\"\n                                fun_stakeZfi(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:1932:1939  \"_amount\" */ value0_4, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ calldataload(36))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xa922fecf {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_4 := and(sload(_3), sub(shl(160, 1), 1))\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, value_4)\n                                return(memPos_3, 32)\n                            }\n                            case 0xc0c53b8b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address_10778()\n                                let value1_1 := abi_decode_address()\n                                let value_5 := calldataload(68)\n                                let _29 := sub(shl(160, 1), 1)\n                                let _30 := and(value_5, _29)\n                                if iszero(eq(value_5, _30)) { revert(_4, _4) }\n                                let _31 := sload(/** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(_31, _29)))\n                                if iszero(/** @src 69:888:902  \"!isInitialized\" */ iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(shr(160, _31), 0xff)))\n                                {\n                                    let memPtr_2 := mload(_2)\n                                    mstore(memPtr_2, shl(229, 4594637))\n                                    mstore(add(memPtr_2, _3), 32)\n                                    mstore(add(memPtr_2, 36), 33)\n                                    mstore(add(memPtr_2, 68), \"RewardRouter: already initialize\")\n                                    mstore(add(memPtr_2, 100), \"d\")\n                                    revert(memPtr_2, 132)\n                                }\n                                let _32 := and(/** @src 69:967:985  \"_zfi == address(0)\" */ value0_5, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _29)\n                                /// @src 69:967:1032  \"_zfi == address(0) ||...\"\n                                let expr_2 := /** @src 69:967:985  \"_zfi == address(0)\" */ iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _32)\n                                /// @src 69:967:1032  \"_zfi == address(0) ||...\"\n                                if iszero(expr_2)\n                                {\n                                    expr_2 := /** @src 69:1001:1032  \"_stakedZfiTracker == address(0)\" */ iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(/** @src 69:1001:1032  \"_stakedZfiTracker == address(0)\" */ value1_1, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _29))\n                                }\n                                /// @src 69:967:1072  \"_zfi == address(0) ||...\"\n                                let expr_3 := expr_2\n                                if iszero(expr_2)\n                                {\n                                    expr_3 := /** @src 69:1048:1072  \"_zfiVester == address(0)\" */ iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _30)\n                                }\n                                /// @src 69:950:1133  \"if (...\"\n                                if expr_3\n                                {\n                                    /// @src 69:1104:1122  \"ZeroAddressError()\"\n                                    let _33 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 69:1104:1122  \"ZeroAddressError()\"\n                                    mstore(_33, shl(224, 0x3efa09af))\n                                    revert(_33, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 67:278:281  \"gov\" */ 0x01, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ or(and(_31, not(shl(160, 255))), shl(160, 1)))\n                                let _34 := shl(160, 0xffffffffffffffffffffffff)\n                                sstore(/** @src 69:1173:1183  \"zfi = _zfi\" */ 0x02, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 69:1173:1183  \"zfi = _zfi\" */ 0x02), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _34), _32))\n                                sstore(/** @src 69:1194:1230  \"stakedZfiTracker = _stakedZfiTracker\" */ 0x03, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 69:1194:1230  \"stakedZfiTracker = _stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _34), and(value1_1, _29)))\n                                sstore(_3, or(and(sload(_3), _34), _30))\n                                return(_4, _4)\n                            }\n                            case 0xcfad57a2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_6 := abi_decode_address_10778()\n                                let _35 := sload(/** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let _36 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(_35, _36)))\n                                let _37 := and(/** @src 67:392:410  \"_gov == address(0)\" */ value0_6, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _36)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                if /** @src 67:392:410  \"_gov == address(0)\" */ iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _37)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                {\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    let _38 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    mstore(_38, /** @src 69:1104:1122  \"ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    revert(_38, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 67:278:281  \"gov\" */ 0x01, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ or(and(_35, shl(160, 0xffffffffffffffffffffffff)), _37))\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                let _39 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_39, _37)\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                log1(_39, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32, /** @src 67:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xe1b9db89 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let _40 := sub(shl(160, 1), 1)\n                                mstore(_4, and(abi_decode_address_10778(), _40))\n                                mstore(32, /** @src 69:575:626  \"mapping(address => address) public pendingReceivers\" */ 5)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let value_6 := and(sload(keccak256(_4, _2)), _40)\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, value_6)\n                                return(memPos_4, 32)\n                            }\n                            case 0xf0a9b19b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let cleaned_4 := and(sload(/** @src 69:2183:2199  \"stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\"\n                                let _41 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\"\n                                mstore(_41, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(225, 0x09f4173d))\n                                /// @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\"\n                                let _42 := call(gas(), cleaned_4, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\" */ _41, sub(abi_encode_address_address(add(_41, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), /** @src 69:2147:2157  \"msg.sender\" */ caller(), caller()), /** @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\" */ _41), _41, 32)\n                                if iszero(_42)\n                                {\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let pos_2 := mload(_2)\n                                    returndatacopy(pos_2, _4, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\"\n                                if _42\n                                {\n                                    let _43 := 32\n                                    if gt(_43, returndatasize()) { _43 := returndatasize() }\n                                    finalize_allocation(_41, _43)\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    if slt(sub(/** @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\" */ add(_41, _43), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _41), /** @src 69:2168:2234  \"IRewardTracker(stakedZfiTracker).claimForAccount(account, account)\" */ 32)\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    { revert(_4, _4) }\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xf3e72dec {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value_7 := calldataload(_3)\n                                if iszero(eq(value_7, iszero(iszero(value_7)))) { revert(_4, _4) }\n                                let value_8 := calldataload(36)\n                                if iszero(eq(value_8, iszero(iszero(value_8)))) { revert(_4, _4) }\n                                let value_9 := calldataload(68)\n                                if iszero(eq(value_9, iszero(iszero(value_9)))) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 50:2387:2388  \"_\"\n                                let var_stZfiAmount := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                /// @src 69:2687:2708  \"uint256 zfiAmount = 0\"\n                                let var_zfiAmount := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                /// @src 69:2718:2828  \"if (_shouldClaimZfi) {...\"\n                                if value_7\n                                {\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let cleaned_5 := and(sload(_3), sub(shl(160, 1), 1))\n                                    /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                    let _44 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                    mstore(_44, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(225, 0x09f4173d))\n                                    /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                    let _45 := call(gas(), cleaned_5, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\" */ _44, sub(abi_encode_address_address(add(_44, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), /** @src 69:2666:2676  \"msg.sender\" */ caller(), caller()), /** @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\" */ _44), _44, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32)\n                                    /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                    if iszero(_45)\n                                    {\n                                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                        let pos_3 := mload(_2)\n                                        returndatacopy(pos_3, _4, returndatasize())\n                                        revert(pos_3, returndatasize())\n                                    }\n                                    /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                    let expr_4 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                    /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                    if _45\n                                    {\n                                        let _46 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32\n                                        /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                        if gt(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _46, /** @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\" */ returndatasize()) { _46 := returndatasize() }\n                                        finalize_allocation(_44, _46)\n                                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                        if slt(sub(/** @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\" */ add(_44, _46), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _44), 32) { revert(_4, _4) }\n                                        /// @src 69:2765:2817  \"IVester(zfiVester).claimForAccount(account, account)\"\n                                        expr_4 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_44)\n                                    }\n                                    /// @src 69:2753:2817  \"zfiAmount = IVester(zfiVester).claimForAccount(account, account)\"\n                                    var_zfiAmount := expr_4\n                                }\n                                /// @src 69:2842:2874  \"_shouldStakeZfi && zfiAmount > 0\"\n                                let expr_5 := value_8\n                                if value_8\n                                {\n                                    expr_5 := /** @src 69:2861:2874  \"zfiAmount > 0\" */ iszero(iszero(var_zfiAmount))\n                                }\n                                /// @src 69:2838:2939  \"if (_shouldStakeZfi && zfiAmount > 0) {...\"\n                                if expr_5\n                                {\n                                    /// @src 69:2918:2927  \"zfiAmount\"\n                                    fun_stakeZfi(/** @src 69:2666:2676  \"msg.sender\" */ caller(), caller(), /** @src 69:2918:2927  \"zfiAmount\" */ var_zfiAmount)\n                                }\n                                /// @src 69:2949:3123  \"if (_shouldClaimStZfi) {...\"\n                                if value_9\n                                {\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let cleaned_6 := and(sload(/** @src 69:3015:3031  \"stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    let _47 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    mstore(_47, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(225, 0x09f4173d))\n                                    /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    let _48 := call(gas(), cleaned_6, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\" */ _47, sub(abi_encode_address_address(add(_47, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), /** @src 69:2666:2676  \"msg.sender\" */ caller(), caller()), /** @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\" */ _47), _47, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32)\n                                    /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    if iszero(_48)\n                                    {\n                                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                        let pos_4 := mload(_2)\n                                        returndatacopy(pos_4, _4, returndatasize())\n                                        revert(pos_4, returndatasize())\n                                    }\n                                    /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    let expr_6 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4\n                                    /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    if _48\n                                    {\n                                        let _49 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 32\n                                        /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                        if gt(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _49, /** @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\" */ returndatasize()) { _49 := returndatasize() }\n                                        finalize_allocation(_47, _49)\n                                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                        if slt(sub(/** @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\" */ add(_47, _49), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _47), 32) { revert(_4, _4) }\n                                        /// @src 69:3000:3112  \"IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                        expr_6 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_47)\n                                    }\n                                    /// @src 69:2986:3112  \"stZfiAmount = IRewardTracker(stakedZfiTracker).claimForAccount(...\"\n                                    var_stZfiAmount := expr_6\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, var_stZfiAmount)\n                                return(memPos_5, 32)\n                            }\n                            case 0xf69e2046 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                let cleaned_7 := and(sload(/** @src 69:3521:3537  \"stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                let _50 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                mstore(_50, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(225, 0x09f4173d))\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                let _51 := call(gas(), cleaned_7, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ _50, sub(abi_encode_address_address(add(_50, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _3), /** @src 69:2309:2319  \"msg.sender\" */ caller(), caller()), /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ _50), _50, 32)\n                                if iszero(_51)\n                                {\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    let pos_5 := mload(_2)\n                                    returndatacopy(pos_5, _4, returndatasize())\n                                    revert(pos_5, returndatasize())\n                                }\n                                /// @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\"\n                                if _51\n                                {\n                                    let _52 := 32\n                                    if gt(_52, returndatasize()) { _52 := returndatasize() }\n                                    finalize_allocation(_50, _52)\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    if slt(sub(/** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ add(_50, _52), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _50), /** @src 69:3506:3574  \"IRewardTracker(stakedZfiTracker).claimForAccount(_account, _account)\" */ 32)\n                                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                    { revert(_4, _4) }\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ not(31)))\n                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_array_address_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function abi_decode_address_10778() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_array_address_dyn(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := calldataload(offset)\n                        let _2 := 0x20\n                        let _3 := array_allocation_size_array_address_dyn(_1)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _3)\n                        let dst := memPtr\n                        mstore(memPtr, _1)\n                        dst := add(memPtr, _2)\n                        let srcEnd := add(add(offset, shl(5, _1)), _2)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                        let src := add(offset, _2)\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            let value := calldataload(src)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                            {\n                                /// @src -1:-1:-1\n                                let _4 := 0\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                revert(/** @src -1:-1:-1 */ _4, _4)\n                            }\n                            /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                            mstore(dst, value)\n                            dst := add(dst, _2)\n                        }\n                        array := memPtr\n                    }\n                    function require_helper_stringliteral_7c37(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"Governable: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    /// @ast-id 47182 @src 48:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 48:4793:5201  \"if (!success) {...\"\n                        switch /** @src 48:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 48:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 48:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(/** @src 48:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 48:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 48:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 48:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                                mstore(/** @src 48:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 36)\n                            }\n                            /// @src 48:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 48:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 48:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(/** @src 48:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 48:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 48:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        ret := add(value, 1)\n                    }\n                    function memory_array_index_access_address_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    /// @ast-id 47302 @src 50:2431:2738  \"function _nonReentrantBefore() private {...\"\n                    function fun_nonReentrantBefore()\n                    {\n                        /// @src 50:2554:2640  \"if (_status == ENTERED) {...\"\n                        if /** @src 50:2558:2576  \"_status == ENTERED\" */ eq(/** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ sload(/** @src 50:2558:2565  \"_status\" */ 0x00), /** @src 50:1755:1756  \"2\" */ 0x02)\n                        /// @src 50:2554:2640  \"if (_status == ENTERED) {...\"\n                        {\n                            /// @src 50:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            let _1 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 50:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            mstore(_1, shl(224, 0x3ee5aeb5))\n                            revert(_1, 4)\n                        }\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 50:2558:2565  \"_status\" */ 0x00, /** @src 50:1755:1756  \"2\" */ 0x02)\n                    }\n                    /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                    function abi_encode_address_address(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                    }\n                    /// @ast-id 55360 @src 69:3587:3880  \"function _stakeZfi(address _fundingAccount, address _account, uint256 _amount) private {...\"\n                    function fun_stakeZfi(var_fundingAccount, var_account, var_amount)\n                    {\n                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                        if /** @src 69:3692:3703  \"_amount > 0\" */ iszero(var_amount)\n                        /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 29)\n                            mstore(add(memPtr, 68), \"RewardRouter: invalid _amount\")\n                            revert(memPtr, 100)\n                        }\n                        let _1 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 69:3762:3778  \"stakedZfiTracker\" */ 0x03), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ _1)\n                        /// @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\"\n                        if iszero(extcodesize(cleaned))\n                        {\n                            /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                            revert(/** @src 69:3702:3703  \"0\" */ 0x00, 0x00)\n                        }\n                        /// @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\"\n                        let _2 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\"\n                        mstore(_2, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(224, 0xb5f73e8d))\n                        mstore(/** @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\" */ add(_2, 4), /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ and(var_fundingAccount, _1))\n                        mstore(add(/** @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\" */ _2, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 36), and(var_account, _1))\n                        mstore(add(/** @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\" */ _2, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 68), var_amount)\n                        /// @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\"\n                        let _3 := call(gas(), cleaned, /** @src 69:3702:3703  \"0\" */ 0x00, /** @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\" */ _2, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 100, /** @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\" */ _2, /** @src 69:3702:3703  \"0\" */ 0x00)\n                        /// @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\"\n                        if iszero(_3)\n                        {\n                            /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src 69:3702:3703  \"0\" */ 0x00, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\"\n                        if _3\n                        {\n                            /// @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\"\n                            if gt(_2, 0xffffffffffffffff)\n                            {\n                                mstore(/** @src 69:3702:3703  \"0\" */ 0x00, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 69:3747:3831  \"IRewardTracker(stakedZfiTracker).stakeForAccount(_fundingAccount, _account, _amount)\" */ 4, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 0x41)\n                                revert(/** @src 69:3702:3703  \"0\" */ 0x00, /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ 36)\n                            }\n                            mstore(64, _2)\n                        }\n                        /// @src 69:3846:3873  \"StakeZfi(_account, _amount)\"\n                        let _4 := /** @src 69:355:4155  \"contract RewardRouterV2 is ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 69:3846:3873  \"StakeZfi(_account, _amount)\"\n                        log1(_4, sub(abi_encode_address_uint256(_4, var_account, var_amount), _4), 0x6e87e8f30ee62aa9832e90188efe1f9ff07e98a719a0c7841816551b551cfbbd)\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        /// @use-src 44:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 67:\"src/access/Governable.sol\", 70:\"src/staking/RewardTracker.sol\", 73:\"src/staking/interfaces/IRewardTracker.sol\"\n        object \"RewardTracker_56728\" {\n            code {\n                {\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    mstore(64, memoryguard(0xa0))\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"RewardTracker_56728\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    let _1 := add(memoryDataOffset, argSize)\n                    if slt(sub(_1, memoryDataOffset), 96)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let offset := mload(memoryDataOffset)\n                    let _2 := sub(shl(64, 1), 1)\n                    if gt(offset, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n                    let _3 := 32\n                    let offset_1 := mload(add(memoryDataOffset, _3))\n                    if gt(offset_1, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n                    let value := mload(add(memoryDataOffset, 64))\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 50:1713:1714  \"1\"\n                    let _4 := 0x01\n                    /// @src -1:-1:-1\n                    let _5 := 0\n                    /// @src 50:1713:1714  \"1\"\n                    sstore(/** @src -1:-1:-1 */ _5, /** @src 50:1713:1714  \"1\" */ _4)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    sstore(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(sload(/** @src 50:1713:1714  \"1\" */ _4), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(sub(shl(160, 1), 1))), /** @src 67:204:214  \"msg.sender\" */ caller()))\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let newLen := mload(value0)\n                    if gt(newLen, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                    }\n                    let _6 := sload(/** @src 70:2309:2321  \"name = _name\" */ 0x02)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let length := /** @src -1:-1:-1 */ _5\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    length := shr(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)\n                    let outOfPlaceEncoding := and(_6, /** @src 50:1713:1714  \"1\" */ _4)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _3))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                    }\n                    let _7 := 31\n                    if gt(length, _7)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:2309:2321  \"name = _name\" */ 0x02)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        let deleteStart := add(data, shr(5, add(newLen, _7)))\n                        if lt(newLen, _3) { deleteStart := data }\n                        let _8 := add(data, shr(5, add(length, _7)))\n                        let start := deleteStart\n                        for { }\n                        lt(start, _8)\n                        {\n                            start := add(start, /** @src 50:1713:1714  \"1\" */ _4)\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ _5)\n                        }\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ _5\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    srcOffset := _3\n                    switch gt(newLen, _7)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:2309:2321  \"name = _name\" */ 0x02)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        let i := /** @src -1:-1:-1 */ _5\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _3) }\n                        {\n                            sstore(dstPtr, mload(add(value0, srcOffset)))\n                            dstPtr := add(dstPtr, /** @src 50:1713:1714  \"1\" */ _4)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            srcOffset := add(srcOffset, _3)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value0, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 70:2309:2321  \"name = _name\" */ 0x02, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ add(shl(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen), /** @src 50:1713:1714  \"1\" */ _4))\n                    }\n                    default /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    {\n                        let value_1 := /** @src -1:-1:-1 */ _5\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        if newLen\n                        {\n                            value_1 := mload(add(value0, srcOffset))\n                        }\n                        sstore(/** @src 70:2309:2321  \"name = _name\" */ 0x02, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen)))\n                    }\n                    let newLen_1 := mload(value1)\n                    if gt(newLen_1, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                    }\n                    /// @src 70:2331:2347  \"symbol = _symbol\"\n                    let _9 := 0x03\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let _10 := sload(/** @src 70:2331:2347  \"symbol = _symbol\" */ _9)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ _5\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    length_1 := shr(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _10)\n                    let outOfPlaceEncoding_1 := and(_10, /** @src 50:1713:1714  \"1\" */ _4)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                    }\n                    if gt(length_1, _7)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:2331:2347  \"symbol = _symbol\" */ _9)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                        if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                        let _11 := add(data_1, shr(5, add(length_1, _7)))\n                        let start_1 := deleteStart_1\n                        for { }\n                        lt(start_1, _11)\n                        {\n                            start_1 := add(start_1, /** @src 50:1713:1714  \"1\" */ _4)\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ _5)\n                        }\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ _5\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    srcOffset_1 := _3\n                    switch gt(newLen_1, _7)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 70:2331:2347  \"symbol = _symbol\" */ _9)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        let i_1 := /** @src -1:-1:-1 */ _5\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                        {\n                            sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, /** @src 50:1713:1714  \"1\" */ _4)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            srcOffset_1 := add(srcOffset_1, _3)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(value1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 70:2331:2347  \"symbol = _symbol\" */ _9, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 70:2331:2347  \"symbol = _symbol\" */ _9, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ add(shl(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1), /** @src 50:1713:1714  \"1\" */ _4))\n                    }\n                    default /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    {\n                        let value_2 := /** @src -1:-1:-1 */ _5\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        if newLen_1\n                        {\n                            value_2 := mload(add(value1, srcOffset_1))\n                        }\n                        sstore(/** @src 70:2331:2347  \"symbol = _symbol\" */ _9, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(value_2, not(shr(shl(/** @src 70:2331:2347  \"symbol = _symbol\" */ _9, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1), not(0)))), shl(/** @src 50:1713:1714  \"1\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ newLen_1)))\n                    }\n                    /// @src 70:2357:2385  \"depositToken = _depositToken\"\n                    mstore(128, value)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let _12 := mload(64)\n                    let _13 := datasize(\"RewardTracker_56728_deployed\")\n                    codecopy(_12, dataoffset(\"RewardTracker_56728_deployed\"), _13)\n                    setimmutable(_12, \"55468\", mload(/** @src 70:2357:2385  \"depositToken = _depositToken\" */ 128))\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    return(_12, _13)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let _1 := mload(offset)\n                    if gt(_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                    }\n                    let _2 := 0x20\n                    let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n                    mstore(array_1, _1)\n                    if gt(add(add(offset, _1), _2), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    for { } lt(i, _1) { i := add(i, _2) }\n                    {\n                        mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n                    }\n                    mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    array := array_1\n                }\n            }\n            /// @use-src 47:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 48:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\", 67:\"src/access/Governable.sol\", 70:\"src/staking/RewardTracker.sol\"\n            object \"RewardTracker_56728_deployed\" {\n                code {\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 70:1154:1172  \"string public name\" */ 2)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(_5, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, _5)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 70:1154:1172  \"string public name\" */ 2)\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let dataPos := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                finalize_allocation(_1, sub(ret, _1))\n                                let memPos := mload(_2)\n                                return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address_20793()\n                                /// @src 70:5681:5688  \"_amount\"\n                                fun_approve(/** @src 70:5659:5669  \"msg.sender\" */ caller(), /** @src 70:5681:5688  \"_amount\" */ value0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(36))\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, 1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x10c1c103 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1714:1771  \"mapping(address => uint256) public override stakedAmounts\" */ 13)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _7 := sload(keccak256(_4, _2))\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, _7)\n                                return(memPos_2, 32)\n                            }\n                            case 0x126082cf {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 70:1021:1027  \"100_00\" */ 0x2710)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x12d43a51 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value := and(sload(/** @src 67:149:167  \"address public gov\" */ 1), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, value)\n                                return(memPos_4, 32)\n                            }\n                            case 0x13e82e7a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address_20793()\n                                let value1 := abi_decode_address()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 70:6741:6953  \"function claimForAccount(...\"\n                                fun_validateHandler()\n                                /// @src 70:6912:6946  \"return _claim(_account, _receiver)\"\n                                let var := /** @src 70:6919:6946  \"_claim(_account, _receiver)\" */ fun_claim(value0_1, value1)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, var)\n                                return(memPos_5, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _8 := sload(/** @src 70:1386:1421  \"uint256 public override totalSupply\" */ 7)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, _8)\n                                return(memPos_6, 32)\n                            }\n                            case 0x1d30d5bc {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_2 := abi_decode_bool()\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))))\n                                let _9 := iszero(iszero(value0_2))\n                                let _10 := sload(/** @src 70:2933:2977  \"inPrivateStakingMode = _inPrivateStakingMode\" */ 0x12)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                sstore(/** @src 70:2933:2977  \"inPrivateStakingMode = _inPrivateStakingMode\" */ 0x12, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_10, not(65280)), and(shl(8, _9), 65280)))\n                                /// @src 70:2992:3036  \"PrivateStakingModeSet(_inPrivateStakingMode)\"\n                                let _11 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                mstore(_11, _9)\n                                /// @src 70:2992:3036  \"PrivateStakingModeSet(_inPrivateStakingMode)\"\n                                log1(_11, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 70:2992:3036  \"PrivateStakingModeSet(_inPrivateStakingMode)\" */ 0x75a353166f2b3eb313e3eb5ce4f505362115d614f900c2f3a109b522c029a672)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x1e83409a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_20793()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 70:6603:6683  \"if (inPrivateClaimingMode) { ...\"\n                                if /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(shr(16, sload(/** @src 70:6607:6628  \"inPrivateClaimingMode\" */ 0x12)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                /// @src 70:6603:6683  \"if (inPrivateClaimingMode) { ...\"\n                                {\n                                    /// @src 70:6652:6672  \"AuthorizationError()\"\n                                    let _12 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    /// @src 70:6652:6672  \"AuthorizationError()\"\n                                    mstore(_12, shl(234, 1443823))\n                                    revert(_12, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                                }\n                                /// @src 70:6692:6728  \"return _claim(msg.sender, _receiver)\"\n                                let var_1 := /** @src 70:6699:6728  \"_claim(msg.sender, _receiver)\" */ fun_claim(/** @src 70:6706:6716  \"msg.sender\" */ caller(), /** @src 70:6699:6728  \"_claim(msg.sender, _receiver)\" */ value0_3)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, var_1)\n                                return(memPos_7, 32)\n                            }\n                            case 0x1eb903cf {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1280:1340  \"mapping (address => uint256) public override depositBalances\" */ 5)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _13 := sload(keccak256(_4, _2))\n                                let memPos_8 := mload(_2)\n                                mstore(memPos_8, _13)\n                                return(memPos_8, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                let ret_1 := fun_transferFrom(param, param_1, param_2)\n                                let memPos_9 := mload(_2)\n                                mstore(memPos_9, iszero(iszero(ret_1)))\n                                return(memPos_9, 32)\n                            }\n                            case 0x27e235e3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1475:1518  \"mapping(address => uint256) public balances\" */ 9)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _14 := sload(keccak256(_4, _2))\n                                let memPos_10 := mload(_2)\n                                mstore(memPos_10, _14)\n                                return(memPos_10, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_11 := mload(_2)\n                                mstore(memPos_11, /** @src 70:1113:1115  \"18\" */ 0x12)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(memPos_11, 32)\n                            }\n                            case 0x33080b6e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_20793()\n                                let _15 := 36\n                                let value_1 := calldataload(_15)\n                                let value_2 := calldataload(68)\n                                let _16 := sub(shl(160, 1), 1)\n                                if iszero(eq(value_2, and(value_2, _16))) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 70:4962:5157  \"function unstakeForAccount(address _account, uint256 _amount, address _receiver) external override nonReentrant {...\"\n                                fun_validateHandler()\n                                /// @src 70:12350:12404  \"require(_amount > 0, \\\"RewardTracker: invalid _amount\\\")\"\n                                require_helper_stringliteral(/** @src 70:12358:12369  \"_amount > 0\" */ iszero(iszero(value_1)))\n                                /// @src 70:12430:12438  \"_account\"\n                                fun_updateRewards(value0_4)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _17 := and(value0_4, _16)\n                                mstore(_4, _17)\n                                let _18 := 32\n                                mstore(_18, /** @src 70:12473:12486  \"stakedAmounts\" */ 0x0d)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _19 := sload(keccak256(_4, _2))\n                                if /** @src 70:12527:12561  \"stakedAmounts[_account] >= _amount\" */ lt(_19, value_1)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                {\n                                    let memPtr := mload(_2)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, _3), _18)\n                                    mstore(add(memPtr, _15), 43)\n                                    mstore(add(memPtr, 68), \"RewardTracker: _amount exceeds s\")\n                                    mstore(add(memPtr, 100), \"takedAmount\")\n                                    revert(memPtr, 132)\n                                }\n                                /// @src 70:12667:12689  \"stakedAmount - _amount\"\n                                let _20 := checked_sub_uint256(_19, value_1)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_4, _17)\n                                mstore(_18, /** @src 70:12473:12486  \"stakedAmounts\" */ 0x0d)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ _20)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_18, /** @src 70:12732:12752  \"boostedStakedAmounts\" */ 0x0e)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _21 := sload(keccak256(_4, _2))\n                                mstore(_18, /** @src 70:12809:12832  \"rewardBoostsBasisPoints\" */ 0x0c)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _22 := sload(keccak256(_4, _2))\n                                /// @src 70:1021:1027  \"100_00\"\n                                let _23 := 0x2710\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let sum := add(/** @src 70:1021:1027  \"100_00\" */ _23, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _22)\n                                if gt(/** @src 70:1021:1027  \"100_00\" */ _23, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, _15)\n                                }\n                                /// @src 70:12732:12865  \"boostedStakedAmounts[_account] - Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\"\n                                let _24 := checked_sub_uint256(_21, /** @src 70:12765:12865  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(value_1, /** @src 70:12786:12842  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum))\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_4, _17)\n                                mstore(_18, /** @src 70:12732:12752  \"boostedStakedAmounts\" */ 0x0e)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ _24)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_18, /** @src 70:12902:12917  \"depositBalances\" */ 0x05)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _25 := sload(keccak256(_4, _2))\n                                if /** @src 70:12945:12971  \"_depositBalance >= _amount\" */ lt(_25, value_1)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                {\n                                    let memPtr_1 := mload(_2)\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, _3), _18)\n                                    mstore(add(memPtr_1, _15), 45)\n                                    mstore(add(memPtr_1, 68), \"RewardTracker: _amount exceeds d\")\n                                    mstore(add(memPtr_1, 100), \"epositBalance\")\n                                    revert(memPtr_1, 132)\n                                }\n                                /// @src 70:13059:13084  \"_depositBalance - _amount\"\n                                let _26 := checked_sub_uint256(_25, value_1)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_4, _17)\n                                mstore(_18, /** @src 70:12902:12917  \"depositBalances\" */ 0x05)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ _26)\n                                sstore(/** @src 70:13115:13133  \"totalDepositSupply\" */ 0x06, /** @src 70:13115:13143  \"totalDepositSupply - _amount\" */ checked_sub_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:13115:13133  \"totalDepositSupply\" */ 0x06), /** @src 70:13115:13143  \"totalDepositSupply - _amount\" */ value_1))\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                if /** @src 70:9764:9786  \"_account != address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _17)\n                                {\n                                    let memPtr_2 := mload(_2)\n                                    mstore(memPtr_2, shl(229, 4594637))\n                                    mstore(add(memPtr_2, _3), _18)\n                                    mstore(add(memPtr_2, _15), 41)\n                                    mstore(add(memPtr_2, 68), \"RewardTracker: burn from the zer\")\n                                    mstore(add(memPtr_2, 100), \"o address\")\n                                    revert(memPtr_2, 132)\n                                }\n                                mstore(_4, _17)\n                                mstore(_18, /** @src 70:9885:9893  \"balances\" */ 0x09)\n                                /// @src 70:9885:9913  \"balances[_account] - _amount\"\n                                let _27 := checked_sub_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(_4, _2)), /** @src 70:9885:9913  \"balances[_account] - _amount\" */ value_1)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_4, _17)\n                                mstore(_18, /** @src 70:9885:9893  \"balances\" */ 0x09)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ _27)\n                                sstore(/** @src 70:9985:9996  \"totalSupply\" */ 0x07, /** @src 70:9985:10006  \"totalSupply - _amount\" */ checked_sub_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:9985:9996  \"totalSupply\" */ 0x07), /** @src 70:9985:10006  \"totalSupply - _amount\" */ value_1))\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _28 := sload(/** @src 70:10037:10055  \"boostedTotalSupply\" */ 0x08)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(_4, _17)\n                                mstore(_18, /** @src 70:12809:12832  \"rewardBoostsBasisPoints\" */ 0x0c)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let sum_1 := add(/** @src 70:1021:1027  \"100_00\" */ _23, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(_4, _2)))\n                                if gt(/** @src 70:1021:1027  \"100_00\" */ _23, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum_1)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, _15)\n                                }\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:10037:10055  \"boostedTotalSupply\" */ 0x08, /** @src 70:10037:10158  \"boostedTotalSupply - Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ checked_sub_uint256(_28, /** @src 70:10058:10158  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(value_1, /** @src 70:10079:10135  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum_1)))\n                                /// @src 70:10174:10213  \"Transfer(_account, address(0), _amount)\"\n                                let _29 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                mstore(_29, value_1)\n                                /// @src 70:10174:10213  \"Transfer(_account, address(0), _amount)\"\n                                log3(_29, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _18, /** @src 70:10174:10213  \"Transfer(_account, address(0), _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _17, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4)\n                                /// @src 70:13233:13240  \"_amount\"\n                                fun_safeTransfer(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 70:13195:13207  \"depositToken\" */ loadimmutable(\"55468\"), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _16), /** @src 70:13233:13240  \"_amount\" */ value_2, value_1)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0x3792def3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1975:2036  \"mapping(address => uint256) public override cumulativeRewards\" */ 17)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _30 := sload(keccak256(_4, _2))\n                                let memPos_12 := mload(_2)\n                                mstore(memPos_12, _30)\n                                return(memPos_12, 32)\n                            }\n                            case 0x392e53cd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_3 := and(shr(160, sload(/** @src 70:1122:1147  \"bool public isInitialized\" */ 1)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                let memPos_13 := mload(_2)\n                                mstore(memPos_13, iszero(iszero(value_3)))\n                                return(memPos_13, 32)\n                            }\n                            case 0x3cd7f700 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_5 := abi_decode_bool()\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))))\n                                let _31 := iszero(iszero(value0_5))\n                                let _32 := sload(/** @src 70:3153:3199  \"inPrivateClaimingMode = _inPrivateClaimingMode\" */ 0x12)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                sstore(/** @src 70:3153:3199  \"inPrivateClaimingMode = _inPrivateClaimingMode\" */ 0x12, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_32, not(16711680)), and(shl(16, _31), 16711680)))\n                                /// @src 70:3214:3260  \"PrivateClaimingModeSet(_inPrivateClaimingMode)\"\n                                let _33 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                mstore(_33, _31)\n                                /// @src 70:3214:3260  \"PrivateClaimingModeSet(_inPrivateClaimingMode)\"\n                                log1(_33, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 70:3214:3260  \"PrivateClaimingModeSet(_inPrivateClaimingMode)\" */ 0x88e53329a0b82ff67f98d8907e6ea149976c6cec68e6d1b65f8ff4da16b901f1)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x3e158b0c {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 70:6486:6496  \"address(0)\"\n                                fun_updateRewards_20808()\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x402914f5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_2 := fun_claimable(abi_decode_address_20793())\n                                let memPos_14 := mload(_2)\n                                mstore(memPos_14, ret_2)\n                                return(memPos_14, 32)\n                            }\n                            case 0x44a08411 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1903:1969  \"mapping(address => uint256) public previousCumulatedRewardPerToken\" */ 16)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _34 := sload(keccak256(_4, _2))\n                                let memPos_15 := mload(_2)\n                                mstore(memPos_15, _34)\n                                return(memPos_15, 32)\n                            }\n                            case 0x46ea87af {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:2159:2200  \"mapping(address => bool) public isHandler\" */ 19)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let value_4 := and(sload(keccak256(_4, _2)), 0xff)\n                                let memPos_16 := mload(_2)\n                                mstore(memPos_16, iszero(iszero(value_4)))\n                                return(memPos_16, 32)\n                            }\n                            case 0x55b6ed5c {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_6 := abi_decode_address_20793()\n                                let value1_1 := abi_decode_address()\n                                let _35 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_6, _35))\n                                mstore(32, /** @src 70:1524:1589  \"mapping(address => mapping(address => uint256)) public allowances\" */ 10)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _36 := keccak256(_4, _2)\n                                mstore(_4, and(value1_1, _35))\n                                mstore(32, _36)\n                                let _37 := sload(keccak256(_4, _2))\n                                let memPos_17 := mload(_2)\n                                mstore(memPos_17, _37)\n                                return(memPos_17, 32)\n                            }\n                            case 0x5a47a1a7 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_7 := abi_decode_bool()\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))))\n                                let _38 := iszero(iszero(value0_7))\n                                let value_5 := and(sload(/** @src 70:2711:2757  \"inPrivateTransferMode = _inPrivateTransferMode\" */ 0x12), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(255))\n                                sstore(/** @src 70:2711:2757  \"inPrivateTransferMode = _inPrivateTransferMode\" */ 0x12, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(value_5, and(_38, 255)))\n                                /// @src 70:2772:2818  \"PrivateTransferModeSet(_inPrivateTransferMode)\"\n                                let _39 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                mstore(_39, _38)\n                                /// @src 70:2772:2818  \"PrivateTransferModeSet(_inPrivateTransferMode)\"\n                                log1(_39, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 70:2772:2818  \"PrivateTransferModeSet(_inPrivateTransferMode)\" */ 0xcfea93b2060af4c4737eb6d7b0d85428b120e6613299f9b6d7703a689c81d0dc)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x65e6111d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1777:1841  \"mapping(address => uint256) public override boostedStakedAmounts\" */ 14)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _40 := sload(keccak256(_4, _2))\n                                let memPos_18 := mload(_2)\n                                mstore(memPos_18, _40)\n                                return(memPos_18, 32)\n                            }\n                            case 0x661bbcc3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _41 := sload(/** @src 70:1346:1379  \"uint256 public totalDepositSupply\" */ 6)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_19 := mload(_2)\n                                mstore(memPos_19, _41)\n                                return(memPos_19, 32)\n                            }\n                            case 0x66ab7efa {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let offset := calldataload(_3)\n                                let _42 := 0xffffffffffffffff\n                                if gt(offset, _42) { revert(_4, _4) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                let _43 := calldataload(add(_3, offset))\n                                let _44 := 36\n                                let _45 := array_allocation_size_array_address_dyn(_43)\n                                let memPtr_3 := mload(_2)\n                                finalize_allocation(memPtr_3, _45)\n                                let dst := memPtr_3\n                                mstore(memPtr_3, _43)\n                                let _46 := 0x20\n                                dst := add(memPtr_3, _46)\n                                let srcEnd := add(add(offset, shl(5, _43)), _44)\n                                if gt(srcEnd, calldatasize()) { revert(_4, _4) }\n                                let src := add(offset, _44)\n                                for { } lt(src, srcEnd) { src := add(src, _46) }\n                                {\n                                    let value_6 := calldataload(src)\n                                    if iszero(eq(value_6, and(value_6, sub(shl(160, 1), 1)))) { revert(_4, _4) }\n                                    mstore(dst, value_6)\n                                    dst := add(dst, _46)\n                                }\n                                let offset_1 := calldataload(_44)\n                                if gt(offset_1, _42) { revert(_4, _4) }\n                                if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_4, _4) }\n                                let _47 := calldataload(add(_3, offset_1))\n                                let _48 := array_allocation_size_array_address_dyn(_47)\n                                let memPtr_4 := mload(_2)\n                                finalize_allocation(memPtr_4, _48)\n                                let dst_1 := memPtr_4\n                                mstore(memPtr_4, _47)\n                                dst_1 := add(memPtr_4, _46)\n                                let srcEnd_1 := add(add(offset_1, shl(5, _47)), _44)\n                                if gt(srcEnd_1, calldatasize()) { revert(_4, _4) }\n                                let src_1 := add(offset_1, _44)\n                                for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _46) }\n                                {\n                                    mstore(dst_1, calldataload(src_1))\n                                    dst_1 := add(dst_1, _46)\n                                }\n                                let _49 := sub(shl(160, 1), 1)\n                                /// @src 67:278:281  \"gov\"\n                                let _50 := 0x01\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ _50), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _49)))\n                                /// @src 70:3800:3816  \"_accounts.length\"\n                                let expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 70:3800:3816  \"_accounts.length\" */ memPtr_3)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                if iszero(/** @src 70:3800:3850  \"_accounts.length == _rewardBoostBasisPoints.length\" */ eq(expr, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 70:3820:3850  \"_rewardBoostBasisPoints.length\" */ memPtr_4)))\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                {\n                                    let memPtr_5 := mload(_2)\n                                    mstore(memPtr_5, shl(229, 4594637))\n                                    mstore(add(memPtr_5, _3), _46)\n                                    mstore(add(memPtr_5, _44), _44)\n                                    mstore(add(memPtr_5, 68), \"RewardTracker: array length mism\")\n                                    mstore(add(memPtr_5, 100), \"atch\")\n                                    revert(memPtr_5, 132)\n                                }\n                                /// @src 70:3928:3941  \"uint256 i = 0\"\n                                let var_i := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                /// @src 70:3923:4052  \"for (uint256 i = 0; i < _accounts.length; i++) {...\"\n                                for { }\n                                /** @src 67:278:281  \"gov\" */ _50\n                                /// @src 70:3928:3941  \"uint256 i = 0\"\n                                {\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    if eq(var_i, not(0))\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x11)\n                                        revert(_4, _44)\n                                    }\n                                    /// @src 70:3965:3968  \"i++\"\n                                    var_i := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ add(var_i, /** @src 67:278:281  \"gov\" */ _50)\n                                }\n                                /// @src 70:3965:3968  \"i++\"\n                                {\n                                    /// @src 70:3943:3963  \"i < _accounts.length\"\n                                    if iszero(lt(var_i, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 70:3947:3963  \"_accounts.length\" */ memPtr_3)))\n                                    /// @src 70:3943:3963  \"i < _accounts.length\"\n                                    { break }\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let cleaned := and(mload(/** @src 70:4000:4012  \"_accounts[i]\" */ memory_array_index_access_address_dyn(memPtr_3, var_i)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _49)\n                                    /// @src 70:4014:4040  \"_rewardBoostBasisPoints[i]\"\n                                    fun_setRewardBoost(cleaned, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 70:4014:4040  \"_rewardBoostBasisPoints[i]\" */ memory_array_index_access_address_dyn(memPtr_4, var_i)))\n                                }\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x6ccae054 {\n                                if callvalue() { revert(_4, _4) }\n                                let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                let _51 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _51)))\n                                /// @src 70:4304:4311  \"_amount\"\n                                fun_safeTransfer(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 70:4266:4280  \"IERC20(_token)\" */ param_3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _51), /** @src 70:4304:4311  \"_amount\" */ param_4, param_5)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:4434:4442  \"balances\" */ 0x09)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _52 := sload(keccak256(_4, _2))\n                                let memPos_20 := mload(_2)\n                                mstore(memPos_20, _52)\n                                return(memPos_20, 32)\n                            }\n                            case 0x8112643c {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _53 := sload(/** @src 70:1427:1469  \"uint256 public override boostedTotalSupply\" */ 8)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_21 := mload(_2)\n                                mstore(memPos_21, _53)\n                                return(memPos_21, 32)\n                            }\n                            case 0x83b6ed16 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1641:1708  \"mapping(address => uint256) public override rewardBoostsBasisPoints\" */ 12)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _54 := sload(keccak256(_4, _2))\n                                let memPos_22 := mload(_2)\n                                mstore(memPos_22, _54)\n                                return(memPos_22, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr_6 := mload(_2)\n                                let ret_3 := _4\n                                let slotValue_1 := sload(/** @src 70:1178:1198  \"string public symbol\" */ 3)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let length_1 := _4\n                                let _55 := 1\n                                length_1 := shr(_55, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, _55)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _56 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _56))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(memPtr_6, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr_6, _56), and(slotValue_1, not(255)))\n                                    ret_3 := add(add(memPtr_6, shl(5, iszero(iszero(length_1)))), _56)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 70:1178:1198  \"string public symbol\" */ 3)\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let dataPos_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i_1 := _4\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _56) }\n                                    {\n                                        mstore(add(add(memPtr_6, i_1), _56), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _55)\n                                    }\n                                    ret_3 := add(add(memPtr_6, i_1), _56)\n                                }\n                                finalize_allocation(memPtr_6, sub(ret_3, memPtr_6))\n                                let memPos_23 := mload(_2)\n                                return(memPos_23, sub(abi_encode_string(memPos_23, memPtr_6), memPos_23))\n                            }\n                            case 0x9cb7de4b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_8 := abi_decode_address_20793()\n                                let value_7 := calldataload(36)\n                                let _57 := iszero(iszero(value_7))\n                                if iszero(eq(value_7, _57)) { revert(_4, _4) }\n                                let _58 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _58)))\n                                let _59 := and(value0_8, _58)\n                                mstore(_4, _59)\n                                mstore(32, /** @src 70:3354:3363  \"isHandler\" */ 0x13)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _60 := keccak256(_4, _2)\n                                let value_8 := and(sload(_60), not(255))\n                                sstore(_60, or(value_8, and(_57, 255)))\n                                /// @src 70:3400:3431  \"HandlerSet(_handler, _isActive)\"\n                                let _61 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                mstore(_61, _59)\n                                mstore(add(_61, 32), _57)\n                                /// @src 70:3400:3431  \"HandlerSet(_handler, _isActive)\"\n                                log1(_61, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2, /** @src 70:3400:3431  \"HandlerSet(_handler, _isActive)\" */ 0x6cc67219f62a9e5d66cc9f2a62e16634cffcf48facd698a829bafcc1ad2c5c83)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xa694fc3a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 70:4538:4617  \"if (inPrivateStakingMode) { ...\"\n                                if /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(shr(8, sload(/** @src 70:4542:4562  \"inPrivateStakingMode\" */ 0x12)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                /// @src 70:4538:4617  \"if (inPrivateStakingMode) { ...\"\n                                {\n                                    /// @src 70:4586:4606  \"AuthorizationError()\"\n                                    let _62 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    /// @src 70:4586:4606  \"AuthorizationError()\"\n                                    mstore(_62, /** @src 70:6652:6672  \"AuthorizationError()\" */ shl(234, 1443823))\n                                    /// @src 70:4586:4606  \"AuthorizationError()\"\n                                    revert(_62, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                                }\n                                /// @src 70:4657:4664  \"_amount\"\n                                fun_stake(/** @src 70:4633:4643  \"msg.sender\" */ caller(), caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(_3))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xa8d93627 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let cleaned_1 := and(sload(_3), sub(shl(160, 1), 1))\n                                /// @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                let _63 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                /// @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                mstore(_63, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xa8d93627))\n                                /// @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                let _64 := staticcall(gas(), cleaned_1, _63, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3, /** @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ _63, 32)\n                                if iszero(_64)\n                                {\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let pos := mload(_2)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                let expr_1 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                /// @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                if _64\n                                {\n                                    let _65 := 32\n                                    if gt(_65, returndatasize()) { _65 := returndatasize() }\n                                    finalize_allocation(_63, _65)\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    if slt(sub(/** @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ add(_63, _65), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _63), /** @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ 32)\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    { revert(_4, _4) }\n                                    /// @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\"\n                                    expr_1 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_63)\n                                }\n                                let memPos_24 := mload(_2)\n                                mstore(memPos_24, expr_1)\n                                return(memPos_24, /** @src 70:6341:6392  \"IRewardDistributor(distributor).tokensPerInterval()\" */ 32)\n                            }\n                            case /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xa9059cbb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_9 := abi_decode_address_20793()\n                                /// @src 70:5317:5324  \"_amount\"\n                                fun_transfer(/** @src 70:5293:5303  \"msg.sender\" */ caller(), /** @src 70:5317:5324  \"_amount\" */ value0_9, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(36))\n                                let memPos_25 := mload(_2)\n                                mstore(memPos_25, 1)\n                                return(memPos_25, 32)\n                            }\n                            case 0xaaf5eb68 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_26 := mload(_2)\n                                mstore(memPos_26, /** @src 70:1069:1073  \"1e30\" */ 0x0c9f2c9cd04674edea40000000)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(memPos_26, 32)\n                            }\n                            case 0xb5f73e8d {\n                                if callvalue() { revert(_4, _4) }\n                                let param_6, param_7, param_8 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 70:4678:4881  \"function stakeForAccount(address _fundingAccount, address _account, uint256 _amount) external override nonReentrant {...\"\n                                fun_validateHandler()\n                                /// @src 70:4866:4873  \"_amount\"\n                                fun_stake(param_6, param_7, param_8)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xbfe10928 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_9 := and(sload(_3), sub(shl(160, 1), 1))\n                                let memPos_27 := mload(_2)\n                                mstore(memPos_27, value_9)\n                                return(memPos_27, 32)\n                            }\n                            case 0xc4d66de8 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_10 := abi_decode_address_20793()\n                                let _66 := sload(/** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _67 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(_66, _67)))\n                                if iszero(/** @src 70:2489:2503  \"!isInitialized\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(shr(160, _66), 0xff)))\n                                {\n                                    let memPtr_7 := mload(_2)\n                                    mstore(memPtr_7, shl(229, 4594637))\n                                    mstore(add(memPtr_7, _3), 32)\n                                    mstore(add(memPtr_7, 36), 34)\n                                    mstore(add(memPtr_7, 68), \"RewardTracker: already initializ\")\n                                    mstore(add(memPtr_7, 100), \"ed\")\n                                    revert(memPtr_7, 132)\n                                }\n                                sstore(/** @src 67:278:281  \"gov\" */ 0x01, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_66, not(shl(160, 255))), shl(160, 1)))\n                                sstore(_3, or(and(sload(_3), shl(160, 0xffffffffffffffffffffffff)), and(value0_10, _67)))\n                                return(_4, _4)\n                            }\n                            case 0xc5fa2730 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_10 := and(shr(8, sload(/** @src 70:2082:2114  \"bool public inPrivateStakingMode\" */ 18)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                let memPos_28 := mload(_2)\n                                mstore(memPos_28, iszero(iszero(value_10)))\n                                return(memPos_28, 32)\n                            }\n                            case 0xc89039c5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_29 := mload(_2)\n                                mstore(memPos_29, and(/** @src 70:1204:1241  \"address immutable public depositToken\" */ loadimmutable(\"55468\"), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_29, 32)\n                            }\n                            case 0xcfad57a2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_11 := abi_decode_address_20793()\n                                let _68 := sload(/** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _69 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(_68, _69)))\n                                let _70 := and(/** @src 67:392:410  \"_gov == address(0)\" */ value0_11, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _69)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                if /** @src 67:392:410  \"_gov == address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _70)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                {\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    let _71 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    mstore(_71, shl(224, 0x3efa09af))\n                                    revert(_71, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 67:278:281  \"gov\" */ 0x01, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ or(and(_68, shl(160, 0xffffffffffffffffffffffff)), _70))\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                let _72 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                mstore(_72, _70)\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                log1(_72, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 32, /** @src 67:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xdafd83e2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_12 := abi_decode_address_20793()\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(1), sub(shl(160, 1), 1))))\n                                /// @src 70:3594:3617  \"_rewardBoostBasisPoints\"\n                                fun_setRewardBoost(value0_12, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ calldataload(36))\n                                return(_4, _4)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_13 := abi_decode_address_20793()\n                                let value1_2 := abi_decode_address()\n                                let _73 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_13, _73))\n                                mstore(32, /** @src 70:5492:5502  \"allowances\" */ 0x0a)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _74 := keccak256(_4, _2)\n                                mstore(_4, and(value1_2, _73))\n                                mstore(32, _74)\n                                let _75 := sload(keccak256(_4, _2))\n                                let memPos_30 := mload(_2)\n                                mstore(memPos_30, _75)\n                                return(memPos_30, 32)\n                            }\n                            case 0xdfbaefb1 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_11 := and(sload(/** @src 70:2043:2076  \"bool public inPrivateTransferMode\" */ 18), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                let memPos_31 := mload(_2)\n                                mstore(memPos_31, iszero(iszero(value_11)))\n                                return(memPos_31, 32)\n                            }\n                            case 0xe9503425 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_20793(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 70:1847:1897  \"mapping(address => uint256) public claimableReward\" */ 15)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let _76 := sload(keccak256(_4, _2))\n                                let memPos_32 := mload(_2)\n                                mstore(memPos_32, _76)\n                                return(memPos_32, 32)\n                            }\n                            case 0xf5fc5076 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _77 := sload(/** @src 70:1596:1635  \"uint256 public cumulativeRewardPerToken\" */ 11)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_33 := mload(_2)\n                                mstore(memPos_33, _77)\n                                return(memPos_33, 32)\n                            }\n                            case 0xf76033d3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_12 := and(shr(16, sload(/** @src 70:2120:2153  \"bool public inPrivateClaimingMode\" */ 18)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                                let memPos_34 := mload(_2)\n                                mstore(memPos_34, iszero(iszero(value_12)))\n                                return(memPos_34, 32)\n                            }\n                            case 0xf7c618c1 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _78 := sub(shl(160, 1), 1)\n                                let cleaned_2 := and(sload(_3), _78)\n                                /// @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                let _79 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                                /// @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                mstore(_79, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xf7c618c1))\n                                /// @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                let _80 := staticcall(gas(), cleaned_2, _79, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3, /** @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ _79, 32)\n                                if iszero(_80)\n                                {\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    let pos_1 := mload(_2)\n                                    returndatacopy(pos_1, _4, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                let expr_2 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                                /// @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                if _80\n                                {\n                                    let _81 := 32\n                                    if gt(_81, returndatasize()) { _81 := returndatasize() }\n                                    finalize_allocation(_79, _81)\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    if slt(sub(/** @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ add(_79, _81), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _79), /** @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ 32)\n                                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                    { revert(_4, _4) }\n                                    let value_13 := mload(_79)\n                                    if iszero(eq(value_13, and(value_13, _78))) { revert(_4, _4) }\n                                    /// @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\"\n                                    expr_2 := value_13\n                                }\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let memPos_35 := mload(_2)\n                                mstore(memPos_35, and(expr_2, _78))\n                                return(memPos_35, /** @src 70:7833:7878  \"IRewardDistributor(distributor).rewardToken()\" */ 32)\n                            }\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        revert(0, 0)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, _1)\n                        let length := mload(value0)\n                        mstore(add(headStart, _1), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address_20793() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_bool() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n                    }\n                    function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _1 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        value0 := value\n                        let value_1 := calldataload(36)\n                        if iszero(eq(value_1, and(value_1, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        value1 := value_1\n                        value2 := calldataload(68)\n                    }\n                    function array_allocation_size_array_address_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function require_helper_stringliteral_7c37(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"Governable: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function memory_array_index_access_address_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    /// @ast-id 46730 @src 47:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_46726_mpos := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(add(expr_46726_mpos, 0x20), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := sub(abi_encode_address_uint256(add(expr_46726_mpos, 36), var_to, var_value), expr_46726_mpos)\n                        mstore(expr_46726_mpos, add(_1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(31)))\n                        /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_46726_mpos, _1)\n                        fun_callOptionalReturn(var_token_address, expr_46726_mpos)\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        value0 := value\n                    }\n                    /// @ast-id 46920 @src 47:4059:4688  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n                    function fun_callOptionalReturn(var_token_46882_address, var_data_mpos)\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := and(/** @src 47:4504:4518  \"address(token)\" */ var_token_46882_address, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 48:2847:2848  \"0\"\n                        let _2 := 0x00\n                        /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), _1, /** @src 48:2847:2848  \"0\" */ _2, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src 48:2847:2848  \"0\" */ _2, _2)\n                        /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                        let data := /** @src 48:2847:2848  \"0\" */ _2\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _3 := returndatasize()\n                            if gt(_3, 0xffffffffffffffff)\n                            {\n                                mstore(/** @src 48:2847:2848  \"0\" */ _2, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src 48:2847:2848  \"0\" */ _2, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                            }\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, add(and(add(_3, 31), not(31)), /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ 0x20))\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(memPtr, _3)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ 0x20), /** @src 48:2847:2848  \"0\" */ _2, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                        }\n                        /// @src 48:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                        let var__mpos := /** @src 48:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_1, expr_component, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ data)\n                        /// @src 47:4551:4568  \"returndata.length\"\n                        let expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 47:4551:4568  \"returndata.length\" */ var__mpos)\n                        /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        let expr_1 := /** @src 47:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                        /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        if expr_1\n                        {\n                            expr_1 := /** @src 47:4577:4608  \"!abi.decode(returndata, (bool))\" */ iszero(/** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var__mpos, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ 0x20), /** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ add(add(var__mpos, expr), /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ 0x20)))\n                        }\n                        /// @src 47:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                        if expr_1\n                        {\n                            /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            let _4 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_4, shl(224, 0x5274afe7))\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_4, 4), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                            /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 47182 @src 48:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 48:4793:5201  \"if (!success) {...\"\n                        switch /** @src 48:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 48:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 48:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 48:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 48:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 48:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 48:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src 48:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 36)\n                            }\n                            /// @src 48:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 48:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 48:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(/** @src 48:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 48:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 48:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @ast-id 47302 @src 50:2431:2738  \"function _nonReentrantBefore() private {...\"\n                    function fun_nonReentrantBefore()\n                    {\n                        /// @src 50:2554:2640  \"if (_status == ENTERED) {...\"\n                        if /** @src 50:2558:2576  \"_status == ENTERED\" */ eq(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 50:2558:2565  \"_status\" */ 0x00), /** @src 50:1755:1756  \"2\" */ 0x02)\n                        /// @src 50:2554:2640  \"if (_status == ENTERED) {...\"\n                        {\n                            /// @src 50:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            let _1 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 50:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            mstore(_1, shl(224, 0x3ee5aeb5))\n                            revert(_1, 4)\n                        }\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 50:2558:2565  \"_status\" */ 0x00, /** @src 50:1755:1756  \"2\" */ 0x02)\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 55916 @src 70:5723:6248  \"function transferFrom(...\"\n                    function fun_transferFrom(var__sender, var_recipient, var_amount) -> var\n                    {\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 70:5886:5896  \"msg.sender\" */ caller())\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(0x20, /** @src 70:5876:5885  \"isHandler\" */ 0x13)\n                        /// @src 70:5872:5988  \"if (isHandler[msg.sender]) {...\"\n                        if /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), 0xff)\n                        /// @src 70:5872:5988  \"if (isHandler[msg.sender]) {...\"\n                        {\n                            /// @src 70:5944:5951  \"_amount\"\n                            fun_transfer(var__sender, var_recipient, var_amount)\n                            /// @src 70:5966:5977  \"return true\"\n                            var := /** @src 70:5973:5977  \"true\" */ 0x01\n                            /// @src 70:5966:5977  \"return true\"\n                            leave\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(var__sender, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 70:6022:6032  \"allowances\" */ 0x0a)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _2 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 70:5886:5896  \"msg.sender\" */ caller())\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(0x20, _2)\n                        /// @src 70:6157:6170  \"nextAllowance\"\n                        fun_approve(var__sender, /** @src 70:5886:5896  \"msg.sender\" */ caller(), /** @src 70:6022:6063  \"allowances[_sender][msg.sender] - _amount\" */ checked_sub_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), /** @src 70:6022:6063  \"allowances[_sender][msg.sender] - _amount\" */ var_amount))\n                        /// @src 70:6212:6219  \"_amount\"\n                        fun_transfer(var__sender, var_recipient, var_amount)\n                        /// @src 70:6230:6241  \"return true\"\n                        var := /** @src 70:6237:6241  \"true\" */ 0x01\n                    }\n                    /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 56049 @src 70:6959:7757  \"function claimable(...\"\n                    function fun_claimable(var_account) -> var\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(var_account, _1)\n                        /// @src -1:-1:-1\n                        let _3 := 0\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        let _4 := 0x20\n                        mstore(_4, /** @src 70:7089:7109  \"boostedStakedAmounts\" */ 0x0e)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _5 := 0x40\n                        let _6 := sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5))\n                        /// @src 70:7129:7216  \"if (boostedStakedAmount == 0) {...\"\n                        if /** @src 70:7133:7157  \"boostedStakedAmount == 0\" */ iszero(_6)\n                        /// @src 70:7129:7216  \"if (boostedStakedAmount == 0) {...\"\n                        {\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(_4, /** @src 70:7180:7195  \"claimableReward\" */ 0x0f)\n                            /// @src 70:7173:7205  \"return claimableReward[_account]\"\n                            var := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5))\n                            /// @src 70:7173:7205  \"return claimableReward[_account]\"\n                            leave\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let cleaned := and(sload(/** @src 70:7294:7305  \"distributor\" */ 0x04), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                        let _7 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_5)\n                        /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                        mstore(_7, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(225, 0x76f69fed))\n                        /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                        let _8 := staticcall(gas(), cleaned, _7, /** @src 70:7294:7305  \"distributor\" */ 0x04, /** @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\" */ _7, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4)\n                        /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                        if iszero(_8)\n                        {\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let pos := mload(_5)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                        let expr := /** @src -1:-1:-1 */ _3\n                        /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                        if _8\n                        {\n                            let _9 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4\n                            /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            if gt(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4, /** @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\" */ returndatasize()) { _9 := returndatasize() }\n                            finalize_allocation(_7, _9)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if slt(sub(/** @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\" */ add(_7, _9), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _7), _4)\n                            {\n                                revert(/** @src -1:-1:-1 */ _3, _3)\n                            }\n                            /// @src 70:7275:7323  \"IRewardDistributor(distributor).pendingRewards()\"\n                            expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_7)\n                        }\n                        /// @src 70:7437:7490  \"cumulativeRewardPerToken +...\"\n                        let expr_1 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:7437:7461  \"cumulativeRewardPerToken\" */ 0x0b), /** @src 70:7250:7388  \"Math.mulDiv(...\" */ fun_mulDiv(expr, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:7360:7378  \"boostedTotalSupply\" */ 0x08)))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        mstore(_4, /** @src 70:7624:7655  \"previousCumulatedRewardPerToken\" */ 0x10)\n                        /// @src 70:7519:7698  \"Math.mulDiv(...\"\n                        let _10 := fun_mulDiv_20878(_6, /** @src 70:7577:7665  \"nextCumulativeRewardPerToken -...\" */ checked_sub_uint256(expr_1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5))))\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        mstore(_4, /** @src 70:7715:7730  \"claimableReward\" */ 0x0f)\n                        /// @src 70:7708:7750  \"return claimableReward[_account] + rewards\"\n                        var := /** @src 70:7715:7750  \"claimableReward[_account] + rewards\" */ checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5)), /** @src 70:7519:7698  \"Math.mulDiv(...\" */ _10)\n                    }\n                    /// @ast-id 48509 @src 56:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                    function fun_mulDiv_20804(var_x, var_y) -> var_result\n                    {\n                        /// @src 56:4248:4253  \"x * y\"\n                        let expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:4248:4253  \"x * y\" */ var_x, var_y)\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let usr$mm := mulmod(var_x, var_y, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(0))\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let _1 := lt(usr$mm, expr)\n                        let _2 := sub(usr$mm, expr)\n                        let var_prod1 := sub(_2, _1)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        if /** @src 56:4595:4605  \"prod1 == 0\" */ eq(/** @src 56:4383:4514  \"assembly {...\" */ _2, _1)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        {\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            var_result := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ div(expr, /** @src 70:1021:1027  \"100_00\" */ 0x2710)\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            leave\n                        }\n                        /// @src 70:1021:1027  \"100_00\"\n                        let _3 := 0x2710\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        if /** @src 56:5065:5085  \"denominator <= prod1\" */ iszero(gt(/** @src 70:1021:1027  \"100_00\" */ _3, /** @src 56:5065:5085  \"denominator <= prod1\" */ var_prod1))\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        {\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            let _4 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            mstore(_4, shl(224, 0x227bc153))\n                            revert(_4, 4)\n                        }\n                        /// @src 56:5435:5735  \"assembly {...\"\n                        let var_remainder := mulmod(var_x, var_y, /** @src 70:1021:1027  \"100_00\" */ _3)\n                        /// @src 56:7889:7902  \"return result\"\n                        var_result := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 56:5999:6370  \"assembly {...\" */ shr(4, /** @src 56:5435:5735  \"assembly {...\" */ sub(expr, var_remainder)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(252, /** @src 56:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)))), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xbc01a36e2eb1c432ca57a786c226809d495182a9930be0ded288ce703afb7e91)\n                    }\n                    /// @ast-id 48509 @src 56:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                    function fun_mulDiv(var_x, var_denominator) -> var_result\n                    {\n                        /// @src 70:1069:1073  \"1e30\"\n                        let _1 := 0x0c9f2c9cd04674edea40000000\n                        /// @src 56:4248:4253  \"x * y\"\n                        let expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:4248:4253  \"x * y\" */ var_x, /** @src 70:1069:1073  \"1e30\" */ _1)\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let usr$mm := mulmod(var_x, /** @src 70:1069:1073  \"1e30\" */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(0))\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let _2 := lt(usr$mm, expr)\n                        let _3 := sub(usr$mm, expr)\n                        let var_prod1 := sub(_3, _2)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        if /** @src 56:4595:4605  \"prod1 == 0\" */ eq(/** @src 56:4383:4514  \"assembly {...\" */ _3, _2)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        {\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if iszero(var_denominator)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x12)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                            }\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            var_result := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ div(expr, var_denominator)\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            leave\n                        }\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        if /** @src 56:5065:5085  \"denominator <= prod1\" */ iszero(gt(var_denominator, var_prod1))\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        {\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            let _4 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            mstore(_4, shl(224, 0x227bc153))\n                            revert(_4, 4)\n                        }\n                        /// @src 56:5435:5735  \"assembly {...\"\n                        let var_remainder := mulmod(var_x, /** @src 70:1069:1073  \"1e30\" */ _1, /** @src 56:5435:5735  \"assembly {...\" */ var_denominator)\n                        /// @src 56:5954:5985  \"denominator & (0 - denominator)\"\n                        let expr_1 := and(var_denominator, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src -1:-1:-1 */ 0, /** @src 56:5969:5984  \"0 - denominator\" */ var_denominator))\n                        /// @src 56:5999:6370  \"assembly {...\"\n                        let var_denominator_1 := div(var_denominator, expr_1)\n                        /// @src 56:6813:6814  \"2\"\n                        let _5 := 0x02\n                        /// @src 56:6793:6814  \"(3 * denominator) ^ 2\"\n                        let expr_2 := xor(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:6794:6795  \"3\" */ 0x03, /** @src 56:6794:6809  \"3 * denominator\" */ var_denominator_1), /** @src 56:6813:6814  \"2\" */ _5)\n                        /// @src 56:7031:7067  \"inverse *= 2 - denominator * inverse\"\n                        let expr_3 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7031:7067  \"inverse *= 2 - denominator * inverse\" */ expr_2, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7046:7067  \"denominator * inverse\" */ var_denominator_1, expr_2)))\n                        /// @src 56:7100:7136  \"inverse *= 2 - denominator * inverse\"\n                        let expr_4 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7100:7136  \"inverse *= 2 - denominator * inverse\" */ expr_3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7115:7136  \"denominator * inverse\" */ var_denominator_1, expr_3)))\n                        /// @src 56:7170:7206  \"inverse *= 2 - denominator * inverse\"\n                        let expr_5 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7170:7206  \"inverse *= 2 - denominator * inverse\" */ expr_4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7185:7206  \"denominator * inverse\" */ var_denominator_1, expr_4)))\n                        /// @src 56:7240:7276  \"inverse *= 2 - denominator * inverse\"\n                        let expr_6 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7240:7276  \"inverse *= 2 - denominator * inverse\" */ expr_5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7255:7276  \"denominator * inverse\" */ var_denominator_1, expr_5)))\n                        /// @src 56:7310:7346  \"inverse *= 2 - denominator * inverse\"\n                        let expr_7 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7310:7346  \"inverse *= 2 - denominator * inverse\" */ expr_6, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7325:7346  \"denominator * inverse\" */ var_denominator_1, expr_6)))\n                        /// @src 56:7889:7902  \"return result\"\n                        var_result := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 56:5999:6370  \"assembly {...\" */ div(/** @src 56:5435:5735  \"assembly {...\" */ sub(expr, var_remainder), /** @src 56:5999:6370  \"assembly {...\" */ expr_1), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)), /** @src 56:5999:6370  \"assembly {...\" */ add(div(sub(/** @src -1:-1:-1 */ 0, /** @src 56:5999:6370  \"assembly {...\" */ expr_1), expr_1), 1))), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7381:7417  \"inverse *= 2 - denominator * inverse\" */ expr_7, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:7396:7417  \"denominator * inverse\" */ var_denominator_1, expr_7))))\n                    }\n                    /// @ast-id 48509 @src 56:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                    function fun_mulDiv_20878(var_x, var_y) -> var_result\n                    {\n                        /// @src 56:4248:4253  \"x * y\"\n                        let expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:4248:4253  \"x * y\" */ var_x, var_y)\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let usr$mm := mulmod(var_x, var_y, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ not(0))\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let _1 := lt(usr$mm, expr)\n                        let _2 := sub(usr$mm, expr)\n                        let var_prod1 := sub(_2, _1)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        if /** @src 56:4595:4605  \"prod1 == 0\" */ eq(/** @src 56:4383:4514  \"assembly {...\" */ _2, _1)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        {\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            var_result := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ div(expr, /** @src 70:1069:1073  \"1e30\" */ 0x0c9f2c9cd04674edea40000000)\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            leave\n                        }\n                        /// @src 70:1069:1073  \"1e30\"\n                        let _3 := 0x0c9f2c9cd04674edea40000000\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        if /** @src 56:5065:5085  \"denominator <= prod1\" */ iszero(gt(/** @src 70:1069:1073  \"1e30\" */ _3, /** @src 56:5065:5085  \"denominator <= prod1\" */ var_prod1))\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        {\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            let _4 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            mstore(_4, shl(224, 0x227bc153))\n                            revert(_4, 4)\n                        }\n                        /// @src 56:5435:5735  \"assembly {...\"\n                        let var_remainder := mulmod(var_x, var_y, /** @src 70:1069:1073  \"1e30\" */ _3)\n                        /// @src 56:7889:7902  \"return result\"\n                        var_result := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mul(/** @src 56:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 56:5999:6370  \"assembly {...\" */ shr(30, /** @src 56:5435:5735  \"assembly {...\" */ sub(expr, var_remainder)), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(226, /** @src 56:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)))), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x7d33c22789773a07feda8b6f0930e26fa397c439f1d5cf4b2eb27d7306d2dc99)\n                    }\n                    /// @ast-id 56120 @src 70:7891:8640  \"function _setRewardBoost(address _account, uint256 _rewardBoostBasisPoints) private {...\"\n                    function fun_setRewardBoost(var_account, var_rewardBoostBasisPoints)\n                    {\n                        /// @src 70:1021:1027  \"100_00\"\n                        let _1 := 0x2710\n                        /// @src 70:7985:8058  \"if (_rewardBoostBasisPoints > BASIS_POINTS_DIVISOR) revert BoostTooHigh()\"\n                        if /** @src 70:7989:8035  \"_rewardBoostBasisPoints > BASIS_POINTS_DIVISOR\" */ gt(var_rewardBoostBasisPoints, /** @src 70:1021:1027  \"100_00\" */ _1)\n                        /// @src 70:7985:8058  \"if (_rewardBoostBasisPoints > BASIS_POINTS_DIVISOR) revert BoostTooHigh()\"\n                        {\n                            /// @src 70:8044:8058  \"BoostTooHigh()\"\n                            let _2 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 70:8044:8058  \"BoostTooHigh()\"\n                            mstore(_2, shl(224, 0xc3293481))\n                            revert(_2, 4)\n                        }\n                        /// @src 70:8083:8091  \"_account\"\n                        fun_updateRewards(var_account)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _3 := and(var_account, sub(shl(160, 1), 1))\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(0x20, /** @src 70:8103:8126  \"rewardBoostsBasisPoints\" */ 0x0c)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ var_rewardBoostBasisPoints)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(0x20, /** @src 70:8231:8244  \"stakedAmounts\" */ 0x0d)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _5 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40))\n                        let sum := add(/** @src 70:1021:1027  \"100_00\" */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ var_rewardBoostBasisPoints)\n                        if gt(/** @src 70:1021:1027  \"100_00\" */ _1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum)\n                        {\n                            mstore(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        /// @src 70:8206:8358  \"Math.mulDiv(...\"\n                        let expr := fun_mulDiv_20804(_5, /** @src 70:8268:8314  \"BASIS_POINTS_DIVISOR + _rewardBoostBasisPoints\" */ sum)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _6 := sload(/** @src 70:8401:8419  \"boostedTotalSupply\" */ 0x08)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(0x20, /** @src 70:8434:8454  \"boostedStakedAmounts\" */ 0x0e)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:8401:8419  \"boostedTotalSupply\" */ 0x08, /** @src 70:8401:8502  \"boostedTotalSupply -...\" */ checked_add_uint256(/** @src 70:8401:8464  \"boostedTotalSupply -...\" */ checked_sub_uint256(_6, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40))), /** @src 70:8401:8502  \"boostedTotalSupply -...\" */ expr))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(0x20, /** @src 70:8434:8454  \"boostedStakedAmounts\" */ 0x0e)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ expr)\n                        /// @src 70:8584:8633  \"RewardBoostSet(_account, _rewardBoostBasisPoints)\"\n                        let _7 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                        /// @src 70:8584:8633  \"RewardBoostSet(_account, _rewardBoostBasisPoints)\"\n                        log1(_7, sub(abi_encode_address_uint256(_7, var_account, var_rewardBoostBasisPoints), _7), 0x5b44f1c5168d75e6bd9462e548ac0b10b7105975916c926ab8d3952effcc844d)\n                    }\n                    /// @ast-id 56178 @src 70:8646:9166  \"function _claim(...\"\n                    function fun_claim(var_account, var_receiver) -> var\n                    {\n                        /// @src 70:8772:8780  \"_account\"\n                        fun_updateRewards(var_account)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(var_account, _1))\n                        mstore(0x20, /** @src 70:8814:8829  \"claimableReward\" */ 0x0f)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)\n                        let _2 := sload(dataSlot)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(dataSlot, /** @src -1:-1:-1 */ 0)\n                        /// @src 70:8889:9131  \"if (tokenAmount > 0) {...\"\n                        if /** @src 70:8893:8908  \"tokenAmount > 0\" */ iszero(iszero(_2))\n                        /// @src 70:8889:9131  \"if (tokenAmount > 0) {...\"\n                        {\n                            /// @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                            let _3 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                            /// @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                            mstore(_3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x095ea7b3))\n                            /// @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                            let _4 := call(gas(), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 70:8965:8977  \"depositToken\" */ loadimmutable(\"55468\"), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1), /** @src -1:-1:-1 */ 0, /** @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\" */ _3, sub(abi_encode_address_uint256(add(_3, 4), /** @src 70:8995:8999  \"this\" */ address(), /** @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\" */ _2), _3), _3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20)\n                            /// @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                            if iszero(_4)\n                            {\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                let pos := mload(0x40)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                            if _4\n                            {\n                                let _5 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20\n                                /// @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\"\n                                if gt(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5, /** @src 70:8958:9014  \"IERC20(depositToken).approve(address(this), tokenAmount)\" */ returndatasize()) { _5 := returndatasize() }\n                                finalize_allocation(_3, _5)\n                                pop(abi_decode_bool_fromMemory(_3, add(_3, _5)))\n                            }\n                            /// @src 70:9061:9072  \"tokenAmount\"\n                            fun_stake(/** @src 70:8995:8999  \"this\" */ address(), /** @src 70:9061:9072  \"tokenAmount\" */ var_receiver, _2)\n                            /// @src 70:9092:9120  \"Claim(_account, tokenAmount)\"\n                            let _6 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                            /// @src 70:9092:9120  \"Claim(_account, tokenAmount)\"\n                            log1(_6, sub(abi_encode_address_uint256(_6, var_account, _2), _6), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                        }\n                        /// @src 70:9141:9159  \"return tokenAmount\"\n                        var := _2\n                    }\n                    /// @ast-id 56356 @src 70:10226:10899  \"function _transfer(...\"\n                    function fun_transfer(var_sender, var_recipient, var_amount)\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 70:10368:10389  \"_sender != address(0)\" */ var_sender, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        if /** @src 70:10368:10389  \"_sender != address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 45)\n                            mstore(add(memPtr, 68), \"RewardTracker: transfer from the\")\n                            mstore(add(memPtr, 100), \" zero address\")\n                            revert(memPtr, 132)\n                        }\n                        let _3 := and(/** @src 70:10491:10515  \"_recipient != address(0)\" */ var_recipient, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        if /** @src 70:10491:10515  \"_recipient != address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 43)\n                            mstore(add(memPtr_1, 68), \"RewardTracker: transfer to the z\")\n                            mstore(add(memPtr_1, 100), \"ero address\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 70:10595:10665  \"if (inPrivateTransferMode) {...\"\n                        if /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(sload(/** @src 70:10599:10620  \"inPrivateTransferMode\" */ 0x12), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0xff)\n                        /// @src 70:10595:10665  \"if (inPrivateTransferMode) {...\"\n                        { fun_validateHandler() }\n                        /// @src 70:10387:10388  \"0\"\n                        let _4 := 0x00\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 70:10695:10703  \"balances\" */ 0x09)\n                        /// @src 70:10695:10722  \"balances[_sender] - _amount\"\n                        let _5 := checked_sub_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), /** @src 70:10695:10722  \"balances[_sender] - _amount\" */ var_amount)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 70:10695:10703  \"balances\" */ 0x09)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ _5)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        /// @src 70:10808:10838  \"balances[_recipient] + _amount\"\n                        let _6 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), /** @src 70:10808:10838  \"balances[_recipient] + _amount\" */ var_amount)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(0x20, /** @src 70:10695:10703  \"balances\" */ 0x09)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:10387:10388  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ _6)\n                        /// @src 70:10854:10892  \"Transfer(_sender, _recipient, _amount)\"\n                        let _7 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                        mstore(_7, var_amount)\n                        /// @src 70:10854:10892  \"Transfer(_sender, _recipient, _amount)\"\n                        log3(_7, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20, /** @src 70:10854:10892  \"Transfer(_sender, _recipient, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n                    }\n                    /// @ast-id 56400 @src 70:10905:11361  \"function _approve(...\"\n                    function fun_approve(var_owner, var_spender, var_amount)\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 70:11043:11063  \"_owner != address(0)\" */ var_owner, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        if /** @src 70:11043:11063  \"_owner != address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 44)\n                            mstore(add(memPtr, 68), \"RewardTracker: approve from the \")\n                            mstore(add(memPtr, 100), \"zero address\")\n                            revert(memPtr, 132)\n                        }\n                        let _3 := and(/** @src 70:11164:11186  \"_spender != address(0)\" */ var_spender, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        if /** @src 70:11164:11186  \"_spender != address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 42)\n                            mstore(add(memPtr_1, 68), \"RewardTracker: approve to the ze\")\n                            mstore(add(memPtr_1, 100), \"ro address\")\n                            revert(memPtr_1, 132)\n                        }\n                        mstore(/** @src 70:11061:11062  \"0\" */ 0x00, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 70:11265:11275  \"allowances\" */ 0x0a)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _4 := keccak256(/** @src 70:11061:11062  \"0\" */ 0x00, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)\n                        mstore(/** @src 70:11061:11062  \"0\" */ 0x00, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(0x20, _4)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:11061:11062  \"0\" */ 0x00, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ var_amount)\n                        /// @src 70:11319:11354  \"Approval(_owner, _spender, _amount)\"\n                        let _5 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(0x40)\n                        mstore(_5, var_amount)\n                        /// @src 70:11319:11354  \"Approval(_owner, _spender, _amount)\"\n                        log3(_5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x20, /** @src 70:11319:11354  \"Approval(_owner, _spender, _amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n                    }\n                    /// @ast-id 56412 @src 70:11367:11483  \"function _validateHandler() private view {...\"\n                    function fun_validateHandler()\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 70:11436:11446  \"msg.sender\" */ caller())\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(0x20, /** @src 70:11426:11435  \"isHandler\" */ 0x13)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        if iszero(and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x40)), 0xff))\n                        {\n                            let memPtr := mload(0x40)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 0x20)\n                            mstore(add(memPtr, 36), 24)\n                            mstore(add(memPtr, 68), \"RewardTracker: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function require_helper_stringliteral(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 30)\n                            mstore(add(memPtr, 68), \"RewardTracker: invalid _amount\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 56504 @src 70:11489:12254  \"function _stake(address _fundingAccount, address _account, uint256 _amount) private {...\"\n                    function fun_stake(var_fundingAccount, var_account, var_amount)\n                    {\n                        /// @src 70:11583:11637  \"require(_amount > 0, \\\"RewardTracker: invalid _amount\\\")\"\n                        require_helper_stringliteral(/** @src 70:11591:11602  \"_amount > 0\" */ iszero(iszero(var_amount)))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 70:11652:11684  \"_fundingAccount != address(this)\" */ var_fundingAccount, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        /// @src 70:11648:11789  \"if (_fundingAccount != address(this)) {...\"\n                        if /** @src 70:11652:11684  \"_fundingAccount != address(this)\" */ iszero(eq(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2, /** @src 70:11679:11683  \"this\" */ address()))\n                        /// @src 70:11648:11789  \"if (_fundingAccount != address(this)) {...\"\n                        {\n                            /// @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                            let expr_mpos := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                            /// @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                            mstore(add(expr_mpos, 0x20), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x23b872dd))\n                            mstore(/** @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, 36), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)\n                            mstore(add(/** @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 68), /** @src 70:11679:11683  \"this\" */ address())\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(add(/** @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 100), var_amount)\n                            /// @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                            mstore(expr_mpos, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 100)\n                            let newFreePtr := add(expr_mpos, 160)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, /** @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ 36)\n                            }\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(64, newFreePtr)\n                            /// @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                            fun_callOptionalReturn(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ and(/** @src 70:11707:11719  \"depositToken\" */ loadimmutable(\"55468\"), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1), /** @src 47:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos)\n                        }\n                        /// @src 70:11814:11822  \"_account\"\n                        fun_updateRewards(var_account)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _3 := and(var_account, _1)\n                        /// @src 70:11601:11602  \"0\"\n                        let _4 := 0x00\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        let _5 := 0x20\n                        mstore(_5, /** @src 70:11860:11873  \"stakedAmounts\" */ 0x0d)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _6 := 0x40\n                        /// @src 70:11860:11895  \"stakedAmounts[_account] + (_amount)\"\n                        let _7 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)), /** @src 70:11860:11895  \"stakedAmounts[_account] + (_amount)\" */ var_amount)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(_5, /** @src 70:11860:11873  \"stakedAmounts\" */ 0x0d)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 50:1755:1756  \"2\" */ _7)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(_5, /** @src 70:11938:11958  \"boostedStakedAmounts\" */ 0x0e)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _8 := sload(keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6))\n                        mstore(_5, /** @src 70:12015:12038  \"rewardBoostsBasisPoints\" */ 0x0c)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _9 := sload(keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6))\n                        /// @src 70:1021:1027  \"100_00\"\n                        let _10 := 0x2710\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let sum := add(/** @src 70:1021:1027  \"100_00\" */ _10, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                        if gt(/** @src 70:1021:1027  \"100_00\" */ _10, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum)\n                        {\n                            mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        /// @src 70:11938:12071  \"boostedStakedAmounts[_account] + Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\"\n                        let _11 := checked_add_uint256(_8, /** @src 70:11971:12071  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(var_amount, /** @src 70:11992:12048  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(_5, /** @src 70:11938:11958  \"boostedStakedAmounts\" */ 0x0e)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 50:1755:1756  \"2\" */ _11)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(_5, /** @src 70:12118:12133  \"depositBalances\" */ 0x05)\n                        /// @src 70:12118:12153  \"depositBalances[_account] + _amount\"\n                        let _12 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)), /** @src 70:12118:12153  \"depositBalances[_account] + _amount\" */ var_amount)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(_5, /** @src 70:12118:12133  \"depositBalances\" */ 0x05)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 50:1755:1756  \"2\" */ _12)\n                        sstore(/** @src 70:12184:12202  \"totalDepositSupply\" */ 0x06, /** @src 70:12184:12212  \"totalDepositSupply + _amount\" */ checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:12184:12202  \"totalDepositSupply\" */ 0x06), /** @src 70:12184:12212  \"totalDepositSupply + _amount\" */ var_amount))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        if /** @src 70:9262:9284  \"_account != address(0)\" */ iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        {\n                            let memPtr := mload(_6)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), _5)\n                            mstore(add(memPtr, 36), 39)\n                            mstore(add(memPtr, 68), \"RewardTracker: mint to the zero \")\n                            mstore(add(memPtr, 100), \"address\")\n                            revert(memPtr, 132)\n                        }\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:9374:9385  \"totalSupply\" */ 0x07, /** @src 70:9374:9395  \"totalSupply + _amount\" */ checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:9374:9385  \"totalSupply\" */ 0x07), /** @src 70:9374:9395  \"totalSupply + _amount\" */ var_amount))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _13 := sload(/** @src 70:9426:9444  \"boostedTotalSupply\" */ 0x08)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(_5, /** @src 70:12015:12038  \"rewardBoostsBasisPoints\" */ 0x0c)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let sum_1 := add(/** @src 70:1021:1027  \"100_00\" */ _10, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)))\n                        if gt(/** @src 70:1021:1027  \"100_00\" */ _10, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sum_1)\n                        {\n                            mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0x24)\n                        }\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:9426:9444  \"boostedTotalSupply\" */ 0x08, /** @src 70:9426:9547  \"boostedTotalSupply + Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ checked_add_uint256(_13, /** @src 70:9447:9547  \"Math.mulDiv(_amount, BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account], BASIS_POINTS_DIVISOR)\" */ fun_mulDiv_20804(var_amount, /** @src 70:9468:9524  \"BASIS_POINTS_DIVISOR + rewardBoostsBasisPoints[_account]\" */ sum_1)))\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(_5, /** @src 70:9578:9586  \"balances\" */ 0x09)\n                        /// @src 70:9578:9606  \"balances[_account] + _amount\"\n                        let _14 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6)), /** @src 70:9578:9606  \"balances[_account] + _amount\" */ var_amount)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        mstore(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3)\n                        mstore(_5, /** @src 70:9578:9586  \"balances\" */ 0x09)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src 70:11601:11602  \"0\" */ _4, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _6), /** @src 50:1755:1756  \"2\" */ _14)\n                        /// @src 70:9622:9661  \"Transfer(address(0), _account, _amount)\"\n                        let _15 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_6)\n                        mstore(_15, var_amount)\n                        /// @src 70:9622:9661  \"Transfer(address(0), _account, _amount)\"\n                        log3(_15, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _5, /** @src 70:9622:9661  \"Transfer(address(0), _account, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 70:11601:11602  \"0\" */ _4, /** @src 70:9622:9661  \"Transfer(address(0), _account, _amount)\" */ _3)\n                    }\n                    /// @ast-id 56727 @src 70:13254:14767  \"function _updateRewards(address _account) private {...\"\n                    function fun_updateRewards_20808()\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let cleaned := and(sload(/** @src 70:13355:13366  \"distributor\" */ 0x04), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let _1 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(64)\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        mstore(_1, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xe4fc6b6d))\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let _2 := call(gas(), cleaned, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0, /** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _1, /** @src 70:13355:13366  \"distributor\" */ 0x04, /** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _1, 32)\n                        if iszero(_2)\n                        {\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ 0\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        if _2\n                        {\n                            let _3 := 32\n                            if gt(_3, returndatasize()) { _3 := returndatasize() }\n                            finalize_allocation(_1, _3)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if slt(sub(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ add(_1, _3), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1), /** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ 32)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            { revert(expr, expr) }\n                            /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_1)\n                        }\n                        /// @src 70:13391:13451  \"uint256 _cumulativeRewardPerToken = cumulativeRewardPerToken\"\n                        let var_cumulativeRewardPerToken := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _4 := sload(/** @src 70:13465:13483  \"boostedTotalSupply\" */ 0x08)\n                        /// @src 70:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                        let expr_1 := /** @src 70:13465:13487  \"boostedTotalSupply > 0\" */ iszero(iszero(_4))\n                        /// @src 70:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                        if expr_1\n                        {\n                            expr_1 := /** @src 70:13491:13506  \"blockReward > 0\" */ iszero(iszero(expr))\n                        }\n                        /// @src 70:13461:13742  \"if (boostedTotalSupply > 0 && blockReward > 0) {...\"\n                        if expr_1\n                        {\n                            /// @src 70:13522:13665  \"_cumulativeRewardPerToken =...\"\n                            var_cumulativeRewardPerToken := /** @src 70:13566:13665  \"_cumulativeRewardPerToken +...\" */ checked_add_uint256(var_cumulativeRewardPerToken, /** @src 70:13610:13665  \"Math.mulDiv(blockReward, PRECISION, boostedTotalSupply)\" */ fun_mulDiv(expr, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _4))\n                            /// @src 50:1755:1756  \"2\"\n                            sstore(/** @src 70:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b, /** @src 50:1755:1756  \"2\" */ var_cumulativeRewardPerToken)\n                        }\n                        /// @src 70:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                        if /** @src 70:13895:13925  \"_cumulativeRewardPerToken == 0\" */ iszero(var_cumulativeRewardPerToken)\n                        /// @src 70:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                        {\n                            /// @src 70:13941:13948  \"return;\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 56727 @src 70:13254:14767  \"function _updateRewards(address _account) private {...\"\n                    function fun_updateRewards(var_account)\n                    {\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 70:13355:13366  \"distributor\" */ 0x04), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        let _2 := 64\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let _3 := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_2)\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        mstore(_3, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ shl(224, 0xe4fc6b6d))\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let _4 := 32\n                        /// @src -1:-1:-1\n                        let _5 := 0\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let _6 := call(gas(), cleaned, /** @src -1:-1:-1 */ _5, /** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _3, /** @src 70:13355:13366  \"distributor\" */ 0x04, /** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _3, _4)\n                        if iszero(_6)\n                        {\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        let expr := /** @src -1:-1:-1 */ _5\n                        /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                        if _6\n                        {\n                            let _7 := _4\n                            if gt(_4, returndatasize()) { _7 := returndatasize() }\n                            finalize_allocation(_3, _7)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            if slt(sub(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ add(_3, _7), /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _3), /** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\"\n                            expr := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ mload(_3)\n                        }\n                        /// @src 70:13391:13451  \"uint256 _cumulativeRewardPerToken = cumulativeRewardPerToken\"\n                        let var_cumulativeRewardPerToken := /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(/** @src 70:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b)\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _8 := sload(/** @src 70:13465:13483  \"boostedTotalSupply\" */ 0x08)\n                        /// @src 70:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                        let expr_1 := /** @src 70:13465:13487  \"boostedTotalSupply > 0\" */ iszero(iszero(_8))\n                        /// @src 70:13465:13506  \"boostedTotalSupply > 0 && blockReward > 0\"\n                        if expr_1\n                        {\n                            expr_1 := /** @src 70:13491:13506  \"blockReward > 0\" */ iszero(iszero(expr))\n                        }\n                        /// @src 70:13461:13742  \"if (boostedTotalSupply > 0 && blockReward > 0) {...\"\n                        if expr_1\n                        {\n                            /// @src 70:13522:13665  \"_cumulativeRewardPerToken =...\"\n                            var_cumulativeRewardPerToken := /** @src 70:13566:13665  \"_cumulativeRewardPerToken +...\" */ checked_add_uint256(var_cumulativeRewardPerToken, /** @src 70:13610:13665  \"Math.mulDiv(blockReward, PRECISION, boostedTotalSupply)\" */ fun_mulDiv(expr, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _8))\n                            /// @src 50:1755:1756  \"2\"\n                            sstore(/** @src 70:13427:13451  \"cumulativeRewardPerToken\" */ 0x0b, /** @src 50:1755:1756  \"2\" */ var_cumulativeRewardPerToken)\n                        }\n                        /// @src 70:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                        if /** @src 70:13895:13925  \"_cumulativeRewardPerToken == 0\" */ iszero(var_cumulativeRewardPerToken)\n                        /// @src 70:13891:13958  \"if (_cumulativeRewardPerToken == 0) {...\"\n                        {\n                            /// @src 70:13941:13948  \"return;\"\n                            leave\n                        }\n                        /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                        let _9 := and(/** @src 70:13972:13994  \"_account != address(0)\" */ var_account, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _1)\n                        /// @src 70:13968:14761  \"if (_account != address(0)) {...\"\n                        if /** @src 70:13972:13994  \"_account != address(0)\" */ iszero(iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9))\n                        /// @src 70:13968:14761  \"if (_account != address(0)) {...\"\n                        {\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                            mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14040:14060  \"boostedStakedAmounts\" */ 0x0e)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            let _10 := sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2))\n                            mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14169:14200  \"previousCumulatedRewardPerToken\" */ 0x10)\n                            /// @src 70:14108:14222  \"Math.mulDiv(boostedStakedAmount, _cumulativeRewardPerToken - previousCumulatedRewardPerToken[_account], PRECISION)\"\n                            let expr_2 := fun_mulDiv_20878(_10, /** @src 70:14141:14210  \"_cumulativeRewardPerToken - previousCumulatedRewardPerToken[_account]\" */ checked_sub_uint256(var_cumulativeRewardPerToken, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2))))\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                            mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14263:14278  \"claimableReward\" */ 0x0f)\n                            /// @src 70:14263:14304  \"claimableReward[_account] + accountReward\"\n                            let expr_3 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)), /** @src 70:14263:14304  \"claimableReward[_account] + accountReward\" */ expr_2)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                            mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14263:14278  \"claimableReward\" */ 0x0f)\n                            /// @src 50:1755:1756  \"2\"\n                            sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2), /** @src 50:1755:1756  \"2\" */ expr_3)\n                            /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                            mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14169:14200  \"previousCumulatedRewardPerToken\" */ 0x10)\n                            /// @src 50:1755:1756  \"2\"\n                            sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2), /** @src 50:1755:1756  \"2\" */ var_cumulativeRewardPerToken)\n                            /// @src 70:14495:14553  \"_claimableReward > 0 && boostedStakedAmounts[_account] > 0\"\n                            let expr_4 := /** @src 70:14495:14515  \"_claimableReward > 0\" */ iszero(iszero(expr_3))\n                            /// @src 70:14495:14553  \"_claimableReward > 0 && boostedStakedAmounts[_account] > 0\"\n                            if expr_4\n                            {\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14040:14060  \"boostedStakedAmounts\" */ 0x0e)\n                                /// @src 70:14495:14553  \"_claimableReward > 0 && boostedStakedAmounts[_account] > 0\"\n                                expr_4 := /** @src 70:14519:14553  \"boostedStakedAmounts[_account] > 0\" */ iszero(iszero(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2))))\n                            }\n                            /// @src 70:14491:14751  \"if (_claimableReward > 0 && boostedStakedAmounts[_account] > 0) {...\"\n                            if expr_4\n                            {\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14604:14621  \"cumulativeRewards\" */ 0x11)\n                                /// @src 70:14604:14667  \"cumulativeRewards[_account] +...\"\n                                let _11 := checked_add_uint256(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2)), /** @src 70:14604:14667  \"cumulativeRewards[_account] +...\" */ expr_2)\n                                /// @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\"\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _9)\n                                mstore(/** @src 70:13336:13380  \"IRewardDistributor(distributor).distribute()\" */ _4, /** @src 70:14604:14621  \"cumulativeRewards\" */ 0x11)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 70:420:14769  \"contract RewardTracker is IERC20, ReentrancyGuard, IRewardTracker, Governable {...\" */ _2), /** @src 50:1755:1756  \"2\" */ _11)\n                            }\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        /// @use-src 44:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 67:\"src/access/Governable.sol\", 71:\"src/staking/Vester.sol\", 74:\"src/staking/interfaces/IVester.sol\"\n        object \"Vester_57762\" {\n            code {\n                {\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    mstore(64, memoryguard(0x0100))\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"Vester_57762\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    let _1 := add(memoryDataOffset, argSize)\n                    if slt(sub(_1, memoryDataOffset), 192)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let offset := mload(memoryDataOffset)\n                    let _2 := sub(shl(64, 1), 1)\n                    if gt(offset, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n                    let offset_1 := mload(add(memoryDataOffset, 32))\n                    if gt(offset_1, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n                    let value := mload(add(memoryDataOffset, 64))\n                    let value3 := abi_decode_address_fromMemory(add(memoryDataOffset, 96))\n                    let value4 := abi_decode_address_fromMemory(add(memoryDataOffset, 128))\n                    let value5 := abi_decode_address_fromMemory(add(memoryDataOffset, 160))\n                    /// @src 50:1713:1714  \"1\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 1)\n                    sstore(1, or(and(sload(1), not(sub(shl(160, 1), 1))), /** @src 67:204:214  \"msg.sender\" */ caller()))\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    sstore(/** @src 71:819:821  \"18\" */ 0x04, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 71:819:821  \"18\" */ 0x04), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ not(255)), /** @src 71:819:821  \"18\" */ 0x12))\n                    /// @src 71:1944:2011  \"_esToken == address(0) ||...\"\n                    let expr := /** @src 71:1944:1966  \"_esToken == address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 71:1944:1966  \"_esToken == address(0)\" */ value3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 71:1944:2011  \"_esToken == address(0) ||...\"\n                    if iszero(expr)\n                    {\n                        expr := /** @src 71:1982:2011  \"_claimableToken == address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 71:1982:2011  \"_claimableToken == address(0)\" */ value4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    /// @src 71:1944:2055  \"_esToken == address(0) ||...\"\n                    let expr_1 := expr\n                    if iszero(expr)\n                    {\n                        expr_1 := /** @src 71:2027:2055  \"_rewardTracker == address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 71:2027:2055  \"_rewardTracker == address(0)\" */ value5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    /// @src 71:1927:2116  \"if (...\"\n                    if expr_1\n                    {\n                        /// @src 71:2087:2105  \"ZeroAddressError()\"\n                        let _3 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 71:2087:2105  \"ZeroAddressError()\"\n                        mstore(_3, shl(224, 0x3efa09af))\n                        revert(_3, /** @src 71:819:821  \"18\" */ 0x04)\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let newLen := mload(value0)\n                    if gt(newLen, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 71:819:821  \"18\" */ 0x04, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    let _4 := sload(/** @src 71:2125:2137  \"name = _name\" */ 0x02)\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    length := shr(1, _4)\n                    let outOfPlaceEncoding := and(_4, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 71:819:821  \"18\" */ 0x04, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    if gt(length, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:2125:2137  \"name = _name\" */ 0x02)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let deleteStart := add(data, shr(5, add(newLen, 31)))\n                        if lt(newLen, 32) { deleteStart := data }\n                        let _5 := add(data, shr(5, add(length, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _5) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    srcOffset := 32\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:2125:2137  \"name = _name\" */ 0x02)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, 32) }\n                        {\n                            sstore(dstPtr, mload(add(value0, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, 32)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value0, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 71:2125:2137  \"name = _name\" */ 0x02, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if newLen\n                        {\n                            value_1 := mload(add(value0, srcOffset))\n                        }\n                        sstore(/** @src 71:2125:2137  \"name = _name\" */ 0x02, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                    }\n                    let newLen_1 := mload(value1)\n                    if gt(newLen_1, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 71:819:821  \"18\" */ 0x04, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    let _6 := sload(/** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03)\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    length_1 := shr(1, _6)\n                    let outOfPlaceEncoding_1 := and(_6, 1)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 71:819:821  \"18\" */ 0x04, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    if gt(length_1, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                        if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                        let _7 := add(data_1, shr(5, add(length_1, 31)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _7) { start_1 := add(start_1, 1) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    srcOffset_1 := 32\n                    switch gt(newLen_1, 31)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                        {\n                            sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, 1)\n                            srcOffset_1 := add(srcOffset_1, 32)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(value1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ add(shl(1, newLen_1), 1))\n                    }\n                    default {\n                        let value_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if newLen_1\n                        {\n                            value_2 := mload(add(value1, srcOffset_1))\n                        }\n                        sstore(/** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(value_2, not(shr(shl(/** @src 71:2147:2163  \"symbol = _symbol\" */ 0x03, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n                    }\n                    /// @src 71:2174:2208  \"vestingDuration = _vestingDuration\"\n                    mstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 128, /** @src 71:2174:2208  \"vestingDuration = _vestingDuration\" */ value)\n                    /// @src 71:2219:2237  \"esToken = _esToken\"\n                    mstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 160, /** @src 71:2219:2237  \"esToken = _esToken\" */ value3)\n                    /// @src 71:2247:2279  \"claimableToken = _claimableToken\"\n                    mstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 192, /** @src 71:2247:2279  \"claimableToken = _claimableToken\" */ value4)\n                    /// @src 71:2290:2320  \"rewardTracker = _rewardTracker\"\n                    mstore(224, value5)\n                    /// @src 71:2331:2416  \"if (rewardTracker != address(0)) {...\"\n                    if /** @src 71:2335:2362  \"rewardTracker != address(0)\" */ iszero(iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(value5, sub(shl(160, 1), 1))))\n                    /// @src 71:2331:2416  \"if (rewardTracker != address(0)) {...\"\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        sstore(/** @src 71:2378:2405  \"hasMaxVestableAmount = true\" */ 0x06, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(sload(/** @src 71:2378:2405  \"hasMaxVestableAmount = true\" */ 0x06), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ not(255)), 1))\n                    }\n                    let _8 := mload(64)\n                    let _9 := datasize(\"Vester_57762_deployed\")\n                    codecopy(_8, dataoffset(\"Vester_57762_deployed\"), _9)\n                    setimmutable(_8, \"56752\", mload(128))\n                    setimmutable(_8, \"56754\", mload(160))\n                    setimmutable(_8, \"56756\", mload(192))\n                    setimmutable(_8, \"56759\", mload(/** @src 71:2290:2320  \"rewardTracker = _rewardTracker\" */ 224))\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    return(_8, _9)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let _1 := mload(offset)\n                    if gt(_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                    }\n                    let _2 := 0x20\n                    let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n                    mstore(array_1, _1)\n                    if gt(add(add(offset, _1), _2), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    for { } lt(i, _1) { i := add(i, _2) }\n                    {\n                        mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n                    }\n                    mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    array := array_1\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 47:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 48:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 50:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 56:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\", 67:\"src/access/Governable.sol\", 71:\"src/staking/Vester.sol\"\n            object \"Vester_57762_deployed\" {\n                code {\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 71:745:763  \"string public name\" */ 2)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(_5, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, _5)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 71:745:763  \"string public name\" */ 2)\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let dataPos := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                finalize_allocation(_1, sub(ret, _1))\n                                let memPos := mload(_2)\n                                return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                            }\n                            case 0x08f26c76 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_1 := fun_getMaxVestableAmount(abi_decode_address_14901())\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, ret_1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x095ea7b3 { external_fun_approve() }\n                            case 0x0db9ea4a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:1094:1145  \"mapping(address => uint256) public lastVestingTimes\" */ 10)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _7 := sload(keccak256(_4, _2))\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, _7)\n                                return(memPos_2, 32)\n                            }\n                            case 0x12d43a51 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value := and(sload(/** @src 67:149:167  \"address public gov\" */ 1), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, value)\n                                return(memPos_3, 32)\n                            }\n                            case 0x13e82e7a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address_14901()\n                                let value1 := abi_decode_address()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:3228:3440  \"function claimForAccount(...\"\n                                fun_validateHandler()\n                                /// @src 71:3399:3433  \"return _claim(_account, _receiver)\"\n                                let var := /** @src 71:3406:3433  \"_claim(_account, _receiver)\" */ fun_claim(value0, value1)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, var)\n                                return(memPos_4, 32)\n                            }\n                            case 0x1514617e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, /** @src 71:562:602  \"uint256 public immutable vestingDuration\" */ loadimmutable(\"56752\"))\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(memPos_5, 32)\n                            }\n                            case 0x16ca05c5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, and(/** @src 71:608:640  \"address public immutable esToken\" */ loadimmutable(\"56754\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_6, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _8 := sload(/** @src 71:828:863  \"uint256 public override totalSupply\" */ 5)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _8)\n                                return(memPos_7, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                /// @ast-id 57440 @src 71:8164:8376  \"function transferFrom(...\"\n                                /** @ast-id 57440 */ /** @ast-id 57440 */ fun_transfer()\n                            }\n                            case /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x27e235e3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:909:952  \"mapping(address => uint256) public balances\" */ 7)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _9 := sload(keccak256(_4, _2))\n                                let memPos_8 := mload(_2)\n                                mstore(memPos_8, _9)\n                                return(memPos_8, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_1 := and(sload(_3), 0xff)\n                                let memPos_9 := mload(_2)\n                                mstore(memPos_9, value_1)\n                                return(memPos_9, 32)\n                            }\n                            case 0x342fcda9 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address_14901()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:2927:3105  \"function depositForAccount(...\"\n                                fun_validateHandler()\n                                /// @src 71:3090:3097  \"_amount\"\n                                fun_deposit(value0_1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ calldataload(36))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0x387a785d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:1230:1300  \"mapping(address => uint256) public override cumulativeRewardDeductions\" */ 12)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _10 := sload(keccak256(_4, _2))\n                                let memPos_10 := mload(_2)\n                                mstore(memPos_10, _10)\n                                return(memPos_10, 32)\n                            }\n                            case 0x3ccfd60b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:3834:3860  \"_claim(account, _receiver)\"\n                                pop(fun_claim(/** @src 71:3777:3787  \"msg.sender\" */ caller(), caller()))\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, /** @src 71:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _11 := 0x20\n                                mstore(_11, /** @src 71:3895:3917  \"cumulativeClaimAmounts\" */ 0x08)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _12 := sload(keccak256(_4, _2))\n                                mstore(_11, /** @src 71:3954:3962  \"balances\" */ 0x07)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _13 := sload(keccak256(_4, _2))\n                                if /** @src 71:4044:4059  \"totalVested > 0\" */ iszero(/** @src 71:4003:4026  \"balance + claimedAmount\" */ checked_add_uint256(_13, _12))\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                {\n                                    let memPtr := mload(_2)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, _3), _11)\n                                    mstore(add(memPtr, 36), 29)\n                                    mstore(add(memPtr, 68), \"Vester: vested amount is zero\")\n                                    revert(memPtr, 100)\n                                }\n                                let _14 := and(/** @src 71:4164:4177  \"rewardTracker\" */ loadimmutable(\"56759\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                if iszero(extcodesize(_14))\n                                {\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                let _15 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                mstore(_15, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0xb5f73e8d))\n                                mstore(/** @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ add(_15, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3), /** @src 71:4203:4207  \"this\" */ address())\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(add(/** @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36), /** @src 71:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(add(/** @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 68), _13)\n                                /// @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                let _16 := call(gas(), _14, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 100, /** @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\" */ _15, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4)\n                                /// @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                if iszero(_16)\n                                {\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let pos := mload(_2)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 71:4149:4229  \"IRewardTracker(rewardTracker).stakeForAccount(address(this), _receiver, balance)\"\n                                if _16\n                                {\n                                    finalize_allocation_14909(_15)\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    _4 := _4\n                                }\n                                /// @src 71:4254:4261  \"balance\"\n                                fun_burn(/** @src 71:3777:3787  \"msg.sender\" */ caller(), /** @src 71:4254:4261  \"balance\" */ _13)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, /** @src 71:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_11, /** @src 71:3895:3917  \"cumulativeClaimAmounts\" */ 0x08)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                sstore(keccak256(_4, _2), _4)\n                                mstore(_11, /** @src 71:4328:4342  \"claimedAmounts\" */ 0x09)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                sstore(keccak256(_4, _2), _4)\n                                mstore(_11, /** @src 71:4368:4384  \"lastVestingTimes\" */ 0x0a)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                sstore(keccak256(_4, _2), _4)\n                                /// @src 71:4409:4450  \"Withdraw(account, claimedAmount, balance)\"\n                                let _17 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_17, /** @src 71:3777:3787  \"msg.sender\" */ caller())\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(add(_17, _11), _12)\n                                mstore(add(_17, _2), _13)\n                                /// @src 71:4409:4450  \"Withdraw(account, claimedAmount, balance)\"\n                                log1(_17, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 96, /** @src 71:4409:4450  \"Withdraw(account, claimedAmount, balance)\" */ 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x402914f5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_2 := fun_claimable(abi_decode_address_14901())\n                                let memPos_11 := mload(_2)\n                                mstore(memPos_11, ret_2)\n                                return(memPos_11, 32)\n                            }\n                            case 0x41f22724 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address_14901()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:5619:5809  \"function setBonusRewards(...\"\n                                fun_validateHandler()\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:5770:5782  \"bonusRewards\" */ 0x0d)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), calldataload(36))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0x46ea87af {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:1369:1410  \"mapping(address => bool) public isHandler\" */ 14)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let value_2 := and(sload(keccak256(_4, _2)), 0xff)\n                                let memPos_12 := mload(_2)\n                                mstore(memPos_12, iszero(iszero(value_2)))\n                                return(memPos_12, 32)\n                            }\n                            case 0x4e71d92d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:3178:3215  \"return _claim(msg.sender, msg.sender)\"\n                                let var_1 := /** @src 71:3185:3215  \"_claim(msg.sender, msg.sender)\" */ fun_claim(/** @src 71:3192:3202  \"msg.sender\" */ caller(), caller())\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let memPos_13 := mload(_2)\n                                mstore(memPos_13, var_1)\n                                return(memPos_13, 32)\n                            }\n                            case 0x69de9b93 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value_3 := calldataload(_3)\n                                let _18 := iszero(iszero(value_3))\n                                if iszero(eq(value_3, _18)) { revert(0, 0) }\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))))\n                                let value_4 := and(sload(/** @src 71:2701:2745  \"hasMaxVestableAmount = _hasMaxVestableAmount\" */ 0x06), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ not(255))\n                                sstore(/** @src 71:2701:2745  \"hasMaxVestableAmount = _hasMaxVestableAmount\" */ 0x06, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(value_4, and(_18, 255)))\n                                /// @src 71:2760:2806  \"HasMaxVestableAmountSet(_hasMaxVestableAmount)\"\n                                let _19 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_19, _18)\n                                /// @src 71:2760:2806  \"HasMaxVestableAmountSet(_hasMaxVestableAmount)\"\n                                log1(_19, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32, /** @src 71:2760:2806  \"HasMaxVestableAmountSet(_hasMaxVestableAmount)\" */ 0x1fd2231f946f86c7aca4810d9697f7edffaba8a34f2a1fc7716f354ed2d3449d)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x6bcb411a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_14 := mload(_2)\n                                mstore(memPos_14, and(/** @src 71:691:738  \"address public immutable override rewardTracker\" */ loadimmutable(\"56759\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_14, 32)\n                            }\n                            case 0x6ccae054 {\n                                if callvalue() { revert(_4, _4) }\n                                let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                let _20 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _20)))\n                                let _21 := and(/** @src 71:3648:3662  \"IERC20(_token)\" */ param_3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _20)\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_mpos := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _22 := add(expr_mpos, 0x20)\n                                mstore(_22, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _23 := sub(abi_encode_address_uint256(add(expr_mpos, 36), param_4, param_5), expr_mpos)\n                                let _24 := not(31)\n                                mstore(expr_mpos, add(_23, _24))\n                                finalize_allocation(expr_mpos, _23)\n                                /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                                let expr_component := call(gas(), _21, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ _22, mload(expr_mpos), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, _4)\n                                /// @src 48:3462:3493  \"target.call{value: value}(data)\"\n                                let data := _4\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _25 := returndatasize()\n                                    if gt(_25, 0xffffffffffffffff)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                    }\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let memPtr_1 := mload(_2)\n                                    finalize_allocation(memPtr_1, add(and(add(_25, 31), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _24), 0x20))\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    mstore(memPtr_1, _25)\n                                    data := memPtr_1\n                                    returndatacopy(add(memPtr_1, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, returndatasize())\n                                }\n                                /// @src 48:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                let var_mpos := /** @src 48:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_21, expr_component, /** @src 48:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                /// @src 47:4551:4568  \"returndata.length\"\n                                let expr := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(/** @src 47:4551:4568  \"returndata.length\" */ var_mpos)\n                                /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                let expr_1 := /** @src 47:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                                /// @src 47:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                if expr_1\n                                {\n                                    expr_1 := /** @src 47:4577:4608  \"!abi.decode(returndata, (bool))\" */ iszero(/** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src 47:4578:4608  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)))\n                                }\n                                /// @src 47:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                if expr_1\n                                {\n                                    /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    let _26 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_26, shl(224, 0x5274afe7))\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    mstore(/** @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_26, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3), _21)\n                                    /// @src 47:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_26, /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                }\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:7376:7384  \"balances\" */ 0x07)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _27 := sload(keccak256(_4, _2))\n                                let memPos_15 := mload(_2)\n                                mstore(memPos_15, _27)\n                                return(memPos_15, 32)\n                            }\n                            case 0x71417b32 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:1030:1088  \"mapping(address => uint256) public override claimedAmounts\" */ 9)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _28 := sload(keccak256(_4, _2))\n                                let memPos_16 := mload(_2)\n                                mstore(memPos_16, _28)\n                                return(memPos_16, 32)\n                            }\n                            case 0x93035473 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_3 := fun_getTotalVested(abi_decode_address_14901())\n                                let memPos_17 := mload(_2)\n                                mstore(memPos_17, ret_3)\n                                return(memPos_17, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr_2 := mload(_2)\n                                let ret_4 := 0\n                                let slotValue_1 := sload(/** @src 71:769:789  \"string public symbol\" */ 3)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let length_1 := ret_4\n                                let _29 := 1\n                                length_1 := shr(_29, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, _29)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _30 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _30))\n                                {\n                                    mstore(ret_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(ret_4, 0x24)\n                                }\n                                mstore(memPtr_2, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr_2, _30), and(slotValue_1, not(255)))\n                                    ret_4 := add(add(memPtr_2, shl(5, iszero(iszero(length_1)))), _30)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 71:769:789  \"string public symbol\" */ 3)\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let dataPos_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i_1 := 0\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _30) }\n                                    {\n                                        mstore(add(add(memPtr_2, i_1), _30), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _29)\n                                    }\n                                    ret_4 := add(add(memPtr_2, i_1), _30)\n                                }\n                                finalize_allocation(memPtr_2, sub(ret_4, memPtr_2))\n                                let memPos_18 := mload(_2)\n                                return(memPos_18, sub(abi_encode_string(memPos_18, memPtr_2), memPos_18))\n                            }\n                            case 0x9cb7de4b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_14901()\n                                let value_5 := calldataload(36)\n                                let _31 := iszero(iszero(value_5))\n                                if iszero(eq(value_5, _31)) { revert(0, 0) }\n                                let _32 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 67:278:281  \"gov\" */ 0x01), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _32)))\n                                let _33 := and(value0_3, _32)\n                                mstore(_4, _33)\n                                mstore(32, /** @src 71:2509:2518  \"isHandler\" */ 0x0e)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _34 := keccak256(_4, _2)\n                                let value_6 := and(sload(_34), not(255))\n                                sstore(_34, or(value_6, and(_31, 255)))\n                                /// @src 71:2555:2586  \"HandlerSet(_handler, _isActive)\"\n                                let _35 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_35, _33)\n                                mstore(add(_35, 32), _31)\n                                /// @src 71:2555:2586  \"HandlerSet(_handler, _isActive)\"\n                                log1(_35, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2, /** @src 71:2555:2586  \"HandlerSet(_handler, _isActive)\" */ 0x6cc67219f62a9e5d66cc9f2a62e16634cffcf48facd698a829bafcc1ad2c5c83)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xa2545fa5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:1306:1362  \"mapping(address => uint256) public override bonusRewards\" */ 13)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _36 := sload(keccak256(_4, _2))\n                                let memPos_19 := mload(_2)\n                                mstore(memPos_19, _36)\n                                return(memPos_19, 32)\n                            }\n                            case 0xa9059cbb { external_fun_approve() }\n                            case 0xacf077a5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_7 := and(sload(/** @src 71:870:902  \"bool public hasMaxVestableAmount\" */ 6), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0xff)\n                                let memPos_20 := mload(_2)\n                                mstore(memPos_20, iszero(iszero(value_7)))\n                                return(memPos_20, 32)\n                            }\n                            case 0xb5ff136d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:958:1024  \"mapping(address => uint256) public override cumulativeClaimAmounts\" */ 8)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _37 := sload(keccak256(_4, _2))\n                                let memPos_21 := mload(_2)\n                                mstore(memPos_21, _37)\n                                return(memPos_21, 32)\n                            }\n                            case 0xb6b55f25 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:2906:2913  \"_amount\"\n                                fun_deposit(/** @src 71:2894:2904  \"msg.sender\" */ caller(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ calldataload(_3))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xb71bce2a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_14901(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:1152:1224  \"mapping(address => uint256) public override transferredCumulativeRewards\" */ 11)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _38 := sload(keccak256(_4, _2))\n                                let memPos_22 := mload(_2)\n                                mstore(memPos_22, _38)\n                                return(memPos_22, 32)\n                            }\n                            case 0xcfad57a2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_14901()\n                                let _39 := sload(/** @src 67:278:281  \"gov\" */ 0x01)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _40 := sub(shl(160, 1), 1)\n                                /// @src 67:256:307  \"require(msg.sender == gov, \\\"Governable: forbidden\\\")\"\n                                require_helper_stringliteral_7c37(/** @src 67:264:281  \"msg.sender == gov\" */ eq(/** @src 67:264:274  \"msg.sender\" */ caller(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(_39, _40)))\n                                let _41 := and(/** @src 67:392:410  \"_gov == address(0)\" */ value0_4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _40)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                if /** @src 67:392:410  \"_gov == address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _41)\n                                /// @src 67:388:462  \"if (_gov == address(0)) {...\"\n                                {\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    let _42 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                    /// @src 67:433:451  \"ZeroAddressError()\"\n                                    mstore(_42, shl(224, 0x3efa09af))\n                                    revert(_42, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                                }\n                                sstore(/** @src 67:278:281  \"gov\" */ 0x01, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ or(and(_39, shl(160, 0xffffffffffffffffffffffff)), _41))\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                let _43 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                mstore(_43, _41)\n                                /// @src 67:496:508  \"GovSet(_gov)\"\n                                log1(_43, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32, /** @src 67:496:508  \"GovSet(_gov)\" */ 0xf37f443beaba06ede6cc2388e6232ba429af5187e7859f76041287600447dce7)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xd0b038b7 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address_14901()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:5167:5389  \"function setTransferredCumulativeRewards(...\"\n                                fun_validateHandler()\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, and(value0_5, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:5334:5362  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), calldataload(36))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xd5a73fdd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret_5 := fun_getTotalVested(abi_decode_address_14901())\n                                let memPos_23 := mload(_2)\n                                mstore(memPos_23, ret_5)\n                                return(memPos_23, 32)\n                            }\n                            case 0xd89b7007 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_6 := abi_decode_address_14901()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:5395:5613  \"function setCumulativeRewardDeductions(...\"\n                                fun_validateHandler()\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, and(value0_6, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 71:5560:5586  \"cumulativeRewardDeductions\" */ 0x0c)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), calldataload(36))\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, 1)\n                                return(_4, _4)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                pop(abi_decode_address_14901())\n                                pop(abi_decode_address())\n                                let memPos_24 := mload(_2)\n                                mstore(memPos_24, _4)\n                                return(memPos_24, 32)\n                            }\n                            case 0xf421f62a {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_25 := mload(_2)\n                                mstore(memPos_25, /** @src 71:7074:7101  \"rewardTracker != address(0)\" */ iszero(iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 71:7074:7087  \"rewardTracker\" */ loadimmutable(\"56759\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))))\n                                return(memPos_25, 32)\n                            }\n                            case 0xf6d6d5aa {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_26 := mload(_2)\n                                mstore(memPos_26, and(/** @src 71:646:685  \"address public immutable claimableToken\" */ loadimmutable(\"56756\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_26, 32)\n                            }\n                            case 0xf713c230 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_7 := abi_decode_address_14901()\n                                let value1_1 := abi_decode_address()\n                                /// @src 50:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 71:4463:5161  \"function transferStakeValues(...\"\n                                fun_validateHandler()\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _44 := sub(shl(160, 1), 1)\n                                let _45 := and(value0_7, _44)\n                                mstore(_4, _45)\n                                let _46 := 32\n                                mstore(_46, /** @src 71:4658:4686  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _47 := sload(keccak256(_4, _2))\n                                /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                let _48 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_2)\n                                /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                mstore(_48, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x3792def3))\n                                mstore(/** @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\" */ add(_48, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3), _45)\n                                /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                let _49 := staticcall(gas(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 71:4769:4782  \"rewardTracker\" */ loadimmutable(\"56759\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _44), /** @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\" */ _48, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36, /** @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\" */ _48, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _46)\n                                /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                if iszero(_49)\n                                {\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    let pos_1 := mload(_2)\n                                    returndatacopy(pos_1, _4, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                let expr_2 := _4\n                                if _49\n                                {\n                                    let _50 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _46\n                                    /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                    if gt(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _46, /** @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\" */ returndatasize()) { _50 := returndatasize() }\n                                    finalize_allocation(_48, _50)\n                                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                    if slt(sub(/** @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\" */ add(_48, _50), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _48), _46) { revert(0, 0) }\n                                    /// @src 71:4754:4823  \"IRewardTracker(rewardTracker)...\"\n                                    expr_2 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_48)\n                                }\n                                /// @src 71:4888:4946  \"transferredCumulativeReward +...\"\n                                let _51 := checked_add_uint256(_47, expr_2)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _52 := and(value1_1, _44)\n                                mstore(_4, _52)\n                                mstore(_46, /** @src 71:4658:4686  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ _51)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, _45)\n                                mstore(_46, /** @src 71:4956:4982  \"cumulativeRewardDeductions\" */ 0x0c)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ expr_2)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_46, /** @src 71:4658:4686  \"transferredCumulativeRewards\" */ 0x0b)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), _4)\n                                mstore(_46, /** @src 71:5098:5110  \"bonusRewards\" */ 0x0d)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                let _53 := sload(keccak256(_4, _2))\n                                mstore(_4, _52)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), /** @src 50:1755:1756  \"2\" */ _53)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(_4, _45)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(_4, _2), _4)\n                                /// @src 50:1755:1756  \"2\"\n                                sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4, /** @src 50:1713:1714  \"1\" */ 0x01)\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                return(_4, _4)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation_14909(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ not(31)))\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, _1)\n                        let length := mload(value0)\n                        mstore(add(headStart, _1), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), /** @src 47:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ not(31))), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 64)\n                    }\n                    function abi_decode_address_14901() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function external_fun_approve()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        pop(abi_decode_address_14901())\n                        /// @ast-id 57395 @src 71:7465:7640  \"function transfer(...\"\n                        /** @ast-id 57395 */ /** @ast-id 57395 */ fun_transfer()\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _1 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        value0 := value\n                        let value_1 := calldataload(36)\n                        if iszero(eq(value_1, and(value_1, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        value1 := value_1\n                        value2 := calldataload(68)\n                    }\n                    function require_helper_stringliteral_7c37(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"Governable: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 47302 @src 50:2431:2738  \"function _nonReentrantBefore() private {...\"\n                    function fun_nonReentrantBefore()\n                    {\n                        /// @src 50:2554:2640  \"if (_status == ENTERED) {...\"\n                        if /** @src 50:2558:2576  \"_status == ENTERED\" */ eq(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(/** @src 50:2558:2565  \"_status\" */ 0x00), /** @src 50:1755:1756  \"2\" */ 0x02)\n                        /// @src 50:2554:2640  \"if (_status == ENTERED) {...\"\n                        {\n                            /// @src 50:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            let _1 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 50:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            mstore(_1, shl(224, 0x3ee5aeb5))\n                            revert(_1, 4)\n                        }\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 50:2558:2565  \"_status\" */ 0x00, /** @src 50:1755:1756  \"2\" */ 0x02)\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        value0 := value\n                    }\n                    /// @ast-id 47182 @src 48:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 48:4793:5201  \"if (!success) {...\"\n                        switch /** @src 48:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 48:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 48:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(/** @src 48:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 48:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 48:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 48:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                                mstore(/** @src 48:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36)\n                            }\n                            /// @src 48:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 48:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 48:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(/** @src 48:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 48:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 48:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 57275 @src 71:5815:6116  \"function claimable(...\"\n                    function fun_claimable(var_account) -> var\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 71:5932:5954  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        mstore(0x20, /** @src 71:5979:5993  \"claimedAmounts\" */ 0x09)\n                        /// @src 71:5932:6003  \"cumulativeClaimAmounts[_account] -...\"\n                        let expr := checked_sub_uint256(_1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)))\n                        /// @src 71:6080:6109  \"return amount + nextClaimable\"\n                        var := /** @src 71:6087:6109  \"amount + nextClaimable\" */ checked_add_uint256(expr, /** @src 71:6037:6070  \"_getNextClaimableAmount(_account)\" */ fun_getNextClaimableAmount(var_account))\n                    }\n                    /// @ast-id 57338 @src 71:6122:6996  \"function getMaxVestableAmount(...\"\n                    function fun_getMaxVestableAmount(var_account) -> var\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 71:7074:7087  \"rewardTracker\" */ loadimmutable(\"56759\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        /// @src 71:6233:6291  \"if (!hasRewardTracker()) {...\"\n                        if /** @src 71:7074:7101  \"rewardTracker != address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        /// @src 71:6233:6291  \"if (!hasRewardTracker()) {...\"\n                        {\n                            /// @src 71:6272:6280  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 71:6272:6280  \"return 0\"\n                            leave\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _3 := and(var_account, _1)\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                        let _5 := 0x20\n                        mstore(_5, /** @src 71:6339:6367  \"transferredCumulativeRewards\" */ 0x0b)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _6 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        mstore(_5, /** @src 71:6431:6443  \"bonusRewards\" */ 0x0d)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _7 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        let _8 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        mstore(_8, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x3792def3))\n                        mstore(/** @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\" */ add(_8, 4), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                        /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        let _9 := staticcall(gas(), _2, _8, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36, /** @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\" */ _8, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _5)\n                        /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        if iszero(_9)\n                        {\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            let pos := mload(0x40)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        let expr := /** @src -1:-1:-1 */ _4\n                        /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                        if _9\n                        {\n                            let _10 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _5\n                            /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                            if gt(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _5, /** @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\" */ returndatasize()) { _10 := returndatasize() }\n                            finalize_allocation(_8, _10)\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            if slt(sub(/** @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\" */ add(_8, _10), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _8), _5)\n                            {\n                                revert(/** @src -1:-1:-1 */ _4, _4)\n                            }\n                            /// @src 71:6490:6560  \"IRewardTracker(rewardTracker)...\"\n                            expr := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_8)\n                        }\n                        /// @src 71:6598:6682  \"cumulativeReward +...\"\n                        let expr_1 := checked_add_uint256(/** @src 71:6598:6656  \"cumulativeReward +...\" */ checked_add_uint256(expr, _6), /** @src 71:6598:6682  \"cumulativeReward +...\" */ _7)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _3)\n                        mstore(_5, /** @src 71:6729:6755  \"cumulativeRewardDeductions\" */ 0x0c)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _11 := sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        /// @src 71:6822:6914  \"if (maxVestableAmount < cumulativeRewardDeduction) {...\"\n                        if /** @src 71:6826:6871  \"maxVestableAmount < cumulativeRewardDeduction\" */ lt(expr_1, _11)\n                        /// @src 71:6822:6914  \"if (maxVestableAmount < cumulativeRewardDeduction) {...\"\n                        {\n                            /// @src 71:6891:6899  \"return 0\"\n                            var := /** @src -1:-1:-1 */ _4\n                            /// @src 71:6891:6899  \"return 0\"\n                            leave\n                        }\n                        /// @src 71:6927:6979  \"return maxVestableAmount - cumulativeRewardDeduction\"\n                        var := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 71:6934:6979  \"maxVestableAmount - cumulativeRewardDeduction\" */ expr_1, _11)\n                    }\n                    /// @ast-id 57367 @src 71:7114:7263  \"function getTotalVested(address _account) public view returns (uint256) {...\"\n                    function fun_getTotalVested(var_account) -> var\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 71:7203:7211  \"balances\" */ 0x07)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        mstore(0x20, /** @src 71:7224:7246  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 71:7196:7256  \"return balances[_account] + cumulativeClaimAmounts[_account]\"\n                        var := /** @src 71:7203:7256  \"balances[_account] + cumulativeClaimAmounts[_account]\" */ checked_add_uint256(_1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)))\n                    }\n                    /// @ast-id 57395 @src 71:7465:7640  \"function transfer(...\"\n                    function fun_transfer()\n                    {\n                        /// @src 71:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\"\n                        let _1 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                        /// @src 71:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\"\n                        mstore(_1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(229, 4594637))\n                        mstore(/** @src 71:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\" */ add(_1, 4), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                        mstore(add(/** @src 71:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36), 25)\n                        mstore(add(/** @src 71:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 68), \"Vester: non-transferrable\")\n                        /// @src 71:7598:7633  \"revert(\\\"Vester: non-transferrable\\\")\"\n                        revert(_1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 100)\n                    }\n                    /// @ast-id 57551 @src 71:8967:9312  \"function _burn(address _account, uint256 _amount) private {...\"\n                    function fun_burn(var_account, var_amount)\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := and(/** @src 71:9043:9065  \"_account != address(0)\" */ var_account, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 71:9043:9065  \"_account != address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 34)\n                            mstore(add(memPtr, 68), \"Vester: burn from the zero addre\")\n                            mstore(add(memPtr, 100), \"ss\")\n                            revert(memPtr, 132)\n                        }\n                        mstore(/** @src 71:9063:9064  \"0\" */ 0x00, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:9136:9144  \"balances\" */ 0x07)\n                        /// @src 71:9136:9164  \"balances[_account] - _amount\"\n                        let _2 := checked_sub_uint256(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src 71:9063:9064  \"0\" */ 0x00, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), /** @src 71:9136:9164  \"balances[_account] - _amount\" */ var_amount)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src 71:9063:9064  \"0\" */ 0x00, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:9136:9144  \"balances\" */ 0x07)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src 71:9063:9064  \"0\" */ 0x00, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ _2)\n                        sstore(/** @src 71:9229:9240  \"totalSupply\" */ 0x05, /** @src 71:9229:9250  \"totalSupply - _amount\" */ checked_sub_uint256(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(/** @src 71:9229:9240  \"totalSupply\" */ 0x05), /** @src 71:9229:9250  \"totalSupply - _amount\" */ var_amount))\n                        /// @src 71:9266:9305  \"Transfer(_account, address(0), _amount)\"\n                        let _3 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        mstore(_3, var_amount)\n                        /// @src 71:9266:9305  \"Transfer(_account, address(0), _amount)\"\n                        log3(_3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x20, /** @src 71:9266:9305  \"Transfer(_account, address(0), _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 71:9063:9064  \"0\" */ 0x00)\n                    }\n                    /// @ast-id 57610 @src 71:9318:9936  \"function _deposit(address _account, uint256 _amount) private {...\"\n                    function fun_deposit(var_account, var_amount)\n                    {\n                        /// @src 71:9407:9408  \"0\"\n                        let _1 := 0x00\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if /** @src 71:9397:9408  \"_amount > 0\" */ iszero(var_amount)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 23)\n                            mstore(add(memPtr, 68), \"Vester: invalid _amount\")\n                            revert(memPtr, 100)\n                        }\n                        /// @src 71:9462:9470  \"_account\"\n                        fun_updateVesting(var_account)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := and(/** @src 71:9529:9542  \"rewardTracker\" */ loadimmutable(\"56759\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        /// @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        if iszero(extcodesize(_3))\n                        {\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            revert(/** @src 71:9407:9408  \"0\" */ _1, _1)\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _4 := 64\n                        /// @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        let _5 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_4)\n                        /// @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        mstore(_5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(225, 0x198405b7))\n                        let _6 := and(var_account, _2)\n                        mstore(/** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ add(_5, 4), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        mstore(add(/** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 36), var_amount)\n                        mstore(add(/** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 68), /** @src 71:9589:9593  \"this\" */ address())\n                        /// @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        let _7 := call(gas(), _3, /** @src 71:9407:9408  \"0\" */ _1, /** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 100, /** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ _5, /** @src 71:9407:9408  \"0\" */ _1)\n                        /// @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        if iszero(_7)\n                        {\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            let pos := mload(_4)\n                            returndatacopy(pos, /** @src 71:9407:9408  \"0\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\"\n                        if _7\n                        {\n                            finalize_allocation_14909(_5)\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            _1 := /** @src 71:9407:9408  \"0\" */ _1\n                        }\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if /** @src 71:8735:8757  \"_account != address(0)\" */ iszero(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        {\n                            let memPtr_1 := mload(_4)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, /** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ 4), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                            mstore(add(memPtr_1, 36), 32)\n                            mstore(add(memPtr_1, 68), \"Vester: mint to the zero address\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 71:8819:8830  \"totalSupply\" */ 0x05, /** @src 71:8819:8840  \"totalSupply + _amount\" */ checked_add_uint256(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(/** @src 71:8819:8830  \"totalSupply\" */ 0x05), /** @src 71:8819:8840  \"totalSupply + _amount\" */ var_amount))\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src 71:9407:9408  \"0\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        mstore(32, /** @src 71:8871:8879  \"balances\" */ 0x07)\n                        /// @src 71:8871:8899  \"balances[_account] + _amount\"\n                        let _8 := checked_add_uint256(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src 71:9407:9408  \"0\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4)), /** @src 71:8871:8899  \"balances[_account] + _amount\" */ var_amount)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src 71:9407:9408  \"0\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _6)\n                        mstore(32, /** @src 71:8871:8879  \"balances\" */ 0x07)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src 71:9407:9408  \"0\" */ _1, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _4), /** @src 50:1755:1756  \"2\" */ _8)\n                        /// @src 71:8915:8954  \"Transfer(address(0), _account, _amount)\"\n                        let _9 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_4)\n                        mstore(_9, var_amount)\n                        /// @src 71:8915:8954  \"Transfer(address(0), _account, _amount)\"\n                        log3(_9, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32, /** @src 71:8915:8954  \"Transfer(address(0), _account, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1, /** @src 71:8915:8954  \"Transfer(address(0), _account, _amount)\" */ _6)\n                        /// @src 71:9641:9888  \"if (hasMaxVestableAmount) {...\"\n                        if /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(sload(/** @src 71:9645:9665  \"hasMaxVestableAmount\" */ 0x06), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0xff)\n                        /// @src 71:9641:9888  \"if (hasMaxVestableAmount) {...\"\n                        {\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            if /** @src 71:9770:9807  \"getTotalVested(_account) <= maxAmount\" */ gt(/** @src 71:9770:9794  \"getTotalVested(_account)\" */ fun_getTotalVested(var_account), /** @src 71:9701:9731  \"getMaxVestableAmount(_account)\" */ fun_getMaxVestableAmount(var_account))\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            {\n                                let memPtr_2 := mload(_4)\n                                mstore(memPtr_2, shl(229, 4594637))\n                                mstore(add(memPtr_2, /** @src 71:9514:9595  \"IRewardTracker(rewardTracker).unstakeForAccount(_account, _amount, address(this))\" */ 4), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 32)\n                                mstore(add(memPtr_2, 36), 36)\n                                mstore(add(memPtr_2, 68), \"Vester: max vestable amount exce\")\n                                mstore(add(memPtr_2, 100), \"eded\")\n                                revert(memPtr_2, 132)\n                            }\n                        }\n                        /// @src 71:9903:9929  \"Deposit(_account, _amount)\"\n                        let _10 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(_4)\n                        /// @src 71:9903:9929  \"Deposit(_account, _amount)\"\n                        log1(_10, sub(abi_encode_address_uint256(_10, var_account, var_amount), _10), 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c)\n                    }\n                    /// @ast-id 57650 @src 71:9942:10391  \"function _updateVesting(address _account) private {...\"\n                    function fun_updateVesting(var_account)\n                    {\n                        /// @src 71:10019:10052  \"_getNextClaimableAmount(_account)\"\n                        let expr := fun_getNextClaimableAmount(var_account)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := and(var_account, sub(shl(160, 1), 1))\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:10062:10078  \"lastVestingTimes\" */ 0x0a)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 71:10091:10106  \"block.timestamp\" */ timestamp())\n                        /// @src 71:10117:10165  \"if (amount == 0) {...\"\n                        if /** @src 71:10121:10132  \"amount == 0\" */ iszero(expr)\n                        /// @src 71:10117:10165  \"if (amount == 0) {...\"\n                        {\n                            /// @src 71:10148:10155  \"return;\"\n                            leave\n                        }\n                        /// @src 71:10267:10273  \"amount\"\n                        fun_burn(var_account, expr)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:10331:10353  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 71:10331:10384  \"cumulativeClaimAmounts[_account] +...\"\n                        let _3 := checked_add_uint256(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), /** @src 71:10331:10384  \"cumulativeClaimAmounts[_account] +...\" */ expr)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:10331:10353  \"cumulativeClaimAmounts\" */ 0x08)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ _3)\n                    }\n                    /// @ast-id 57704 @src 71:10397:10986  \"function _getNextClaimableAmount(...\"\n                    function fun_getNextClaimableAmount(var_account) -> var\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:10540:10556  \"lastVestingTimes\" */ 0x0a)\n                        /// @src 71:10522:10566  \"block.timestamp - lastVestingTimes[_account]\"\n                        let expr := checked_sub_uint256(/** @src 71:10522:10537  \"block.timestamp\" */ timestamp(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1)\n                        mstore(0x20, /** @src 71:10595:10603  \"balances\" */ 0x07)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _2 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40))\n                        /// @src 71:10623:10674  \"if (balance == 0) {...\"\n                        if /** @src 71:10627:10639  \"balance == 0\" */ iszero(_2)\n                        /// @src 71:10623:10674  \"if (balance == 0) {...\"\n                        {\n                            /// @src 71:10655:10663  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 71:10655:10663  \"return 0\"\n                            leave\n                        }\n                        /// @src 71:10707:10732  \"getVestedAmount(_account)\"\n                        let expr_1 := fun_getTotalVested(var_account)\n                        /// @src 71:10768:10866  \"Math.mulDiv(...\"\n                        let expr_2 := fun_mulDiv(expr_1, expr, /** @src 71:10841:10856  \"vestingDuration\" */ loadimmutable(\"56752\"))\n                        /// @src 71:10877:10955  \"if (claimableAmount < balance) {...\"\n                        if /** @src 71:10881:10906  \"claimableAmount < balance\" */ lt(expr_2, _2)\n                        /// @src 71:10877:10955  \"if (claimableAmount < balance) {...\"\n                        {\n                            /// @src 71:10922:10944  \"return claimableAmount\"\n                            var := expr_2\n                            leave\n                        }\n                        /// @src 71:10965:10979  \"return balance\"\n                        var := _2\n                    }\n                    /// @ast-id 48509 @src 56:3803:7919  \"function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {...\"\n                    function fun_mulDiv(var_x, var_y, var_denominator) -> var_result\n                    {\n                        /// @src 56:4248:4253  \"x * y\"\n                        let expr := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:4248:4253  \"x * y\" */ var_x, var_y)\n                        /// @src 56:4383:4514  \"assembly {...\"\n                        let usr$mm := mulmod(var_x, var_y, not(0))\n                        let _1 := lt(usr$mm, expr)\n                        let _2 := sub(usr$mm, expr)\n                        let var_prod1 := sub(_2, _1)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        if /** @src 56:4595:4605  \"prod1 == 0\" */ eq(/** @src 56:4383:4514  \"assembly {...\" */ _2, _1)\n                        /// @src 56:4591:4959  \"if (prod1 == 0) {...\"\n                        {\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            if iszero(var_denominator)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x12)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x24)\n                            }\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            var_result := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ div(expr, var_denominator)\n                            /// @src 56:4918:4944  \"return prod0 / denominator\"\n                            leave\n                        }\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        if /** @src 56:5065:5085  \"denominator <= prod1\" */ iszero(gt(var_denominator, var_prod1))\n                        /// @src 56:5061:5149  \"if (denominator <= prod1) {...\"\n                        {\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            let _3 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(64)\n                            /// @src 56:5112:5134  \"MathOverflowedMulDiv()\"\n                            mstore(_3, shl(224, 0x227bc153))\n                            revert(_3, 4)\n                        }\n                        /// @src 56:5435:5735  \"assembly {...\"\n                        let var_remainder := mulmod(var_x, var_y, var_denominator)\n                        /// @src 56:5954:5985  \"denominator & (0 - denominator)\"\n                        let expr_1 := and(var_denominator, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src -1:-1:-1 */ 0, /** @src 56:5969:5984  \"0 - denominator\" */ var_denominator))\n                        /// @src 56:5999:6370  \"assembly {...\"\n                        let var_denominator_1 := div(var_denominator, expr_1)\n                        /// @src 56:6813:6814  \"2\"\n                        let _4 := 0x02\n                        /// @src 56:6793:6814  \"(3 * denominator) ^ 2\"\n                        let expr_2 := xor(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:6794:6795  \"3\" */ 0x03, /** @src 56:6794:6809  \"3 * denominator\" */ var_denominator_1), /** @src 56:6813:6814  \"2\" */ _4)\n                        /// @src 56:7031:7067  \"inverse *= 2 - denominator * inverse\"\n                        let expr_3 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7031:7067  \"inverse *= 2 - denominator * inverse\" */ expr_2, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7046:7067  \"denominator * inverse\" */ var_denominator_1, expr_2)))\n                        /// @src 56:7100:7136  \"inverse *= 2 - denominator * inverse\"\n                        let expr_4 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7100:7136  \"inverse *= 2 - denominator * inverse\" */ expr_3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7115:7136  \"denominator * inverse\" */ var_denominator_1, expr_3)))\n                        /// @src 56:7170:7206  \"inverse *= 2 - denominator * inverse\"\n                        let expr_5 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7170:7206  \"inverse *= 2 - denominator * inverse\" */ expr_4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7185:7206  \"denominator * inverse\" */ var_denominator_1, expr_4)))\n                        /// @src 56:7240:7276  \"inverse *= 2 - denominator * inverse\"\n                        let expr_6 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7240:7276  \"inverse *= 2 - denominator * inverse\" */ expr_5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7255:7276  \"denominator * inverse\" */ var_denominator_1, expr_5)))\n                        /// @src 56:7310:7346  \"inverse *= 2 - denominator * inverse\"\n                        let expr_7 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7310:7346  \"inverse *= 2 - denominator * inverse\" */ expr_6, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7325:7346  \"denominator * inverse\" */ var_denominator_1, expr_6)))\n                        /// @src 56:7889:7902  \"return result\"\n                        var_result := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:6436:6457  \"prod0 |= prod1 * twos\" */ or(/** @src 56:5999:6370  \"assembly {...\" */ div(/** @src 56:5435:5735  \"assembly {...\" */ sub(expr, var_remainder), /** @src 56:5999:6370  \"assembly {...\" */ expr_1), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:5435:5735  \"assembly {...\" */ sub(var_prod1, gt(var_remainder, expr)), /** @src 56:5999:6370  \"assembly {...\" */ add(div(sub(/** @src -1:-1:-1 */ 0, /** @src 56:5999:6370  \"assembly {...\" */ expr_1), expr_1), 1))), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7381:7417  \"inverse *= 2 - denominator * inverse\" */ expr_7, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sub(/** @src 56:6813:6814  \"2\" */ _4, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mul(/** @src 56:7396:7417  \"denominator * inverse\" */ var_denominator_1, expr_7))))\n                    }\n                    /// @ast-id 57749 @src 71:10992:11373  \"function _claim(...\"\n                    function fun_claim(var_account, var_receiver) -> var\n                    {\n                        /// @src 71:11118:11126  \"_account\"\n                        fun_updateVesting(var_account)\n                        /// @src 71:11154:11173  \"claimable(_account)\"\n                        let expr := fun_claimable(var_account)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(var_account, _1)\n                        /// @src -1:-1:-1\n                        let _3 := 0\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 71:11210:11224  \"claimedAmounts\" */ 0x09)\n                        /// @src 71:11210:11243  \"claimedAmounts[_account] + amount\"\n                        let _4 := checked_add_uint256(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), /** @src 71:11210:11243  \"claimedAmounts[_account] + amount\" */ expr)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _2)\n                        mstore(0x20, /** @src 71:11210:11224  \"claimedAmounts\" */ 0x09)\n                        /// @src 50:1755:1756  \"2\"\n                        sstore(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ keccak256(/** @src -1:-1:-1 */ _3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40), /** @src 50:1755:1756  \"2\" */ _4)\n                        /// @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        let _5 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        /// @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        mstore(_5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        let _6 := call(gas(), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ and(/** @src 71:11261:11275  \"claimableToken\" */ loadimmutable(\"56756\"), /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _1), /** @src -1:-1:-1 */ _3, /** @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\" */ _5, sub(abi_encode_address_uint256(add(_5, 4), var_receiver, expr), _5), _5, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x20)\n                        /// @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        if iszero(_6)\n                        {\n                            /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                            let pos := mload(0x40)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _3, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                        if _6\n                        {\n                            let _7 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x20\n                            /// @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\"\n                            if gt(/** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ _7, /** @src 71:11254:11304  \"IERC20(claimableToken).transfer(_receiver, amount)\" */ returndatasize()) { _7 := returndatasize() }\n                            finalize_allocation(_5, _7)\n                            pop(abi_decode_bool_fromMemory(_5, add(_5, _7)))\n                        }\n                        /// @src 71:11320:11343  \"Claim(_account, amount)\"\n                        let _8 := /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ mload(0x40)\n                        /// @src 71:11320:11343  \"Claim(_account, amount)\"\n                        log1(_8, sub(abi_encode_address_uint256(_8, var_account, expr), _8), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                        /// @src 71:11353:11366  \"return amount\"\n                        var := expr\n                    }\n                    /// @ast-id 57761 @src 71:11379:11488  \"function _validateHandler() private view {...\"\n                    function fun_validateHandler()\n                    {\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 71:11448:11458  \"msg.sender\" */ caller())\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        mstore(0x20, /** @src 71:11438:11447  \"isHandler\" */ 0x0e)\n                        /// @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\"\n                        if iszero(and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 71:459:11490  \"contract Vester is IVester, IERC20, ReentrancyGuard, Governable {...\" */ 0x40)), 0xff))\n                        {\n                            let memPtr := mload(0x40)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 0x20)\n                            mstore(add(memPtr, 36), 17)\n                            mstore(add(memPtr, 68), \"Vester: forbidden\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000815000a\"\n    }\n}\n","hash":"0100027593c7dc672b61457ab8a04c222a4a9b95987f09990925a1dc8d003afb","factoryDependencies":{"0100016183c8b793948b6d1447a5b665197f37e9e877dcc6a999b49983117ec7":"src/staking/RewardDistributor.sol:RewardDistributor","010001dd958272679f71692bb4291f9afb0cea417d48c334afb4d9a2477698fd":"src/staking/RewardRouterV2.sol:RewardRouterV2","010004b7cc874c62a0e1c4414396e50da009a276d1c3b0eec5a0b13519b71dd6":"src/staking/Vester.sol:Vester","010007976f41f8f78d0f1488bfe3e506d0e7d6cbd31431744c7a225850ff6383":"src/staking/RewardTracker.sol:RewardTracker"},"id":65}