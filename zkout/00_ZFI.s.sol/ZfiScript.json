{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"00_ZFI.s.sol:ZfiScript\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t132, r1\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t164, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t@CPI0_10[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_87\n\tadd\tr0, r0, r7\n.BB0_11:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_11\n.BB0_87:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_13\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_13:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_14\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r5\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tshl.s\t24, r2, r2\n\tand\t@CPI0_38[0], r2, r2\n\tadd\t12, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_39[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t@CPI0_40[0], r0, r2\n\tst.1\tr5, r2\n\tor\t132, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t196, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t164, r1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r5, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t@CPI0_10[0], r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_85\n\tadd\tr0, r0, r7\n.BB0_23:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_23\n.BB0_85:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_25\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_25:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_26\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r1\n\tadd\t14, r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_34\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[3]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[2]\n\tshl.s\t192, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t@CPI0_10[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_37\n\tadd\tstack-[3], r0, r4\n\tsub.s!\t@CPI0_14[0], r4, r1\n\tjump.ge\t@.BB0_42\n\tst.1\t64, r4\n\tsub.s!\t@CPI0_15[0], r4, r1\n\tjump.le\t@.BB0_45\n.BB0_42:\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_86\n\tadd\tr0, r0, r6\n.BB0_16:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_16\n.BB0_86:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_17\n\tjump\t@.BB0_18\n.BB0_37:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_91\n\tadd\tr0, r0, r6\n.BB0_39:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_39\n.BB0_91:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_18\n\tjump\t@.BB0_17\n.BB0_26:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_84\n\tadd\tr0, r0, r6\n.BB0_28:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_28\n.BB0_84:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_18\n.BB0_17:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_18:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_45:\n\tadd\t36, r4, r1\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_17[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[1], r0, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t96, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr2, r3\n\tadd\t100, r4, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_44\n\tld\tr1, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_48\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_50\n.BB0_44:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_50:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_90\n\tadd\tr0, r0, r6\n.BB0_52:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_52\n.BB0_90:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_54\n.BB0_53:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_54:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tadd\t@CPI0_19[0], r0, r5\n\tst.1\tr3, r5\n\tshr.s\t24, r2, r2\n\tand\t@CPI0_20[0], r2, r2\n\tadd\t36, r1, r5\n\tst.1\tr5, r2\n\tadd\t36, r0, r6\n\tst.1\tr1, r6\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.gt\t@.BB0_42\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI0_22[0], r1, r5\n\tjump.gt\t@.BB0_42\n\tadd\tr6, r0, stack-[3]\n\tadd\t260, r1, r5\n\tadd\t64, r0, r6\n\tst.1\tr5, r6\n\tand\t@CPI0_20[0], r4, r4\n\tadd\t228, r1, r5\n\tst.1\tr5, r4\n\tadd\t132, r1, r4\n\tadd\t@CPI0_23[0], r0, r5\n\tst.1\tr4, r5\n\tld.1\tr1, r4\n\tadd\t292, r1, r5\n\tst.1\tr5, r4\n\tadd\t324, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n\tadd\tr0, r0, r6\n.BB0_57:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_57\n.BB0_59:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\t@CPI0_17[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t31, r4, r4\n\tsub.s\t32, r0, stack-[2]\n\tand\tstack-[2], r4, r4\n\tadd\t96, r4, r5\n\tadd\t196, r1, r6\n\tst.1\tr6, r5\n\tadd\t164, r1, r5\n\tadd\tstack-[1], r0, r6\n\tst.1\tr5, r6\n\tadd\t100, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t228, r4, r4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r2, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_58\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_62\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_63\n.BB0_58:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_63:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_89\n\tadd\tr0, r0, r6\n.BB0_65:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_65\n.BB0_89:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_54\n\tjump\t@.BB0_53\n.BB0_62:\n\tand\t@CPI0_20[0], r1, stack-[1]\n\tadd\t13, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_25[0], r2, r2\n\tor\tstack-[1], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_26[0], r4, r1\n\tjump.gt\t@.BB0_42\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r3\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t18, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_28[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\t32, r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_70\n\tadd\tr0, r0, r6\n.BB0_69:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_69\n.BB0_70:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tand\tstack-[2], r3, r3\n\tadd\t68, r3, r4\n\tst.1\tr1, r4\n\tadd\t131, r3, r3\n\tand\tstack-[2], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_29[0], r3, r5\n\tjump.gt\t@.BB0_42\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_42\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_30[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI0_31[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\tstack-[3], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_21[0], r1, r3\n\tjump.gt\t@.BB0_42\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_30[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t@CPI0_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_34\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_75\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\trevert\n.BB0_75:\n\tld.1\t64, r4\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[3]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t@CPI0_10[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_76\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t@CPI0_29[0], r1, r1\n\tjump.gt\t@.BB0_42\n\tadd\tstack-[3], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_88\n\tadd\tr0, r0, r6\n.BB0_78:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_78\n.BB0_88:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_18\n\tjump\t@.BB0_17\n.func_end0:\n\n__cxa_throw:\n.func_begin1:\n\trevert\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 4174167879\nCPI0_5:\n\t.cell 3225444902\nCPI0_6:\n\t.cell 177362148\nCPI0_7:\n\t.cell 16711680\nCPI0_8:\n\t.cell 2535301202817642044428229017600\nCPI0_9:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_10:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_11:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_12:\n\t.cell -22386854525357345651981107866072664707474714240452192519658830702694482575360\nCPI0_13:\n\t.cell 2852213850513516153367582212096\nCPI0_14:\n\t.cell 18446744073709551616\nCPI0_15:\n\t.cell 18446744073709551483\nCPI0_16:\n\t.cell 452347614992308729888648578695397791276754894057784390950099369098929676398\nCPI0_17:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_18:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_19:\n\t.cell 17578355111892678914623875088142750864354428985286593717317327037311865585664\nCPI0_20:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_21:\n\t.cell 18446744073709551519\nCPI0_22:\n\t.cell 18446744073709551387\nCPI0_23:\n\t.cell 452316405932773413576264132967369317287408532544707476066044247455971241663\nCPI0_24:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_25:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_26:\n\t.cell 18446744073709551551\nCPI0_27:\n\t.cell 38191140526596169879646126958067369403742978576759412571820276788915343458304\nCPI0_28:\n\t.cell 29485693692093900896535320720837539044516270774257971310649688876405881831424\nCPI0_29:\n\t.cell 18446744073709551615\nCPI0_30:\n\t.cell 120209876281281145568259943\nCPI0_31:\n\t.cell 19984446587381578679260064154243377531984041134390618977697125463137349271552\nCPI0_32:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI0_33:\n\t.cell 316912650057057350374175801344\nCPI0_34:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_35:\n\t.cell 23996148686290874994328683527993613808391428263533972428742621687627873517568\nCPI0_36:\n\t.cell 32254389285783545628479481261281405466089163324835865339242949501035462262784\nCPI0_37:\n\t.cell 7922816253787617000789217640448\nCPI0_38:\n\t.cell 24519928653854221733733552434404946937899825954920857600\nCPI0_39:\n\t.cell -24519928653854221733733552434404946937899825954920857601\nCPI0_40:\n\t.cell -28227941571971002282588482234115560369178363731265210970646877447924712734720\nCPI0_41:\n\t.cell 36330415498891833702058586318043101064071415114476753346037725195458914025472\nCPI0_42:\n\t.cell 7922816251426433759354395033600\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","run()":"c0406226","setUp()":"0a9254e4"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.ec5dde33\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/00_ZFI.s.sol\":\"ZfiScript\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9cc29c28f49d0b7f7b2f1aa32d8273f8a087bf62eb3fb22d893df824052c25ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42dcb36cb10b878a0d5b20ce3a4a3ba4f51f44d7731a66ac1133c699bc80b31b\",\"dweb:/ipfs/QmY6q7SaHQMLBb3rS6xZdArPaXoskWeqF6oJwUeZ3gKLZj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://744ea187c195e31cb9201e63ca291fca9e623747f54f0ba390b366a6213b8964\",\"dweb:/ipfs/Qmc547qfV4sz65DC9B4okx1HvgxwUzJR7zTfKKbTzL3UQT\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223\",\"urls\":[\"bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669\",\"dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar\"]},\"lib/openzeppelin-foundry-upgrades/src/Defender.sol\":{\"keccak256\":\"0x4ab3fd0138ce11d5c16dffc7b017c965ba30de55898e91e0f64665f8e275d20e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6c5d6fba174dec5c09f86ab4ce1acdb51a0d0f780e56057a177d196e12511d\",\"dweb:/ipfs/QmaajQoYS8nD9GgEiJS6aebwf7pkFBL12Wi1DNHXLzEV9g\"]},\"lib/openzeppelin-foundry-upgrades/src/Options.sol\":{\"keccak256\":\"0x1b7a53fbaba7bd09f3265f97045d1d03670e3fc07fd989eb0243804cad8bdd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f451aa6d928f65e2e243862d72a75df605a3ba943ad6e59e8456effc8bd463c1\",\"dweb:/ipfs/Qmee7sbopLbd7N6docCLrGKwSrWGf7YXzXrTftp72oYEGy\"]},\"lib/openzeppelin-foundry-upgrades/src/Upgrades.sol\":{\"keccak256\":\"0xe4238478559e271b46ffcef23b4b22cc58943b8bbc549fd8eb221205704314b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c4d5f02c2263a8db048e11dca37d2dce3e4ea22c85c133c572aa6c3a6a879b\",\"dweb:/ipfs/QmVcEjehjoaKB5VtFnS3gd6swWr274j4KmFh3etJW6sJvx\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/DefenderDeploy.sol\":{\"keccak256\":\"0x2734b2a84b2e8c3f7d1040cdf6a1cb3d9a565201516892e297b8072f6ac44781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d0ce30498d61aa9150f2723f4cec7e0129a4b01cf04bbfe60aa4591d21918e8\",\"dweb:/ipfs/QmQtiYoNRuiGgiXJDCYr6jB4ybzeRRHrJ2nob4JfnjKwMf\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Utils.sol\":{\"keccak256\":\"0xc82c059c342414970ae59474124c23cc3d08485513ce269c0c1a781a1a0eb33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b93d1847db067a41fd9fb0cee1af8ea72a148d8e38b860b48d2dad8eb00c472b\",\"dweb:/ipfs/QmbGEVvqWv5U56YvwyfjE7z6i5mCvrTK4udS3mSz9udVRw\"]},\"lib/openzeppelin-foundry-upgrades/src/internal/Versions.sol\":{\"keccak256\":\"0x38354f4642f80aefbc2805e934eee0c779d6439be14c86465b8ca18d2a3dc543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09b1c891cda7ce69d2c1adad58a3167cf3591efcac68f1225a4e24ecd64b9369\",\"dweb:/ipfs/QmQLnanBWRJKxsBo7xp9qL7qbmsjeubkZkKJ1roSaB4P7v\"]},\"script/00_ZFI.s.sol\":{\"keccak256\":\"0xa17c963e3bf66f39653880cf9dab7fbad26a185cc4c03d6c91b46480c0bf2dbd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://60b1ccbd7b8c3da9a1b138d0f17a8505ee1142d3ea4615f3496eac4ebd6ec37f\",\"dweb:/ipfs/QmNhkdBzZ3Z7yiu2b2PDJnecD1jNhRvCxVdi2fm77AG2eW\"]},\"src/ZFI/ZFIToken.sol\":{\"keccak256\":\"0x8029f3aa6ccae93b9bedf6d11a3607cf695d5d29f23675b7fa7c0f0d4f04406c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c5f658cb2b399109827bc8d9ab3c67f1cb165ad2eba773fb20326c8560b134\",\"dweb:/ipfs/QmYzmBv1K3mWgWnbzVwqZ7TC4xJXVKvqzNar4XhECuWDeS\"]},\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\":{\"keccak256\":\"0x39aa813c4e998d1bf443b0bee432d17a7a2dbd0e0349cef31c0b426a0c6ba72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd8d3e1e03dd8313d984a3d18cfe39c15d7a92758d9789b2c828169ee8f8c4fe\",\"dweb:/ipfs/QmXPyofzX8pwiiUHAtHT6W15UoFtc4ajkYSPbGM87xeYj2\"]}},\"version\":1}","solc_version":"0.8.21","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 2:\"lib/forge-std/src/StdChains.sol\", 3:\"lib/forge-std/src/StdCheats.sol\", 8:\"lib/forge-std/src/StdUtils.sol\", 65:\"script/00_ZFI.s.sol\"\nobject \"ZfiScript_54367\" {\n    code {\n        {\n            /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 2:3166:3170  \"true\" */ 0x0c, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ or(and(sload(/** @src 2:3166:3170  \"true\" */ 0x0c), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ not(16711935)), 65537))\n            let _2 := datasize(\"ZfiScript_54367_deployed\")\n            codecopy(_1, dataoffset(\"ZfiScript_54367_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 11:\"lib/forge-std/src/console2.sol\", 65:\"script/00_ZFI.s.sol\"\n    object \"ZfiScript_54367_deployed\" {\n        code {\n            {\n                /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x0a9254e4 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        mstore(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x350d56bf))\n                        /// @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        let _5 := 32\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(/** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ add(_1, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3), /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(/** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 11)\n                        mstore(add(/** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68), \"GOV_ADDRESS\")\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        let _6 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        let _7 := staticcall(gas(), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _6, /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _1, _5)\n                        if iszero(_7)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        let expr := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4\n                        /// @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                        if _7\n                        {\n                            let _8 := _5\n                            if gt(_5, returndatasize()) { _8 := returndatasize() }\n                            finalize_allocation(_1, _8)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ add(_1, _8), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1), /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                                revert(_4, _4)\n                            }\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let value := mload(_1)\n                            if iszero(eq(value, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ sub(shl(160, 1), 1))))\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                revert(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, _4)\n                            }\n                            /// @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\"\n                            expr := value\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _9 := sload(/** @src 65:471:513  \"GOV_ADDRESS = vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ 0x0c)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        sstore(/** @src 65:471:513  \"GOV_ADDRESS = vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ 0x0c, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ or(and(_9, not(sub(shl(184, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 1), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 16777216))), and(shl(24, expr), sub(shl(184, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 1), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 16777216))))\n                        /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        let _10 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        mstore(_10, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xc1978d1f))\n                        mstore(/** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ add(_10, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3), /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(/** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _10, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 11)\n                        mstore(add(/** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _10, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68), \"PRIVATE_KEY\")\n                        /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        let _11 := staticcall(gas(), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _6, /** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _10, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ _10, /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5)\n                        /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        if iszero(_11)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_1 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_1, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        let expr_1 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4\n                        /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                        if _11\n                        {\n                            let _12 := /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5\n                            /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                            if gt(/** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5, /** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_10, _12)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\" */ add(_10, _12), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _10), /** @src 65:485:513  \"vm.envAddress(\\\"GOV_ADDRESS\\\")\" */ _5)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                                revert(_4, _4)\n                            }\n                            /// @src 65:544:569  \"vm.envUint(\\\"PRIVATE_KEY\\\")\"\n                            expr_1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(_10)\n                        }\n                        sstore(/** @src 65:523:569  \"deployerPrivateKey = vm.envUint(\\\"PRIVATE_KEY\\\")\" */ 0x0e, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr_1)\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        return(_4, _4)\n                    }\n                    case 0xc0406226 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _13 := sload(/** @src 65:641:659  \"deployerPrivateKey\" */ 0x0e)\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        let _14 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        if iszero(extcodesize(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _14))\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        {\n                            /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        let _15 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        mstore(_15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xce817d47))\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        mstore(/** @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\" */ add(_15, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3), _13)\n                        let _16 := 36\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        let _17 := call(gas(), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _14, _4, /** @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\" */ _15, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _16, /** @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\" */ _15, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4)\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        if iszero(_17)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_2 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_2, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 65:623:660  \"vm.startBroadcast(deployerPrivateKey)\"\n                        if _17\n                        {\n                            finalize_allocation_2871(_15)\n                            /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                            _4 := _4\n                        }\n                        /// @src 65:712:726  \"new ZFIToken()\"\n                        let _18 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 65:712:726  \"new ZFIToken()\"\n                        let _19 := datasize(\"ZFIToken_54723\")\n                        let _20 := add(_18, _19)\n                        let _21 := 0xffffffffffffffff\n                        if or(gt(_20, _21), lt(_20, _18))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, _16)\n                        }\n                        /// @src 65:712:726  \"new ZFIToken()\"\n                        datacopy(_18, dataoffset(\"ZFIToken_54723\"), _19)\n                        let expr_address := create(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 65:712:726  \"new ZFIToken()\" */ _18, sub(_20, _18))\n                        if iszero(expr_address)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_3 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_3, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        let _22 := sub(shl(160, 1), 1)\n                        let value_1 := and(shr(24, sload(/** @src 65:832:843  \"GOV_ADDRESS\" */ 0x0c)), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _22)\n                        /// @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\"\n                        let expr_mpos := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        let _23 := 32\n                        /// @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\"\n                        mstore(add(expr_mpos, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _23), /** @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\" */ shl(224, 0x26dcff15))\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        mstore(/** @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\" */ add(expr_mpos, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _16), value_1)\n                        /// @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\"\n                        mstore(expr_mpos, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _16)\n                        /// @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\"\n                        finalize_allocation_3596(expr_mpos)\n                        /// @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\"\n                        let _24 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\"\n                        let _25 := datasize(\"ERC1967Proxy_45862\")\n                        let _26 := add(_24, _25)\n                        if or(gt(_26, /** @src 65:712:726  \"new ZFIToken()\" */ _21), /** @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\" */ lt(_26, _24))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, _16)\n                        }\n                        /// @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\"\n                        datacopy(_24, dataoffset(\"ERC1967Proxy_45862\"), _25)\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        mstore(_26, and(/** @src 65:704:727  \"address(new ZFIToken())\" */ expr_address, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _22))\n                        mstore(add(_26, _23), _2)\n                        /// @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\"\n                        let expr_address_1 := create(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\" */ _24, sub(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ abi_encode_bytes(expr_mpos, add(_26, _2)), /** @src 65:753:846  \"new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS)))\" */ _24))\n                        if iszero(expr_address_1)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_4 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_4, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        let _27 := and(/** @src 65:745:847  \"address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))))\" */ expr_address_1, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _22)\n                        let _28 := sload(/** @src 65:737:847  \"PROXY = address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))))\" */ 0x0d)\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        sstore(/** @src 65:737:847  \"PROXY = address(new ERC1967Proxy(ZFITokenImplementation, abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))))\" */ 0x0d, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ or(and(_28, shl(160, 0xffffffffffffffffffffffff)), _27))\n                        let memPtr := mload(_2)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let newFreePtr := add(memPtr, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _2)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        if or(gt(newFreePtr, /** @src 65:712:726  \"new ZFIToken()\" */ _21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ lt(newFreePtr, memPtr))\n                        {\n                            mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 0, _16)\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newFreePtr)\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        mstore(memPtr, 18)\n                        mstore(add(memPtr, _23), \"Token address is: \")\n                        /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let expr_mpos_1 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let _29 := add(expr_mpos_1, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _23)\n                        /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        mstore(_29, shl(226, 0x104c13eb))\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        mstore(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_mpos_1, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _16), _23)\n                        /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let _30 := sub(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ abi_encode_bytes(memPtr, add(/** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos_1, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 68)), /** @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos_1)\n                        mstore(expr_mpos_1, add(_30, /** @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\" */ not(31)))\n                        /// @src 11:6669:6711  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        finalize_allocation(expr_mpos_1, _30)\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        let _31 := mload(/** @src 11:1105:1119  \"payload.length\" */ expr_mpos_1)\n                        /// @src 11:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\"\n                        let _32 := 0x636f6e736f6c652e6c6f67\n                        /// @src 11:1222:1381  \"assembly {...\"\n                        pop(staticcall(gas(), /** @src 11:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ _32, /** @src 11:1222:1381  \"assembly {...\" */ _29, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _31, 0, 0))\n                        /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                        let expr_mpos_2 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                        let _33 := add(expr_mpos_2, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _23)\n                        /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                        mstore(_33, shl(225, 0x161765e1))\n                        /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                        mstore(/** @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\" */ add(expr_mpos_2, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _16), or(and(_28, _4), _27))\n                        /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                        mstore(expr_mpos_2, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _16)\n                        /// @src 11:6906:6949  \"abi.encodeWithSignature(\\\"log(address)\\\", p0)\"\n                        finalize_allocation_3596(expr_mpos_2)\n                        /// @src 11:1222:1381  \"assembly {...\"\n                        pop(staticcall(gas(), /** @src 11:591:633  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ _32, /** @src 11:1222:1381  \"assembly {...\" */ _33, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(/** @src 11:1105:1119  \"payload.length\" */ expr_mpos_2), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 0, 0))\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _14))\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        let _34 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        mstore(_34, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3b756e9b))\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        let _35 := call(gas(), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _14, _4, /** @src 65:930:948  \"vm.stopBroadcast()\" */ _34, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _3, /** @src 65:930:948  \"vm.stopBroadcast()\" */ _34, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4)\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        if iszero(_35)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_5 := /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_5, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 65:930:948  \"vm.stopBroadcast()\"\n                        if _35\n                        {\n                            finalize_allocation_2871(_34)\n                            /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_2 := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 0xff)\n                        let memPos := mload(_2)\n                        mstore(memPos, iszero(iszero(value_2)))\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function finalize_allocation_2871(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_3596(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\" */ not(31)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(pos, length)\n                /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                let i := 0\n                for { }\n                lt(i, length)\n                {\n                    i := add(i, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                }\n                /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _1 := 0x20\n                    /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                    mstore(add(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ pos, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ i), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ mload(add(add(value, i), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)))\n                }\n                /// @src 65:325:957  \"contract ZfiScript is Script {...\"\n                mstore(add(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ pos, /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ length), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20), /** @src 65:325:957  \"contract ZfiScript is Script {...\" */ 0)\n                end := add(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ pos, and(add(/** @src 65:325:957  \"contract ZfiScript is Script {...\" */ length, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 31), /** @src 65:794:845  \"abi.encodeCall(ZFIToken.initialize2, (GOV_ADDRESS))\" */ not(31))), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n            }\n        }\n        /// @use-src 36:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 37:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 38:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\", 48:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 51:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\"\n        object \"ERC1967Proxy_45862\" {\n            code {\n                {\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    mstore(64, memoryguard(0x80))\n                    let programSize := datasize(\"ERC1967Proxy_45862\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    let _1 := add(memoryDataOffset, argSize)\n                    if slt(sub(_1, memoryDataOffset), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    let value := mload(memoryDataOffset)\n                    let _2 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _2))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    let _3 := 32\n                    let offset := mload(add(memoryDataOffset, _3))\n                    if gt(offset, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    let _4 := add(memoryDataOffset, offset)\n                    if iszero(slt(add(_4, 0x1f), _1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    let _5 := mload(_4)\n                    let array := allocate_memory(array_allocation_size_bytes(_5))\n                    mstore(array, _5)\n                    if gt(add(add(_4, _5), _3), _1)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    for { } lt(i, _5) { i := add(i, _3) }\n                    {\n                        mstore(add(add(array, i), _3), mload(add(add(_4, i), _3)))\n                    }\n                    mstore(add(add(array, _5), _3), /** @src -1:-1:-1 */ 0)\n                    /// @src 37:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                    if /** @src 37:2263:2297  \"newImplementation.code.length == 0\" */ iszero(/** @src 37:2263:2292  \"newImplementation.code.length\" */ extcodesize(value))\n                    /// @src 37:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                    {\n                        /// @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                        let _6 := /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                        /// @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                        mstore(_6, shl(224, 0x4c9c8ce3))\n                        /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        mstore(/** @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ add(_6, 4), /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ _2)\n                        /// @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                        revert(_6, /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                    }\n                    /// @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                    let _7 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                    sstore(_7, or(and(sload(_7), not(/** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ sub(shl(160, 1), 1))), /** @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2))\n                    /// @src 37:2922:2949  \"Upgraded(newImplementation)\"\n                    let _8 := /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                    /// @src 37:2922:2949  \"Upgraded(newImplementation)\"\n                    log2(/** @src -1:-1:-1 */ 0, 0, /** @src 37:2922:2949  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _2)\n                    /// @src 37:2960:3108  \"if (data.length > 0) {...\"\n                    switch /** @src 37:2964:2979  \"data.length > 0\" */ iszero(iszero(/** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 37:2964:2975  \"data.length\" */ array)))\n                    case /** @src 37:2960:3108  \"if (data.length > 0) {...\" */ 0 {\n                        /// @src 37:6644:6714  \"if (msg.value > 0) {...\"\n                        if /** @src 37:6648:6661  \"msg.value > 0\" */ iszero(iszero(/** @src 37:6648:6657  \"msg.value\" */ callvalue()))\n                        /// @src 37:6644:6714  \"if (msg.value > 0) {...\"\n                        {\n                            /// @src 37:6684:6703  \"ERC1967NonPayable()\"\n                            mstore(_8, shl(224, 0xb398979f))\n                            revert(_8, 4)\n                        }\n                    }\n                    default /// @src 37:2960:3108  \"if (data.length > 0) {...\"\n                    {\n                        /// @src 48:4255:4280  \"target.delegatecall(data)\"\n                        let expr_component := delegatecall(gas(), value, /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ add(array, _3), /** @src 48:4255:4280  \"target.delegatecall(data)\" */ mload(array), /** @src -1:-1:-1 */ 0, 0)\n                        /// @src 48:4255:4280  \"target.delegatecall(data)\"\n                        let data := /** @src -1:-1:-1 */ 0\n                        /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _9 := returndatasize()\n                            let memPtr := allocate_memory(array_allocation_size_bytes(_9))\n                            mstore(memPtr, _9)\n                            data := memPtr\n                            returndatacopy(add(memPtr, _3), /** @src -1:-1:-1 */ 0, /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ returndatasize())\n                        }\n                        /// @src 48:4297:4352  \"verifyCallResultFromTarget(target, success, returndata)\"\n                        pop(fun_verifyCallResultFromTarget(value, expr_component, /** @src 48:4255:4280  \"target.delegatecall(data)\" */ data))\n                    }\n                    /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                    let _10 := mload(64)\n                    let _11 := datasize(\"ERC1967Proxy_45862_deployed\")\n                    codecopy(_10, dataoffset(\"ERC1967Proxy_45862_deployed\"), _11)\n                    return(_10, _11)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function array_allocation_size_bytes(length) -> size\n                {\n                    if gt(length, sub(shl(64, 1), 1))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    size := add(and(add(length, 31), not(31)), 0x20)\n                }\n                /// @ast-id 47182 @src 48:4625:5207  \"function verifyCallResultFromTarget(...\"\n                function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                {\n                    /// @src 48:4793:5201  \"if (!success) {...\"\n                    switch /** @src 48:4797:4805  \"!success\" */ iszero(var_success)\n                    case /** @src 48:4793:5201  \"if (!success) {...\" */ 0 {\n                        /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                        let expr := /** @src 48:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 48:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                        /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                        if expr\n                        {\n                            expr := /** @src 48:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 48:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                        }\n                        /// @src 48:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                        if expr\n                        {\n                            /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                            let _1 := /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                            /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                            mstore(_1, shl(224, 0x9996b315))\n                            /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                            mstore(/** @src 48:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                            /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                            revert(_1, /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ 36)\n                        }\n                        /// @src 48:5173:5190  \"return returndata\"\n                        var_mpos := var_returndata_mpos\n                        leave\n                    }\n                    default /// @src 48:4793:5201  \"if (!success) {...\"\n                    {\n                        /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                        switch /** @src 48:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(/** @src 48:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                        case /** @src 48:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                            /// @src 48:6225:6242  \"FailedInnerCall()\"\n                            let _2 := /** @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\" */ mload(64)\n                            /// @src 48:6225:6242  \"FailedInnerCall()\"\n                            mstore(_2, shl(225, 0x0a12f521))\n                            revert(_2, 4)\n                        }\n                        default /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                        {\n                            /// @src 48:6046:6188  \"assembly {...\"\n                            revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                        }\n                    }\n                }\n            }\n            /// @use-src 36:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 37:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 38:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\", 51:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\"\n            object \"ERC1967Proxy_45862_deployed\" {\n                code {\n                    {\n                        /// @src 36:599:1715  \"contract ERC1967Proxy is Proxy {...\"\n                        mstore(64, 128)\n                        /// @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let value := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 38:1019:1838  \"assembly {...\"\n                        calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 38:1019:1838  \"assembly {...\" */ calldatasize())\n                        let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ _1, /** @src 38:1019:1838  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                        /// @src 38:1019:1838  \"assembly {...\"\n                        returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 38:1019:1838  \"assembly {...\" */ returndatasize())\n                        switch usr$result\n                        case 0 {\n                            revert(/** @src -1:-1:-1 */ _1, /** @src 38:1019:1838  \"assembly {...\" */ returndatasize())\n                        }\n                        default {\n                            return(/** @src -1:-1:-1 */ _1, /** @src 38:1019:1838  \"assembly {...\" */ returndatasize())\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        /// @use-src 19:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 20:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 21:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\", 27:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\", 29:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 33:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 34:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 35:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 44:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 45:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 46:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\", 55:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 67:\"src/ZFI/ZFIToken.sol\", 76:\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\"\n        object \"ZFIToken_54723\" {\n            code {\n                {\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    let _1 := memoryguard(0xa0)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    /// @src 21:1163:1176  \"address(this)\"\n                    mstore(128, /** @src 21:1171:1175  \"this\" */ address())\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    let _2 := datasize(\"ZFIToken_54723_deployed\")\n                    codecopy(_1, dataoffset(\"ZFIToken_54723_deployed\"), _2)\n                    setimmutable(_1, \"43673\", mload(/** @src 21:1163:1176  \"address(this)\" */ 128))\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 19:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 20:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 21:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol\", 27:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\", 29:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 37:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 48:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\", 51:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 53:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 54:\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 67:\"src/ZFI/ZFIToken.sol\", 76:\"src/tokens/ERC20MinterPauserPermitUpgradeable.sol\"\n            object \"ZFIToken_54723_deployed\" {\n                code {\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x01ffc9a7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value := calldataload(4)\n                                let _2 := and(value, shl(224, 0xffffffff))\n                                if iszero(eq(value, _2)) { revert(0, 0) }\n                                /// @src 19:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                let expr := /** @src 19:3551:3598  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2, /** @src 19:3566:3598  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                                /// @src 19:3551:3638  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                if iszero(expr)\n                                {\n                                    expr := /** @src 29:1133:1173  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 29:1148:1173  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                }\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(_1, iszero(iszero(expr)))\n                                return(_1, 32)\n                            }\n                            case 0x06fdde03 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr := mload(64)\n                                let ret := 0\n                                /// @src 22:3141:3148  \"$._name\"\n                                let _3 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let slotValue := sload(/** @src 22:3141:3148  \"$._name\" */ _3)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let length := extract_byte_array_length(slotValue)\n                                mstore(memPtr, length)\n                                let _4 := 0x20\n                                let _5 := 1\n                                switch and(slotValue, _5)\n                                case 0 {\n                                    mstore(add(memPtr, _4), and(slotValue, not(255)))\n                                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _4)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 22:3141:3148  \"$._name\" */ _3)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dataPos := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                    let i := 0\n                                    for { } lt(i, length) { i := add(i, _4) }\n                                    {\n                                        mstore(add(add(memPtr, i), _4), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(memPtr, i), _4)\n                                }\n                                finalize_allocation(memPtr, sub(ret, memPtr))\n                                let memPos := mload(64)\n                                mstore(memPos, _4)\n                                return(memPos, sub(abi_encode_string(memPtr, add(memPos, _4)), memPos))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0 := abi_decode_address()\n                                /// @src 22:10380:10384  \"true\"\n                                fun_approve(/** @src 25:966:976  \"msg.sender\" */ caller(), /** @src 22:10380:10384  \"true\" */ value0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, 1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _6 := sload(/** @src 22:4322:4336  \"$._totalSupply\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _6)\n                                return(memPos_2, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_1 := abi_decode_address()\n                                let value1 := abi_decode_address_31541()\n                                /// @src 27:2281:2353  \"modifier whenNotPaused() {...\"\n                                fun_requireNotPaused()\n                                /// @src 27:2345:2346  \"_\"\n                                let _7 := fun_transferFrom_inner(value0_1, value1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(68))\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, iszero(iszero(_7)))\n                                return(memPos_3, 32)\n                            }\n                            case 0x248a9ca3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, calldataload(4))\n                                mstore(32, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _8 := sload(/** @src 19:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1))\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, _8)\n                                return(memPos_4, 32)\n                            }\n                            case 0x26dcff15 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                let _9 := sload(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let value_1 := and(_9, 0xffffffffffffffff)\n                                /// @src 20:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                let expr_1 := /** @src 20:4726:4742  \"initialized == 0\" */ iszero(value_1)\n                                /// @src 20:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                if expr_1\n                                {\n                                    expr_1 := /** @src 20:4301:4317  \"!$._initializing\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                }\n                                /// @src 20:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                let expr_2 := /** @src 20:4790:4806  \"initialized == 1\" */ eq(value_1, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                /// @src 20:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                if expr_2\n                                {\n                                    expr_2 := /** @src 20:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 20:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 20:4818:4822  \"this\" */ address()))\n                                }\n                                /// @src 20:4855:4885  \"!initialSetup && !construction\"\n                                let expr_3 := /** @src 20:4855:4868  \"!initialSetup\" */ iszero(expr_1)\n                                /// @src 20:4855:4885  \"!initialSetup && !construction\"\n                                if expr_3\n                                {\n                                    expr_3 := /** @src 20:4872:4885  \"!construction\" */ iszero(expr_2)\n                                }\n                                /// @src 20:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                if expr_3\n                                {\n                                    /// @src 20:4908:4931  \"InvalidInitialization()\"\n                                    let _10 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 20:4908:4931  \"InvalidInitialization()\"\n                                    mstore(_10, shl(224, 0xf92ee8a9))\n                                    revert(_10, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                let _11 := not(0xffffffffffffffff)\n                                sstore(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_9, _11), /** @src 20:4805:4806  \"1\" */ 0x01))\n                                /// @src 20:4979:5046  \"if (isTopLevelCall) {...\"\n                                if /** @src 20:4301:4317  \"!$._initializing\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                /// @src 20:4979:5046  \"if (isTopLevelCall) {...\"\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_9, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                }\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_49957(memPtr_1)\n                                mstore(memPtr_1, 10)\n                                mstore(add(memPtr_1, 32), \"Zyfi Token\")\n                                let memPtr_2 := mload(64)\n                                finalize_allocation_49957(memPtr_2)\n                                mstore(memPtr_2, 3)\n                                mstore(add(memPtr_2, 32), \"ZFI\")\n                                let _12 := sload(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let value_2 := and(_12, 0xffffffffffffffff)\n                                /// @src 20:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                let expr_4 := /** @src 20:4726:4742  \"initialized == 0\" */ iszero(value_2)\n                                /// @src 20:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                if expr_4\n                                {\n                                    expr_4 := /** @src 20:4301:4317  \"!$._initializing\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                }\n                                /// @src 20:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                let expr_5 := /** @src 20:4790:4806  \"initialized == 1\" */ eq(value_2, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                /// @src 20:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                if expr_5\n                                {\n                                    expr_5 := /** @src 20:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 20:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 20:4818:4822  \"this\" */ address()))\n                                }\n                                /// @src 20:4855:4885  \"!initialSetup && !construction\"\n                                let expr_6 := /** @src 20:4855:4868  \"!initialSetup\" */ iszero(expr_4)\n                                /// @src 20:4855:4885  \"!initialSetup && !construction\"\n                                if expr_6\n                                {\n                                    expr_6 := /** @src 20:4872:4885  \"!construction\" */ iszero(expr_5)\n                                }\n                                /// @src 20:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                if expr_6\n                                {\n                                    /// @src 20:4908:4931  \"InvalidInitialization()\"\n                                    let _13 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 20:4908:4931  \"InvalidInitialization()\"\n                                    mstore(_13, shl(224, 0xf92ee8a9))\n                                    revert(_13, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                sstore(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_12, _11), /** @src 20:4805:4806  \"1\" */ 0x01))\n                                /// @src 20:4979:5046  \"if (isTopLevelCall) {...\"\n                                if /** @src 20:4301:4317  \"!$._initializing\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                /// @src 20:4979:5046  \"if (isTopLevelCall) {...\"\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_12, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                }\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let newLen := mload(memPtr_1)\n                                if gt(newLen, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                let _14 := extract_byte_array_length(sload(/** @src 22:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_14, 31)\n                                {\n                                    mstore(0, /** @src 22:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let deleteStart := add(19393869656648957010684718629437485012893776189133053609402333970098045905584, shr(5, add(newLen, 31)))\n                                    if lt(newLen, 32)\n                                    {\n                                        deleteStart := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                    }\n                                    let start := deleteStart\n                                    for { }\n                                    lt(start, add(19393869656648957010684718629437485012893776189133053609402333970098045905584, shr(5, add(_14, 31))))\n                                    {\n                                        start := add(start, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start, 0) }\n                                }\n                                let srcOffset := 0\n                                srcOffset := 32\n                                switch gt(newLen, 31)\n                                case 1 {\n                                    mstore(0, /** @src 22:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                    let i_1 := 0\n                                    for { } lt(i_1, and(newLen, not(31))) { i_1 := add(i_1, 32) }\n                                    {\n                                        sstore(dstPtr, mload(add(memPtr_1, srcOffset)))\n                                        dstPtr := add(dstPtr, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset := add(srcOffset, 32)\n                                    }\n                                    if lt(and(newLen, not(31)), newLen)\n                                    {\n                                        let lastValue := mload(add(memPtr_1, srcOffset))\n                                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 22:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen), /** @src 20:4805:4806  \"1\" */ 0x01))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_3 := 0\n                                    if newLen\n                                    {\n                                        value_3 := mload(add(memPtr_1, srcOffset))\n                                    }\n                                    sstore(/** @src 22:2895:2902  \"$._name\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen)))\n                                }\n                                let newLen_1 := mload(memPtr_2)\n                                if gt(newLen_1, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                let _15 := extract_byte_array_length(sload(/** @src 22:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_15, 31)\n                                {\n                                    mstore(0, /** @src 22:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let deleteStart_1 := add(31949013729812444881239907556254782105475912131904715391540824249639680385706, shr(5, add(newLen_1, 31)))\n                                    if lt(newLen_1, 32)\n                                    {\n                                        deleteStart_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                    }\n                                    let start_1 := deleteStart_1\n                                    for { }\n                                    lt(start_1, add(31949013729812444881239907556254782105475912131904715391540824249639680385706, shr(5, add(_15, 31))))\n                                    {\n                                        start_1 := add(start_1, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_1, 0) }\n                                }\n                                let srcOffset_1 := 0\n                                srcOffset_1 := 32\n                                switch gt(newLen_1, 31)\n                                case 1 {\n                                    mstore(0, /** @src 22:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                    let i_2 := 0\n                                    for { } lt(i_2, and(newLen_1, not(31))) { i_2 := add(i_2, 32) }\n                                    {\n                                        sstore(dstPtr_1, mload(add(memPtr_2, srcOffset_1)))\n                                        dstPtr_1 := add(dstPtr_1, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_1 := add(srcOffset_1, 32)\n                                    }\n                                    if lt(and(newLen_1, not(31)), newLen_1)\n                                    {\n                                        let lastValue_1 := mload(add(memPtr_2, srcOffset_1))\n                                        sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 22:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_1), /** @src 20:4805:4806  \"1\" */ 0x01))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_4 := 0\n                                    if newLen_1\n                                    {\n                                        value_4 := mload(add(memPtr_2, srcOffset_1))\n                                    }\n                                    sstore(/** @src 22:2920:2929  \"$._symbol\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_4, not(shr(shl(3, newLen_1), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_1)))\n                                }\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                /// @src 27:1237:1303  \"assembly {...\"\n                                let _16 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(/** @src 27:1237:1303  \"assembly {...\" */ _16, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 27:1237:1303  \"assembly {...\" */ _16), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)))\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let memPtr_3 := mload(64)\n                                finalize_allocation_49957(memPtr_3)\n                                mstore(memPtr_3, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(memPtr_3, 32), \"1\")\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let newLen_2 := mload(memPtr_1)\n                                if gt(newLen_2, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                let _17 := extract_byte_array_length(sload(/** @src 28:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_17, 31)\n                                {\n                                    mstore(0, /** @src 28:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let deleteStart_2 := add(30158956085912968823615024008721865502849334730239338980345710057699140031869, shr(5, add(newLen_2, 31)))\n                                    if lt(newLen_2, 32)\n                                    {\n                                        deleteStart_2 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                    }\n                                    let start_2 := deleteStart_2\n                                    for { }\n                                    lt(start_2, add(30158956085912968823615024008721865502849334730239338980345710057699140031869, shr(5, add(_17, 31))))\n                                    {\n                                        start_2 := add(start_2, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_2, 0) }\n                                }\n                                let srcOffset_2 := 0\n                                srcOffset_2 := 32\n                                switch gt(newLen_2, 31)\n                                case 1 {\n                                    mstore(0, /** @src 28:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_2 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                    let i_3 := 0\n                                    for { } lt(i_3, and(newLen_2, not(31))) { i_3 := add(i_3, 32) }\n                                    {\n                                        sstore(dstPtr_2, mload(add(memPtr_1, srcOffset_2)))\n                                        dstPtr_2 := add(dstPtr_2, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_2 := add(srcOffset_2, 32)\n                                    }\n                                    if lt(and(newLen_2, not(31)), newLen_2)\n                                    {\n                                        let lastValue_2 := mload(add(memPtr_1, srcOffset_2))\n                                        sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 28:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_2), /** @src 20:4805:4806  \"1\" */ 0x01))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_5 := 0\n                                    if newLen_2\n                                    {\n                                        value_5 := mload(add(memPtr_1, srcOffset_2))\n                                    }\n                                    sstore(/** @src 28:3766:3773  \"$._name\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_5, not(shr(shl(3, newLen_2), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_2)))\n                                }\n                                let newLen_3 := mload(memPtr_3)\n                                if gt(newLen_3, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                let _18 := extract_byte_array_length(sload(/** @src 28:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_18, 31)\n                                {\n                                    mstore(0, /** @src 28:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let deleteStart_3 := add(43246917397366557439122818263899697367203722805747902111665069041191356951413, shr(5, add(newLen_3, 31)))\n                                    if lt(newLen_3, 32)\n                                    {\n                                        deleteStart_3 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                    }\n                                    let _19 := add(43246917397366557439122818263899697367203722805747902111665069041191356951413, shr(5, add(_18, 31)))\n                                    let start_3 := deleteStart_3\n                                    for { }\n                                    lt(start_3, _19)\n                                    {\n                                        start_3 := add(start_3, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_3, 0) }\n                                }\n                                let srcOffset_3 := 0\n                                srcOffset_3 := 32\n                                switch gt(newLen_3, 31)\n                                case 1 {\n                                    let loopEnd := and(newLen_3, not(31))\n                                    mstore(0, /** @src 28:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_3 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                    let i_4 := 0\n                                    for { } lt(i_4, loopEnd) { i_4 := add(i_4, 32) }\n                                    {\n                                        sstore(dstPtr_3, mload(add(memPtr_3, srcOffset_3)))\n                                        dstPtr_3 := add(dstPtr_3, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_3 := add(srcOffset_3, 32)\n                                    }\n                                    if lt(loopEnd, newLen_3)\n                                    {\n                                        let lastValue_3 := mload(add(memPtr_3, srcOffset_3))\n                                        sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 28:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_3), /** @src 20:4805:4806  \"1\" */ 0x01))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_6 := 0\n                                    if newLen_3\n                                    {\n                                        value_6 := mload(add(memPtr_3, srcOffset_3))\n                                    }\n                                    sstore(/** @src 28:3790:3800  \"$._version\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_6, not(shr(shl(3, newLen_3), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ 0x01, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_3)))\n                                }\n                                sstore(/** @src 28:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                sstore(/** @src 28:3902:3918  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                /// @src 76:1407:1449  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n                                pop(fun_grantRole_31547(/** @src 76:1438:1448  \"msg.sender\" */ caller()))\n                                /// @src 76:1459:1494  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n                                pop(fun_grantRole_31548(/** @src 76:1438:1448  \"msg.sender\" */ caller()))\n                                /// @src 76:1504:1539  \"_grantRole(MINTER_ROLE, msg.sender)\"\n                                pop(fun_grantRole_31549(/** @src 76:1438:1448  \"msg.sender\" */ caller()))\n                                /// @src 20:5066:5167  \"if (isTopLevelCall) {...\"\n                                if /** @src 20:4301:4317  \"!$._initializing\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _12), 0xff))\n                                /// @src 20:5066:5167  \"if (isTopLevelCall) {...\"\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                    /// @src 20:5142:5156  \"Initialized(1)\"\n                                    let _20 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_20, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                    /// @src 20:5142:5156  \"Initialized(1)\"\n                                    log1(_20, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 20:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                }\n                                /// @src 67:432:474  \"_grantRole(DEFAULT_ADMIN_ROLE, _ONDEFYDAO)\"\n                                pop(fun_grantRole_31547(value0_2))\n                                /// @src 20:5066:5167  \"if (isTopLevelCall) {...\"\n                                if /** @src 20:4301:4317  \"!$._initializing\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _9), 0xff))\n                                /// @src 20:5066:5167  \"if (isTopLevelCall) {...\"\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                    /// @src 20:5142:5156  \"Initialized(1)\"\n                                    let _21 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_21, /** @src 20:4805:4806  \"1\" */ 0x01)\n                                    /// @src 20:5142:5156  \"Initialized(1)\"\n                                    log1(_21, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 20:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                }\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x2f2ff15d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_7 := calldataload(4)\n                                let value1_1 := abi_decode_address_31541()\n                                mstore(0, value_7)\n                                mstore(32, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 19:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1)))\n                                /// @src 19:5350:5375  \"_grantRole(role, account)\"\n                                pop(fun_grantRole(value_7, value1_1))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, /** @src 22:4122:4124  \"18\" */ 0x12)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(memPos_5, 32)\n                            }\n                            case 0x3644e515 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 28:4087:4117  \"return _buildDomainSeparator()\"\n                                let var := /** @src 28:4094:4117  \"_buildDomainSeparator()\" */ fun_buildDomainSeparator()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, var)\n                                return(memPos_6, 32)\n                            }\n                            case 0x36568abe {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value1_2 := abi_decode_address_31541()\n                                /// @src 19:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                                if /** @src 19:6441:6475  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 19:6441:6475  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)), /** @src 25:966:976  \"msg.sender\" */ caller()))\n                                /// @src 19:6437:6539  \"if (callerConfirmation != _msgSender()) {...\"\n                                {\n                                    /// @src 19:6498:6528  \"AccessControlBadConfirmation()\"\n                                    let _22 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 19:6498:6528  \"AccessControlBadConfirmation()\"\n                                    mstore(_22, shl(225, 0x334bd919))\n                                    revert(_22, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                /// @src 19:6549:6586  \"_revokeRole(role, callerConfirmation)\"\n                                pop(fun_revokeRole(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(4), /** @src 19:6549:6586  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x3f4ba83a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole_31553()\n                                /// @src 27:1237:1303  \"assembly {...\"\n                                let _23 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _24 := sload(/** @src 27:1237:1303  \"assembly {...\" */ _23)\n                                /// @src 27:3163:3225  \"if (!paused()) {...\"\n                                if /** @src 27:3167:3176  \"!paused()\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(_24, 0xff))\n                                /// @src 27:3163:3225  \"if (!paused()) {...\"\n                                {\n                                    /// @src 27:3199:3214  \"ExpectedPause()\"\n                                    let _25 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 27:3199:3214  \"ExpectedPause()\"\n                                    mstore(_25, shl(224, 0x8dfc202b))\n                                    revert(_25, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                sstore(/** @src 27:1237:1303  \"assembly {...\" */ _23, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(_24, not(255)))\n                                /// @src 27:3823:3845  \"Unpaused(_msgSender())\"\n                                let _26 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                mstore(_26, /** @src 25:966:976  \"msg.sender\" */ caller())\n                                /// @src 27:3823:3845  \"Unpaused(_msgSender())\"\n                                log1(_26, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 27:3823:3845  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_3 := abi_decode_address()\n                                let value_8 := calldataload(36)\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole_31555()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _27 := and(/** @src 22:9066:9087  \"account == address(0)\" */ value0_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 22:9062:9153  \"if (account == address(0)) {...\"\n                                if /** @src 22:9066:9087  \"account == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _27)\n                                /// @src 22:9062:9153  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 22:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                    let _28 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 22:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_28, shl(224, 0xec442f05))\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 22:9110:9142  \"ERC20InvalidReceiver(address(0))\" */ add(_28, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), 0)\n                                    /// @src 22:9110:9142  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_28, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                /// @src 22:7761:7775  \"$._totalSupply\"\n                                let _29 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _30 := sload(/** @src 22:7761:7775  \"$._totalSupply\" */ _29)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let sum := add(_30, value_8)\n                                if gt(_30, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 36)\n                                }\n                                sstore(/** @src 22:7761:7775  \"$._totalSupply\" */ _29, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sum)\n                                mstore(0, _27)\n                                mstore(0x20, /** @src 22:2326:2389  \"assembly {...\" */ 37439836327923360225337895871394760624280537466773280374265222508165906222592)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let dataSlot := keccak256(0, 64)\n                                sstore(dataSlot, add(sload(/** @src 22:8557:8581  \"$._balances[to] += value\" */ dataSlot), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ value_8))\n                                /// @src 22:8621:8646  \"Transfer(from, to, value)\"\n                                let _31 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                mstore(_31, value_8)\n                                /// @src 22:8621:8646  \"Transfer(from, to, value)\"\n                                log3(_31, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 22:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, /** @src 22:8621:8646  \"Transfer(from, to, value)\" */ _27)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x42966c68 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 23:1005:1010  \"value\"\n                                fun_burn(/** @src 25:966:976  \"msg.sender\" */ caller(), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x4cd88b76 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let offset := calldataload(4)\n                                let _32 := 0xffffffffffffffff\n                                if gt(offset, _32) { revert(0, 0) }\n                                let value0_4 := abi_decode_string(add(4, offset), calldatasize())\n                                let offset_1 := calldataload(36)\n                                if gt(offset_1, _32) { revert(0, 0) }\n                                let value1_3 := abi_decode_string(add(4, offset_1), calldatasize())\n                                /// @src 20:8837:8901  \"assembly {...\"\n                                let _33 := 108904022758810753673719992590105913556127789646572562039383141376366747609600\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _34 := sload(/** @src 20:8837:8901  \"assembly {...\" */ _33)\n                                /// @src 20:4301:4317  \"!$._initializing\"\n                                let _35 := iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, _34), 0xff))\n                                let value_9 := and(_34, _32)\n                                /// @src 20:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                let expr_7 := /** @src 20:4726:4742  \"initialized == 0\" */ iszero(value_9)\n                                /// @src 20:4726:4760  \"initialized == 0 && isTopLevelCall\"\n                                if expr_7 { expr_7 := _35 }\n                                /// @src 20:4805:4806  \"1\"\n                                let _36 := 0x01\n                                /// @src 20:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                let expr_8 := /** @src 20:4790:4806  \"initialized == 1\" */ eq(value_9, /** @src 20:4805:4806  \"1\" */ _36)\n                                /// @src 20:4790:4840  \"initialized == 1 && address(this).code.length == 0\"\n                                if expr_8\n                                {\n                                    expr_8 := /** @src 20:4810:4840  \"address(this).code.length == 0\" */ iszero(/** @src 20:4810:4835  \"address(this).code.length\" */ extcodesize(/** @src 20:4818:4822  \"this\" */ address()))\n                                }\n                                /// @src 20:4855:4885  \"!initialSetup && !construction\"\n                                let expr_9 := /** @src 20:4855:4868  \"!initialSetup\" */ iszero(expr_7)\n                                /// @src 20:4855:4885  \"!initialSetup && !construction\"\n                                if expr_9\n                                {\n                                    expr_9 := /** @src 20:4872:4885  \"!construction\" */ iszero(expr_8)\n                                }\n                                /// @src 20:4851:4942  \"if (!initialSetup && !construction) {...\"\n                                if expr_9\n                                {\n                                    /// @src 20:4908:4931  \"InvalidInitialization()\"\n                                    let _37 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 20:4908:4931  \"InvalidInitialization()\"\n                                    mstore(_37, shl(224, 0xf92ee8a9))\n                                    revert(_37, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                sstore(/** @src 20:8837:8901  \"assembly {...\" */ _33, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_34, not(0xffffffffffffffff)), /** @src 20:4805:4806  \"1\" */ _36))\n                                /// @src 20:4979:5046  \"if (isTopLevelCall) {...\"\n                                if _35\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 20:8837:8901  \"assembly {...\" */ _33, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(_34, not(0xffffffffffffffffff)), 0x010000000000000001))\n                                }\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let newLen_4 := mload(value0_4)\n                                if gt(newLen_4, _32)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                /// @src 22:2895:2902  \"$._name\"\n                                let _38 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _39 := extract_byte_array_length(sload(/** @src 22:2895:2902  \"$._name\" */ _38))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _40 := 31\n                                if gt(_39, _40)\n                                {\n                                    mstore(0, /** @src 22:2895:2902  \"$._name\" */ _38)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _41 := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                    let deleteStart_4 := add(_41, shr(5, add(newLen_4, _40)))\n                                    if lt(newLen_4, 32) { deleteStart_4 := _41 }\n                                    let _42 := add(_41, shr(5, add(_39, _40)))\n                                    let start_4 := deleteStart_4\n                                    for { }\n                                    lt(start_4, _42)\n                                    {\n                                        start_4 := add(start_4, /** @src 20:4805:4806  \"1\" */ _36)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_4, 0) }\n                                }\n                                let srcOffset_4 := 0\n                                srcOffset_4 := 32\n                                switch gt(newLen_4, _40)\n                                case 1 {\n                                    let loopEnd_1 := and(newLen_4, not(31))\n                                    mstore(0, /** @src 22:2895:2902  \"$._name\" */ _38)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_4 := 19393869656648957010684718629437485012893776189133053609402333970098045905584\n                                    let i_5 := 0\n                                    for { } lt(i_5, loopEnd_1) { i_5 := add(i_5, 32) }\n                                    {\n                                        sstore(dstPtr_4, mload(add(value0_4, srcOffset_4)))\n                                        dstPtr_4 := add(dstPtr_4, /** @src 20:4805:4806  \"1\" */ _36)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_4 := add(srcOffset_4, 32)\n                                    }\n                                    if lt(loopEnd_1, newLen_4)\n                                    {\n                                        let lastValue_4 := mload(add(value0_4, srcOffset_4))\n                                        sstore(dstPtr_4, and(lastValue_4, not(shr(and(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 22:2895:2902  \"$._name\" */ _38, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), /** @src 20:4805:4806  \"1\" */ _36))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_10 := 0\n                                    if newLen_4\n                                    {\n                                        value_10 := mload(add(value0_4, srcOffset_4))\n                                    }\n                                    sstore(/** @src 22:2895:2902  \"$._name\" */ _38, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_10, not(shr(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_4)))\n                                }\n                                let newLen_5 := mload(value1_3)\n                                if gt(newLen_5, _32)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                /// @src 22:2920:2929  \"$._symbol\"\n                                let _43 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _44 := extract_byte_array_length(sload(/** @src 22:2920:2929  \"$._symbol\" */ _43))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_44, _40)\n                                {\n                                    mstore(0, /** @src 22:2920:2929  \"$._symbol\" */ _43)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _45 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                    let deleteStart_5 := add(_45, shr(5, add(newLen_5, _40)))\n                                    if lt(newLen_5, 32) { deleteStart_5 := _45 }\n                                    let _46 := add(_45, shr(5, add(_44, _40)))\n                                    let start_5 := deleteStart_5\n                                    for { }\n                                    lt(start_5, _46)\n                                    {\n                                        start_5 := add(start_5, /** @src 20:4805:4806  \"1\" */ _36)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_5, 0) }\n                                }\n                                let srcOffset_5 := 0\n                                srcOffset_5 := 32\n                                switch gt(newLen_5, _40)\n                                case 1 {\n                                    let loopEnd_2 := and(newLen_5, not(31))\n                                    mstore(0, /** @src 22:2920:2929  \"$._symbol\" */ _43)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_5 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                    let i_6 := 0\n                                    for { } lt(i_6, loopEnd_2) { i_6 := add(i_6, 32) }\n                                    {\n                                        sstore(dstPtr_5, mload(add(value1_3, srcOffset_5)))\n                                        dstPtr_5 := add(dstPtr_5, /** @src 20:4805:4806  \"1\" */ _36)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_5 := add(srcOffset_5, 32)\n                                    }\n                                    if lt(loopEnd_2, newLen_5)\n                                    {\n                                        let lastValue_5 := mload(add(value1_3, srcOffset_5))\n                                        sstore(dstPtr_5, and(lastValue_5, not(shr(and(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 22:2920:2929  \"$._symbol\" */ _43, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), /** @src 20:4805:4806  \"1\" */ _36))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_11 := 0\n                                    if newLen_5\n                                    {\n                                        value_11 := mload(add(value1_3, srcOffset_5))\n                                    }\n                                    sstore(/** @src 22:2920:2929  \"$._symbol\" */ _43, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_11, not(shr(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_5)))\n                                }\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                /// @src 27:1237:1303  \"assembly {...\"\n                                let _47 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(/** @src 27:1237:1303  \"assembly {...\" */ _47, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 27:1237:1303  \"assembly {...\" */ _47), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)))\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                fun_checkInitializing()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let memPtr_4 := mload(64)\n                                finalize_allocation_49957(memPtr_4)\n                                mstore(memPtr_4, /** @src 20:4805:4806  \"1\" */ _36)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(memPtr_4, 32), \"1\")\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let newLen_6 := mload(value0_4)\n                                if gt(newLen_6, _32)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                /// @src 28:3766:3773  \"$._name\"\n                                let _48 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _49 := extract_byte_array_length(sload(/** @src 28:3766:3773  \"$._name\" */ _48))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_49, _40)\n                                {\n                                    mstore(0, /** @src 28:3766:3773  \"$._name\" */ _48)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _50 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                    let deleteStart_6 := add(_50, shr(5, add(newLen_6, _40)))\n                                    if lt(newLen_6, 32) { deleteStart_6 := _50 }\n                                    let _51 := add(_50, shr(5, add(_49, _40)))\n                                    let start_6 := deleteStart_6\n                                    for { }\n                                    lt(start_6, _51)\n                                    {\n                                        start_6 := add(start_6, /** @src 20:4805:4806  \"1\" */ _36)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_6, 0) }\n                                }\n                                let srcOffset_6 := 0\n                                srcOffset_6 := 32\n                                switch gt(newLen_6, _40)\n                                case 1 {\n                                    let loopEnd_3 := and(newLen_6, not(31))\n                                    mstore(0, /** @src 28:3766:3773  \"$._name\" */ _48)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_6 := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                                    let i_7 := 0\n                                    for { } lt(i_7, loopEnd_3) { i_7 := add(i_7, 32) }\n                                    {\n                                        sstore(dstPtr_6, mload(add(value0_4, srcOffset_6)))\n                                        dstPtr_6 := add(dstPtr_6, /** @src 20:4805:4806  \"1\" */ _36)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_6 := add(srcOffset_6, 32)\n                                    }\n                                    if lt(loopEnd_3, newLen_6)\n                                    {\n                                        let lastValue_6 := mload(add(value0_4, srcOffset_6))\n                                        sstore(dstPtr_6, and(lastValue_6, not(shr(and(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 28:3766:3773  \"$._name\" */ _48, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), /** @src 20:4805:4806  \"1\" */ _36))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_12 := 0\n                                    if newLen_6\n                                    {\n                                        value_12 := mload(add(value0_4, srcOffset_6))\n                                    }\n                                    sstore(/** @src 28:3766:3773  \"$._name\" */ _48, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_12, not(shr(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_6)))\n                                }\n                                let newLen_7 := mload(memPtr_4)\n                                if gt(newLen_7, _32)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                /// @src 28:3790:3800  \"$._version\"\n                                let _52 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _53 := extract_byte_array_length(sload(/** @src 28:3790:3800  \"$._version\" */ _52))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if gt(_53, _40)\n                                {\n                                    mstore(0, /** @src 28:3790:3800  \"$._version\" */ _52)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _54 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                    let deleteStart_7 := add(_54, shr(5, add(newLen_7, _40)))\n                                    if lt(newLen_7, 32) { deleteStart_7 := _54 }\n                                    let _55 := add(_54, shr(5, add(_53, _40)))\n                                    let start_7 := deleteStart_7\n                                    for { }\n                                    lt(start_7, _55)\n                                    {\n                                        start_7 := add(start_7, /** @src 20:4805:4806  \"1\" */ _36)\n                                    }\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    { sstore(start_7, 0) }\n                                }\n                                let srcOffset_7 := 0\n                                srcOffset_7 := 32\n                                switch gt(newLen_7, _40)\n                                case 1 {\n                                    let loopEnd_4 := and(newLen_7, not(31))\n                                    mstore(0, /** @src 28:3790:3800  \"$._version\" */ _52)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dstPtr_7 := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                                    let i_8 := 0\n                                    for { } lt(i_8, loopEnd_4) { i_8 := add(i_8, 32) }\n                                    {\n                                        sstore(dstPtr_7, mload(add(memPtr_4, srcOffset_7)))\n                                        dstPtr_7 := add(dstPtr_7, /** @src 20:4805:4806  \"1\" */ _36)\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        srcOffset_7 := add(srcOffset_7, 32)\n                                    }\n                                    if lt(loopEnd_4, newLen_7)\n                                    {\n                                        let lastValue_7 := mload(add(memPtr_4, srcOffset_7))\n                                        sstore(dstPtr_7, and(lastValue_7, not(shr(and(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 28:3790:3800  \"$._version\" */ _52, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), /** @src 20:4805:4806  \"1\" */ _36))\n                                }\n                                default /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                {\n                                    let value_13 := 0\n                                    if newLen_7\n                                    {\n                                        value_13 := mload(add(memPtr_4, srcOffset_7))\n                                    }\n                                    sstore(/** @src 28:3790:3800  \"$._version\" */ _52, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(value_13, not(shr(shl(/** @src 22:2895:2902  \"$._name\" */ 3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7), not(0)))), shl(/** @src 20:4805:4806  \"1\" */ _36, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ newLen_7)))\n                                }\n                                sstore(/** @src 28:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                sstore(/** @src 28:3902:3918  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0)\n                                /// @src 20:6893:6969  \"modifier onlyInitializing() {...\"\n                                fun_checkInitializing()\n                                /// @src 76:1407:1449  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n                                pop(fun_grantRole_31547(/** @src 76:1438:1448  \"msg.sender\" */ caller()))\n                                /// @src 76:1459:1494  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n                                pop(fun_grantRole_31548(/** @src 76:1438:1448  \"msg.sender\" */ caller()))\n                                /// @src 76:1504:1539  \"_grantRole(MINTER_ROLE, msg.sender)\"\n                                pop(fun_grantRole_31549(/** @src 76:1438:1448  \"msg.sender\" */ caller()))\n                                /// @src 20:5066:5167  \"if (isTopLevelCall) {...\"\n                                if _35\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    sstore(/** @src 20:8837:8901  \"assembly {...\" */ _33, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 20:8837:8901  \"assembly {...\" */ _33), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0xff0000000000000000)))\n                                    /// @src 20:5142:5156  \"Initialized(1)\"\n                                    let _56 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    mstore(_56, /** @src 20:4805:4806  \"1\" */ _36)\n                                    /// @src 20:5142:5156  \"Initialized(1)\"\n                                    log1(_56, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 20:5142:5156  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                                }\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x4f1ef286 {\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_5 := abi_decode_address()\n                                let offset_2 := calldataload(36)\n                                if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                                let array := abi_decode_available_length_string(add(offset_2, 36), calldataload(add(4, offset_2)), calldatasize())\n                                let _57 := sub(shl(160, 1), 1)\n                                /// @src 21:4671:4694  \"address(this) == __self\"\n                                let _58 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 21:4688:4694  \"__self\" */ loadimmutable(\"43673\"), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57)\n                                /// @src 21:4671:4791  \"address(this) == __self || // Must be called through delegatecall...\"\n                                let expr_10 := /** @src 21:4671:4694  \"address(this) == __self\" */ eq(/** @src 21:4679:4683  \"this\" */ address(), /** @src 21:4671:4694  \"address(this) == __self\" */ _58)\n                                /// @src 21:4671:4791  \"address(this) == __self || // Must be called through delegatecall...\"\n                                if iszero(expr_10)\n                                {\n                                    expr_10 := /** @src 21:4749:4791  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57), /** @src 21:4749:4791  \"ERC1967Utils.getImplementation() != __self\" */ _58))\n                                }\n                                /// @src 21:4654:4905  \"if (...\"\n                                if expr_10\n                                {\n                                    /// @src 21:4865:4894  \"UUPSUnauthorizedCallContext()\"\n                                    let _59 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 21:4865:4894  \"UUPSUnauthorizedCallContext()\"\n                                    mstore(_59, shl(225, 0x703e46dd))\n                                    revert(_59, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole_31562()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _60 := and(/** @src 21:6151:6187  \"IERC1822Proxiable(newImplementation)\" */ value0_5, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _57)\n                                /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                let _61 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                mstore(_61, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(224, 0x52d1902d))\n                                let _62 := 32\n                                /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                let trySuccessCondition := staticcall(gas(), _60, _61, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4, /** @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _61, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62)\n                                /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                let expr_11 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0\n                                /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                if trySuccessCondition\n                                {\n                                    let _63 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62\n                                    /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    if gt(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62, /** @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _63 := returndatasize() }\n                                    finalize_allocation(_61, _63)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    if slt(sub(/** @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_61, _63), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _61), _62) { revert(0, 0) }\n                                    /// @src 21:6151:6203  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                    expr_11 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_61)\n                                }\n                                /// @src 21:6147:6584  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                                switch iszero(trySuccessCondition)\n                                case 0 {\n                                    /// @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                                    let _64 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                                    /// @src 21:6241:6361  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                                    if /** @src 21:6245:6285  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_11, /** @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64))\n                                    /// @src 21:6241:6361  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                                    {\n                                        /// @src 21:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                        let _65 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 21:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                        mstore(_65, shl(226, 0x2a875269))\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 21:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\" */ add(_65, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), expr_11)\n                                        /// @src 21:6312:6346  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                        revert(_65, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    /// @src 37:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                                    if /** @src 37:2263:2297  \"newImplementation.code.length == 0\" */ iszero(/** @src 37:2263:2292  \"newImplementation.code.length\" */ extcodesize(value0_5))\n                                    /// @src 37:2259:2378  \"if (newImplementation.code.length == 0) {...\"\n                                    {\n                                        /// @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                        let _66 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                        mstore(_66, shl(224, 0x4c9c8ce3))\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ add(_66, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _60)\n                                        /// @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\"\n                                        revert(_66, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                    sstore(/** @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(sload(/** @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _60))\n                                    /// @src 37:2922:2949  \"Upgraded(newImplementation)\"\n                                    let _67 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 37:2922:2949  \"Upgraded(newImplementation)\"\n                                    log2(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, 0, /** @src 37:2922:2949  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _60)\n                                    /// @src 37:2960:3108  \"if (data.length > 0) {...\"\n                                    switch /** @src 37:2964:2979  \"data.length > 0\" */ iszero(iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 37:2964:2975  \"data.length\" */ array)))\n                                    case /** @src 37:2960:3108  \"if (data.length > 0) {...\" */ 0 {\n                                        /// @src 37:6644:6714  \"if (msg.value > 0) {...\"\n                                        if /** @src 37:6648:6661  \"msg.value > 0\" */ iszero(iszero(/** @src 37:6648:6657  \"msg.value\" */ callvalue()))\n                                        /// @src 37:6644:6714  \"if (msg.value > 0) {...\"\n                                        {\n                                            /// @src 37:6684:6703  \"ERC1967NonPayable()\"\n                                            mstore(_67, shl(224, 0xb398979f))\n                                            revert(_67, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                        }\n                                    }\n                                    default /// @src 37:2960:3108  \"if (data.length > 0) {...\"\n                                    {\n                                        /// @src 48:4255:4280  \"target.delegatecall(data)\"\n                                        let expr_component := delegatecall(gas(), value0_5, add(array, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _62), /** @src 48:4255:4280  \"target.delegatecall(data)\" */ mload(array), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0, 0)\n                                        /// @src 48:4255:4280  \"target.delegatecall(data)\"\n                                        let data := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0\n                                        switch returndatasize()\n                                        case 0 { data := 96 }\n                                        default {\n                                            let _68 := returndatasize()\n                                            let _69 := array_allocation_size_string(_68)\n                                            let memPtr_5 := mload(64)\n                                            finalize_allocation(memPtr_5, _69)\n                                            mstore(memPtr_5, _68)\n                                            data := memPtr_5\n                                            returndatacopy(add(memPtr_5, _62), 0, returndatasize())\n                                        }\n                                        /// @src 48:4297:4352  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                        pop(fun_verifyCallResultFromTarget(value0_5, expr_component, /** @src 48:4255:4280  \"target.delegatecall(data)\" */ data))\n                                    }\n                                }\n                                default /// @src 21:6147:6584  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                                {\n                                    /// @src 21:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                    let _70 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 21:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                    mstore(_70, /** @src 37:2320:2367  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 21:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\" */ add(_70, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _60)\n                                    /// @src 21:6513:6573  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                                    revert(_70, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                return(0, 0)\n                            }\n                            case 0x52d1902d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 21:5090:5235  \"if (address(this) != __self) {...\"\n                                if /** @src 21:5094:5117  \"address(this) != __self\" */ iszero(eq(/** @src 21:5102:5106  \"this\" */ address(), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 21:5111:5117  \"__self\" */ loadimmutable(\"43673\"), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 21:5090:5235  \"if (address(this) != __self) {...\"\n                                {\n                                    /// @src 21:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                    let _71 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 21:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                    mstore(_71, /** @src 21:4865:4894  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                                    /// @src 21:5195:5224  \"UUPSUnauthorizedCallContext()\"\n                                    revert(_71, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                                }\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, /** @src 37:1327:1393  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(memPos_7, 32)\n                            }\n                            case 0x5a47a1a7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_14 := calldataload(4)\n                                let _72 := iszero(iszero(value_14))\n                                if iszero(eq(value_14, _72)) { revert(0, 0) }\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole_31562()\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let value_15 := and(sload(0), not(255))\n                                sstore(0, or(value_15, and(_72, 255)))\n                                /// @src 76:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\"\n                                let _73 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                mstore(_73, _72)\n                                /// @src 76:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\"\n                                log1(_73, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 76:2123:2169  \"PrivateTransferModeSet(inPrivateTransferMode_)\" */ 0xcfea93b2060af4c4737eb6d7b0d85428b120e6613299f9b6d7703a689c81d0dc)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x5c975abb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_16 := and(sload(/** @src 27:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff)\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, iszero(iszero(value_16)))\n                                return(memPos_8, 32)\n                            }\n                            case 0x63ac5d97 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, /** @src 76:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(memPos_9, 32)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 22:2326:2389  \"assembly {...\" */ 37439836327923360225337895871394760624280537466773280374265222508165906222592)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _74 := sload(keccak256(0, 64))\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, _74)\n                                return(memPos_10, 32)\n                            }\n                            case 0x79cc6790 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_6 := abi_decode_address()\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole_31555()\n                                /// @src 76:3752:3758  \"amount\"\n                                fun_burn(value0_6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                return(0, 0)\n                            }\n                            case 0x7ecebe00 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 26:972:1036  \"assembly {...\" */ 41026498920877473550552694860415970151284396403628511442111957027090812156672)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _75 := sload(keccak256(0, 64))\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, _75)\n                                return(memPos_11, 32)\n                            }\n                            case 0x8456cb59 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole_31553()\n                                /// @src 27:2281:2353  \"modifier whenNotPaused() {...\"\n                                fun_requireNotPaused()\n                                /// @src 27:1237:1303  \"assembly {...\"\n                                let _76 := 92891662540554778686986514950364265630913525426840345632122912437671245656832\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(/** @src 27:1237:1303  \"assembly {...\" */ _76, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ or(and(sload(/** @src 27:1237:1303  \"assembly {...\" */ _76), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(255)), /** @src 27:3496:3500  \"true\" */ 0x01))\n                                /// @src 27:3515:3535  \"Paused(_msgSender())\"\n                                let _77 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                mstore(_77, /** @src 25:966:976  \"msg.sender\" */ caller())\n                                /// @src 27:3515:3535  \"Paused(_msgSender())\"\n                                log1(_77, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32, /** @src 27:3515:3535  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 28:5777:5820  \"$._hashedName == 0 && $._hashedVersion == 0\"\n                                let expr_12 := /** @src 28:5777:5795  \"$._hashedName == 0\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 28:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600))\n                                /// @src 28:5777:5820  \"$._hashedName == 0 && $._hashedVersion == 0\"\n                                if expr_12\n                                {\n                                    expr_12 := /** @src 28:5799:5820  \"$._hashedVersion == 0\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 28:5799:5815  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101))\n                                }\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                if iszero(expr_12)\n                                {\n                                    let memPtr_6 := mload(64)\n                                    mstore(memPtr_6, shl(229, 4594637))\n                                    mstore(add(memPtr_6, 4), 32)\n                                    mstore(add(memPtr_6, 36), 21)\n                                    mstore(add(memPtr_6, 68), \"EIP712: Uninitialized\")\n                                    revert(memPtr_6, 100)\n                                }\n                                let converted := copy_array_from_storage_to_memory_string()\n                                let converted_1 := copy_array_from_storage_to_memory_string_31571()\n                                let memPtr_7 := mload(64)\n                                let _78 := 0x20\n                                let newFreePtr := add(memPtr_7, _78)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_7))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                                mstore(memPtr_7, 0)\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, shl(248, 15))\n                                mstore(add(memPos_12, _78), 224)\n                                let tail := abi_encode_string(converted, add(memPos_12, 224))\n                                mstore(add(memPos_12, 64), sub(tail, memPos_12))\n                                let tail_1 := abi_encode_string(converted_1, tail)\n                                mstore(add(memPos_12, 96), /** @src 28:5965:5978  \"block.chainid\" */ chainid())\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(memPos_12, 128), /** @src 28:6000:6004  \"this\" */ address())\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(add(memPos_12, 160), 0)\n                                mstore(add(memPos_12, 192), sub(tail_1, memPos_12))\n                                let pos := tail_1\n                                let length_1 := mload(memPtr_7)\n                                mstore(tail_1, length_1)\n                                pos := add(tail_1, _78)\n                                let srcPtr := newFreePtr\n                                let i_9 := 0\n                                for { } lt(i_9, length_1) { i_9 := add(i_9, 1) }\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, _78)\n                                    srcPtr := add(srcPtr, _78)\n                                }\n                                return(memPos_12, sub(pos, memPos_12))\n                            }\n                            case 0x91d14854 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value1_4 := abi_decode_address_31541()\n                                mstore(0, calldataload(4))\n                                mstore(32, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _79 := keccak256(0, 64)\n                                mstore(0, and(value1_4, sub(shl(160, 1), 1)))\n                                mstore(32, _79)\n                                let value_17 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_13 := mload(64)\n                                mstore(memPos_13, iszero(iszero(value_17)))\n                                return(memPos_13, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr_8 := mload(64)\n                                let ret_1 := 0\n                                /// @src 22:3400:3409  \"$._symbol\"\n                                let _80 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let slotValue_1 := sload(/** @src 22:3400:3409  \"$._symbol\" */ _80)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let length_2 := extract_byte_array_length(slotValue_1)\n                                mstore(memPtr_8, length_2)\n                                let _81 := 0x20\n                                let _82 := 1\n                                switch and(slotValue_1, _82)\n                                case 0 {\n                                    mstore(add(memPtr_8, _81), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_2)))), _81)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 22:3400:3409  \"$._symbol\" */ _80)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let dataPos_1 := 31949013729812444881239907556254782105475912131904715391540824249639680385706\n                                    let i_10 := 0\n                                    for { } lt(i_10, length_2) { i_10 := add(i_10, _81) }\n                                    {\n                                        mstore(add(add(memPtr_8, i_10), _81), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _82)\n                                    }\n                                    ret_1 := add(add(memPtr_8, i_10), _81)\n                                }\n                                finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                                let memPos_14 := mload(64)\n                                mstore(memPos_14, _81)\n                                return(memPos_14, sub(abi_encode_string(memPtr_8, add(memPos_14, _81)), memPos_14))\n                            }\n                            case 0xa217fddf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_15 := mload(64)\n                                mstore(memPos_15, 0)\n                                return(memPos_15, 32)\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_7 := abi_decode_address()\n                                /// @src 27:2281:2353  \"modifier whenNotPaused() {...\"\n                                fun_requireNotPaused()\n                                /// @src 76:2448:2686  \"if (_inPrivateTransferMode) {...\"\n                                if /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(0), 0xff)\n                                /// @src 76:2448:2686  \"if (_inPrivateTransferMode) {...\"\n                                {\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(0, /** @src 76:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(32, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    let _83 := keccak256(0, 64)\n                                    mstore(0, /** @src 25:966:976  \"msg.sender\" */ caller())\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(32, _83)\n                                    if iszero(and(sload(keccak256(0, 64)), 0xff))\n                                    {\n                                        let memPtr_9 := mload(64)\n                                        mstore(memPtr_9, shl(229, 4594637))\n                                        revert(memPtr_9, sub(abi_encode_stringliteral(add(memPtr_9, 4)), memPtr_9))\n                                    }\n                                }\n                                /// @src 22:4911:4916  \"value\"\n                                fun_transfer(/** @src 25:966:976  \"msg.sender\" */ caller(), /** @src 22:4911:4916  \"value\" */ value0_7, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(36))\n                                let memPos_16 := mload(64)\n                                mstore(memPos_16, 1)\n                                return(memPos_16, 32)\n                            }\n                            case 0xad3cb1cc {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr_10 := mload(64)\n                                finalize_allocation_49957(memPtr_10)\n                                mstore(memPtr_10, 5)\n                                mstore(add(memPtr_10, 32), \"5.0.0\")\n                                let memPos_17 := mload(64)\n                                mstore(memPos_17, 32)\n                                return(memPos_17, sub(abi_encode_string(memPtr_10, add(memPos_17, 32)), memPos_17))\n                            }\n                            case 0xd505accf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                                let value0_8 := abi_decode_address()\n                                let value1_5 := abi_decode_address_31541()\n                                let value_18 := calldataload(68)\n                                let value_19 := calldataload(100)\n                                let value_20 := calldataload(132)\n                                if iszero(eq(value_20, and(value_20, 0xff))) { revert(0, 0) }\n                                /// @src 24:2294:2391  \"if (block.timestamp > deadline) {...\"\n                                if /** @src 24:2298:2324  \"block.timestamp > deadline\" */ gt(/** @src 24:2298:2313  \"block.timestamp\" */ timestamp(), /** @src 24:2298:2324  \"block.timestamp > deadline\" */ value_19)\n                                /// @src 24:2294:2391  \"if (block.timestamp > deadline) {...\"\n                                {\n                                    /// @src 24:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                    let _84 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 24:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                    mstore(_84, shl(225, 0x313c8981))\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 24:2347:2380  \"ERC2612ExpiredSignature(deadline)\" */ add(_84, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), value_19)\n                                    /// @src 24:2347:2380  \"ERC2612ExpiredSignature(deadline)\"\n                                    revert(_84, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                                let _85 := sub(shl(160, 1), 1)\n                                let _86 := and(value0_8, _85)\n                                mstore(0, _86)\n                                mstore(32, /** @src 26:972:1036  \"assembly {...\" */ 41026498920877473550552694860415970151284396403628511442111957027090812156672)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let dataSlot_1 := keccak256(0, 64)\n                                let _87 := sload(/** @src 26:1954:1972  \"$._nonces[owner]++\" */ dataSlot_1)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                sstore(dataSlot_1, add(/** @src 26:1954:1972  \"$._nonces[owner]++\" */ _87, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1))\n                                /// @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let expr_mpos := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let _88 := add(expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32)\n                                mstore(_88, /** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64), _86)\n                                mstore(/** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 96), and(value1_5, _85))\n                                mstore(/** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 128), value_18)\n                                mstore(/** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 160), _87)\n                                mstore(/** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 192), value_19)\n                                /// @src 24:2432:2510  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                mstore(expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 192)\n                                let newFreePtr_1 := add(expr_mpos, 224)\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr_1)\n                                /// @src 24:2422:2511  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                let _89 := keccak256(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _88, mload(/** @src 24:2422:2511  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                                /// @src 28:4094:4117  \"_buildDomainSeparator()\"\n                                let _90 := fun_buildDomainSeparator()\n                                /// @src 54:3515:3748  \"assembly {...\"\n                                let usr$ptr := mload(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64)\n                                /// @src 54:3515:3748  \"assembly {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _90)\n                                mstore(add(usr$ptr, 0x22), _89)\n                                /// @src 53:6967:6992  \"tryRecover(hash, v, r, s)\"\n                                let expr_component_1, expr_component_2, expr_component_3 := fun_tryRecover(/** @src 54:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 53:6967:6992  \"tryRecover(hash, v, r, s)\" */ value_20, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ calldataload(164), calldataload(196))\n                                /// @src 53:7021:7029  \"errorArg\"\n                                fun_throwError(expr_component_2, expr_component_3)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                let _91 := and(/** @src 24:2635:2650  \"signer != owner\" */ expr_component_1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _85)\n                                /// @src 24:2631:2719  \"if (signer != owner) {...\"\n                                if /** @src 24:2635:2650  \"signer != owner\" */ iszero(eq(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _91, _86))\n                                /// @src 24:2631:2719  \"if (signer != owner) {...\"\n                                {\n                                    /// @src 24:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                    let _92 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 24:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                    mstore(_92, shl(225, 0x25c00723))\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 24:2673:2708  \"ERC2612InvalidSigner(signer, owner)\" */ add(_92, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), _91)\n                                    mstore(/** @src 24:1277:1372  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 24:2673:2708  \"ERC2612InvalidSigner(signer, owner)\" */ _92, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), _86)\n                                    /// @src 24:2673:2708  \"ERC2612InvalidSigner(signer, owner)\"\n                                    revert(_92, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                                }\n                                /// @src 22:10380:10384  \"true\"\n                                fun_approve(value0_8, value1_5, value_18)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0xd5391393 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_18 := mload(64)\n                                mstore(memPos_18, /** @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(memPos_18, 32)\n                            }\n                            case 0xd547741f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_21 := calldataload(4)\n                                let value1_6 := abi_decode_address_31541()\n                                mstore(0, value_21)\n                                mstore(32, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                                /// @src 19:3202:3206  \"role\"\n                                fun_checkRole(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sload(/** @src 19:4919:4943  \"$._roles[role].adminRole\" */ add(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ keccak256(0, 64), 1)))\n                                /// @src 19:5767:5793  \"_revokeRole(role, account)\"\n                                pop(fun_revokeRole(value_21, value1_6))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(0, 0)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_9 := abi_decode_address()\n                                let _93 := abi_decode_address_31541()\n                                /// @src 22:5162:5182  \"$._allowances[owner]\"\n                                let _94 := mapping_index_access_mapping_address_bool_of_address(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ value0_9)\n                                mstore(0, and(_93, sub(shl(160, 1), 1)))\n                                mstore(0x20, _94)\n                                let _95 := sload(keccak256(0, 64))\n                                let memPos_19 := mload(64)\n                                mstore(memPos_19, _95)\n                                return(memPos_19, 0x20)\n                            }\n                            case 0xdfbaefb1 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_22 := and(sload(0), 0xff)\n                                let memPos_20 := mload(64)\n                                mstore(memPos_20, iszero(iszero(value_22)))\n                                return(memPos_20, 32)\n                            }\n                            case 0xe63ab1e9 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_21 := mload(64)\n                                mstore(memPos_21, /** @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                return(memPos_21, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            let _1 := 0x20\n                            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                        }\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_31541() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function finalize_allocation_49957(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_string(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    function abi_decode_available_length_string(src, length, end) -> array\n                    {\n                        let _1 := array_allocation_size_string(length)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _1)\n                        array := memPtr\n                        mstore(memPtr, length)\n                        if gt(add(src, length), end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        calldatacopy(add(memPtr, 0x20), src, length)\n                        mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    function abi_decode_string(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n                    }\n                    function mapping_index_access_mapping_address_bool_of_address(key) -> dataSlot\n                    {\n                        mstore(0, and(key, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 22:5162:5175  \"$._allowances\" */ 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        dataSlot := keccak256(0, 0x40)\n                    }\n                    /// @ast-id 43166 @src 19:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                    function fun_checkRole_31553()\n                    {\n                        /// @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\"\n                        let _1 := 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 25:966:976  \"msg.sender\" */ caller())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, _2)\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 19:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            let _3 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(_3, shl(224, 0xe2517d3f))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(add(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), /** @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                        }\n                    }\n                    /// @ast-id 43166 @src 19:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                    function fun_checkRole_31555()\n                    {\n                        /// @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                        let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 25:966:976  \"msg.sender\" */ caller())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, _2)\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 19:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            let _3 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(_3, shl(224, 0xe2517d3f))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(add(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), /** @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                        }\n                    }\n                    /// @ast-id 43166 @src 19:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                    function fun_checkRole_31562()\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := 0\n                        mstore(_1, _1)\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _2 := keccak256(_1, 0x40)\n                        mstore(_1, /** @src 25:966:976  \"msg.sender\" */ caller())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, _2)\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 19:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, 0x40)), 0xff))\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            let _3 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(_3, shl(224, 0xe2517d3f))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_3, 4), /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(add(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), _1)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                        }\n                    }\n                    /// @ast-id 43166 @src 19:4148:4251  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                    function fun_checkRole(var_role)\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 25:966:976  \"msg.sender\" */ caller())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, _1)\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 19:4468:4491  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                        /// @src 19:4464:4572  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            let _2 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(_2, shl(224, 0xe2517d3f))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(add(/** @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36), var_role)\n                            /// @src 19:4514:4561  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(_2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 68)\n                        }\n                    }\n                    /// @ast-id 43352 @src 19:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_grantRole_31547(var_account) -> var\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := 0\n                        mstore(_1, _1)\n                        /// @src 19:2887:2958  \"assembly {...\"\n                        let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _2)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _3 := keccak256(_1, 0x40)\n                        let _4 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(_1, _4)\n                        mstore(0x20, _3)\n                        /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        switch /** @src 19:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, 0x40)), 0xff))\n                        case /** @src 19:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                            /// @src 19:7628:7640  \"return false\"\n                            var := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1\n                            /// @src 19:7628:7640  \"return false\"\n                            leave\n                        }\n                        default /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(_1, _1)\n                            mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _2)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _5 := keccak256(_1, 0x40)\n                            mstore(_1, _4)\n                            mstore(0x20, _5)\n                            let dataSlot := keccak256(_1, 0x40)\n                            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 19:7509:7513  \"true\" */ 0x01))\n                            /// @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                            log4(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, _1, /** @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, _4, /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 19:7586:7597  \"return true\"\n                            var := /** @src 19:7509:7513  \"true\" */ 0x01\n                            /// @src 19:7586:7597  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 43352 @src 19:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_grantRole_31548(var_account) -> var\n                    {\n                        /// @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\"\n                        let _1 := 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                        /// @src 19:2887:2958  \"assembly {...\"\n                        let _3 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _3)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _4 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        let _5 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                        mstore(0x20, _4)\n                        /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        switch /** @src 19:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                        case /** @src 19:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                            /// @src 19:7628:7640  \"return false\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 19:7628:7640  \"return false\"\n                            leave\n                        }\n                        default /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _3)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _6 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                            mstore(0x20, _6)\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 19:7509:7513  \"true\" */ 0x01))\n                            /// @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                            log4(/** @src -1:-1:-1 */ _2, _2, /** @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 76:879:903  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5, /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 19:7586:7597  \"return true\"\n                            var := /** @src 19:7509:7513  \"true\" */ 0x01\n                            /// @src 19:7586:7597  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 43352 @src 19:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_grantRole_31549(var_account) -> var\n                    {\n                        /// @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\"\n                        let _1 := 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                        /// @src 19:2887:2958  \"assembly {...\"\n                        let _3 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _3)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _4 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        let _5 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                        mstore(0x20, _4)\n                        /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        switch /** @src 19:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                        case /** @src 19:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                            /// @src 19:7628:7640  \"return false\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 19:7628:7640  \"return false\"\n                            leave\n                        }\n                        default /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _3)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _6 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5)\n                            mstore(0x20, _6)\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 19:7509:7513  \"true\" */ 0x01))\n                            /// @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                            log4(/** @src -1:-1:-1 */ _2, _2, /** @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 76:947:971  \"keccak256(\\\"MINTER_ROLE\\\")\" */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _5, /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 19:7586:7597  \"return true\"\n                            var := /** @src 19:7509:7513  \"true\" */ 0x01\n                            /// @src 19:7586:7597  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 43352 @src 19:7270:7657  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_grantRole(var_role, var_account) -> var\n                    {\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                        /// @src 19:2887:2958  \"assembly {...\"\n                        let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _2)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        let _4 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                        mstore(0x20, _3)\n                        /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        switch /** @src 19:7436:7459  \"!hasRole(role, account)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff))\n                        case /** @src 19:7432:7651  \"if (!hasRole(role, account)) {...\" */ 0 {\n                            /// @src 19:7628:7640  \"return false\"\n                            var := /** @src -1:-1:-1 */ _1\n                            /// @src 19:7628:7640  \"return false\"\n                            leave\n                        }\n                        default /// @src 19:7432:7651  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                            mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _2)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            mstore(0x20, _5)\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 19:7509:7513  \"true\" */ 0x01))\n                            /// @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\"\n                            log4(/** @src -1:-1:-1 */ _1, _1, /** @src 19:7532:7572  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4, /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 19:7586:7597  \"return true\"\n                            var := /** @src 19:7509:7513  \"true\" */ 0x01\n                            /// @src 19:7586:7597  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 43398 @src 19:7892:8280  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_revokeRole(var_role, var_account) -> var\n                    {\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                        /// @src 19:2887:2958  \"assembly {...\"\n                        let _2 := 1295953201772911215391058989745868821651057887752387839782086074958115661824\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _2)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        let _4 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                        mstore(0x20, _3)\n                        /// @src 19:8055:8274  \"if (hasRole(role, account)) {...\"\n                        switch /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)), 0xff)\n                        case /** @src 19:8055:8274  \"if (hasRole(role, account)) {...\" */ 0 {\n                            /// @src 19:8251:8263  \"return false\"\n                            var := /** @src -1:-1:-1 */ _1\n                            /// @src 19:8251:8263  \"return false\"\n                            leave\n                        }\n                        default /// @src 19:8055:8274  \"if (hasRole(role, account)) {...\"\n                        {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_role)\n                            mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ _2)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                            mstore(0x20, _5)\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                            sstore(dataSlot, and(sload(dataSlot), not(255)))\n                            /// @src 19:8155:8195  \"RoleRevoked(role, account, _msgSender())\"\n                            log4(/** @src -1:-1:-1 */ _1, _1, /** @src 19:8155:8195  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4, /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 19:8209:8220  \"return true\"\n                            var := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1\n                            /// @src 19:8209:8220  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    function extract_byte_array_length(data) -> length\n                    {\n                        length := shr(1, data)\n                        let outOfPlaceEncoding := and(data, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function copy_array_from_storage_to_memory_string() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 28:6441:6448  \"$._name\"\n                        let _1 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let slotValue := sload(/** @src 28:6441:6448  \"$._name\" */ _1)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        let _3 := 1\n                        switch and(slotValue, _3)\n                        case 0 {\n                            mstore(add(memPtr, _2), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 28:6441:6448  \"$._name\" */ _1)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let dataPos := 30158956085912968823615024008721865502849334730239338980345710057699140031869\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                    }\n                    function copy_array_from_storage_to_memory_string_31571() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 28:6826:6836  \"$._version\"\n                        let _1 := 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let slotValue := sload(/** @src 28:6826:6836  \"$._version\" */ _1)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        let _3 := 1\n                        switch and(slotValue, _3)\n                        case 0 {\n                            mstore(add(memPtr, _2), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 28:6826:6836  \"$._version\" */ _1)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let dataPos := 43246917397366557439122818263899697367203722805747902111665069041191356951413\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                    }\n                    /// @ast-id 44403 @src 22:11224:11711  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                    function fun_approve(var_owner, var_spender, var_value)\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 22:11389:11408  \"owner == address(0)\" */ var_owner, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        /// @src 22:11385:11474  \"if (owner == address(0)) {...\"\n                        if /** @src 22:11389:11408  \"owner == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                        /// @src 22:11385:11474  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                            let _3 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                            mstore(_3, shl(224, 0xe602df05))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\" */ add(_3, 4), /** @src 22:11406:11407  \"0\" */ 0x00)\n                            /// @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                            revert(_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 22:11487:11508  \"spender == address(0)\" */ var_spender, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        /// @src 22:11483:11573  \"if (spender == address(0)) {...\"\n                        if /** @src 22:11487:11508  \"spender == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                        /// @src 22:11483:11573  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                            let _5 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                            mstore(_5, shl(225, 0x4a1406b1))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\" */ add(_5, 4), /** @src 22:11406:11407  \"0\" */ 0x00)\n                            /// @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                            revert(_5, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                        }\n                        /// @src 22:11582:11602  \"$._allowances[owner]\"\n                        let _6 := mapping_index_access_mapping_address_bool_of_address(var_owner)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                        mstore(0x20, _6)\n                        sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), var_value)\n                        /// @src 22:11663:11694  \"Approval(owner, spender, value)\"\n                        let _7 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                        mstore(_7, var_value)\n                        /// @src 22:11663:11694  \"Approval(owner, spender, value)\"\n                        log3(_7, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 22:11663:11694  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _4)\n                    }\n                    /// @ast-id 44317 @src 22:9522:9728  \"function _burn(address account, uint256 value) internal {...\"\n                    function fun_burn(var_account, var_value)\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := and(/** @src 22:9592:9613  \"account == address(0)\" */ var_account, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 22:9588:9677  \"if (account == address(0)) {...\"\n                        if /** @src 22:9592:9613  \"account == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        /// @src 22:9588:9677  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 22:9636:9666  \"ERC20InvalidSender(address(0))\"\n                            let _2 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 22:9636:9666  \"ERC20InvalidSender(address(0))\"\n                            mstore(_2, shl(225, 0x4b637e8f))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 22:9636:9666  \"ERC20InvalidSender(address(0))\" */ add(_2, 4), /** @src 22:9611:9612  \"0\" */ 0x00)\n                            /// @src 22:9636:9666  \"ERC20InvalidSender(address(0))\"\n                            revert(_2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                        }\n                        mstore(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        /// @src 22:2326:2389  \"assembly {...\"\n                        let _3 := 37439836327923360225337895871394760624280537466773280374265222508165906222592\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 22:2326:2389  \"assembly {...\" */ _3)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _4 := sload(keccak256(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40))\n                        /// @src 22:7868:7983  \"if (fromBalance < value) {...\"\n                        if /** @src 22:7872:7891  \"fromBalance < value\" */ lt(_4, var_value)\n                        /// @src 22:7868:7983  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 22:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _5 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            /// @src 22:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_5, shl(226, 0x391434e3))\n                            revert(_5, sub(abi_encode_address_uint256_uint256(add(_5, 4), var_account, _4, var_value), _5))\n                        }\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        mstore(0x20, /** @src 22:2326:2389  \"assembly {...\" */ _3)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        sstore(keccak256(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), sub(/** @src 22:8123:8142  \"fromBalance - value\" */ _4, var_value))\n                        /// @src 22:8344:8358  \"$._totalSupply\"\n                        let _6 := 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        sstore(/** @src 22:8344:8358  \"$._totalSupply\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(sload(/** @src 22:8344:8358  \"$._totalSupply\" */ _6), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_value))\n                        /// @src 22:8621:8646  \"Transfer(from, to, value)\"\n                        let _7 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                        mstore(_7, var_value)\n                        /// @src 22:8621:8646  \"Transfer(from, to, value)\"\n                        log3(_7, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 22:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 22:7621:8167  \"if (from == address(0)) {...\" */ 0)\n                    }\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @ast-id 45146 @src 28:4130:4321  \"function _buildDomainSeparator() private view returns (bytes32) {...\"\n                    function fun_buildDomainSeparator() -> var\n                    {\n                        /// @src 28:4243:4260  \"_EIP712NameHash()\"\n                        let expr := fun_EIP712NameHash()\n                        /// @src 28:4262:4282  \"_EIP712VersionHash()\"\n                        let expr_1 := fun_EIP712VersionHash()\n                        /// @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                        let expr_mpos := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                        /// @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                        let _1 := add(expr_mpos, 0x20)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(_1, /** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 64), expr)\n                        mstore(/** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ expr_1)\n                        mstore(/** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 28:4284:4297  \"block.chainid\" */ chainid())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\" */ expr_mpos, /** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 28:4307:4311  \"this\" */ address())\n                        /// @src 28:4221:4313  \"abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this))\"\n                        mstore(expr_mpos, /** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let newFreePtr := add(expr_mpos, /** @src 28:2073:2168  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        /// @src 28:4204:4314  \"return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\"\n                        var := /** @src 28:4211:4314  \"keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\" */ keccak256(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1, mload(/** @src 28:4211:4314  \"keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)))\" */ expr_mpos))\n                    }\n                    /// @ast-id 45307 @src 28:7058:7745  \"function _EIP712NameHash() internal view returns (bytes32) {...\"\n                    function fun_EIP712NameHash() -> var\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := copy_array_from_storage_to_memory_string()\n                        /// @src 28:7230:7248  \"bytes(name).length\"\n                        let expr := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 28:7230:7248  \"bytes(name).length\" */ _1)\n                        /// @src 28:7226:7739  \"if (bytes(name).length > 0) {...\"\n                        switch /** @src 28:7230:7252  \"bytes(name).length > 0\" */ iszero(iszero(expr))\n                        case /** @src 28:7226:7739  \"if (bytes(name).length > 0) {...\" */ 0 {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := sload(/** @src 28:2806:2870  \"assembly {...\" */ 73010143390315934406010559831118728393600729754696197287367516085911467577600)\n                            /// @src 28:7599:7729  \"if (hashedName != 0) {...\"\n                            switch /** @src 28:7603:7618  \"hashedName != 0\" */ iszero(iszero(_2))\n                            case /** @src 28:7599:7729  \"if (hashedName != 0) {...\" */ 0 {\n                                /// @src 28:7694:7714  \"return keccak256(\\\"\\\")\"\n                                var := /** @src 28:7701:7714  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n                                /// @src 28:7694:7714  \"return keccak256(\\\"\\\")\"\n                                leave\n                            }\n                            default /// @src 28:7599:7729  \"if (hashedName != 0) {...\"\n                            {\n                                /// @src 28:7638:7655  \"return hashedName\"\n                                var := _2\n                                leave\n                            }\n                        }\n                        default /// @src 28:7226:7739  \"if (bytes(name).length > 0) {...\"\n                        {\n                            /// @src 28:7268:7297  \"return keccak256(bytes(name))\"\n                            var := /** @src 28:7275:7297  \"keccak256(bytes(name))\" */ keccak256(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(/** @src 28:7275:7297  \"keccak256(bytes(name))\" */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20), expr)\n                            /// @src 28:7268:7297  \"return keccak256(bytes(name))\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 45359 @src 28:7966:8689  \"function _EIP712VersionHash() internal view returns (bytes32) {...\"\n                    function fun_EIP712VersionHash() -> var\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := copy_array_from_storage_to_memory_string_31571()\n                        /// @src 28:8147:8168  \"bytes(version).length\"\n                        let expr := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 28:8147:8168  \"bytes(version).length\" */ _1)\n                        /// @src 28:8143:8683  \"if (bytes(version).length > 0) {...\"\n                        switch /** @src 28:8147:8172  \"bytes(version).length > 0\" */ iszero(iszero(expr))\n                        case /** @src 28:8143:8683  \"if (bytes(version).length > 0) {...\" */ 0 {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let _2 := sload(/** @src 28:8507:8523  \"$._hashedVersion\" */ 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101)\n                            /// @src 28:8537:8673  \"if (hashedVersion != 0) {...\"\n                            switch /** @src 28:8541:8559  \"hashedVersion != 0\" */ iszero(iszero(_2))\n                            case /** @src 28:8537:8673  \"if (hashedVersion != 0) {...\" */ 0 {\n                                /// @src 28:8638:8658  \"return keccak256(\\\"\\\")\"\n                                var := /** @src 28:8645:8658  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n                                /// @src 28:8638:8658  \"return keccak256(\\\"\\\")\"\n                                leave\n                            }\n                            default /// @src 28:8537:8673  \"if (hashedVersion != 0) {...\"\n                            {\n                                /// @src 28:8579:8599  \"return hashedVersion\"\n                                var := _2\n                                leave\n                            }\n                        }\n                        default /// @src 28:8143:8683  \"if (bytes(version).length > 0) {...\"\n                        {\n                            /// @src 28:8188:8220  \"return keccak256(bytes(version))\"\n                            var := /** @src 28:8195:8220  \"keccak256(bytes(version))\" */ keccak256(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ add(/** @src 28:8195:8220  \"keccak256(bytes(version))\" */ _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20), expr)\n                            /// @src 28:8188:8220  \"return keccak256(bytes(version))\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 47182 @src 48:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 48:4793:5201  \"if (!success) {...\"\n                        switch /** @src 48:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 48:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 48:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 48:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 48:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 48:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 48:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 48:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 48:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 48:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            /// @src 48:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 48:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 48:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(/** @src 48:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 48:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 48:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 48:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 48:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @ast-id 47949 @src 53:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 53:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 53:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 53:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 53:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 53:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 53:6297:6298  \"0\" */ 0x00\n                            /// @src 53:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 53:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 53:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 53:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 53:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 53:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 32))\n                        /// @src 53:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 53:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _3 := mload(/** @src -1:-1:-1 */ _2)\n                        /// @src 53:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 53:6495:6515  \"signer == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 53:6495:6515  \"signer == address(0)\" */ _3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 53:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 53:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 53:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 53:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 53:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                            /// @src 53:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 53:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _3\n                        var_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 53:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ _2\n                    }\n                    /// @ast-id 48034 @src 53:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        if iszero(lt(var_error, 4))\n                        {\n                            mstore(/** @src 53:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(/** @src 53:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x24)\n                        }\n                        /// @src 53:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 53:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 53:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 53:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 53:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 1)\n                            case /** @src 53:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 53:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 53:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 53:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 53:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 53:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 53:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 53:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 53:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 53:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        let _1 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                        /// @src 53:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(_1, shl(226, 0x35e2f383))\n                                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                        mstore(/** @src 53:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), var_errorArg)\n                                        /// @src 53:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        revert(_1, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 53:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 53:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    let _2 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                    /// @src 53:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(_2, shl(224, 0xfce698f7))\n                                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                    mstore(/** @src 53:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4), var_errorArg)\n                                    /// @src 53:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    revert(_2, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                                }\n                            }\n                            default /// @src 53:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 53:7439:7462  \"ECDSAInvalidSignature()\"\n                                let _3 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                                /// @src 53:7439:7462  \"ECDSAInvalidSignature()\"\n                                mstore(_3, shl(224, 0xf645eedf))\n                                revert(_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 4)\n                            }\n                        }\n                        default /// @src 53:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 53:7327:7334  \"return;\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 43575 @src 20:7084:7225  \"function _checkInitializing() internal view virtual {...\"\n                    function fun_checkInitializing()\n                    {\n                        /// @src 20:7146:7219  \"if (!_isInitializing()) {...\"\n                        if /** @src 20:7150:7168  \"!_isInitializing()\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(shr(64, sload(/** @src 20:8837:8901  \"assembly {...\" */ 108904022758810753673719992590105913556127789646572562039383141376366747609600)), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff))\n                        /// @src 20:7146:7219  \"if (!_isInitializing()) {...\"\n                        {\n                            /// @src 20:7191:7208  \"NotInitializing()\"\n                            let _1 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 20:7191:7208  \"NotInitializing()\"\n                            mstore(_1, shl(227, 0x1afcd79f))\n                            revert(_1, 4)\n                        }\n                    }\n                    /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                    function abi_encode_stringliteral(headStart) -> tail\n                    {\n                        mstore(headStart, 32)\n                        mstore(add(headStart, 32), 87)\n                        mstore(add(headStart, 64), \"AccessControl: account is missin\")\n                        mstore(add(headStart, 96), \"g transferrer role to transfer i\")\n                        mstore(add(headStart, 128), \"n private transfer mode\")\n                        tail := add(headStart, 160)\n                    }\n                    /// @ast-id 44159 @src 22:6868:7168  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 22:6951:6969  \"from == address(0)\" */ var_from, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        /// @src 22:6947:7033  \"if (from == address(0)) {...\"\n                        if /** @src 22:6951:6969  \"from == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                        /// @src 22:6947:7033  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 22:6992:7022  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 22:6992:7022  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, /** @src 22:9636:9666  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 22:6992:7022  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 22:6967:6968  \"0\" */ 0x00)\n                            /// @src 22:6992:7022  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 22:7046:7062  \"to == address(0)\" */ var_to, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                        /// @src 22:7042:7128  \"if (to == address(0)) {...\"\n                        if /** @src 22:7046:7062  \"to == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                        /// @src 22:7042:7128  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 22:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 22:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 22:9110:9142  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(/** @src 22:7085:7117  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 22:6967:6968  \"0\" */ 0x00)\n                            /// @src 22:7085:7117  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                        }\n                        /// @src 22:7621:8167  \"if (from == address(0)) {...\"\n                        let _6 := 0\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                        /// @src 22:2326:2389  \"assembly {...\"\n                        let _7 := 37439836327923360225337895871394760624280537466773280374265222508165906222592\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 22:2326:2389  \"assembly {...\" */ _7)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _8 := sload(keccak256(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40))\n                        /// @src 22:7868:7983  \"if (fromBalance < value) {...\"\n                        if /** @src 22:7872:7891  \"fromBalance < value\" */ lt(_8, var_value)\n                        /// @src 22:7868:7983  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 22:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _9 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                            /// @src 22:7918:7968  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_9, shl(226, 0x391434e3))\n                            revert(_9, sub(abi_encode_address_uint256_uint256(add(_9, 4), var_from, _8, var_value), _9))\n                        }\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _2)\n                        mstore(0x20, /** @src 22:2326:2389  \"assembly {...\" */ _7)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        sstore(keccak256(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40), sub(/** @src 22:8123:8142  \"fromBalance - value\" */ _8, var_value))\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 22:7621:8167  \"if (from == address(0)) {...\" */ _6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 22:8557:8581  \"$._balances[to] += value\" */ dataSlot), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ var_value))\n                        /// @src 22:8621:8646  \"Transfer(from, to, value)\"\n                        let _10 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(0x40)\n                        mstore(_10, var_value)\n                        /// @src 22:8621:8646  \"Transfer(from, to, value)\"\n                        log3(_10, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0x20, /** @src 22:8621:8646  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                    /// @ast-id 44954 @src 27:2905:3033  \"function _requireNotPaused() internal view virtual {...\"\n                    function fun_requireNotPaused()\n                    {\n                        /// @src 27:2966:3027  \"if (paused()) {...\"\n                        if /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(/** @src 27:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 0xff)\n                        /// @src 27:2966:3027  \"if (paused()) {...\"\n                        {\n                            /// @src 27:3001:3016  \"EnforcedPause()\"\n                            let _1 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(64)\n                            /// @src 27:3001:3016  \"EnforcedPause()\"\n                            mstore(_1, shl(224, 0xd93c0665))\n                            revert(_1, 4)\n                        }\n                    }\n                    /// @src 76:2859:3476  \"function transferFrom(...\"\n                    function fun_transferFrom_inner(var_from, var_to, var_amount) -> var\n                    {\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _1 := 0\n                        mstore(_1, /** @src 76:1020:1049  \"keccak256(\\\"TRANSFERRER_ROLE\\\")\" */ 0x9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, /** @src 19:2887:2958  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        let _2 := 0x40\n                        let _3 := keccak256(_1, _2)\n                        mstore(_1, /** @src 25:966:976  \"msg.sender\" */ caller())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, _3)\n                        /// @src 76:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\"\n                        switch /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(keccak256(_1, _2)), 0xff)\n                        case /** @src 76:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\" */ 0 {\n                            /// @src 76:3144:3324  \"if (_inPrivateTransferMode) {...\"\n                            if /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(sload(_1), 0xff)\n                            /// @src 76:3144:3324  \"if (_inPrivateTransferMode) {...\"\n                            {\n                                /// @src 76:3186:3313  \"revert(...\"\n                                let _4 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                /// @src 76:3186:3313  \"revert(...\"\n                                mstore(_4, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ shl(229, 4594637))\n                                /// @src 76:3186:3313  \"revert(...\"\n                                revert(_4, sub(abi_encode_stringliteral(add(_4, 4)), _4))\n                            }\n                        }\n                        default /// @src 76:3016:3324  \"if (hasRole(TRANSFERRER_ROLE, _msgSender())) {...\"\n                        {\n                            /// @src 76:3095:3101  \"amount\"\n                            fun_transfer(var_from, var_to, var_amount)\n                            /// @src 76:3116:3127  \"return true\"\n                            var := /** @src 76:3123:3127  \"true\" */ 0x01\n                            /// @src 76:3116:3127  \"return true\"\n                            leave\n                        }\n                        /// @src 22:5162:5182  \"$._allowances[owner]\"\n                        let _5 := mapping_index_access_mapping_address_bool_of_address(/** @src 22:12119:12144  \"allowance(owner, spender)\" */ var_from)\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(_1, /** @src 25:966:976  \"msg.sender\" */ caller())\n                        /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                        mstore(0x20, _5)\n                        let _6 := sload(keccak256(_1, _2))\n                        /// @src 22:12154:12464  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 22:12158:12195  \"currentAllowance != type(uint256).max\" */ iszero(eq(_6, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ not(0)))\n                        /// @src 22:12154:12464  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 22:12211:12341  \"if (currentAllowance < value) {...\"\n                            if /** @src 22:12215:12239  \"currentAllowance < value\" */ lt(_6, var_amount)\n                            /// @src 22:12211:12341  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 22:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                let _7 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                /// @src 22:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(_7, shl(225, 0x7dc7a0d9))\n                                revert(_7, sub(abi_encode_address_uint256_uint256(add(_7, 4), /** @src 25:966:976  \"msg.sender\" */ caller(), /** @src 22:12266:12326  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _6, var_amount), _7))\n                            }\n                            /// @src 22:11385:11474  \"if (owner == address(0)) {...\"\n                            if /** @src 22:11389:11408  \"owner == address(0)\" */ iszero(/** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ and(/** @src 22:11389:11408  \"owner == address(0)\" */ var_from, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 22:11385:11474  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                let _8 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                /// @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                mstore(_8, shl(224, 0xe602df05))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\" */ add(_8, 4), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 22:11431:11463  \"ERC20InvalidApprover(address(0))\"\n                                revert(_8, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            /// @src 22:11483:11573  \"if (spender == address(0)) {...\"\n                            if /** @src 22:11487:11508  \"spender == address(0)\" */ iszero(/** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 22:11483:11573  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                let _9 := /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ mload(_2)\n                                /// @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                mstore(_9, shl(225, 0x4a1406b1))\n                                /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                                mstore(/** @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\" */ add(_9, 4), /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ _1)\n                                /// @src 22:11531:11562  \"ERC20InvalidSpender(address(0))\"\n                                revert(_9, /** @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\" */ 36)\n                            }\n                            /// @src 22:11582:11602  \"$._allowances[owner]\"\n                            let _10 := mapping_index_access_mapping_address_bool_of_address(var_from)\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(_1, /** @src 25:966:976  \"msg.sender\" */ caller())\n                            /// @src 67:161:489  \"contract ZFIToken is ERC20MinterPauserPermitUpgradeable {...\"\n                            mstore(0x20, _10)\n                            sstore(keccak256(_1, _2), sub(/** @src 22:12407:12431  \"currentAllowance - value\" */ _6, var_amount))\n                        }\n                        /// @src 76:3441:3447  \"amount\"\n                        fun_transfer(var_from, var_to, var_amount)\n                        /// @src 76:3458:3469  \"return true\"\n                        var := /** @src 22:5162:5175  \"$._allowances\" */ 1\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000815000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000815000a\"\n    }\n}\n","hash":"010000d54aa055238958980f7bea25154936d7061799562891bd02b9cc9a5f55","factoryDependencies":{"01000083f30da117496892e53895c30802e6708d8cdbad6233c6d4ec63a96ebf":"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy","010005098ecad6afa436c0acc2d0ee20625723e60532a60ed6a99957d032a06e":"src/ZFI/ZFIToken.sol:ZFIToken"},"id":65}